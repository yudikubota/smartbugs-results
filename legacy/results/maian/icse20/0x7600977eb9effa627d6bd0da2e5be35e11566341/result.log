====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol ... [0m/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:5:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.21;
^---------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:121:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Dex2(address admin_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:72:7: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      keccak256('string title', 'address market_address', 'uint64 nonce', 'uint64 expire_time_sec',
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:559:21: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash1 = keccak256("\x19Ethereum Signed Message:\n70DEx2 Order: ", address(this), nonce, bits);
                    ^-----------------------------------------------------------------------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:561:28: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol ... [0m/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:5:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.21;
^---------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:121:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Dex2(address admin_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:72:7: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      keccak256('string title', 'address market_address', 'uint64 nonce', 'uint64 expire_time_sec',
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:559:21: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash1 = keccak256("\x19Ethereum Signed Message:\n70DEx2 Order: ", address(this), nonce, bits);
                    ^-----------------------------------------------------------------------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol ... [0m/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:5:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.21;
^---------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:121:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Dex2(address admin_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:72:7: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      keccak256('string title', 'address market_address', 'uint64 nonce', 'uint64 expire_time_sec',
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:559:21: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash1 = keccak256("\x19Ethereum Signed Message:\n70DEx2 Order: ", address(this), nonce, bits);
                    ^-----------------------------------------------------------------------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:561:28: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol ... [0m/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:5:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.21;
^---------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:121:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Dex2(address admin_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:72:7: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      keccak256('string title', 'address market_address', 'uint64 nonce', 'uint64 expire_time_sec',
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:559:21: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash1 = keccak256("\x19Ethereum Signed Message:\n70DEx2 Order: ", address(this), nonce, bits);

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol ... [0m/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:5:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.21;
^---------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:121:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Dex2(address admin_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:72:7: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      keccak256('string title', 'address market_address', 'uint64 nonce', 'uint64 expire_time_sec',
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:559:21: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash1 = keccak256("\x19Ethereum Signed Message:\n70DEx2 Order: ", address(this), nonce, bits);
                    ^-----------------------------------------------------------------------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:561:28: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol ... [0m/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:5:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.21;
^---------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:121:3: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
  function Dex2(address admin_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:72:7: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      keccak256('string title', 'address market_address', 'uint64 nonce', 'uint64 expire_time_sec',
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:559:21: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash1 = keccak256("\x19Ethereum Signed Message:\n70DEx2 Order: ", address(this), nonce, bits);
                    ^-----------------------------------------------------------------------------------^
/unique_chucks/1/0x7600977eb9effa627d6bd0da2e5be35e11566341.sol:561:28: Error: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.

[91m[-] Cannot compile the contract [0m