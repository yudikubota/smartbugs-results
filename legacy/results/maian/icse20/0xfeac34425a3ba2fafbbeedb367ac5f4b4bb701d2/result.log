====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
                ^---------------------------------------------------------------------------------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
                ^---------------------------------------------------------------------------------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
                ^---------------------------------------------------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1142:9: Warning: Invoking events without "emit" prefix is deprecated.
        logfolio(betid[Oraclize_data]);
        ^----------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1151:8: Warning: Invoking events without "emit" prefix is deprecated.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
                ^---------------------------------------------------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1142:9: Warning: Invoking events without "emit" prefix is deprecated.
        logfolio(betid[Oraclize_data]);

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol ... [0m/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.16;
^---------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:942:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1037:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jackypot()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:879:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:894:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:916:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1120:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance)
                                       ^----------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1122:17: Warning: Invoking events without "emit" prefix is deprecated.
                newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
                ^---------------------------------------------------------------------------------------------^
/unique_chucks/11/0xfeac34425a3ba2fafbbeedb367ac5f4b4bb701d2.sol:1142:9: Warning: Invoking events without "emit" prefix is deprecated.

[91m[-] Cannot compile the contract [0m