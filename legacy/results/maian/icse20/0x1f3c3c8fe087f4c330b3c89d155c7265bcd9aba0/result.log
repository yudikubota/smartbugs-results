====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol ... [0m/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.18;
^---------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function usingP4D(address _P4D_address) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1410:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CoinPair(string _fSym, string _tSym, address _ownerAddress, address _devAddress, address _P4D_address) public payable usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1731:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FluxDelta(address _P4D_address) public usingP4D(_P4D_address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:991:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1103:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1121:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/12/0x1f3c3c8fe087f4c330b3c89d155c7265bcd9aba0.sol:1503:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequestSubmitted(queryId);
        ^-----------------------^

[91m[-] Cannot compile the contract [0m