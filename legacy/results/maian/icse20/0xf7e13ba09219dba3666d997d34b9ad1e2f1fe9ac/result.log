/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m........................... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[91m[-] Some of the files is missing or empty: |ERC20Interface.abi|=1720  |ERC20Interface.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m... tx[0] mined [92m Sent! [0m
[91m[-] Some of the files is missing or empty: |ERC20Interface.abi|=1720  |ERC20Interface.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:521:5: Warning: Use of the "var" keyword is deprecated.
				var nOverrun = (landlBal + tenantBal) - self._TotalAmount;
				^----------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:788:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:799:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1511:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1569:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function StayBitContractFactory()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:382:3: Warning: Invoking events without "emit" prefix is deprecated.
		logEvent(stage, atype, timestamp, guid, text);
		^-------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:589:13: Warning: Invoking events without "emit" prefix is deprecated.
            logEvent(stage, LogMessageInfo, nCurrentDate, sGuid, strMessage2);
            ^---------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1545:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner_, _newOwner);
    ^-------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1640:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require (contracts[keccak256(Guid)]._Id == 0);
		                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1640:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require (contracts[keccak256(Guid)]._Id == 0);
		                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1642:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._CurrentDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1642:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._CurrentDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1643:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._CreatedDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1643:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._CreatedDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1644:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._RentPerDay = rentPerDay;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1644:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._RentPerDay = rentPerDay;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1645:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._MoveInDate = moveInDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1645:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._MoveInDate = moveInDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1646:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._MoveOutDate = moveOutDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1646:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._MoveOutDate = moveOutDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1647:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._SecDeposit = secDeposit;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1647:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._SecDeposit = secDeposit;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1648:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._DoorLockData = doorLockData;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1648:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._DoorLockData = doorLockData;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1649:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._landlord = landlord;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1649:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._landlord = landlord;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1650:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._tenant = msg.sender;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1650:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._tenant = msg.sender;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1651:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._ContractAddress = this;		
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1651:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._ContractAddress = this;		
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1652:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._tokenApi = ERC20Interface(supportedTokens[tokenId]._ContractAddress);
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1652:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._tokenApi = ERC20Interface(supportedTokens[tokenId]._ContractAddress);
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1653:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._Id = Id;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1653:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._Id = Id;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1654:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._Guid = Guid;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1654:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._Guid = Guid;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1655:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._CancelPolicy = cancelPolicy;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1655:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._CancelPolicy = cancelPolicy;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1657:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)].initialize();
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1657:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)].initialize();
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1659:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		uint256 startBalance = contracts[keccak256(Guid)]._tokenApi.balanceOf(this);
		                                 ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1659:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		uint256 startBalance = contracts[keccak256(Guid)]._tokenApi.balanceOf(this);
		                                 ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1662:81: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		supportedTokens[tokenId]._ContractFeeBal += CalculateCreateFee(uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1662:81: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		supportedTokens[tokenId]._ContractFeeBal += CalculateCreateFee(uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:107: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:107: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:152: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:152: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:100: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:100: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:167: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:167: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:51: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:145: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:145: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:21: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:65: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:65: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1677:3: Warning: Invoking events without "emit" prefix is deprecated.
		contractCreated(rentPerDay, cancelPolicy, moveInDate, moveOutDate, secDeposit, landlord, tokenId, Id, Guid, extraAmount);
		^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1686:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    if (contracts[keccak256(Guid)]._Id != 0)
	                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1686:20: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
	    if (contracts[keccak256(Guid)]._Id != 0)
	                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1688:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contracts[keccak256(Guid)].SimulateCurrentDate(n);
			          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1688:14: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contracts[keccak256(Guid)].SimulateCurrentDate(n);
			          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1695:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1695:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1697:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			actualBalance = contracts[keccak256(Guid)].GetContractBalance();
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1697:30: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			actualBalance = contracts[keccak256(Guid)].GetContractBalance();
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1698:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			curDate = contracts[keccak256(Guid)].GetCurrentDate();
			                    ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1698:24: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			curDate = contracts[keccak256(Guid)].GetCurrentDate();
			                    ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1699:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			tenantMovedIn = contracts[keccak256(Guid)]._TenantConfirmedMoveIn;
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1699:30: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			tenantMovedIn = contracts[keccak256(Guid)]._TenantConfirmedMoveIn;
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1700:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			misrepSignaled = contracts[keccak256(Guid)]._MisrepSignaled;
			                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1700:31: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			misrepSignaled = contracts[keccak256(Guid)]._MisrepSignaled;
			                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1701:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			doorLockData = contracts[keccak256(Guid)]._DoorLockData;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1701:29: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			doorLockData = contracts[keccak256(Guid)]._DoorLockData;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1702:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			escrStage = contracts[keccak256(Guid)].GetCurrentStage();
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1702:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			escrStage = contracts[keccak256(Guid)].GetCurrentStage();
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1703:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			escrState = contracts[keccak256(Guid)]._State;
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1703:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			escrState = contracts[keccak256(Guid)]._State;
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1704:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			calcAmount = contracts[keccak256(Guid)]._TotalAmount;
			                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1704:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			calcAmount = contracts[keccak256(Guid)]._TotalAmount;
			                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1705:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			actualMoveOutDate = contracts[keccak256(Guid)]._ActualMoveOutDate;
			                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1705:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			actualMoveOutDate = contracts[keccak256(Guid)]._ActualMoveOutDate;
			                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1706:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			cancelPolicy = contracts[keccak256(Guid)]._CancelPolicy;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1706:29: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			cancelPolicy = contracts[keccak256(Guid)]._CancelPolicy;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1712:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1712:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1716:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1716:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1718:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1718:49: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1720:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1720:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1722:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1722:49: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1724:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1724:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1726:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1726:47: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:71: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:71: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:4: Warning: Invoking events without "emit" prefix is deprecated.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			^-----------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1743:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1743:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1747:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1747:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1749:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1749:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1751:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1751:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1753:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1753:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1755:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1755:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1757:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1757:53: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:71: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:71: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:4: Warning: Invoking events without "emit" prefix is deprecated.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			^-----------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1773:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1773:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1777:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1777:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1779:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1779:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1781:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1781:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1783:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1783:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1785:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1785:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1787:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1787:44: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1797:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1797:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1799:63: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(SecDeposit >= 0 && SecDeposit <= uint256(contracts[keccak256(Guid)]._SecDeposit));
			                                                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1799:63: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(SecDeposit >= 0 && SecDeposit <= uint256(contracts[keccak256(Guid)]._SecDeposit));
			                                                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1802:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1802:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1804:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1804:51: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1806:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1806:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1808:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1808:51: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1810:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1810:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1812:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1812:49: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:71: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:71: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:4: Warning: Invoking events without "emit" prefix is deprecated.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			^-----------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1828:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1828:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1830:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._landlBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1830:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._landlBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1832:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				uint landlBal = uint(contracts[keccak256(Guid)]._landlBal);
				                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1832:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				uint landlBal = uint(contracts[keccak256(Guid)]._landlBal);
				                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1833:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._landlBal = 0;		
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1833:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._landlBal = 0;		
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:61: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:61: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1835:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._Balance -= landlBal;						
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1835:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._Balance -= landlBal;						
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1838:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._tenantBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1838:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._tenantBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1840:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				uint tenantBal = uint(contracts[keccak256(Guid)]._tenantBal);
				                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1840:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				uint tenantBal = uint(contracts[keccak256(Guid)]._tenantBal);
				                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1841:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tenantBal = 0;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1841:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tenantBal = 0;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:61: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:61: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1843:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._Balance -= tenantBal;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1843:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._Balance -= tenantBal;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:463:2: Warning: No visibility specified. Defaulting to "public". 
	function initialize(EscrowContractState storage self) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1569:2: Warning: No visibility specified. Defaulting to "public". 
	function StayBitContractFactory()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1680:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:33:9: Warning: Function state mutability can be restricted to pure
        function isLeapYear(uint16 year) public constant returns (bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:46:9: Warning: Function state mutability can be restricted to pure
        function leapYearsBefore(uint year) public constant  returns (uint) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:143:9: Warning: Function state mutability can be restricted to pure
        function getHour(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:147:9: Warning: Function state mutability can be restricted to pure
        function getMinute(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:151:9: Warning: Function state mutability can be restricted to pure
        function getSecond(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:155:9: Warning: Function state mutability can be restricted to pure
        function getWeekday(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:249:3: Warning: Function state mutability can be restricted to pure
		function compareDateTimesForContract(uint t1, uint t2) public constant returns (int res)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:272:3: Warning: Function state mutability can be restricted to pure
		function compareInts(int n1, int n2) internal constant returns (int res)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:386:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateActive() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:391:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateCancelledByTenant() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:396:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateCancelledByLandlord() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:401:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateTerminatedMisrep() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:406:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateEarlyTerminatedByTenant() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:411:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateEarlyTerminatedByTenantSecDep() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:416:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateEarlyTerminatedByLandlord() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:421:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateTerminatedOK() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:426:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateTerminatedSecDep() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:431:2: Warning: Function state mutability can be restricted to pure
	function GetContractStagePreMoveIn() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:436:2: Warning: Function state mutability can be restricted to pure
	function GetContractStageLiving() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:441:2: Warning: Function state mutability can be restricted to pure
	function GetContractStageTermination() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:446:2: Warning: Function state mutability can be restricted to pure
	function GetLogMessageInfo() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:451:2: Warning: Function state mutability can be restricted to pure
	function GetLogMessageWarning() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:456:2: Warning: Function state mutability can be restricted to pure
	function GetLogMessageError() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:600:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		uint nActualBalance = GetContractBalance(self);
		                      ^----------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:652:2: Warning: Function state mutability can be restricted to view
	function GetContractBalance(EscrowContractState storage self) public returns (uint res)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:658:2: Warning: Function state mutability can be restricted to pure
	function splitBalanceAccordingToRatings(int balance, int tenantScore, int landlScore) public constant returns (int tenantBal, int landlBal)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:704:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal constant returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:733:5: Warning: Function state mutability can be restricted to pure
    function bytes32ToString(bytes32 x) internal constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:750:5: Warning: Function state mutability can be restricted to pure
    function bytes32ArrayToString(bytes32[] data) internal constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:770:5: Warning: Function state mutability can be restricted to pure
    function uintToBytes(uint v) internal constant returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:786:5: Warning: Function state mutability can be restricted to pure
    function bytesToUInt(bytes32 v) internal constant returns (uint ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1697:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
			actualBalance = contracts[keccak256(Guid)].GetContractBalance();
			                ^---------------------------------------------^

[91m[-] Cannot compile the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m.[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  1348  : 0x60806040526004361061004c5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/Ownable.address [0m
[94m[ ] Check if contract is SUICIDAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061004c576000357c0100000000000000...
[ ] Bytecode length    : 1346
[ ] Blockchain contract: True
[ ] Debug              : False

[92m[-] The code does not contain SUICIDE instructions, hence it is not vulnerable[0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m...... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0m.............[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  1348  : 0x60806040526004361061004c5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/Ownable.address [0m
[1m[ ] The contract balance: 44  [0m[92m Positive balance[0m
[94m[ ] Check if contract is PRODIGAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061004c576000357c0100000000000000...
[ ] Bytecode length    : 1346
[ ] Blockchain contract: True
[ ] Debug              : False

[ ][1m Search with call depth: 1   : [0m1
[ ][1m Search with call depth: 2   : [0m12
[ ][1m Search with call depth: 3   : [0m12
[92m[+] No prodigal vulnerability found [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m....[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  1348  : 0x60806040526004361061004c5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/Ownable.address [0m
[94m[ ] Check if contract is GREEDY[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061004c576000357c0100000000000000...
[ ] Bytecode length    : 1346
[ ] Debug              : False
[91m[-][0m [1mContract can receive Ether[0m

[92m[-] No lock vulnerability found because the contract cannot receive Ether [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m...... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m....[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  7642  : 0x739e536236abf2288a7864c6a1af... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/DateTime.address [0m
[94m[ ] Check if contract is SUICIDAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 739e536236abf2288a7864c6a1afaa4cb98d46430630146080...
[ ] Bytecode length    : 7640
[ ] Blockchain contract: True
[ ] Debug              : False

[92m[-] The code does not contain SUICIDE instructions, hence it is not vulnerable[0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m.... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0m....[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  7642  : 0x739e536236abf2288a7864c6a1af... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/DateTime.address [0m
[1m[ ] The contract balance: 44  [0m[92m Positive balance[0m
[94m[ ] Check if contract is PRODIGAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 739e536236abf2288a7864c6a1afaa4cb98d46430630146080...
[ ] Bytecode length    : 7640
[ ] Blockchain contract: True
[ ] Debug              : False
[92m[+] The code does not have CALL/SUICIDE, hence it is not prodigal[0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m.......[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  7642  : 0x739e536236abf2288a7864c6a1af... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/DateTime.address [0m
[94m[ ] Check if contract is GREEDY[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 739e536236abf2288a7864c6a1afaa4cb98d46430630146080...
[ ] Bytecode length    : 7640
[ ] Debug              : False
[92m[+][0m [1mContract can receive Ether[0m
[91m[-] The code does not have CALL/SUICIDE/DELEGATECALL/CALLCODE thus is greedy ![0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m..... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m............ tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m..... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0mException: {u'message': u'invalid argument 0: json: cannot unmarshal invalid hex string into Go value of type hexutil.Bytes', u'code': -32602}
[91m[-] Cannot deploy the contract [0m