====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m............................... tx[0] mined [92m Sent! [0m
[1m[ ] Deploying contract [0m...............[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  2  : 0x... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/EtherHiLo.address [0m
[1m[ ] The contract balance: 44  [0m[92m Positive balance[0m
[94m[ ] Check if contract is PRODIGAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : ...
[ ] Bytecode length    : 0
[ ] Blockchain contract: True
[ ] Debug              : False
[92m[+] The code does not have CALL/SUICIDE, hence it is not prodigal[0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/eth_utils/string.py:22: DeprecationWarning: The `force_obj_to_text` function has been deprecated and will be removed in a subsequent release of the eth-utils library. UTF8 cannot encode some byte values in the 0-255 range which makes naive coersion between bytes and text representations impossible without explicitly declared encodings.
  "declared encodings.".format(fn.__name__)
/usr/local/lib/python2.7/dist-packages/eth_utils/string.py:22: DeprecationWarning: The `force_text` function has been deprecated and will be removed in a subsequent release of the eth-utils library. UTF8 cannot encode some byte values in the 0-255 range which makes naive coersion between bytes and text representations impossible without explicitly declared encodings.
  "declared encodings.".format(fn.__name__)
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m[92m Done [0m
/usr/local/lib/python2.7/dist-packages/eth_utils/formatting.py:20: DeprecationWarning: The `is_prefixed` function has been deprecated and will be removed in a subsequent release of the eth-utils library. Now that eth-utils is compatible with Python3, we encourage developers to use stdlib functions where possible.
  "functions where possible.".format(fn.__name__)
/usr/local/lib/python2.7/dist-packages/eth_utils/string.py:22: DeprecationWarning: The `force_obj_to_bytes` function has been deprecated and will be removed in a subsequent release of the eth-utils library. UTF8 cannot encode some byte values in the 0-255 range which makes naive coersion between bytes and text representations impossible without explicitly declared encodings.
  "declared encodings.".format(fn.__name__)
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m....[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  154  : 0x739e536236abf2288a7864c6a1af... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/SafeMath.address [0m
[94m[ ] Check if contract is GREEDY[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 739e536236abf2288a7864c6a1afaa4cb98d46430630146080...
[ ] Bytecode length    : 152
[ ] Debug              : False
[91m[-][0m [1mContract can receive Ether[0m

[92m[-] No lock vulnerability found because the contract cannot receive Ether [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol ... [0m/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1217:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1274:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1380:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1381:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1384:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1399:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1441:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:1444:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/9/0x5cee173ee3a9568a4d66d882d78fdf5724251e82.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m