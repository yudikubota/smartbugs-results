====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:12:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != owner) throw;
		                         ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:95:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value == 0) throw;  												// Check if balance is not 0 		
		                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:96:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (icoHasSucessfulyEnded || block.number > endBlock) throw;				// Throw if ico has already ended 		
		                                                      ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:99:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if (!presaleContributorAllowance[msg.sender]) throw;				// Check if this address is part of presale contributors 			
				                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:132:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number <= endBlock || totalEthRaised >= minEthToRaise) throw;	// Check that ico has failed :( 		
		                                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:133:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantContribution[msg.sender] == 0) throw;					// Check if user has even been at crowdsale 		
		                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:134:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (hasClaimedEthWhenFail[msg.sender]) throw;							// Check if this account has already claimed its eth 		
		                                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:155:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;																				// Check if ico has ended 		
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:174:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;		// Check that ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:198:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;                 
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:201:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > strategicReserveSupply - usedStrategicReserveSupply) throw; 			
			                                                                   ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:206:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > cashilaTokenSupply - usedCashilaTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:210:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > iconomiTokenSupply - usedIconomiTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:215:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > coreTeamTokenSupply - usedCoreTeamTokenSupply) throw; 			
			                                                             ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:219:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		else throw; 	
		     ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:235:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (totalEthRaised < minEthToRaise) throw;	// Check if minEth treshold is surpassed 		
		                                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:246:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;	// Check if ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:247:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantIndex[lastEthReturnIndex] != 0x0) throw;					// Check if all the participants has been reinbursed 		
		                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:43: Warning: This declaration shadows an existing declaration.
	function totalSupply() constant returns (uint256 totalSupply);
	                                         ^-----------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: The shadowed declaration is here:
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^

/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:103:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOStarted(block.number, icoStartedMessage);						// Raise event 			
				^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:114:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOMinTresholdReached(block.number, icoMinTresholdReachedMessage);	// Raise event 				
				^---------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:123:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyWithCapMessage); 			
			^----------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:125:5: Warning: Invoking events without "emit" prefix is deprecated.
				ErrorSendingETH(msg.sender, toReturn);								// Raise event for manual return if transaction throws 			
				^-----------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:138:4: Warning: Invoking events without "emit" prefix is deprecated.
			ErrorSendingETH(msg.sender, ethContributed);						// Raise event if send failed and resolve manually 		
			^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:184:6: Warning: Invoking events without "emit" prefix is deprecated.
					ErrorSendingETH(currentParticipantAddress, contribution);		// Raise event if send failed and resolve manually 				
					^------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: "sha3" has been deprecated in favour of "keccak256"
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^

[91m[-] Cannot compile the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m................. tx[0] mined [92m Sent! [0m
[91m[-] Some of the files is missing or empty: |ICofounditToken.abi|=394  |ICofounditToken.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[91m[-] Some of the files is missing or empty: |ICofounditToken.abi|=394  |ICofounditToken.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m..............[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  20680  : 0x60806040526004361061016a5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/CofounditICO.address [0m
[94m[ ] Check if contract is SUICIDAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061016a576000357c0100000000000000...
[ ] Bytecode length    : 20678
[ ] Blockchain contract: True
[ ] Debug              : False

[92m[-] The code does not contain SUICIDE instructions, hence it is not vulnerable[0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:12:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != owner) throw;
		                         ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:95:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value == 0) throw;  												// Check if balance is not 0 		
		                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:96:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (icoHasSucessfulyEnded || block.number > endBlock) throw;				// Throw if ico has already ended 		
		                                                      ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:99:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if (!presaleContributorAllowance[msg.sender]) throw;				// Check if this address is part of presale contributors 			
				                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:132:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number <= endBlock || totalEthRaised >= minEthToRaise) throw;	// Check that ico has failed :( 		
		                                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:133:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantContribution[msg.sender] == 0) throw;					// Check if user has even been at crowdsale 		
		                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:134:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (hasClaimedEthWhenFail[msg.sender]) throw;							// Check if this account has already claimed its eth 		
		                                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:155:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;																				// Check if ico has ended 		
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:174:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;		// Check that ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:198:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;                 
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:201:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > strategicReserveSupply - usedStrategicReserveSupply) throw; 			
			                                                                   ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:206:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > cashilaTokenSupply - usedCashilaTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:210:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > iconomiTokenSupply - usedIconomiTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:215:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > coreTeamTokenSupply - usedCoreTeamTokenSupply) throw; 			
			                                                             ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:219:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		else throw; 	
		     ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:235:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (totalEthRaised < minEthToRaise) throw;	// Check if minEth treshold is surpassed 		
		                                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:246:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;	// Check if ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:247:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantIndex[lastEthReturnIndex] != 0x0) throw;					// Check if all the participants has been reinbursed 		
		                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:43: Warning: This declaration shadows an existing declaration.
	function totalSupply() constant returns (uint256 totalSupply);
	                                         ^-----------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: The shadowed declaration is here:
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^

/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:103:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOStarted(block.number, icoStartedMessage);						// Raise event 			
				^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:114:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOMinTresholdReached(block.number, icoMinTresholdReachedMessage);	// Raise event 				
				^---------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:123:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyWithCapMessage); 			
			^----------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:125:5: Warning: Invoking events without "emit" prefix is deprecated.
				ErrorSendingETH(msg.sender, toReturn);								// Raise event for manual return if transaction throws 			
				^-----------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:138:4: Warning: Invoking events without "emit" prefix is deprecated.
			ErrorSendingETH(msg.sender, ethContributed);						// Raise event if send failed and resolve manually 		
			^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:184:6: Warning: Invoking events without "emit" prefix is deprecated.
					ErrorSendingETH(currentParticipantAddress, contribution);		// Raise event if send failed and resolve manually 				
					^------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: "sha3" has been deprecated in favour of "keccak256"
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:200:20: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (hashedStr == sha3("Reserve")){ 			
		                 ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:205:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Cashila")){ 			
		                      ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:209:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Iconomi")){ 			
		                      ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:214:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Core")){ 			
		                      ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:238:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyMessage); 		
			^---------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:240:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(multisigAddress.send(this.balance)){}		// Send contracts whole balance to multisig address 	
		                        ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:248:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(multisigAddress.send(this.balance)){}								// Send remainder so it can be manually processed 	
		                        ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: No visibility specified. Defaulting to "public". 
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:16:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:21:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:24:2: Warning: No visibility specified. Defaulting to "public". 
	function mintTokens(address _to, uint256 _amount, string _reason);
	^----------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: No visibility specified. Defaulting to "public". 
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:94:2: Warning: No visibility specified. Defaulting to "public". 
	function () payable { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:131:2: Warning: No visibility specified. Defaulting to "public". 
	function claimEthIfFailed(){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function addPresaleContributors(address[] _presaleContributors) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:154:2: Warning: No visibility specified. Defaulting to "public". 
	function batchIssueTokens(uint256 _numberOfIssuances) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:173:2: Warning: No visibility specified. Defaulting to "public". 
	function batchReturnEthIfFailed(uint256 _numberOfReturns) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:192:2: Warning: No visibility specified. Defaulting to "public". 
	function changeMultisigAddress(address _newAddress) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:197:2: Warning: No visibility specified. Defaulting to "public". 
	function claimReservedTokens(string _which, address _to, uint256 _amount, string _reason) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:223:2: Warning: No visibility specified. Defaulting to "public". 
	function removePresaleContributor(address _presaleContributor) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:228:2: Warning: No visibility specified. Defaulting to "public". 
	function setTokenContract(address _cofounditContractAddress) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:233:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEth() onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:244:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawRemainingBalanceForManualRecovery() onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:255:2: Warning: No visibility specified. Defaulting to "public". 
	function getCfiEstimation(address _querryAddress) constant returns (uint256 answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:259:2: Warning: No visibility specified. Defaulting to "public". 
	function getCofounditTokenAddress() constant returns(address _tokenAddress){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:263:2: Warning: No visibility specified. Defaulting to "public". 
	function icoInProgress() constant returns (bool answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:267:2: Warning: No visibility specified. Defaulting to "public". 
	function isAddressAllowedInPresale(address _querryAddress) constant returns (bool answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:271:2: Warning: No visibility specified. Defaulting to "public". 
	function participantContributionInEth(address _querryAddress) constant returns (uint256 answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m.[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  20680  : 0x60806040526004361061016a5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/CofounditICO.address [0m
[94m[ ] Check if contract is GREEDY[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061016a576000357c0100000000000000...
[ ] Bytecode length    : 20678
[ ] Debug              : False
[91m[-][0m [1mContract can receive Ether[0m

[92m[-] No lock vulnerability found because the contract cannot receive Ether [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[91m[-] Some of the files is missing or empty: |tokenRecipient.abi|=275  |tokenRecipient.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Sending Ether to contract 0x9e536236abf2288a7864c6a1afaa4cb98d464306  [0m... tx[0] mined [92m Sent! [0m
[91m[-] Some of the files is missing or empty: |tokenRecipient.abi|=275  |tokenRecipient.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[91m[-] Some of the files is missing or empty: |tokenRecipient.abi|=275  |tokenRecipient.bin|=0
The contracts have NOT been deployed[0m
[91m[-] Cannot deploy the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m.............[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  950  : 0x60806040526004361061004c5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/owned.address [0m
[94m[ ] Check if contract is SUICIDAL[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061004c576000357c0100000000000000...
[ ] Bytecode length    : 948
[ ] Blockchain contract: True
[ ] Debug              : False

[92m[-] The code does not contain SUICIDE instructions, hence it is not vulnerable[0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:12:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != owner) throw;
		                         ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:95:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value == 0) throw;  												// Check if balance is not 0 		
		                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:96:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (icoHasSucessfulyEnded || block.number > endBlock) throw;				// Throw if ico has already ended 		
		                                                      ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:99:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if (!presaleContributorAllowance[msg.sender]) throw;				// Check if this address is part of presale contributors 			
				                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:132:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number <= endBlock || totalEthRaised >= minEthToRaise) throw;	// Check that ico has failed :( 		
		                                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:133:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantContribution[msg.sender] == 0) throw;					// Check if user has even been at crowdsale 		
		                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:134:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (hasClaimedEthWhenFail[msg.sender]) throw;							// Check if this account has already claimed its eth 		
		                                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:155:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;																				// Check if ico has ended 		
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:174:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;		// Check that ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:198:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;                 
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:201:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > strategicReserveSupply - usedStrategicReserveSupply) throw; 			
			                                                                   ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:206:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > cashilaTokenSupply - usedCashilaTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:210:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > iconomiTokenSupply - usedIconomiTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:215:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > coreTeamTokenSupply - usedCoreTeamTokenSupply) throw; 			
			                                                             ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:219:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		else throw; 	
		     ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:235:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (totalEthRaised < minEthToRaise) throw;	// Check if minEth treshold is surpassed 		
		                                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:246:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;	// Check if ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:247:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantIndex[lastEthReturnIndex] != 0x0) throw;					// Check if all the participants has been reinbursed 		
		                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:43: Warning: This declaration shadows an existing declaration.
	function totalSupply() constant returns (uint256 totalSupply);
	                                         ^-----------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: The shadowed declaration is here:
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^

/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:103:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOStarted(block.number, icoStartedMessage);						// Raise event 			
				^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:114:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOMinTresholdReached(block.number, icoMinTresholdReachedMessage);	// Raise event 				
				^---------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:123:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyWithCapMessage); 			
			^----------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:125:5: Warning: Invoking events without "emit" prefix is deprecated.
				ErrorSendingETH(msg.sender, toReturn);								// Raise event for manual return if transaction throws 			
				^-----------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:138:4: Warning: Invoking events without "emit" prefix is deprecated.
			ErrorSendingETH(msg.sender, ethContributed);						// Raise event if send failed and resolve manually 		
			^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:184:6: Warning: Invoking events without "emit" prefix is deprecated.
					ErrorSendingETH(currentParticipantAddress, contribution);		// Raise event if send failed and resolve manually 				
					^------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: "sha3" has been deprecated in favour of "keccak256"
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:200:20: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (hashedStr == sha3("Reserve")){ 			
		                 ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:205:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Cashila")){ 			
		                      ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:209:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Iconomi")){ 			
		                      ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:214:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Core")){ 			
		                      ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:238:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyMessage); 		
			^---------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:240:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(multisigAddress.send(this.balance)){}		// Send contracts whole balance to multisig address 	
		                        ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:248:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(multisigAddress.send(this.balance)){}								// Send remainder so it can be manually processed 	
		                        ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: No visibility specified. Defaulting to "public". 
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:16:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:21:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:24:2: Warning: No visibility specified. Defaulting to "public". 
	function mintTokens(address _to, uint256 _amount, string _reason);
	^----------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: No visibility specified. Defaulting to "public". 
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:94:2: Warning: No visibility specified. Defaulting to "public". 
	function () payable { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:131:2: Warning: No visibility specified. Defaulting to "public". 
	function claimEthIfFailed(){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function addPresaleContributors(address[] _presaleContributors) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:154:2: Warning: No visibility specified. Defaulting to "public". 
	function batchIssueTokens(uint256 _numberOfIssuances) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:173:2: Warning: No visibility specified. Defaulting to "public". 
	function batchReturnEthIfFailed(uint256 _numberOfReturns) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:192:2: Warning: No visibility specified. Defaulting to "public". 
	function changeMultisigAddress(address _newAddress) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:197:2: Warning: No visibility specified. Defaulting to "public". 
	function claimReservedTokens(string _which, address _to, uint256 _amount, string _reason) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:223:2: Warning: No visibility specified. Defaulting to "public". 
	function removePresaleContributor(address _presaleContributor) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:228:2: Warning: No visibility specified. Defaulting to "public". 
	function setTokenContract(address _cofounditContractAddress) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:233:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEth() onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:244:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawRemainingBalanceForManualRecovery() onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:255:2: Warning: No visibility specified. Defaulting to "public". 
	function getCfiEstimation(address _querryAddress) constant returns (uint256 answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:259:2: Warning: No visibility specified. Defaulting to "public". 
	function getCofounditTokenAddress() constant returns(address _tokenAddress){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:263:2: Warning: No visibility specified. Defaulting to "public". 
	function icoInProgress() constant returns (bool answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:267:2: Warning: No visibility specified. Defaulting to "public". 
	function isAddressAllowedInPresale(address _querryAddress) constant returns (bool answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:271:2: Warning: No visibility specified. Defaulting to "public". 
	function participantContributionInEth(address _querryAddress) constant returns (uint256 answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,
/usr/local/lib/python2.7/dist-packages/web3/main.py:130: DeprecationWarning: Python 2 support is ending! Please upgrade to Python 3 promptly. Support will end at the beginning of 2018.
  category=DeprecationWarning,

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol ... [0m[92m Done [0m
[1m[ ] Connecting to PRIVATE blockchain emptychain  [0m.[92m ESTABLISHED [0m
[1m[ ] Deploying contract [0m....[92m confirmed at address: 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306 [0m
[1m[ ] Contract code length on the blockchain : [0m [92m  950  : 0x60806040526004361061004c5760... [0m
[1m[ ] Contract address saved in file: [0m[92m./out/owned.address [0m
[94m[ ] Check if contract is GREEDY[0m

[ ] Contract address   : 0x9E536236ABF2288a7864C6A1AfaA4Cb98D464306
[ ] Contract bytecode  : 60806040526004361061004c576000357c0100000000000000...
[ ] Bytecode length    : 948
[ ] Debug              : False
[91m[-][0m [1mContract can receive Ether[0m

[92m[-] No lock vulnerability found because the contract cannot receive Ether [0m