====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m

====================================================================================================
[1m[ ] Compiling Solidity contract from the file /unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol ... [0m/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1188:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherHiLo() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:893:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1005:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1023:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1216:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                id:         uint(keccak256(block.number, player, bet)),
                                 ^----------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1267:55: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return SafeMath.div(SafeMath.div(SafeMath.mul(this.balance - balanceInPlay, maxBetThresholdPct), 100), 12);
                                                      ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1373:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (transferAmount > this.balance) {
                             ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1374:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (game.bet < this.balance) {
                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1377:60: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                transferAmount = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                           ^----------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1392:9: Warning: Invoking events without "emit" prefix is deprecated.
        GameFinished(player, game.id, game.bet, game.firstRoll, finalRoll, winnings, transferAmount);
        ^------------------------------------------------------------------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1400:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1413:28: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        uint rollId = uint(keccak256(_queryId));
                           ^-----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1433:13: Warning: Invoking events without "emit" prefix is deprecated.
            GameError(player, game.id, rollId);
            ^--------------------------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1436:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint8 randomNumber = uint8((uint(keccak256(_result)) % NUM_DICE_SIDES) + 1);
                                             ^----------------^
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:1232:5: Warning: No visibility specified. Defaulting to "public". 
    function finishGame(BetDirection direction) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa1e70923902524faf901a3978f499908f689d114.sol:217:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

[91m[-] Cannot compile the contract [0m