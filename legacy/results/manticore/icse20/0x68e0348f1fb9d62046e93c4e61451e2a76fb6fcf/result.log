2019-08-03 08:06:57,489: [13] m.main:INFO: Registered plugins: DetectUninitializedMemory, DetectReentrancyAdvanced, DetectDelegatecall, DetectIntegerOverflow, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction
2019-08-03 08:06:57,489: [13] m.main:INFO: Beginning analysis
2019-08-03 08:06:57,527: [13] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:06:57,679: [13] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:06:57,773: [56] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:06:58,047: [13] m.c.manticore:INFO: Results in /mcore_ype48222
2019-08-03 08:06:58,776: [314] m.main:INFO: Registered plugins: DetectUninitializedMemory, DetectInvalid, DetectUnusedRetVal, DetectIntegerOverflow, DetectReentrancySimple, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedStorage, DetectReentrancyAdvanced, DetectDelegatecall
2019-08-03 08:06:58,776: [314] m.main:INFO: Beginning analysis
2019-08-03 08:06:58,839: [314] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:06:58,981: [314] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:06:59,074: [356] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:06:59,344: [314] m.c.manticore:INFO: Results in /mcore_v1421ng4
2019-08-03 08:07:00,071: [615] m.main:INFO: Registered plugins: DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectReentrancyAdvanced, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectIntegerOverflow, DetectUninitializedMemory, DetectDelegatecall
2019-08-03 08:07:00,071: [615] m.main:INFO: Beginning analysis
2019-08-03 08:07:00,120: [615] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:07:00,274: [615] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:07:00,373: [660] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:07:00,610: [615] m.c.manticore:INFO: Results in /mcore_no0pkgqs
2019-08-03 08:07:01,362: [916] m.main:INFO: Registered plugins: DetectIntegerOverflow, DetectDelegatecall, DetectUnusedRetVal, DetectReentrancySimple, DetectInvalid, DetectEnvInstruction, DetectSuicidal, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectReentrancyAdvanced, DetectUninitializedMemory
2019-08-03 08:07:01,363: [916] m.main:INFO: Beginning analysis
2019-08-03 08:07:01,372: [916] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:07:01,528: [916] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:07:01,561: [958] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:07:01,858: [916] m.c.manticore:INFO: Results in /mcore_vextjhkk
2019-08-03 08:07:02,613: [1217] m.main:INFO: Registered plugins: DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectReentrancyAdvanced, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedMemory, DetectDelegatecall, DetectIntegerOverflow
2019-08-03 08:07:02,613: [1217] m.main:INFO: Beginning analysis
2019-08-03 08:07:02,633: [1217] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:07:02,767: [1217] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:07:02,868: [1259] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:07:03,094: [1217] m.c.manticore:INFO: Results in /mcore_oxdb8bby
2019-08-03 08:07:03,868: [1518] m.main:INFO: Registered plugins: DetectUnusedRetVal, DetectSuicidal, DetectReentrancyAdvanced, DetectInvalid, DetectEnvInstruction, DetectDelegatecall, DetectUninitializedStorage, DetectReentrancySimple, DetectExternalCallAndLeak, DetectUninitializedMemory, DetectIntegerOverflow
2019-08-03 08:07:03,868: [1518] m.main:INFO: Beginning analysis
2019-08-03 08:07:03,923: [1518] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:07:04,057: [1518] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:07:04,154: [1560] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:07:04,439: [1518] m.c.manticore:INFO: Results in /mcore_ag4nubpy
2019-08-03 08:07:05,173: [1819] m.main:INFO: Registered plugins: DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedMemory, DetectReentrancyAdvanced, DetectDelegatecall, DetectIntegerOverflow
2019-08-03 08:07:05,173: [1819] m.main:INFO: Beginning analysis
2019-08-03 08:07:05,228: [1819] m.e.manticore:INFO: Starting symbolic create contract
2019-08-03 08:07:05,364: [1819] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GladiethersOraclize() public{
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if (msg.sender != oraclize_cbAddress()) throw;
                                               ^---^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);
                                                            ^----------------------------------------^
unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-03 08:07:05,462: [1861] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-03 08:07:05,737: [1819] m.c.manticore:INFO: Results in /mcore_mm88njte