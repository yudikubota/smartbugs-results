2019-07-25 18:32:02,300: [12] m.main:INFO: Registered plugins: DetectUninitializedStorage, DetectInvalid, DetectDelegatecall, DetectUnusedRetVal, DetectUninitializedMemory, DetectExternalCallAndLeak, DetectIntegerOverflow, DetectReentrancySimple, DetectSuicidal, DetectEnvInstruction, DetectReentrancyAdvanced
2019-07-25 18:32:02,301: [12] m.main:INFO: Beginning analysis
2019-07-25 18:32:02,323: [12] m.e.manticore:INFO: Starting symbolic create contract
2019-07-25 18:32:02,517: [12] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.19;
^---------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:763:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:853:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:856:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:927:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1084:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goldcub() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:809:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:812:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:827:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1119:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(owner,userAddress[myid],tokenToTransfer[userAddress[myid]]);
                ^------------------------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1178:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1188:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1198:18: Warning: Invoking events without "emit" prefix is deprecated.
                 Transfer(msg.sender, _to, _amount);
                 ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1226:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1261:22: Warning: Invoking events without "emit" prefix is deprecated.
                     Transfer(_from, _to, _amount);
                     ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1282:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1338:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-25 18:32:02,658: [55] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-25 18:32:03,155: [12] m.c.manticore:INFO: Results in /mcore_kahmzvld
2019-07-25 18:32:03,928: [313] m.main:INFO: Registered plugins: DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedMemory, DetectReentrancyAdvanced, DetectDelegatecall, DetectIntegerOverflow
2019-07-25 18:32:03,929: [313] m.main:INFO: Beginning analysis
2019-07-25 18:32:03,944: [313] m.e.manticore:INFO: Starting symbolic create contract
2019-07-25 18:32:04,090: [313] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.19;
^---------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:763:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:853:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:856:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:927:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1084:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goldcub() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:809:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:812:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:827:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1119:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(owner,userAddress[myid],tokenToTransfer[userAddress[myid]]);
                ^------------------------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1178:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1188:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1198:18: Warning: Invoking events without "emit" prefix is deprecated.
                 Transfer(msg.sender, _to, _amount);
                 ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1226:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1261:22: Warning: Invoking events without "emit" prefix is deprecated.
                     Transfer(_from, _to, _amount);
                     ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1282:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1338:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-25 18:32:04,150: [355] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-25 18:32:04,743: [313] m.c.manticore:INFO: Results in /mcore_lj3b908e
2019-07-25 18:32:05,549: [614] m.main:INFO: Registered plugins: DetectUnusedRetVal, DetectEnvInstruction, DetectReentrancyAdvanced, DetectReentrancySimple, DetectInvalid, DetectDelegatecall, DetectSuicidal, DetectUninitializedMemory, DetectIntegerOverflow, DetectExternalCallAndLeak, DetectUninitializedStorage
2019-07-25 18:32:05,549: [614] m.main:INFO: Beginning analysis
2019-07-25 18:32:05,613: [614] m.e.manticore:INFO: Starting symbolic create contract
2019-07-25 18:32:05,798: [614] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.19;
^---------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:763:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:853:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:856:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:927:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1084:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goldcub() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:809:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:812:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:827:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1119:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(owner,userAddress[myid],tokenToTransfer[userAddress[myid]]);
                ^------------------------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1178:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1188:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1198:18: Warning: Invoking events without "emit" prefix is deprecated.
                 Transfer(msg.sender, _to, _amount);
                 ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1226:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1261:22: Warning: Invoking events without "emit" prefix is deprecated.
                     Transfer(_from, _to, _amount);
                     ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1282:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1338:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-25 18:32:05,838: [656] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-25 18:32:06,440: [614] m.c.manticore:INFO: Results in /mcore_fwgqup39
2019-07-25 18:32:07,241: [915] m.main:INFO: Registered plugins: DetectExternalCallAndLeak, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectReentrancyAdvanced, DetectDelegatecall, DetectUninitializedStorage, DetectIntegerOverflow, DetectSuicidal, DetectEnvInstruction, DetectUninitializedMemory
2019-07-25 18:32:07,241: [915] m.main:INFO: Beginning analysis
2019-07-25 18:32:07,254: [915] m.e.manticore:INFO: Starting symbolic create contract
2019-07-25 18:32:07,460: [915] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.19;
^---------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:763:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:853:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:856:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:927:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1084:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goldcub() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:809:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:812:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:827:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1119:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(owner,userAddress[myid],tokenToTransfer[userAddress[myid]]);
                ^------------------------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1178:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1188:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1198:18: Warning: Invoking events without "emit" prefix is deprecated.
                 Transfer(msg.sender, _to, _amount);
                 ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1226:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1261:22: Warning: Invoking events without "emit" prefix is deprecated.
                     Transfer(_from, _to, _amount);
                     ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1282:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1338:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-25 18:32:07,748: [959] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-25 18:32:08,314: [915] m.c.manticore:INFO: Results in /mcore_oxz1_op4
2019-07-25 18:32:09,205: [1216] m.main:INFO: Registered plugins: DetectExternalCallAndLeak, DetectReentrancySimple, DetectUninitializedMemory, DetectIntegerOverflow, DetectSuicidal, DetectReentrancyAdvanced, DetectInvalid, DetectEnvInstruction, DetectDelegatecall, DetectUninitializedStorage, DetectUnusedRetVal
2019-07-25 18:32:09,205: [1216] m.main:INFO: Beginning analysis
2019-07-25 18:32:09,226: [1216] m.e.manticore:INFO: Starting symbolic create contract
2019-07-25 18:32:09,415: [1216] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.19;
^---------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:763:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:853:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:856:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:927:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1084:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goldcub() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:777:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:809:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:812:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:827:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:864:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:879:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:901:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1119:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(owner,userAddress[myid],tokenToTransfer[userAddress[myid]]);
                ^------------------------------------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1178:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1188:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1198:18: Warning: Invoking events without "emit" prefix is deprecated.
                 Transfer(msg.sender, _to, _amount);
                 ^--------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1226:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1261:22: Warning: Invoking events without "emit" prefix is deprecated.
                     Transfer(_from, _to, _amount);
                     ^---------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1282:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/6/0xe780c49fe4b9022a0781b2dfcd34bbb337d946e7.sol:1338:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-25 18:32:09,544: [1258] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-25 18:32:10,050: [1216] m.c.manticore:INFO: Results in /mcore_kurw5lox