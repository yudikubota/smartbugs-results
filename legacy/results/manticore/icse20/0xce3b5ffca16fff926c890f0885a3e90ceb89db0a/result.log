2019-08-01 21:16:16,524: [12] m.main:INFO: Registered plugins: DetectExternalCallAndLeak, DetectReentrancySimple, DetectInvalid, DetectSuicidal, DetectUninitializedMemory, DetectUninitializedStorage, DetectEnvInstruction, DetectDelegatecall, DetectIntegerOverflow, DetectUnusedRetVal, DetectReentrancyAdvanced
2019-08-01 21:16:16,524: [12] m.main:INFO: Beginning analysis
2019-08-01 21:16:16,544: [12] m.e.manticore:INFO: Starting symbolic create contract
2019-08-01 21:16:16,564: [12] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;       
                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:8:24: Error: Modifier body does not contain '_'.
    modifier onlyOwner {
                       ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:13:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GSIToken(
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:54:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:55:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:56:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:65:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:66:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:67:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:68:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowed[_from][msg.sender]) throw;   // Check allowed
                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:77:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if(msg.sender!=owner) throw;
	                          ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:85:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:91:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:96:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:97:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(balanceOf[target]<amount) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:132:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:159:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
		function GSI() {
  ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:181:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if(freeReadings[msg.sender]==0) throw;
				                                ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:184:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<lastReading[msg.sender].value) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:185:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<requestReading[msg.sender].value) throw;
			                                              ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:186:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(now<lastReading[msg.sender].timestamp+secondsBetweenReadings) throw;			
			                                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:194:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:202:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:207:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:212:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:219:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;				
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:226:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		  if(oracles[msg.sender]!=1) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:232:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:237:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:242:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:247:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:252:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(price<pricegreengrey) throw;
			                         ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:253:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greenToken.balanceOf(msg.sender)<amount*price) throw;
			                                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:254:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greyToken.balanceOf(msg.sender)<amount) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:59:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:72:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:80:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:87:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:100:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(target,owner,amount);
		^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:189:4: Warning: Invoking events without "emit" prefix is deprecated.
			OracleRequest(msg.sender);
			^-----------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:190:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(msg.value);
			^-------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:215:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGreen(recipient,tokens);
			^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:222:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGrey(recipient,tokens);
			^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				owner.send(this.balance);
				           ^----------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(this.balance);
				^----------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-01 21:16:16,721: [54] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-01 21:16:17,037: [12] m.c.manticore:INFO: Results in /mcore_gtpqx0i7
2019-08-01 21:16:17,867: [313] m.main:INFO: Registered plugins: DetectUninitializedStorage, DetectIntegerOverflow, DetectDelegatecall, DetectEnvInstruction, DetectReentrancySimple, DetectUninitializedMemory, DetectUnusedRetVal, DetectSuicidal, DetectExternalCallAndLeak, DetectReentrancyAdvanced, DetectInvalid
2019-08-01 21:16:17,868: [313] m.main:INFO: Beginning analysis
2019-08-01 21:16:17,914: [313] m.e.manticore:INFO: Starting symbolic create contract
2019-08-01 21:16:17,945: [313] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;       
                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:8:24: Error: Modifier body does not contain '_'.
    modifier onlyOwner {
                       ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:13:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GSIToken(
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:54:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:55:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:56:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:65:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:66:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:67:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:68:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowed[_from][msg.sender]) throw;   // Check allowed
                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:77:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if(msg.sender!=owner) throw;
	                          ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:85:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:91:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:96:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:97:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(balanceOf[target]<amount) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:132:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:159:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
		function GSI() {
  ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:181:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if(freeReadings[msg.sender]==0) throw;
				                                ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:184:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<lastReading[msg.sender].value) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:185:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<requestReading[msg.sender].value) throw;
			                                              ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:186:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(now<lastReading[msg.sender].timestamp+secondsBetweenReadings) throw;			
			                                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:194:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:202:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:207:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:212:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:219:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;				
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:226:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		  if(oracles[msg.sender]!=1) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:232:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:237:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:242:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:247:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:252:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(price<pricegreengrey) throw;
			                         ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:253:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greenToken.balanceOf(msg.sender)<amount*price) throw;
			                                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:254:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greyToken.balanceOf(msg.sender)<amount) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:59:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:72:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:80:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:87:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:100:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(target,owner,amount);
		^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:189:4: Warning: Invoking events without "emit" prefix is deprecated.
			OracleRequest(msg.sender);
			^-----------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:190:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(msg.value);
			^-------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:215:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGreen(recipient,tokens);
			^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:222:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGrey(recipient,tokens);
			^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				owner.send(this.balance);
				           ^----------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(this.balance);
				^----------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-01 21:16:18,039: [355] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-01 21:16:18,356: [313] m.c.manticore:INFO: Results in /mcore_xvhk5jus
2019-08-01 21:16:19,200: [614] m.main:INFO: Registered plugins: DetectEnvInstruction, DetectReentrancyAdvanced, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectUninitializedStorage, DetectSuicidal, DetectDelegatecall, DetectExternalCallAndLeak, DetectUninitializedMemory, DetectIntegerOverflow
2019-08-01 21:16:19,200: [614] m.main:INFO: Beginning analysis
2019-08-01 21:16:19,230: [614] m.e.manticore:INFO: Starting symbolic create contract
2019-08-01 21:16:19,249: [614] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;       
                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:8:24: Error: Modifier body does not contain '_'.
    modifier onlyOwner {
                       ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:13:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GSIToken(
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:54:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:55:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:56:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:65:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:66:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:67:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:68:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowed[_from][msg.sender]) throw;   // Check allowed
                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:77:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if(msg.sender!=owner) throw;
	                          ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:85:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:91:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:96:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:97:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(balanceOf[target]<amount) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:132:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:159:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
		function GSI() {
  ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:181:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if(freeReadings[msg.sender]==0) throw;
				                                ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:184:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<lastReading[msg.sender].value) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:185:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<requestReading[msg.sender].value) throw;
			                                              ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:186:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(now<lastReading[msg.sender].timestamp+secondsBetweenReadings) throw;			
			                                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:194:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:202:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:207:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:212:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:219:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;				
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:226:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		  if(oracles[msg.sender]!=1) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:232:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:237:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:242:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:247:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:252:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(price<pricegreengrey) throw;
			                         ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:253:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greenToken.balanceOf(msg.sender)<amount*price) throw;
			                                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:254:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greyToken.balanceOf(msg.sender)<amount) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:59:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:72:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:80:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:87:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:100:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(target,owner,amount);
		^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:189:4: Warning: Invoking events without "emit" prefix is deprecated.
			OracleRequest(msg.sender);
			^-----------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:190:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(msg.value);
			^-------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:215:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGreen(recipient,tokens);
			^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:222:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGrey(recipient,tokens);
			^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				owner.send(this.balance);
				           ^----------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(this.balance);
				^----------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-01 21:16:19,347: [656] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-01 21:16:19,669: [614] m.c.manticore:INFO: Results in /mcore_uwbmlux7
2019-08-01 21:16:20,539: [915] m.main:INFO: Registered plugins: DetectDelegatecall, DetectUninitializedMemory, DetectIntegerOverflow, DetectUnusedRetVal, DetectReentrancySimple, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedStorage, DetectReentrancyAdvanced, DetectInvalid
2019-08-01 21:16:20,540: [915] m.main:INFO: Beginning analysis
2019-08-01 21:16:20,551: [915] m.e.manticore:INFO: Starting symbolic create contract
2019-08-01 21:16:20,569: [915] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;       
                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:8:24: Error: Modifier body does not contain '_'.
    modifier onlyOwner {
                       ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:13:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GSIToken(
    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:54:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:55:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:56:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:65:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:66:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:67:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:68:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowed[_from][msg.sender]) throw;   // Check allowed
                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:77:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if(msg.sender!=owner) throw;
	                          ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:85:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:91:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:96:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:97:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(balanceOf[target]<amount) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:132:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:159:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
		function GSI() {
  ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:181:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if(freeReadings[msg.sender]==0) throw;
				                                ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:184:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<lastReading[msg.sender].value) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:185:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<requestReading[msg.sender].value) throw;
			                                              ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:186:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(now<lastReading[msg.sender].timestamp+secondsBetweenReadings) throw;			
			                                                                 ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:194:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:202:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:207:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:212:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:219:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;				
			                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:226:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		  if(oracles[msg.sender]!=1) throw;
		                             ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:232:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:237:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:242:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:247:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:252:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(price<pricegreengrey) throw;
			                         ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:253:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greenToken.balanceOf(msg.sender)<amount*price) throw;
			                                                  ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:254:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greyToken.balanceOf(msg.sender)<amount) throw;
			                                           ^---^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:59:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:72:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:80:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:87:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:100:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(target,owner,amount);
		^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:189:4: Warning: Invoking events without "emit" prefix is deprecated.
			OracleRequest(msg.sender);
			^-----------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:190:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(msg.value);
			^-------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:215:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGreen(recipient,tokens);
			^---------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:222:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGrey(recipient,tokens);
			^--------------------------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				owner.send(this.balance);
				           ^----------^
unique_chucks/8/0xce3b5ffca16fff926c890f0885a3e90ceb89db0a.sol:259:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(this.balance);
				^----------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-01 21:16:20,749: [957] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-01 21:16:21,038: [915] m.c.manticore:INFO: Results in /mcore_4aq7vxbl