2019-08-05 16:05:16,599: [12] m.main:INFO: Registered plugins: DetectReentrancySimple, DetectInvalid, DetectSuicidal, DetectUnusedRetVal, DetectUninitializedStorage, DetectIntegerOverflow, DetectDelegatecall, DetectEnvInstruction, DetectUninitializedMemory, DetectReentrancyAdvanced, DetectExternalCallAndLeak
2019-08-05 16:05:16,599: [12] m.main:INFO: Beginning analysis
2019-08-05 16:05:16,617: [12] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:16,682: [12] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:16,760: [54] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:17,176: [12] m.c.manticore:INFO: Results in /mcore_hrw3phnu
2019-08-05 16:05:18,006: [313] m.main:INFO: Registered plugins: DetectUninitializedMemory, DetectUnusedRetVal, DetectReentrancySimple, DetectInvalid, DetectSuicidal, DetectEnvInstruction, DetectDelegatecall, DetectUninitializedStorage, DetectReentrancyAdvanced, DetectExternalCallAndLeak, DetectIntegerOverflow
2019-08-05 16:05:18,006: [313] m.main:INFO: Beginning analysis
2019-08-05 16:05:18,060: [313] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:18,098: [313] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:18,260: [365] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:18,509: [313] m.c.manticore:INFO: Results in /mcore_tncv40bx
2019-08-05 16:05:19,371: [614] m.main:INFO: Registered plugins: DetectReentrancySimple, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedStorage, DetectIntegerOverflow, DetectReentrancyAdvanced, DetectDelegatecall, DetectUninitializedMemory, DetectUnusedRetVal, DetectInvalid
2019-08-05 16:05:19,371: [614] m.main:INFO: Beginning analysis
2019-08-05 16:05:19,382: [614] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:19,429: [614] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:19,524: [656] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:19,881: [614] m.c.manticore:INFO: Results in /mcore_89rzm6au
2019-08-05 16:05:20,727: [915] m.main:INFO: Registered plugins: DetectDelegatecall, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectEnvInstruction, DetectUninitializedStorage, DetectIntegerOverflow, DetectReentrancyAdvanced, DetectSuicidal, DetectExternalCallAndLeak, DetectUninitializedMemory
2019-08-05 16:05:20,728: [915] m.main:INFO: Beginning analysis
2019-08-05 16:05:20,771: [915] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:20,806: [915] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:20,993: [958] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:21,302: [915] m.c.manticore:INFO: Results in /mcore_u3y9xgk0
2019-08-05 16:05:22,179: [1216] m.main:INFO: Registered plugins: DetectUninitializedMemory, DetectUnusedRetVal, DetectExternalCallAndLeak, DetectDelegatecall, DetectReentrancySimple, DetectInvalid, DetectSuicidal, DetectReentrancyAdvanced, DetectUninitializedStorage, DetectIntegerOverflow, DetectEnvInstruction
2019-08-05 16:05:22,179: [1216] m.main:INFO: Beginning analysis
2019-08-05 16:05:22,189: [1216] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:22,235: [1216] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:22,305: [1259] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:22,680: [1216] m.c.manticore:INFO: Results in /mcore_01701f5b
2019-08-05 16:05:23,527: [1517] m.main:INFO: Registered plugins: DetectUnusedRetVal, DetectInvalid, DetectExternalCallAndLeak, DetectSuicidal, DetectReentrancySimple, DetectUninitializedStorage, DetectReentrancyAdvanced, DetectIntegerOverflow, DetectUninitializedMemory, DetectDelegatecall, DetectEnvInstruction
2019-08-05 16:05:23,528: [1517] m.main:INFO: Beginning analysis
2019-08-05 16:05:23,570: [1517] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:23,605: [1517] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:23,781: [1564] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:24,087: [1517] m.c.manticore:INFO: Results in /mcore_jhzux14k
2019-08-05 16:05:24,954: [1818] m.main:INFO: Registered plugins: DetectDelegatecall, DetectIntegerOverflow, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectReentrancyAdvanced, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedMemory
2019-08-05 16:05:24,955: [1818] m.main:INFO: Beginning analysis
2019-08-05 16:05:24,972: [1818] m.e.manticore:INFO: Starting symbolic create contract
2019-08-05 16:05:25,008: [1818] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:416:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:434:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:435:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:479:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:480:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:491:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:580:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:690:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:718:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:948:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:972:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:993:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function mortal() {
 ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1066:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner) throw;
		                        ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1093:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw;
			^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1109:105: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (animalType >= costs.length || msg.value < costs[animalType] || numAnimals + amount >= maxAnimals) throw;
		                                                                                                      ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(playerBalance)) throw;
		                                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1190:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner && nextAttackTimestamp < now + 300)) throw;
		                                                               ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1207:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1285:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1288:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (!owner.send(amount)) throw;
			                         ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1296:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1298:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(!animals[ids[i]].owner.send(animals[ids[i]].value)) throw;
			                                                       ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1308:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != animals[animalId].owner) throw;
		                                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1318:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!msg.sender.send(val)) throw;
		                           ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1349:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(winnings>0 && !msg.sender.send(winnings)) throw;
		                                             ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1357:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(!transferAllowed) throw; //for now manually allowing and disallowing, in next version instead only allow calls from old contract address
		                     ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < oldids.length * values[animalType]) throw;
		                                                    ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1405:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1410:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1415:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!(msg.sender == owner)) throw;
		                            ^---^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:436:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:526:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:575:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:922:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:968:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:432:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1378:99: Warning: This declaration shadows an existing declaration.
	function get10Animals(uint16 startIndex) constant returns(uint32[10] animalIds, uint8[10] types, uint128[10] values, address[10] owners) {
	                                                                                                 ^----------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1028:2: The shadowed declaration is here:
	uint128[] public values;
	^---------------------^

unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:576:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1334:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Animal a = animals[ids[i]];
				^------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:77:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:78:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1d3B2638a7cC9f2CB3D298A3DA7a90B67E5506ed'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:81:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:82:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xc03A2615D5efaf5F49F60B7BB6583eaec212fdf1'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x20e12A1F859B3FeaE5Fb2A0A32C18F5a65555bBF'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x93BBBe5ce77034E3095F0479919962a903f898Ad'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x51efaF4c8B3C9AfBD5aB9F4bbC82784Ab6ef8fAA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:749:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:750:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:752:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:754:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:786:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:787:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:789:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:791:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:792:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:794:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:998:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1116:3: Warning: Invoking events without "emit" prefix is deprecated.
		newPurchase(receiver, animalType, amount, nextId - amount);
		^--------------------------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1165:3: Warning: Invoking events without "emit" prefix is deprecated.
		newExit(msg.sender, playerBalance, removed); //fire the event to notify the client
		^-----------------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1223:3: Warning: Invoking events without "emit" prefix is deprecated.
		newAttack(killedAnimals);
		^----------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1319:3: Warning: Invoking events without "emit" prefix is deprecated.
		newSell(animalId, msg.sender, val);
		^--------------------------------^
unique_chucks/10/0x0851185501ba44e84fd8af13ade44846f00890b7.sol:1328:3: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.
		mapping(uint16 => uint32[]) tids;
		^------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-08-05 16:05:25,160: [1863] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-08-05 16:05:25,496: [1818] m.c.manticore:INFO: Results in /mcore_zmm883h1