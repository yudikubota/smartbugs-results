2019-07-26 01:29:00,468: [12] m.main:INFO: Registered plugins: DetectUnusedRetVal, DetectReentrancySimple, DetectInvalid, DetectSuicidal, DetectUninitializedStorage, DetectEnvInstruction, DetectDelegatecall, DetectUninitializedMemory, DetectExternalCallAndLeak, DetectIntegerOverflow, DetectReentrancyAdvanced
2019-07-26 01:29:00,469: [12] m.main:INFO: Beginning analysis
2019-07-26 01:29:00,487: [12] m.e.manticore:INFO: Starting symbolic create contract
2019-07-26 01:29:00,512: [12] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.24;
^---------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:78:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransfer = keccak256(
                                                     ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:88:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransferFrom = keccak256(
                                                         ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:99:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApprove = keccak256(
                                                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:109:60: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApproveAndCall = keccak256(
                                                           ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:204:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    keccak256(
                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:219:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "32", data), v, r, s) // Geth-adopted
                                    ^-------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:221:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x20", data), v, r, s) // Trezor-adopted
                                    ^---------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:225:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "64", hexToString(data)), v, r, s) // Geth
                                    ^--------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:227:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x40", hexToString(data)), v, r, s) // Trezor
                                    ^----------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:286:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:334:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, fee, feeRecipient, deadline, sigId),
            ^--------------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:383:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:432:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, extraData, fee, feeRecipient, deadline, sigId),
            ^-------------------------------------------------------------------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-26 01:29:00,695: [58] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-26 01:29:01,200: [12] m.c.manticore:INFO: Results in /mcore_oahvvtpx
2019-07-26 01:29:01,982: [313] m.main:INFO: Registered plugins: DetectInvalid, DetectReentrancyAdvanced, DetectUnusedRetVal, DetectReentrancySimple, DetectExternalCallAndLeak, DetectSuicidal, DetectUninitializedStorage, DetectDelegatecall, DetectEnvInstruction, DetectIntegerOverflow, DetectUninitializedMemory
2019-07-26 01:29:01,983: [313] m.main:INFO: Beginning analysis
2019-07-26 01:29:01,991: [313] m.e.manticore:INFO: Starting symbolic create contract
2019-07-26 01:29:02,018: [313] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.24;
^---------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:78:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransfer = keccak256(
                                                     ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:88:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransferFrom = keccak256(
                                                         ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:99:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApprove = keccak256(
                                                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:109:60: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApproveAndCall = keccak256(
                                                           ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:204:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    keccak256(
                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:219:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "32", data), v, r, s) // Geth-adopted
                                    ^-------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:221:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x20", data), v, r, s) // Trezor-adopted
                                    ^---------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:225:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "64", hexToString(data)), v, r, s) // Geth
                                    ^--------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:227:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x40", hexToString(data)), v, r, s) // Trezor
                                    ^----------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:286:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:334:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, fee, feeRecipient, deadline, sigId),
            ^--------------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:383:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:432:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, extraData, fee, feeRecipient, deadline, sigId),
            ^-------------------------------------------------------------------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-26 01:29:02,186: [355] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-26 01:29:02,796: [313] m.c.manticore:INFO: Results in /mcore_vta40syz
2019-07-26 01:29:03,681: [614] m.main:INFO: Registered plugins: DetectReentrancyAdvanced, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal, DetectUninitializedStorage, DetectExternalCallAndLeak, DetectSuicidal, DetectEnvInstruction, DetectUninitializedMemory, DetectDelegatecall, DetectIntegerOverflow
2019-07-26 01:29:03,681: [614] m.main:INFO: Beginning analysis
2019-07-26 01:29:03,693: [614] m.e.manticore:INFO: Starting symbolic create contract
2019-07-26 01:29:03,711: [614] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.24;
^---------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:78:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransfer = keccak256(
                                                     ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:88:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransferFrom = keccak256(
                                                         ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:99:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApprove = keccak256(
                                                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:109:60: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApproveAndCall = keccak256(
                                                           ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:204:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    keccak256(
                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:219:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "32", data), v, r, s) // Geth-adopted
                                    ^-------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:221:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x20", data), v, r, s) // Trezor-adopted
                                    ^---------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:225:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "64", hexToString(data)), v, r, s) // Geth
                                    ^--------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:227:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x40", hexToString(data)), v, r, s) // Trezor
                                    ^----------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:286:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:334:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, fee, feeRecipient, deadline, sigId),
            ^--------------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:383:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:432:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, extraData, fee, feeRecipient, deadline, sigId),
            ^-------------------------------------------------------------------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-26 01:29:03,899: [657] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-26 01:29:04,491: [614] m.c.manticore:INFO: Results in /mcore_6rd8tfgl
2019-07-26 01:29:05,328: [915] m.main:INFO: Registered plugins: DetectUninitializedStorage, DetectExternalCallAndLeak, DetectDelegatecall, DetectReentrancyAdvanced, DetectUninitializedMemory, DetectSuicidal, DetectEnvInstruction, DetectIntegerOverflow, DetectReentrancySimple, DetectInvalid, DetectUnusedRetVal
2019-07-26 01:29:05,329: [915] m.main:INFO: Beginning analysis
2019-07-26 01:29:05,373: [915] m.e.manticore:INFO: Starting symbolic create contract
2019-07-26 01:29:05,396: [915] m.e.manticore:ERROR: Errors : Invalid solc compilation unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version
pragma solidity 0.4.24;
^---------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:78:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransfer = keccak256(
                                                     ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:88:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationTransferFrom = keccak256(
                                                         ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:99:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApprove = keccak256(
                                                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:109:60: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public sigDestinationApproveAndCall = keccak256(
                                                           ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:204:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    keccak256(
                    ^ (Relevant source part starts here and spans across multiple lines).
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:219:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "32", data), v, r, s) // Geth-adopted
                                    ^-------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:221:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x20", data), v, r, s) // Trezor-adopted
                                    ^---------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:225:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "64", hexToString(data)), v, r, s) // Geth
                                    ^--------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:227:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x40", hexToString(data)), v, r, s) // Trezor
                                    ^----------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:286:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:334:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, fee, feeRecipient, deadline, sigId),
            ^--------------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:383:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, feeRecipient, deadline, sigId),
            ^---------------------------------------------------------------------------^
unique_chucks/5/0x82f4ded9cec9b5750fbff5c2185aee35afc16587.sol:432:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, extraData, fee, feeRecipient, deadline, sigId),
            ^-------------------------------------------------------------------------------------------^

. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
2019-07-26 01:29:05,537: [957] m.c.manticore:INFO: Generated testcase No. 0 - NO STATE RESULT (?)(0 txs)
2019-07-26 01:29:06,105: [915] m.c.manticore:INFO: Results in /mcore_mffroigo