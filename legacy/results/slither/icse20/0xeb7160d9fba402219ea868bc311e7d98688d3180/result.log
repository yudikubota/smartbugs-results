INFO:Slither:Compilation warnings/errors on /unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol:
/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol:364:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
return bytes8(sha256(merkle(r+1,2*t)^merkle(r+1,2*t+1))<<192);
              ^---------------------------------------^
/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol:364:15: Warning: The provided argument of type bytes8 is not implicitly convertible to expected type bytes memory.
return bytes8(sha256(merkle(r+1,2*t)^merkle(r+1,2*t+1))<<192);
              ^---------------------------------------^
/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol:25:1: Warning: Function state mutability can be restricted to pure
function getInputBits(uint, address) public view returns(bytes8){}
^----------------------------------------------------------------^

INFO:Detectors:[92m
Reentrancy in TokenShield.join (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#230-263):
	External calls:
	- result = jv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#233-237)
	- na1 = jv.getInputBits(0,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#238-239)
	- na2 = jv.getInputBits(64,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#239-241)
	- zb = jv.getInputBits(192,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#241-242)
	- db = jv.getInputBits(256,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#242-244)
	State variables written after the call(s):
	- currentRootIndex (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#261-262)
	- ds (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#256)
	- nCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#249)
	- nCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#249-251)
	- ns (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#249)
	- ns (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#249-251)
	- roots (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#261-262)
	- zCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#256)
	- zs (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#256)
Reentrancy in TokenShield.mint (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#163-195):
	External calls:
	- result = mv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#165-175)
	- d = mv.getInputBits(0,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#176-177)
	- z = mv.getInputBits(64,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#180-181)
	State variables written after the call(s):
	- currentRootIndex (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#192-194)
	- ds (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#183-189)
	- roots (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#192-194)
	- zCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#183-189)
	- zs (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#182)
Reentrancy in TokenShield.split (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#270-302):
	External calls:
	- result = sv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#271-275)
	- na = sv.getInputBits(0,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#276)
	- zb1 = sv.getInputBits(128,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#276)
	- zb2 = sv.getInputBits(192,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#276-277)
	- db1 = sv.getInputBits(256,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#277-280)
	- db2 = sv.getInputBits(320,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#281-282)
	State variables written after the call(s):
	- currentRootIndex (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#297-300)
	- ds (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#293)
	- ds (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#294)
	- nCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#286)
	- ns (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#286)
	- roots (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#297-300)
	- zCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#293)
	- zCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#294)
	- zs (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#286)
	- zs (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#293)
Reentrancy in TokenShield.transfer (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#199-224):
	External calls:
	- result = tv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#200-205)
	- n = tv.getInputBits(0,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#208-209)
	- z = tv.getInputBits(128,msg.sender) (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#209-210)
	State variables written after the call(s):
	- currentRootIndex (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#221-223)
	- nCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#211)
	- ns (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#211)
	- roots (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#221-223)
	- zCount (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#218)
	- zs (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#218)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#7-23) should be declared external
Verifier.getInputBits (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#25-31) should be declared external
TokenShield.close (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#123-130) should be declared external
TokenShield.getMintVerifier (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#130-137) should be declared external
TokenShield.getTransferVerifier (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#137-144) should be declared external
TokenShield.getJoinVerifier (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#144-152) should be declared external
TokenShield.getSplitVerifier (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#152-153) should be declared external
TokenShield.mint (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#163-195) should be declared external
TokenShield.transfer (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#199-224) should be declared external
TokenShield.join (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#230-263) should be declared external
TokenShield.split (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#270-302) should be declared external
TokenShield.setProofParams (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#311-343) should be declared external
TokenShield.getTokens (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#344-358) should be declared external
TokenShield.getRoot (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#359-360) should be declared external
TokenShield.computeMerkle (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#360-364) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol:
	- pragma solidity^0.4.13 (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#8-9) is not in mixedCase
Parameter '_scope_0' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#9-10) is not in mixedCase
Parameter '_scope_1' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#10-11) is not in mixedCase
Parameter '_scope_2' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#12) is not in mixedCase
Parameter '_scope_3' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#13-14) is not in mixedCase
Parameter '_scope_4' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#14-15) is not in mixedCase
Parameter '_scope_5' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#15-16) is not in mixedCase
Parameter '_scope_6' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#16-17) is not in mixedCase
Parameter '_scope_7' of Verifier.verifyTx (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#17) is not in mixedCase
Parameter '' of Verifier.getInputBits (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#25) is not in mixedCase
Parameter '_scope_0' of Verifier.getInputBits (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#25) is not in mixedCase
Parameter 'a_p' of TokenShield.setProofParams (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#312-313) is not in mixedCase
Parameter 'b_p' of TokenShield.setProofParams (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#313) is not in mixedCase
Parameter 'c_p' of TokenShield.setProofParams (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#314) is not in mixedCase
Constant 'TokenShield.merkleWidth' (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#52-53) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TokenShield.merkleDepth' (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#53-54) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TokenShield.lastRow' (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#54) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
TokenShield.merkleDepth (/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol#53-54) is never used in TokenShield
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0xeb7160d9fba402219ea868bc311e7d98688d3180.sol analyzed (2 contracts), 38 result(s) found