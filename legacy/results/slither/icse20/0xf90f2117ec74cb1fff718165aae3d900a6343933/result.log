INFO:Slither:Compilation warnings/errors on /unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol:
/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol:3:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol:543:1: Warning: No visibility specified. Defaulting to "public". 
function()
^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.isActivated (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#708-717) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.isActivated (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#708-717) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
JanKenPon.isOver (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#702-708) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.isActivated (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#708-717) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
JanKenPon.isOver (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#702-708) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
JanKenPon.withdrawBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#482-521) uses a dangerous strict equality:
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.isActivated (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#708-717) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
JanKenPon.isOver (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#702-708) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
JanKenPon.withdrawBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#482-521) uses a dangerous strict equality:
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.withdrawCom (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#476-482) uses a dangerous strict equality:
	- rounds[roundId].isWithDrawCom == false
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.isActivated (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#708-717) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
JanKenPon.isOver (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#702-708) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
JanKenPon.withdrawBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#482-521) uses a dangerous strict equality:
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.withdrawCom (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#476-482) uses a dangerous strict equality:
	- rounds[roundId].isWithDrawCom == false
JanKenPon.withdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#446-476) uses a dangerous strict equality:
	- player.stars > 4 && player.cardIndex > 2 && player.isWithDrawShare == false && rounds[roundId].success_pIds.length > 0
	- player.owner == rounds[roundId].lastWiner && player.isWithDrawWiner == false
	- player.owner == rounds[roundId].lastWiner && player.isWithDrawWiner == false
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
	- require(bool,string)(rounds[round_Id].mId_upk[sellerId].isSelling == true && msg.value >= rounds[round_Id].mId_upk[sellerId].price && rounds[round_Id].mId_upk[buyerId].owner == msg.sender,condition not right)
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].isSelling == true && rounds[round_Id].mId_upk[pid].owner == msg.sender,condition not ok)
JanKenPon.cardPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#634-667) uses a dangerous strict equality:
	- cA == 0
	- cB == 2
	- cB == 1
	- cA == 1
	- cB == 0
	- cB == 2
	- cA == 2
	- cB == 1
	- cB == 0
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
	- require(bool,string)(rounds[round_Id].mId_upk[pid].owner == msg.sender && rounds[round_Id].mId_upk[pid].stars > 5 && rounds[round_Id].mId_upk[pid].cardIndex > 2 && rounds[round_Id].mId_upk[pid].isSelling == false,condition not ok)
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) uses a dangerous strict equality:
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == r.lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) uses a dangerous strict equality:
	- msg.sender == rounds[roundId].lastWiner
JanKenPon.indexPK (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#586-634) uses a dangerous strict equality:
	- result == 0
	- result == 2
JanKenPon.isActivated (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#708-717) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
	- require(bool,string)(rounds[round_Id].is_activated == true,game not begin)
JanKenPon.isOver (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#702-708) uses a dangerous strict equality:
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
	- require(bool,string)(rounds[round_Id].is_activated == false,game is activated)
JanKenPon.withdrawBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#482-521) uses a dangerous strict equality:
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- rounds[roundId].pId_inc > 1 && rounds[roundId].mId_upk[pId].owner == msg.sender && pId != rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithdrawBenefit == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
	- pId == rounds[roundId].lastBuyerId && rounds[roundId].mId_upk[pId].isWithDrawLastBuyer == false
JanKenPon.withdrawCom (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#476-482) uses a dangerous strict equality:
	- rounds[roundId].isWithDrawCom == false
JanKenPon.withdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#446-476) uses a dangerous strict equality:
	- player.stars > 4 && player.cardIndex > 2 && player.isWithDrawShare == false && rounds[roundId].success_pIds.length > 0
	- player.owner == rounds[roundId].lastWiner && player.isWithDrawWiner == false
	- player.owner == rounds[roundId].lastWiner && player.isWithDrawWiner == false
JanKenPon.withdrawWiner (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#413-429) uses a dangerous strict equality:
	- player.stars > 4 && player.cardIndex > 2 && player.isWithDrawWiner == false && player.owner == rounds[roundId].lastWiner
	- player.stars > 4 && player.cardIndex > 2 && player.isWithDrawWiner == false && player.owner == rounds[roundId].lastWiner
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol:
	- Version used: ['ABIEncoderV2', '^0.4.24']
	- /unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#1 declares pragma solidity^0.4.24
	- /unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#3-5 declares pragma experimentalABIEncoderV2
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
JanKenPon.getGameInfo (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#136-147) should be declared external
JanKenPon.getEndTime (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#147-155) should be declared external
JanKenPon.getRand (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#156-160) should be declared external
JanKenPon.getJKPCount (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#160-173) should be declared external
JanKenPon.destoryGame (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#174-178) should be declared external
JanKenPon.startGame (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#178-209) should be declared external
JanKenPon.getRate (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#209-225) should be declared external
JanKenPon.getCreator (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#225-228) should be declared external
JanKenPon.getSuccessAndFailedIds (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#228-239) should be declared external
JanKenPon.getPlayerIds (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#239-243) should be declared external
JanKenPon.getSuccessDetail (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#243-253) should be declared external
JanKenPon.getFailedDetail (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#253-272) should be declared external
JanKenPon.getBalance (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#272-277) should be declared external
JanKenPon.getRoundBalance (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#277-285) should be declared external
JanKenPon.getLastWiner (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#285-295) should be declared external
JanKenPon.getGameStatus (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#295-302) should be declared external
JanKenPon.joinGame (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#305-352) should be declared external
JanKenPon.getLastKey (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#352-360) should be declared external
JanKenPon.getOrders (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#361-363) should be declared external
JanKenPon.doOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#363-383) should be declared external
JanKenPon.cancelOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#383-391) should be declared external
JanKenPon.buyOrder (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#391-413) should be declared external
JanKenPon.withdrawWiner (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#413-429) should be declared external
JanKenPon.getWithdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#429-446) should be declared external
JanKenPon.withdrawShare (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#446-476) should be declared external
JanKenPon.withdrawCom (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#476-482) should be declared external
JanKenPon.withdrawBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#482-521) should be declared external
JanKenPon.getBenefit (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#522-567) should be declared external
JanKenPon.fallback (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#575-576) should be declared external
JanKenPon.getTotalCount (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#576-579) should be declared external
JanKenPon.getSuccessCount (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#579-583) should be declared external
JanKenPon.getFailedCount (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#583-586) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Event 'JanKenPonEvents.onJoinGame' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#6-14) is not in CapWords
Event 'JanKenPonEvents.onWithdrawBenefit' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#14-16) is not in CapWords
Event 'JanKenPonEvents.onSellOrder' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#16-18) is not in CapWords
Event 'JanKenPonEvents.onCancelOrder' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#18-20) is not in CapWords
Event 'JanKenPonEvents.onBuyOrder' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#20-22) is not in CapWords
Event 'JanKenPonEvents.onStartGame' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#23-29) is not in CapWords
Event 'JanKenPonEvents.onPK' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#29-38) is not in CapWords
Struct 'JanKenPonData.playerPacket' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#39-55) is not in CapWords
Struct 'JanKenPonData.rateTeam' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#55-66) is not in CapWords
Function 'JanKenPon.rand_pId' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#668-684) is not in mixedCase
Variable 'JanKenPon.round_Id' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#93-95) is not in mixedCase
Variable 'JanKenPon.rand_nonce' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#95) is not in mixedCase
Constant 'JanKenPon.conmaxTime' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#96-98) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'JanKenPon.intervelTime' (/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol#98-104) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/39/0xf90f2117ec74cb1fff718165aae3d900a6343933.sol analyzed (4 contracts), 60 result(s) found