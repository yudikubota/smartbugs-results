INFO:Slither:Compilation warnings/errors on /unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:13:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SocialNetwork(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:4:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SocialNetwork{
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:56:16: Warning: This declaration shadows an existing declaration.
	function post(string post, address userAddress, string password) returns (string status){
	              ^---------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:56:2: The shadowed declaration is here:
	function post(string post, address userAddress, string password) returns (string status){
 ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:25:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		bytes32 hashedPword = sha256(password);
		                      ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:25:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		bytes32 hashedPword = sha256(password);
		                      ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:33:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if(userSecurity[msg.sender] == sha256(password)){
		                               ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:33:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if(userSecurity[msg.sender] == sha256(password)){
		                               ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:46:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	if(userSecurity[msg.sender] == sha256(password)){
	                               ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:46:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
	if(userSecurity[msg.sender] == sha256(password)){
	                               ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:57:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if(loginState[userAddress] == true && userSecurity[userAddress] == sha256(password) ){
		                                                                   ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:57:70: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if(loginState[userAddress] == true && userSecurity[userAddress] == sha256(password) ){
		                                                                   ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:70:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if(loginState[userAddress] == true && userSecurity[userAddress] == sha256(password) ){
		                                                                   ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:70:70: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if(loginState[userAddress] == true && userSecurity[userAddress] == sha256(password) ){
		                                                                   ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:83:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if(loginState[userAddress] == true && userSecurity[userAddress] == sha256(password) ){
		                                                                   ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:83:70: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if(loginState[userAddress] == true && userSecurity[userAddress] == sha256(password) ){
		                                                                   ^--------------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function SocialNetwork(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:23:2: Warning: No visibility specified. Defaulting to "public". 
	function register(string name, string password){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:31:2: Warning: No visibility specified. Defaulting to "public". 
	function login(string password) returns (bool){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:44:2: Warning: No visibility specified. Defaulting to "public". 
	function logout(string password) returns (bool){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:56:2: Warning: No visibility specified. Defaulting to "public". 
	function post(string post, address userAddress, string password) returns (string status){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:69:2: Warning: No visibility specified. Defaulting to "public". 
	function deposit(address userAddress, string password) returns (string status){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:72:29: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
			balances[userAddress] += msg.value;
			                         ^-------^
/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol:82:2: Warning: No visibility specified. Defaulting to "public". 
	function withdraw(uint256 amount, address userAddress, string password) returns (string status){
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
SocialNetwork.withdraw (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#82-106) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.send(amount) (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#92-98)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
SocialNetwork.post.post (local variable @ /unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#56) shadows:
	- SocialNetwork.post (function @ /unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#56-69)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
SocialNetwork.register (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#23-31) should be declared external
SocialNetwork.login (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#31-44) should be declared external
SocialNetwork.logout (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#44-56) should be declared external
SocialNetwork.post (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#56-69) should be declared external
SocialNetwork.deposit (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#69-82) should be declared external
SocialNetwork.withdraw (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#82-106) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'SocialNetwork.SocialNetwork' (/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol#13-23) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/23/0x4b19f307dda1be6bc17c999bc29e24633155c990.sol analyzed (1 contracts), 9 result(s) found