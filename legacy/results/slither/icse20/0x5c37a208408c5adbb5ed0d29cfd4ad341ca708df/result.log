INFO:Slither:Compilation warnings/errors on /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:83:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:99:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(isFinalized) throw;
                    ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:100:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.sender != ethOwner) throw; // locks finalize to the ultimate ETH owner
                               ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:102:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(block.number <= icoEndBlock) throw;
                                    ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:106:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!ethOwner.send(this.balance)) throw;  // send the eth to Nertia Owner
                                     ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:111:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(isFinalized) throw;
                    ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:112:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(block.number <= icoEndBlock) throw;
                                    ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:113:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.sender == token.getOwner() ) throw;
                                        ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:116:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(userBalance == 0) throw;
                         ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:119:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(userEthers == 0) throw;    
                        ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:123:66: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!token.transferFrom(msg.sender,kairosOwner, userBalance)) throw;
                                                                 ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:130:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:136:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(isFinalized && msg.value <= 0) throw;
                                      ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:138:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(block.number < icoStartBlock) throw;
                                     ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:139:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(block.number > icoEndBlock) throw;
                                   ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:154:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:106:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if(!ethOwner.send(this.balance)) throw;  // send the eth to Nertia Owner
                      ^----------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:126:7: Warning: Invoking events without "emit" prefix is deprecated.
      Refund(msg.sender, userEthers);
      ^----------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:129:7: Warning: Invoking events without "emit" prefix is deprecated.
[91m      RefundError(msg.sender, userEthers);[0m
      ^---------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:48:3: Warning: No visibility specified. Defaulting to "public". 
  function getExchangeRate() returns (uint256 exchangeRate);
  ^--------------------------------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:49:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance);
  ^--------------------------------------------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:50:3: Warning: No visibility specified. Defaulting to "public". 
  function getOwner() returns (address owner);
  ^------------------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:51:3: Warning: No visibility specified. Defaulting to "public". 
  function getDecimals() returns (uint256 decimals);
  ^------------------------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:52:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
  ^---------------------------------------------------------------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:83:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:110:3: Warning: No visibility specified. Defaulting to "public". 
  function refund(){
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:135:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:4:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:10:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:17:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:22:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:28:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:32:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:36:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:40:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:160:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _val.div(100).mul(getPercentage());            
           ^-----------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:160:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _val.div(100).mul(getPercentage());            
           ^--------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:165:21: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint duration = now.sub(icoStartTime);
                    ^-------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:178:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _val.div(100).mul(level2Bonus(_val));
           ^-----------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:178:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _val.div(100).mul(level2Bonus(_val));
           ^----------------------------------^
/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:182:3: Warning: Function state mutability can be restricted to pure
  function level2Bonus(uint256 tokens) private constant returns(uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in Crowdsale.refund (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#113-139):
	External calls:
	- userBalance = token.balanceOf(msg.sender) (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#118-119)
	- ! token.transferFrom(msg.sender,kairosOwner,userBalance) (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#126-128)
	External calls sending eth:
	- msg.sender.send(userEthers) (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#128-139)
	State variables written after the call(s):
	- etherBlance (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#135-136)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Crowdsale.refund (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#113-139) uses a dangerous strict equality:
	- userBalance == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.fallback (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#139-160):
	External calls:
	- transfer = token.transferFrom(token.getOwner(),msg.sender,tokens) (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#154-159)
	State variables written after the call(s):
	- totalSupply (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#159-160)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#84-98):
	External calls:
	- decimals = token.getDecimals() (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#87-89)
	State variables written after the call(s):
	- ethOwner (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#92-93)
	- exchangeRate (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#89)
	- icoEndBlock (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#91-92)
	- icoMinCap (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#97-98)
	- icoStartBlock (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#90-91)
	- icoStartTime (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#90)
	- isFinalized (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#89-90)
	- kairosOwner (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#93-97)
Reentrancy in Crowdsale.refund (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#113-139):
	External calls:
	- userBalance = token.balanceOf(msg.sender) (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#118-119)
	State variables written after the call(s):
	- etherBlance (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#125-126)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#112:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#118:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#121:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#138-139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#144:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#146:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#160:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
KairosToken.getExchangeRate (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#48-49) should be declared external
KairosToken.balanceOf (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#49-51) should be declared external
KairosToken.getOwner (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#51) should be declared external
KairosToken.getDecimals (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#51-52) should be declared external
KairosToken.transferFrom (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#52-59) should be declared external
Crowdsale.refund (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#113-139) should be declared external
Crowdsale.fallback (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#139-160) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol:
	- pragma solidity^0.4.11 (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Crowdsale.Crowdsale' (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#84-98) is not in mixedCase
Parameter '_val' of Crowdsale.calcBonus (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#164) is not in mixedCase
Parameter '_val' of Crowdsale.calcLevel2Bonus (/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol#182) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/17/0x5c37a208408c5adbb5ed0d29cfd4ad341ca708df.sol analyzed (3 contracts), 31 result(s) found