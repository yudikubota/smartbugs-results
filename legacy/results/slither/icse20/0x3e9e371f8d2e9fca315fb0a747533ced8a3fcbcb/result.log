INFO:Slither:Compilation warnings/errors on /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:62:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BixcPro(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:78:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:79:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:80:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:81:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:90:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:98:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:99:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:100:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:101:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:102:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:111:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:112:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:84:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:106:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:115:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function BixcPro(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) isRunning returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) isRunning returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:97:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) isRunning returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) isRunning returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerShipTransfer(address newOwner) isOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function stop() isOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:127:5: Warning: No visibility specified. Defaulting to "public". 
    function start() isOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:132:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:
	Contract BixcPro has payable functions:
	 - fallback (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#136-137)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#94-96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BixcPro.transfer (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#77-89) should be declared external
BixcPro.approve (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#90-97) should be declared external
BixcPro.transferFrom (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#97-111) should be declared external
BixcPro.burn (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#111-123) should be declared external
BixcPro.ownerShipTransfer (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#123-128) should be declared external
BixcPro.stop (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#131-134) should be declared external
BixcPro.start (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#135-136) should be declared external
BixcPro.fallback (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#136-137) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BixcPro.BixcPro' (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#64-77) is not in mixedCase
Parameter '_to' of BixcPro.transfer (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#78) is not in mixedCase
Parameter '_value' of BixcPro.transfer (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#78) is not in mixedCase
Parameter '_spender' of BixcPro.approve (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#90-91) is not in mixedCase
Parameter '_value' of BixcPro.approve (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#91) is not in mixedCase
Parameter '_from' of BixcPro.transferFrom (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#98) is not in mixedCase
Parameter '_to' of BixcPro.transferFrom (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#98) is not in mixedCase
Parameter '_value' of BixcPro.transferFrom (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#98) is not in mixedCase
Parameter '_value' of BixcPro.burn (/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol#111) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x3e9e371f8d2e9fca315fb0a747533ced8a3fcbcb.sol analyzed (2 contracts), 33 result(s) found