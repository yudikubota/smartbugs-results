INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:65:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:81:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:87:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:114:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:119:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:302:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:312:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:316:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:322:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:329:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:340:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:359:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:366:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:374:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:393:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:399:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:443:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:444:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:452:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:453:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:461:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:462:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:500:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:521:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:569:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:586:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:601:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:613:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:625:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:629:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:686:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:761:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function EthTranchePricing(uint[] _tranches) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:764:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:777:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:785:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:790:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:870:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw; // No money on this contract
    ^---^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:4:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract PricingStrategy {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:64:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:402:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:435:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:442:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:442:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:531:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:543:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:553:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:573:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:628:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:15:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:53:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:58:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:81:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:92:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:158:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:174:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:175:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:176:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:302:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:339:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:516:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:529:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:540:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:551:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:566:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:581:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:671:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:710:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:761:3: Warning: No visibility specified. Defaulting to "public". 
  function EthTranchePricing(uint[] _tranches) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:827:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address _crowdsale) public constant returns(bool) {
                  ^----------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:856:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals) public constant returns (uint) {
                                                      ^-------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:869:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:7:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:15:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:64:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:146:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:676:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:862:14: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      return value.times(multiplier) / preicoAddresses[msgSender];
             ^---------------------^
/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:866:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return value.times(multiplier) / price;
           ^---------------------^

INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:
	Contract EthTranchePricing has payable functions:
	 - fallback (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#516-530):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#527-529)
	State variables written after the call(s):
	- finalized (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#529-530)
Reentrancy in Crowdsale.investInternal (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#361-415):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#369-383)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#383-387)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#404-407)
	- weiRaised (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#402)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMathLib.assert (function @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#65-76) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#311-350):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#328-332)
	State variables written after the call(s):
	- endsAt (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#345-346)
	- minimumFundingGoal (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#349-350)
	- multisigWallet (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#332-333)
	- startsAt (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#338-339)
Reentrancy in Crowdsale.investInternal (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#361-415):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#369-383)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#383-387)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#393-398)
	- investorCount (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#392)
	- tokenAmountOf (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#399-401)
Reentrancy in Crowdsale.preallocate (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#430-449):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#432-435)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#441-443)
	- tokenAmountOf (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#443-444)
	- tokensSold (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#441)
	- weiRaised (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#439-441)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#670-700) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#685-700)
	- block.timestamp < startsAt (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#684-700)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#216-218)
ERC20.totalSupply should be constant (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#174)
FractionalERC20.decimals should be constant (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#200)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#75-76:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#124-125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#334-336:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#337:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#344:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#347:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#353:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#371-372:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#383:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#388:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#410:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#412-413:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#454:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#456-457:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#462:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#467:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#475:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#478:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#520:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#540:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#593:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#608:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#623-624:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#634-635:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#649:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#654-655:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#706:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#796:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#805:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#811:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#815:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
PricingStrategy.isPricingStrategy (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#7-11) should be declared external
PricingStrategy.isSane (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#15-20) should be declared external
EthTranchePricing.isSane (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#849-856) should be declared external
EthTranchePricing.calculatePrice (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#30-36) should be declared external
SafeMathLib.times (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#47-53) should be declared external
SafeMathLib.minus (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#54-59) should be declared external
SafeMathLib.plus (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#59-65) should be declared external
Ownable.transferOwnership (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#94-105) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#151-153) should be declared external
FinalizeAgent.isSane (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#160-167) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#171) should be declared external
ERC20.balanceOf (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#174-175) should be declared external
ERC20.allowance (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#175-176) should be declared external
ERC20.transfer (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#176-177) should be declared external
ERC20.transferFrom (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#177-178) should be declared external
ERC20.approve (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#178-183) should be declared external
Crowdsale.fallback (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#350-353) should be declared external
Crowdsale.preallocate (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#430-449) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#485-494) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#494-498) should be declared external
Crowdsale.buy (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#504-508) should be declared external
Crowdsale.finalize (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#516-530) should be declared external
Crowdsale.setFinalizeAgent (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#535-541) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#543-551) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#557-563) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#569-579) should be declared external
Crowdsale.setEndsAt (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#591-594) should be declared external
Crowdsale.setMultisig (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#620-624) should be declared external
Crowdsale.loadRefund (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#632-635) should be declared external
Crowdsale.refund (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#642-656) should be declared external
Crowdsale.isFinalizerSane (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#661-662) should be declared external
Crowdsale.isPricingSane (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#663-665) should be declared external
Crowdsale.setOwnerTestValue (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#702-703) should be declared external
Crowdsale.isCrowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#704) should be declared external
EthTranchePricing.setPreicoAddress (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#824-828) should be declared external
EthTranchePricing.getTranche (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#831-835) should be declared external
EthTranchePricing.getPricingStartsAt (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#839-843) should be declared external
EthTranchePricing.getPricingEndsAt (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#843-849) should be declared external
EthTranchePricing.fallback (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#86-89) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#311-350) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#311-312) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#313-316) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#316-319) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#319) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#319-321) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#321-322) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#558-559) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#599-600) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#216-218) is not in mixedCase
Function 'EthTranchePricing.EthTranchePricing' (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#789-815) is not in mixedCase
Parameter '_tranches' of EthTranchePricing.EthTranchePricing (/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol#789-790) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/30/0x9bc42587af0fe34032d8068f51bd6bd7d7e4d718.sol analyzed (9 contracts), 96 result(s) found