INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:48:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:171:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Swap(address _tokenAddress) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:224:8: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
       function Data() public {
       ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:66:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:83:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return sha256(sha256(prefix, bytes1(bytes(payload).length), payload));
                      ^----------------------------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:83:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return sha256(sha256(prefix, bytes1(bytes(payload).length), payload));
               ^------------------------------------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:83:16: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        return sha256(sha256(prefix, bytes1(bytes(payload).length), payload));
               ^------------------------------------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:102:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 		return ripemd160(sha256(startingByte, _xPoint, _yPoint));
 		                 ^------------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:102:11: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 		return ripemd160(sha256(startingByte, _xPoint, _yPoint));
 		       ^-----------------------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:102:11: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
 		return ripemd160(sha256(startingByte, _xPoint, _yPoint));
 		       ^-----------------------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:112:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 		return ripemd160(sha256(_startingByte, _x));
 		                 ^-----------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:112:11: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 		return ripemd160(sha256(_startingByte, _x));
 		       ^----------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:112:11: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
 		return ripemd160(sha256(_startingByte, _x));
 		       ^----------------------------------^
/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:116:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 		return address(keccak256(_xPoint, _yPoint) ); 
 		               ^-------------------------^

INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:
	Contract Swap has payable functions:
	 - fallback (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#177-208):
	External calls:
	- dataContract.CftBalanceOf(btcAddr0x) == 0 || claimed[btcAddr0x] (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#185-190)
	- require(bool)(dataContract.CftBalanceOf(btcAddr0x) != 0) (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#190)
	- tokenAmount = dataContract.CftBalanceOf(btcAddr0x) * 10 ** 10 / 2 (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#200-204)
	State variables written after the call(s):
	- claimed (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#204)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#177-208) does not use the value returned by external calls:
	-tokenContract.transfer(_ethAddrReceiver,tokenAmount) (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#205-208)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#64-72) should be declared external
tokenInterface.balanceOf (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#72-73) should be declared external
tokenInterface.transfer (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#75-78) should be declared external
Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#177-208) should be declared external
Swap.withdrawTokens (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#208-212) should be declared external
Swap.setTokenContract (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#212-223) should be declared external
Swap.setDataContract (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#223-226) should be declared external
Swap.fallback (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol:
	- pragma solidity^0.4.20 (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#49-53) is not in mixedCase
Contract 'tokenInterface' (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#72-78) is not in CapWords
Parameter '_xPoint' of Library.btcAddrPubKeyUncompr (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#101-102) is not in mixedCase
Parameter '_yPoint' of Library.btcAddrPubKeyUncompr (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#102) is not in mixedCase
Parameter '_x' of Library.btcAddrPubKeyCompr (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#107) is not in mixedCase
Parameter '_y' of Library.btcAddrPubKeyCompr (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#107) is not in mixedCase
Parameter '_xPoint' of Library.ethAddressPublicKey (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#116-117) is not in mixedCase
Parameter '_yPoint' of Library.ethAddressPublicKey (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#118-119) is not in mixedCase
Function 'Swap.Swap' (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#175-176) is not in mixedCase
Parameter '_tokenAddress' of Swap.Swap (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#175) is not in mixedCase
Parameter '_ethAddrReceiver' of Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#178) is not in mixedCase
Parameter '_x' of Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#178) is not in mixedCase
Parameter '_y' of Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#178) is not in mixedCase
Parameter '_v' of Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#178) is not in mixedCase
Parameter '_r' of Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#178) is not in mixedCase
Parameter '_s' of Swap.claim (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#178) is not in mixedCase
Parameter '_tokenContract' of Swap.setTokenContract (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#213-214) is not in mixedCase
Parameter '_tokenContract' of Swap.setDataContract (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol#223-224) is not in mixedCase
Function 'Data.Data' (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol) is not in mixedCase
Variable 'Data.CftBalanceOf' (/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/11/0x0e786d42fd70e4a51ab5f80aa5da19e74337e7f2.sol analyzed (6 contracts), 32 result(s) found