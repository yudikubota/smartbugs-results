INFO:Slither:Compilation warnings/errors on /unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:150:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BaseToken( uint256 _initialSupply, uint8 _decimalUnits, string _name, string _symbol, address _owner ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:205:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:206:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough
                                            ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:207:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:247:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:248:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw; // Check if the sender has enough
                                       ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:249:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:250:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw; // Check allowance
                                                   ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:365:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TheStudioToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:466:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:467:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough
                                            ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:468:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:469:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ( accountFreeze[ msg.sender ]  ) throw;
                                            ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:481:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:482:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw; // Check if the sender has enough
                                       ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:483:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:484:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw; // Check allowance
                                                   ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:485:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ( accountFreeze[ _from ]  ) throw;
                                       ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:532:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough
                                            ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:533:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ( (totalSupply - _value) <  ( initialSupply / 2 ) ) throw;
                                                               ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:541:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw; // Check if the sender has enough
                                       ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:542:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw; // Check allowance
                                                   ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:543:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       if ( (totalSupply - _value) <  ( initialSupply / 2 )) throw;
                                                             ^---^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:101:44: Warning: This declaration shadows an existing declaration.
   function totalSupply() constant returns(uint totalSupply);
                                           ^--------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:101:4: The shadowed declaration is here:
   function totalSupply() constant returns(uint totalSupply);
   ^--------------------------------------------------------^

/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:85:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProjectCall ( _address , value  );
        ^-------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:212:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:221:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval( msg.sender ,_spender, _value);
        ^-------------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:256:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
[91m/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:322:5: Error: Event with same name and arguments defined twice.[0m
    event Approval(address indexed owner, address indexed spender, uint value);
    ^-------------------------------------------------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:355:5: Other declaration is here:
    event Approval(address indexed owner, address indexed spender, uint value);
    ^-------------------------------------------------------------------------^

[91m/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:321:5: Error: Event with same name and arguments defined twice.[0m
    event Transfer(address indexed from, address indexed to, uint256 value);
    ^----------------------------------------------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:354:5: Other declaration is here:
    event Transfer(address indexed from, address indexed to, uint256 value);
    ^----------------------------------------------------------------------^

/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:451:9: Warning: Invoking events without "emit" prefix is deprecated.
        newMediaTokenCreated ( _name , _mediaToken , _symbol );
        ^----------------------------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:473:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:490:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:497:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval( msg.sender ,_spender, _value);
        ^-------------------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:536:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:546:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:560:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds ( _account , true );
        ^-----------------------------^
/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol:568:10: Warning: Invoking events without "emit" prefix is deprecated.
         FrozenFunds ( _account , false );
         ^------------------------------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/22/0xe31f159cdc3370aec8ef5fbf3b7fce23766155f5.sol analyzed (0 contracts), 0 result(s) found