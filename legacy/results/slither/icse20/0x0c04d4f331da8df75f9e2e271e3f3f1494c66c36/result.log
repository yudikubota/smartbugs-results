INFO:Slither:Compilation warnings/errors on /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:96:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:101:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:115:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:132:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ProsperaToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:153:141: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
                                                                                                                                            ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:160:80: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if ((_recipients.length == 0) || (_recipients.length != _values.length)) throw;
                                                                               ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:163:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!transfer(_recipients[i], _values[i])) throw;
                                                   ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:174:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != minterContract) throw;
                                          ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:185:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[_account] + _amount < balances[_account]) throw;
                                                               ^---^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:210:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Minter (uint256 _lastMintingAmount, address _ownerContract) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:58:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:70:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:148:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:153:42: Warning: "sha3" has been deprecated in favour of "keccak256"
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
                                         ^----------------------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:187:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_account, _amount);
        ^---------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:18:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:24:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:31:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner returns (address _owner) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:132:5: Warning: No visibility specified. Defaulting to "public". 
    function ProsperaToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:159:5: Warning: No visibility specified. Defaulting to "public". 
    function batchTransfer(address[] _recipients, uint256[] _values) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:178:5: Warning: No visibility specified. Defaulting to "public". 
    function setMinter (address newMinter) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:183:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToAccount(address _account, uint256 _amount) onlyMinter returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function incrementTotalSupply(uint256 _incrementValue) onlyMinter returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:210:3: Warning: No visibility specified. Defaulting to "public". 
  function Minter (uint256 _lastMintingAmount, address _ownerContract) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:217:3: Warning: No visibility specified. Defaulting to "public". 
  function calculateMintAmount() returns (uint256 amount){
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:227:3: Warning: No visibility specified. Defaulting to "public". 
  function mint() allowedMinting onlyOwner returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:217:3: Warning: Function state mutability can be restricted to view
  function calculateMintAmount() returns (uint256 amount){
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Minter.mint (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol):
	External calls:
	- prosperaToken.mintToAccount(msg.sender,value) (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
	- updateMintingStatus(value) (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
	State variables written after the call(s):
	- lastMintingAmount (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Minter.updateMintingStatus (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#227-233) does not use the value returned by external calls:
	-prosperaToken.incrementTotalSupply(_mintedAmount) (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#230-233)
Minter.mint (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol) does not use the value returned by external calls:
	-prosperaToken.mintToAccount(msg.sender,value) (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Minter.mint (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol):
	External calls:
	- prosperaToken.mintToAccount(msg.sender,value) (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
	- updateMintingStatus(value) (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
	State variables written after the call(s):
	- lastMintingTime (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ProsperaToken.version should be constant (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#133)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#154-159:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#159:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#174:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#191:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#76-79) should be declared external
Token.balanceOf (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#18-20) should be declared external
StandardToken.transferFrom (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#63-75) should be declared external
Token.transferFrom (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#31-33) should be declared external
Token.approve (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#37-39) should be declared external
StandardToken.approve (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#80-85) should be declared external
StandardToken.allowance (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#85-90) should be declared external
Token.allowance (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#42-44) should be declared external
Owned.transferOwnership (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#106-114) should be declared external
ProsperaToken.fallback (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#118-122) should be declared external
ProsperaToken.approveAndCall (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#147-159) should be declared external
ProsperaToken.batchTransfer (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#160-174) should be declared external
ProsperaToken.setMinter (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#183-185) should be declared external
ProsperaToken.mintToAccount (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#185-197) should be declared external
ProsperaToken.incrementTotalSupply (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#199-204) should be declared external
Minter.mint (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:
	- pragma solidity^0.4.11 (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in ProsperaToken.approveAndCall (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#147-159):
	-! _spender.call(bytes4(bytes32(sha3()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData) /unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#154-159
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#76-77) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#50-51) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#51) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#63-64) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#64) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#64) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#80) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#80-81) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#86) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#86-87) is not in mixedCase
Function 'Owned.Owned' (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#101-105) is not in mixedCase
Function 'ProsperaToken.ProsperaToken' (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#136-146) is not in mixedCase
Parameter '_initialAmount' of ProsperaToken.ProsperaToken (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#138) is not in mixedCase
Parameter '_tokenName' of ProsperaToken.ProsperaToken (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#138) is not in mixedCase
Parameter '_decimalUnits' of ProsperaToken.ProsperaToken (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#138) is not in mixedCase
Parameter '_tokenSymbol' of ProsperaToken.ProsperaToken (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#139) is not in mixedCase
Parameter '_spender' of ProsperaToken.approveAndCall (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#148) is not in mixedCase
Parameter '_value' of ProsperaToken.approveAndCall (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#148-150) is not in mixedCase
Parameter '_extraData' of ProsperaToken.approveAndCall (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#150) is not in mixedCase
Parameter '_recipients' of ProsperaToken.batchTransfer (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#162) is not in mixedCase
Parameter '_values' of ProsperaToken.batchTransfer (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#162) is not in mixedCase
Parameter '_account' of ProsperaToken.mintToAccount (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#186) is not in mixedCase
Parameter '_amount' of ProsperaToken.mintToAccount (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#186) is not in mixedCase
Parameter '_incrementValue' of ProsperaToken.incrementTotalSupply (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#199-200) is not in mixedCase
Function 'Minter.Minter' (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#214-221) is not in mixedCase
Parameter '_lastMintingAmount' of Minter.Minter (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#216) is not in mixedCase
Parameter '_ownerContract' of Minter.Minter (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#217) is not in mixedCase
Parameter '_mintedAmount' of Minter.updateMintingStatus (/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#227-228) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/9/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol analyzed (5 contracts), 59 result(s) found