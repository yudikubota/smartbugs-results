INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:77:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:96:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:152:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:174:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:241:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:245:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:255:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:261:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function AdsharesToken (address _owner1, address _owner2, address _withdrawAddress, uint _crowdsaleStartBlock)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:75:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:109:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:160:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:177:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:273:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance.sub(unlockedBalance);
               ^----------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:400:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            unlockedBalance += this.balance.sub(msg.value).div(tradeSpreadInvert);
                               ^----------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:406:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogBuy(msg.sender, boughtTokens, purchaseValue, totalSupply);
        ^----------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:444:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        assert(saleValue <= this.balance);
                            ^----------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:449:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSell(msg.sender, _tokenCount, saleValue, totalSupply);
        ^------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:477:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogWithdraw(_value);
        ^-----------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:490:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogCrowdsaleEnd(false);
        ^--------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:499:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogCrowdsaleEnd(true);
        ^-------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:500:34: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        withdrawAddress.transfer(this.balance);
                                 ^----------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:11:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value);
  ^----------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:106:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:117:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:128:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:129:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value);
  ^----------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:130:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value);
  ^--------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:151:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:168:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:186:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:261:5: Warning: No visibility specified. Defaulting to "public". 
    function AdsharesToken (address _owner1, address _owner2, address _withdrawAddress, uint _crowdsaleStartBlock)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:280:5: Warning: No visibility specified. Defaulting to "public". 
    function getBuyPrice(uint _bidValue) constant returns (uint tokenCount, uint purchaseValue) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:326:5: Warning: No visibility specified. Defaulting to "public". 
    function getSellPrice(uint _askSizeTokens) constant returns (uint saleValue) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:354:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable fundingActive
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:25:3: Warning: Function state mutability can be restricted to pure
  function div(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:43:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:47:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:51:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:55:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:62:3: Warning: Function state mutability can be restricted to pure
  function sqrt(uint num) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:75:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:273:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return this.balance.sub(unlockedBalance);
               ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:290:38: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            uint maxFlatTokenCount = _bidValue.div(tokenPriceMin);
                                     ^--------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:292:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            if(totalSupply.add(maxFlatTokenCount) <= tokenCreationMin) {
               ^--------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:293:44: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                return (maxFlatTokenCount, maxFlatTokenCount.mul(tokenPriceMin));
                                           ^----------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:295:30: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            flatTokenCount = tokenCreationMin.sub(totalSupply);
                             ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:296:44: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            linearBidValue = _bidValue.sub(flatTokenCount.mul(tokenPriceMin));
                                           ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:296:30: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            linearBidValue = _bidValue.sub(flatTokenCount.mul(tokenPriceMin));
                             ^----------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:305:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint currentPrice = tokenPriceMin.mul(startSupply).div(tokenCreationMin);
                            ^----------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:305:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint currentPrice = tokenPriceMin.mul(startSupply).div(tokenCreationMin);
                            ^--------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:306:22: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint delta = (2 * startSupply).mul(2 * startSupply).add(linearBidValue.mul(4 * 1 * 2 * startSupply).div(currentPrice));
                     ^------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:306:65: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint delta = (2 * startSupply).mul(2 * startSupply).add(linearBidValue.mul(4 * 1 * 2 * startSupply).div(currentPrice));
                                                                ^-----------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:306:65: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint delta = (2 * startSupply).mul(2 * startSupply).add(linearBidValue.mul(4 * 1 * 2 * startSupply).div(currentPrice));
                                                                ^-----------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:306:22: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint delta = (2 * startSupply).mul(2 * startSupply).add(linearBidValue.mul(4 * 1 * 2 * startSupply).div(currentPrice));
                     ^-------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:308:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearTokenCount = delta.sqrt().sub(2 * startSupply).div(2);
                                ^----------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:308:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearTokenCount = delta.sqrt().sub(2 * startSupply).div(2);
                                ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:308:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearTokenCount = delta.sqrt().sub(2 * startSupply).div(2);
                                ^--------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:309:48: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                                               ^-------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:309:48: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                                               ^-----------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:309:31: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                              ^-----------------------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:309:31: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                              ^------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:313:43: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                                          ^-------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:313:43: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                                          ^-----------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:313:26: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                         ^-----------------------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:313:26: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        linearAvgPrice = currentPrice.add((startSupply+linearTokenCount+1).mul(tokenPriceMin).div(tokenCreationMin)).div(2);
                         ^------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:315:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        purchaseValue = linearTokenCount.mul(linearAvgPrice).add(flatTokenCount.mul(tokenPriceMin));
                        ^----------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:315:66: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        purchaseValue = linearTokenCount.mul(linearAvgPrice).add(flatTokenCount.mul(tokenPriceMin));
                                                                 ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:315:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        purchaseValue = linearTokenCount.mul(linearAvgPrice).add(flatTokenCount.mul(tokenPriceMin));
                        ^-------------------------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:334:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        if(totalSupply.sub(_askSizeTokens) < tokenCreationMin) {
           ^-----------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:335:49: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            flatTokenCount = tokenCreationMin - totalSupply.sub(_askSizeTokens);
                                                ^-----------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:339:30: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            linearTokenMin = totalSupply.sub(_askSizeTokens);
                             ^-----------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:343:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint minPrice = (linearTokenMin).mul(tokenPriceMin).div(tokenCreationMin);
                        ^---------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:343:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint minPrice = (linearTokenMin).mul(tokenPriceMin).div(tokenCreationMin);
                        ^-------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:344:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint maxPrice = (totalSupply+1).mul(tokenPriceMin).div(tokenCreationMin);
                        ^--------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:344:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint maxPrice = (totalSupply+1).mul(tokenPriceMin).div(tokenCreationMin);
                        ^------------------------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:346:35: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearAveragePrice = minPrice.add(maxPrice).div(2);
                                  ^--------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:346:35: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint linearAveragePrice = minPrice.add(maxPrice).div(2);
                                  ^---------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:347:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return linearAveragePrice.mul(linearTokenCount).add(flatTokenCount.mul(tokenPriceMin));
               ^--------------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:347:61: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return linearAveragePrice.mul(linearTokenCount).add(flatTokenCount.mul(tokenPriceMin));
                                                            ^-------------------------------^
/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:347:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return linearAveragePrice.mul(linearTokenCount).add(flatTokenCount.mul(tokenPriceMin));
               ^-----------------------------------------------------------------------------^

INFO:Detectors:[93m
ERC20Basic (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#8-16) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#11-12)
BasicToken (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#89-127) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#107-114)
ERC20 (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#129-138) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#131-132)
	-approve (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#134-137)
StandardToken (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#146-202) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#154-165)
	-approve (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#171-183)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
AdsharesToken.declareCrowdsaleEnd (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#497-504) uses a dangerous strict equality:
	- assert(bool)(crowdsaleEndDeclarationTime == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#77-84) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
AdsharesToken.unlockFunds (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#469-483) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(block.timestamp >= fundingUnlockTime) (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#471-472)
AdsharesToken.declareCrowdsaleEnd (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#497-504) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(crowdsaleEndDeclarationTime == 0) (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#499-500)
AdsharesToken.confirmCrowdsaleEnd (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#506-512) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(crowdsaleEndDeclarationTime > 0 && block.timestamp > crowdsaleEndDeclarationTime + crowdsaleEndLockTime) (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#506-509)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#181:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#251:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#257-258:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#265:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#10-11) should be declared external
BasicToken.balanceOf (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#124-127) should be declared external
ERC20Basic.transfer (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#11-12) should be declared external
BasicToken.transfer (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#107-114) should be declared external
ERC20.allowance (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#129-131) should be declared external
StandardToken.allowance (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#195-202) should be declared external
ERC20.transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#131-132) should be declared external
StandardToken.transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#154-165) should be declared external
StandardToken.approve (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#171-183) should be declared external
ERC20.approve (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#134-137) should be declared external
AdsharesToken.fallback (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#366-369) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol:
	- pragma solidity^0.4.11 (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#124-125) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#107-108) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#108) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#195-198) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#198) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#154) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#154) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#154) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#171-172) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#172) is not in mixedCase
Function 'AdsharesToken.AdsharesToken' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#266-277) is not in mixedCase
Parameter '_owner1' of AdsharesToken.AdsharesToken (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#270) is not in mixedCase
Parameter '_owner2' of AdsharesToken.AdsharesToken (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#270) is not in mixedCase
Parameter '_withdrawAddress' of AdsharesToken.AdsharesToken (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#270-272) is not in mixedCase
Parameter '_crowdsaleStartBlock' of AdsharesToken.AdsharesToken (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#272) is not in mixedCase
Parameter '_bidValue' of AdsharesToken.getBuyPrice (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#286-287) is not in mixedCase
Parameter '_askSizeTokens' of AdsharesToken.getSellPrice (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#335) is not in mixedCase
Parameter '_maxPrice' of AdsharesToken.buyLimit (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#381) is not in mixedCase
Parameter '_tokenCount' of AdsharesToken.sell (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#427-429) is not in mixedCase
Parameter '_tokenCount' of AdsharesToken.sellLimit (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#436) is not in mixedCase
Parameter '_minPrice' of AdsharesToken.sellLimit (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#436) is not in mixedCase
Parameter '_value' of AdsharesToken.withdrawFunds (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#484-485) is not in mixedCase
Constant 'AdsharesToken.tokenCreationMin' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#210-211) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'AdsharesToken.tokenPriceMin' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#211-212) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'AdsharesToken.tradeSpreadInvert' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#212-214) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'AdsharesToken.crowdsaleEndLockTime' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#214-216) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'AdsharesToken.fundingUnlockPeriod' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#216-218) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'AdsharesToken.fundingUnlockFractionInvert' (/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol#218) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x422866a8f0b032c5cf1dfbdef31a20f4509562b0.sol analyzed (6 contracts), 55 result(s) found