INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:208:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:247:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:252:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:257:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:378:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:388:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:392:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:398:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:405:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:416:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:436:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:443:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:477:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:494:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:515:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:532:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:536:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:553:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:568:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:580:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:592:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:596:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:664:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:734:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:774:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:775:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:783:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:784:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:792:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track participants for thank you email
                          ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:793:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:960:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1065:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1072:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1090:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:32:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMathLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:480:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:540:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:595:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:649:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:766:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:773:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:773:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:835:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:847:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:923:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:968:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:986:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1051:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1059:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:34:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:40:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:45:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:74:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:83:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:129:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:151:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:152:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:163:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:164:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:165:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:208:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:226:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:378:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:415:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:510:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:529:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:548:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:638:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:647:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:688:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:734:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:825:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:833:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:844:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:920:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:932:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:959:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:977:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:996:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1090:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1097:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1097:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1097:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1097:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:66:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:74:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:83:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:117:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:34:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:40:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:45:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:654:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:879:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:885:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:892:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:897:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol:1013:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#509-523):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#522)
	State variables written after the call(s):
	- finalized (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#522-523)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#439-500):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#448-460)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#461-467)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#477-479)
	- weiRaised (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#476-477)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#439-500):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#448-460)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#461-467)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#479-486)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#480-486)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#392-426):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#409)
	State variables written after the call(s):
	- endsAt (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#423)
	- minimumFundingGoal (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#426)
	- multisigWallet (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#411-413)
	- startsAt (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#421-422)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#439-500):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#448-460)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#461-467)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#472-474)
	- investorCount (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#471)
	- tokenAmountOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#474-476)
Reentrancy in Crowdsale.preallocate (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#772-789):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#774-775)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#782)
	- tokenAmountOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#783)
	- tokensSold (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#780-782)
	- weiRaised (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#780)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#634-663) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#648-662)
	- block.timestamp < startsAt (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#647-662)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#302-304)
FractionalERC20.decimals should be constant (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#182)
MintableToken.mintingFinished should be constant (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1063-1064)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#262:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#266:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#267:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#415:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#420:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#423:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#425:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#430:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#449:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#459:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#497:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#514:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#537-539:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#555-557:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#558:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#575:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#590:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#600:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#614:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#621:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#684:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#793:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#794-795:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#806:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#809-810:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#818:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#824-825:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1106:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#34-40) should be declared external
SafeMathLib.minus (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#40-45) should be declared external
SafeMathLib.plus (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#45-54) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#67-72) should be declared external
PricingStrategy.isSane (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#75-80) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#84-88) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#98-102) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#121-123) should be declared external
FinalizeAgent.isSane (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#129-134) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#134-136) should be declared external
ERC20Basic.balanceOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#153-159) should be declared external
BasicToken.balanceOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#962-963) should be declared external
ERC20Basic.transfer (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#159-160) should be declared external
BasicToken.transfer (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#950-957) should be declared external
ERC20.allowance (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#165-166) should be declared external
StandardToken.allowance (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1037-1042) should be declared external
StandardToken.transferFrom (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#981-993) should be declared external
ERC20.transferFrom (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#166-171) should be declared external
StandardToken.approve (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#997-1025) should be declared external
ERC20.approve (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#171-173) should be declared external
Ownable.transferOwnership (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#238-241) should be declared external
CrowdsaleBase.fallback (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#430) should be declared external
Crowdsale.fallback (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#853-855) should be declared external
CrowdsaleBase.finalize (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#509-523) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#529-539) should be declared external
CrowdsaleBase.setEndsAt (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#551-560) should be declared external
CrowdsaleBase.setMultisig (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#585-591) should be declared external
CrowdsaleBase.loadRefund (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#596-602) should be declared external
CrowdsaleBase.refund (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#609-621) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#627-629) should be declared external
CrowdsaleBase.isPricingSane (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#630-631) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#665-674) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#678-681) should be declared external
CrowdsaleBase.isCrowdsale (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#681-682) should be declared external
Crowdsale.preallocate (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#772-789) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#833-839) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#841-844) should be declared external
Crowdsale.buy (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#847-853) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#861-863) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#879-886) should be declared external
StandardTokenExt.isToken (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1049-1050) should be declared external
MintableToken.mint (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1087-1090) should be declared external
MintableToken.setMintAgent (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1095-1097) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#223) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#392-426) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#395-396) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#397-398) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#399-401) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#401-403) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#403) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#403-404) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#564-565) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#302-304) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#748-754) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#879) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#962) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#954) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#954) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1037-1038) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1038) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#981) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#981-982) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#982) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1004-1005) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol#1005) is not in mixedCase
Function 'MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale' (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale (/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/4/0x4f40cbd1fde9214b3bcbdc0359d132e6458f5e20.sol analyzed (16 contracts), 104 result(s) found