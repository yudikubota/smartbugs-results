INFO:Slither:Compilation warnings/errors on /unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:20:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:496:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function VestedPayment(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:631:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LifMarketValidationMechanism(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:983:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LifCrowdsale(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:40:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:78:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:86:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:151:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:206:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:222:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:245:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:257:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:369:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:370:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0x0, _to, _amount);
    ^-------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:380:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:439:5: Warning: Invoking events without "emit" prefix is deprecated.
    Burn(burner, _value);
    ^------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:443:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(burner, address(0), _value);
    ^----------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:757:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      return this.balance;
             ^----------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:791:5: Warning: Invoking events without "emit" prefix is deprecated.
    SentTokens(msg.sender, price, tokens, totalWei);
    ^---------------------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:824:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClaimedWei(weiAmount);
    ^-------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:836:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:847:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause(pausedSeconds);
    ^--------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:1078:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenPurchase(msg.sender, beneficiary, weiAmount, tokens);
    ^-------------------------------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:1106:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenPresalePurchase(beneficiary, weiSent, rate);
    ^----------------------------------------------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:1122:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      foundationWallet.transfer(this.balance);
                                ^----------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:1128:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      uint256 mmFundBalance = this.balance.sub(foundationBalanceCapWei);
                              ^----------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:1256:5: Warning: Invoking events without "emit" prefix is deprecated.
    Finalized();
    ^---------^
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:20:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:242:3: Warning: No visibility specified. Defaulting to "public". 
  function increaseApproval (address _spender, uint _addedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:249:3: Warning: No visibility specified. Defaulting to "public". 
  function decreaseApproval (address _spender, uint _subtractedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:290:3: Warning: No visibility specified. Defaulting to "public". 
  function approveData(address _spender, uint256 _value, bytes _data) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:496:3: Warning: No visibility specified. Defaulting to "public". 
  function VestedPayment(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:631:3: Warning: No visibility specified. Defaulting to "public". 
  function LifMarketValidationMechanism(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:983:3: Warning: No visibility specified. Defaulting to "public". 
  function LifCrowdsale(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:1048:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:94:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:100:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:107:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:112:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
LifCrowdsale.forwardFunds (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1145-1173) sends eth to arbitrary user
	Dangerous calls:
	- foundationWallet.transfer(this.balance) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1157)
	- foundationWallet.transfer(foundationBalanceCapWei) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1164)
	- MVM.fund.value(mmFundBalance)() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1171)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in LifMarketValidationMechanism.claimWei (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#843-856):
	External calls:
	- claimable = getMaxClaimableWeiAmount() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#845-852)
	External calls sending eth:
	- foundationAddr.transfer(weiAmount) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#853-855)
	State variables written after the call(s):
	- totalWeiClaimed (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#855-856)
Reentrancy in LifCrowdsale.finalize (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol):
	External calls:
	- forwardFunds() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
	- token.finishMinting() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
	- token.unpause() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
	- token.transferOwnership(owner) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
	External calls sending eth:
	- forwardFunds() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
	State variables written after the call(s):
	- isFinalized (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Reentrancy in LifMarketValidationMechanism.fund (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#674-677):
	External calls:
	- originalTotalSupply = lifToken.totalSupply() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#674-675)
	State variables written after the call(s):
	- funded (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#677)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
VestedPayment.claimTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#559-563) does not use the value returned by external calls:
	-token.transfer(owner,amount) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#562-563)
LifMarketValidationMechanism.sendTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#804-820) does not use the value returned by external calls:
	-lifToken.transferFrom(msg.sender,address(this),tokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#810-811)
LifCrowdsale.buyTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1090-1115) does not use the value returned by external calls:
	-token.mint(beneficiary,tokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1111)
LifCrowdsale.addPrivatePresaleTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1122-1138) does not use the value returned by external calls:
	-token.mint(beneficiary,tokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1137-1138)
LifCrowdsale.mintExtraTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1183-1235) does not use the value returned by external calls:
	-token.mint(foundersVestedPayment,foundersTokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1210-1212)
	-token.mint(foundationVestedPayment,foundationTokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1224-1226)
	-token.mint(foundationWallet,teamTokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1234-1235)
LifCrowdsale.finalize (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol) does not use the value returned by external calls:
	-token.finishMinting() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1018-1053):
	External calls:
	- token.pause() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1038)
	State variables written after the call(s):
	- end1Timestamp (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1039-1041)
	- end2Timestamp (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1042-1046)
	- foundationWallet (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1049-1053)
	- foundersWallet (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1053)
	- rate1 (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1046)
	- rate2 (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1046)
	- setWeiLockSeconds (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1046-1049)
	- startTimestamp (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1039)
Reentrancy in LifMarketValidationMechanism.fund (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#674-677):
	External calls:
	- originalTotalSupply = lifToken.totalSupply() (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#674-675)
	State variables written after the call(s):
	- initialBuyPrice (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#675-677)
	- initialWei (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#675)
Reentrancy in LifCrowdsale.mintExtraTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1183-1235):
	External calls:
	- foundersTokens = token.totalSupply().mul(128).div(1000) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1192-1193)
	- foundationTokens = token.totalSupply().mul(50).div(1000) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1193-1194)
	- teamTokens = token.totalSupply().mul(72).div(1000) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1194-1201)
	State variables written after the call(s):
	- foundersVestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1204-1210)
Reentrancy in LifCrowdsale.mintExtraTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1183-1235):
	External calls:
	- foundersTokens = token.totalSupply().mul(128).div(1000) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1192-1193)
	- foundationTokens = token.totalSupply().mul(50).div(1000) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1193-1194)
	- teamTokens = token.totalSupply().mul(72).div(1000) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1194-1201)
	- token.mint(foundersVestedPayment,foundersTokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1210-1212)
	- foundersVestedPayment.transferOwnership(foundersWallet) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1212-1213)
	State variables written after the call(s):
	- foundationVestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1218-1223)
Reentrancy in LifMarketValidationMechanism.sendTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#804-820):
	External calls:
	- lifToken.transferFrom(msg.sender,address(this),tokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#810-811)
	- lifToken.burn(tokens) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#811-813)
	State variables written after the call(s):
	- totalBurnedTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#813-814)
	- totalReimbursedWei (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#816-818)
Reentrancy in SmartToken.transferData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#321-325):
	External calls:
	- require(bool)(_to.call(_data)) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#324)
	State variables written after the call(s):
	- balances (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#324-325)
Reentrancy in SmartToken.transferDataFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#343-348):
	External calls:
	- require(bool)(_to.call(_data)) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#345)
	State variables written after the call(s):
	- allowed (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#345-348)
	- balances (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#345-348)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
VestedPayment.VestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#510-533) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_startTimestamp >= block.timestamp) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#518-519)
VestedPayment.getAvailableTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#537-557) uses timestamp for comparisons
	Dangerous comparisons:
	- period >= totalPeriods (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#549-557)
	- period < cliffDuration (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#542-557)
LifMarketValidationMechanism.LifMarketValidationMechanism (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#650-669) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_startTimestamp > block.timestamp) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#657-658)
LifMarketValidationMechanism.getCurrentPeriodIndex (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#732-741) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(block.timestamp >= startTimestamp) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#736-739)
LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1018-1053) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_startTimestamp > block.timestamp) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1024-1026)
LifCrowdsale.setWeiPerUSDinTGE (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1058-1065) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(block.timestamp < startTimestamp.sub(setWeiLockSeconds)) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1062-1064)
LifCrowdsale.getRate (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1072-1082) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= end2Timestamp (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1078-1082)
	- block.timestamp <= end1Timestamp (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1075-1082)
	- block.timestamp < startTimestamp (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1073-1082)
LifCrowdsale.addPrivatePresaleTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1122-1138) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < startTimestamp) (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1128-1130)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
LifCrowdsale.MVM24PeriodsCapUSD should be constant (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#930-932)
LifCrowdsale.maxFoundationCapUSD should be constant (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#924-925)
LifCrowdsale.minCapUSD should be constant (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#917-918)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#38-48) should be declared external
Pausable.pause (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#78-83) should be declared external
Pausable.unpause (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#86-91) should be declared external
BasicToken.balanceOf (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#168-171) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#127-128) should be declared external
ERC20.allowance (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#172-174) should be declared external
StandardToken.allowance (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#238-241) should be declared external
StandardToken.increaseApproval (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#245-255) should be declared external
StandardToken.decreaseApproval (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#255-269) should be declared external
MintableToken.mint (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#377-391) should be declared external
MintableToken.finishMinting (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#394-399) should be declared external
LifToken.burn (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#446-458) should be declared external
VestedPayment.claimTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#559-563) should be declared external
LifMarketValidationMechanism.fund (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#674-677) should be declared external
LifMarketValidationMechanism.calculateDistributionPeriods (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#682-727) should be declared external
LifMarketValidationMechanism.sendTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#804-820) should be declared external
LifMarketValidationMechanism.claimWei (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#843-856) should be declared external
LifMarketValidationMechanism.pause (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#859-861) should be declared external
LifMarketValidationMechanism.unpause (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#863-866) should be declared external
LifCrowdsale.setWeiPerUSDinTGE (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1058-1065) should be declared external
LifCrowdsale.fallback (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1083) should be declared external
LifCrowdsale.addPrivatePresaleTokens (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1122-1138) should be declared external
LifCrowdsale.claimEth (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol) should be declared external
LifCrowdsale.finalize (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol:
	- pragma solidity^0.4.15 (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in SmartToken.approveData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#301-306):
	-require(bool)(_spender.call(_data)) /unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#305
Low level call in SmartToken.transferData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#321-325):
	-require(bool)(_to.call(_data)) /unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#324
Low level call in SmartToken.transferDataFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#343-348):
	-require(bool)(_to.call(_data)) /unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#345
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#20-26) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#168) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#148-149) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#149) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#238) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#238) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#200) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#200) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#200) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#227) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#227) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#249) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#249) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#255) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#255-256) is not in mixedCase
Parameter '_spender' of SmartToken.approveData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#302) is not in mixedCase
Parameter '_value' of SmartToken.approveData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#302) is not in mixedCase
Parameter '_data' of SmartToken.approveData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#302) is not in mixedCase
Parameter '_to' of SmartToken.transferData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#321) is not in mixedCase
Parameter '_value' of SmartToken.transferData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#321-323) is not in mixedCase
Parameter '_data' of SmartToken.transferData (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#323) is not in mixedCase
Parameter '_from' of SmartToken.transferDataFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#344) is not in mixedCase
Parameter '_to' of SmartToken.transferDataFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#344) is not in mixedCase
Parameter '_value' of SmartToken.transferDataFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#344) is not in mixedCase
Parameter '_data' of SmartToken.transferDataFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#344) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#378) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#378) is not in mixedCase
Parameter '_to' of LifToken.transfer (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#413-416) is not in mixedCase
Parameter '_value' of LifToken.transfer (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#416) is not in mixedCase
Parameter '_from' of LifToken.transferFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#421) is not in mixedCase
Parameter '_to' of LifToken.transferFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#421) is not in mixedCase
Parameter '_value' of LifToken.transferFrom (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#421-424) is not in mixedCase
Parameter '_spender' of LifToken.approve (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#417) is not in mixedCase
Parameter '_value' of LifToken.approve (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#417-418) is not in mixedCase
Parameter '_value' of LifToken.burn (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#446-450) is not in mixedCase
Function 'VestedPayment.VestedPayment' (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#510-533) is not in mixedCase
Parameter '_startTimestamp' of VestedPayment.VestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#511) is not in mixedCase
Parameter '_secondsPerPeriod' of VestedPayment.VestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#511-512) is not in mixedCase
Parameter '_totalPeriods' of VestedPayment.VestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#513) is not in mixedCase
Parameter '_cliffDuration' of VestedPayment.VestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#513-517) is not in mixedCase
Parameter '_tokens' of VestedPayment.VestedPayment (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#517) is not in mixedCase
Function 'LifMarketValidationMechanism.LifMarketValidationMechanism' (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#650-669) is not in mixedCase
Parameter '_startTimestamp' of LifMarketValidationMechanism.LifMarketValidationMechanism (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#651-652) is not in mixedCase
Parameter '_secondsPerPeriod' of LifMarketValidationMechanism.LifMarketValidationMechanism (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#653) is not in mixedCase
Parameter '_totalPeriods' of LifMarketValidationMechanism.LifMarketValidationMechanism (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#653-654) is not in mixedCase
Parameter '_foundationAddr' of LifMarketValidationMechanism.LifMarketValidationMechanism (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#654-656) is not in mixedCase
Function 'LifCrowdsale.LifCrowdsale' (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1018-1053) is not in mixedCase
Parameter '_startTimestamp' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1018-1020) is not in mixedCase
Parameter '_end1Timestamp' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1020) is not in mixedCase
Parameter '_end2Timestamp' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1020-1021) is not in mixedCase
Parameter '_rate1' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1022) is not in mixedCase
Parameter '_rate2' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1022) is not in mixedCase
Parameter '_setWeiLockSeconds' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1022-1023) is not in mixedCase
Parameter '_foundationWallet' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1023-1024) is not in mixedCase
Parameter '_foundersWallet' of LifCrowdsale.LifCrowdsale (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1024) is not in mixedCase
Parameter '_weiPerUSD' of LifCrowdsale.setWeiPerUSDinTGE (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#1059) is not in mixedCase
Variable 'LifCrowdsale.MVM24PeriodsCapUSD' (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#930-932) is not in mixedCase
Variable 'LifCrowdsale.MVM' (/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol#968-969) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x14dbde02e1caac6c1b8b543577ebf0af6a7a5c7f.sol analyzed (13 contracts), 112 result(s) found