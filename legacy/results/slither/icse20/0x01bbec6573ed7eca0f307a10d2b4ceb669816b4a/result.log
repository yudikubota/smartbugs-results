INFO:Slither:Compilation warnings/errors on /unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:34:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:93:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TEFoodsToken () public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:125:5: Warning: Use of the "var" keyword is deprecated.
    var v = vestingMap[vestingPeriod];
    ^---^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:156:5: Warning: Use of the "var" keyword is deprecated.
    var v = vestingMap[vestingPeriod];
    ^---^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:267:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TEFoodsCrowdsale () public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:45:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:131:7: Warning: Invoking events without "emit" prefix is deprecated.
      VestedTokensReleased(v[i].addr, v[i].balance);
      ^-------------------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:173:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, to, tokens);
    ^------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:180:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, spender, tokens);
    ^-----------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(from, to, tokens);
    ^------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:287:5: Warning: Invoking events without "emit" prefix is deprecated.
    PresaleAllocation(recipient, amountInUsdCents, tokenAmount.add(bonusAmount));
    ^--------------------------------------------------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:297:5: Warning: Invoking events without "emit" prefix is deprecated.
    MarketingAllocation(recipient, tokenAmount);
    ^-----------------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:349:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    teFoodsAddress.transfer(this.balance);
                            ^----------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:395:5: Warning: Invoking events without "emit" prefix is deprecated.
    CrowdsaleClosed(amountRaisedInUsdCents);
    ^-------------------------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:408:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensTransferrable();
    ^-------------------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:384:9: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    if (msg.value > 0 && amountRaisedInUsdCents >= amountToRaiseInUsdCents) {
        ^-------^
/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:387:38: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
      uint tokenAmount = _applyBonus(msg.value.sub(excessEth).mul(ethRateInUsdCents).div(tokenRateInUsdCents));
                                     ^-------^

INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:
	Contract TEFoods827Token has payable functions:
	 - fallback (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#151)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in TEFoodsCrowdsale.allocateMarketingTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#293-306):
	External calls:
	- require(bool)(tokenContract.allocateTokens(recipient,tokenAmount)) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#302-303)
	State variables written after the call(s):
	- marketingAllocated (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#303-304)
Reentrancy in TEFoodsCrowdsale.allocatePresaleTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#275-293):
	External calls:
	- require(bool)(tokenContract.allocateTokens(recipient,tokenAmount)) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#284)
	- require(bool)(tokenContract.allocateVestedTokens(recipient,bonusAmount,vestingPeriodInSeconds)) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#285-286)
	- require(bool)(tokenContract.allocateTokens(recipient,tokenAmount.add(bonusAmount))) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#287-288)
	State variables written after the call(s):
	- presaleAllocated (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#292)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in TEFoodsCrowdsale.allocatePresaleTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#275-293):
	External calls:
	- require(bool)(tokenContract.allocateTokens(recipient,tokenAmount)) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#284)
	- require(bool)(tokenContract.allocateVestedTokens(recipient,bonusAmount,vestingPeriodInSeconds)) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#285-286)
	- require(bool)(tokenContract.allocateTokens(recipient,tokenAmount.add(bonusAmount))) (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#287-288)
	State variables written after the call(s):
	- amountRaisedInUsdCents (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#290)
	- tokensAllocated (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#290-292)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#43-51) should be declared external
ERC20Interface.totalSupply (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#51-52) should be declared external
TEFoodsToken.totalSupply (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#151-155) should be declared external
ERC20Interface.balanceOf (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#52-53) should be declared external
TEFoodsToken.balanceOf (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#155-157) should be declared external
ERC20Interface.allowance (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#53-54) should be declared external
TEFoodsToken.allowance (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#167-170) should be declared external
TEFoods827Token.approve (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#205-211) should be declared external
ERC827.approve (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#64-65) should be declared external
TEFoods827Token.transfer (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#211-220) should be declared external
ERC827.transfer (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#65-66) should be declared external
TEFoods827Token.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#220-227) should be declared external
ERC827.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#66-73) should be declared external
TEFoodsToken.allocateTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#101-110) should be declared external
TEFoodsToken.allocateVestedTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#110-122) should be declared external
TEFoodsToken.releaseVestedTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#123-137) should be declared external
TEFoodsToken.enableTransfers (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#137-148) should be declared external
TEFoodsToken.fallback (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#151) should be declared external
TEFoodsToken.vestedBalanceOf (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#157-167) should be declared external
TEFoodsCrowdsale.allocatePresaleTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#275-293) should be declared external
TEFoodsCrowdsale.allocateMarketingTokens (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#293-306) should be declared external
TEFoodsCrowdsale.whitelistUsers (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#306-315) should be declared external
TEFoodsCrowdsale.revokeUsers (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#315-328) should be declared external
TEFoodsCrowdsale.setMaxGasPrice (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#328-332) should be declared external
TEFoodsCrowdsale.checkWhitelisted (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#332-334) should be declared external
TEFoodsCrowdsale.isOpen (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#334-338) should be declared external
TEFoodsCrowdsale.getRemainingEthAvailable (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#338-346) should be declared external
TEFoodsCrowdsale.fallback (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#365-386) should be declared external
TEFoodsCrowdsale.enableTokenTransfers (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#405-411) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol:
	- pragma solidity^0.4.19 (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in TEFoods827Token.approve (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#205-211):
	-require(bool)(_spender.call(_data)) /unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#207-211
Low level call in TEFoods827Token.transfer (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#211-220):
	-require(bool)(_to.call(_data)) /unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#213-214
Low level call in TEFoods827Token.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#220-227):
	-require(bool)(_to.call(_data)) /unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#226-227
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#35-39) is not in mixedCase
Struct 'TEFoodsToken.vestedBalance' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#89-93) is not in CapWords
Function 'TEFoodsToken.TEFoodsToken' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#95-100) is not in mixedCase
Constant 'TEFoodsToken._totalSupply' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#79-81) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'TEFoodsToken._vestedSupply' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#82-83) is not in mixedCase
Variable 'TEFoodsToken._circulatingSupply' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#83) is not in mixedCase
Parameter '_spender' of TEFoods827Token.approve (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#205) is not in mixedCase
Parameter '_value' of TEFoods827Token.approve (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#205) is not in mixedCase
Parameter '_data' of TEFoods827Token.approve (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#205) is not in mixedCase
Parameter '_to' of TEFoods827Token.transfer (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#211) is not in mixedCase
Parameter '_value' of TEFoods827Token.transfer (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#211) is not in mixedCase
Parameter '_data' of TEFoods827Token.transfer (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#211) is not in mixedCase
Parameter '_from' of TEFoods827Token.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#220-222) is not in mixedCase
Parameter '_to' of TEFoods827Token.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#222) is not in mixedCase
Parameter '_value' of TEFoods827Token.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#222-224) is not in mixedCase
Parameter '_data' of TEFoods827Token.transferFrom (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#224) is not in mixedCase
Function 'TEFoodsCrowdsale.TEFoodsCrowdsale' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#273-275) is not in mixedCase
Function 'TEFoodsCrowdsale._applyBonus' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#346-352) is not in mixedCase
Function 'TEFoodsCrowdsale._allocateTokens' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#352-365) is not in mixedCase
Constant 'TEFoodsCrowdsale.crowdsaleStartTime' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#230) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.crowdsaleUncappedTime' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#230-231) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.crowdsaleClosedTime' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#231-233) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.contributionCapInWei' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#234-235) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.teFoodsAddress' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#235-238) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.tokenRateInUsdCents' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#238) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.ethRateInUsdCents' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#238-239) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.amountToRaiseInUsdCents' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#239-242) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.minContributionInUsdCents' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#242-243) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.totalTokenSupply' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#252-255) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TEFoodsCrowdsale.marketingTokenAllocation' (/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol#256-259) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x01bbec6573ed7eca0f307a10d2b4ceb669816b4a.sol analyzed (7 contracts), 67 result(s) found