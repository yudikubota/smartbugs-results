INFO:Slither:Compilation warnings/errors on /unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:26:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MMaker() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:81:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance/10);
                       ^----------^
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:82:41: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        players[winningNumber].transfer(this.balance);
                                        ^----------^
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:88:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint8 inter =  uint8(uint256(keccak256(block.timestamp))%number);
                                     ^------------------------^
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:88:38: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        uint8 inter =  uint8(uint256(keccak256(block.timestamp))%number);
                                     ^------------------------^
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:90:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return uint8(uint256(keccak256(players[inter]))%number);
                             ^-----------------------^
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:90:30: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        return uint8(uint256(keccak256(players[inter]))%number);
                             ^-----------------------^
/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:87:5: Warning: Function state mutability can be restricted to view
    function randomtest() internal returns(uint8){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
MMaker.distributeFunds (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#81-88) sends eth to arbitrary user
	Dangerous calls:
	- owner.transfer(this.balance / 10) (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#82-87)
	- players[winningNumber].transfer(this.balance) (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#87-88)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#15-20) should be declared external
MMaker.enroll (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#40-50) should be declared external
MMaker.setMaxNumber (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#50-54) should be declared external
MMaker.setMinAmount (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#54-58) should be declared external
MMaker.lastPlayer (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#58-64) should be declared external
MMaker.determineWinner (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#65-72) should be declared external
MMaker.startOver (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#72-81) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol:
	- pragma solidity^0.4.21 (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#3-20) is not in CapWords
Function 'MMaker.MMaker' (/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol#26-31) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/45/0x5192014a024886f6cb3f1ae7af0bd4779c2e29fa.sol analyzed (2 contracts), 11 result(s) found