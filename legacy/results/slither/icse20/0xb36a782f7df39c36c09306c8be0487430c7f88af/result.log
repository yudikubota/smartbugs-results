INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:946:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1065:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1068:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1086:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (prefix.length != n_random_bytes) throw;
                                         ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1144:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1988:195: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1996:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(gamePaused == true) throw;
                               ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2004:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(payoutsPaused == true) throw;
                                  ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2012:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2020:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if (msg.sender != owner) throw;
                                  ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2028:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if (msg.sender != treasury) throw;
                                     ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2093:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Etheroll() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2156:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(maxPendingPayouts >= contractBalance) throw;
                                                 ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2173:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (playerAddress[myid]==0x0) throw;
                                      ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2176:9: Warning: Use of the "var" keyword is deprecated.
        var sl_result = result.toSlice();
        ^-----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2395:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(newMaxProfitAsPercent > 900000) throw;
                                           ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2415:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!sendTo.send(amount)) throw;
                                 ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2445:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!sendTo.send(originalPlayerBetValue)) throw;
                                                 ^---^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:228:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:989:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:989:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1021:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1024:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1039:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1101:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1101:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1101:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1101:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1101:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1119:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1119:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2158:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogBet(playerBetId[rngId], playerAd ... layerNumbers[rngId], randomQueryID);          
        ^-------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2214:14: Warning: Invoking events without "emit" prefix is deprecated.
             LogResult(serialNumberOfResult, pla ... playerTempBetValue[myid], 3, proof);            
             ^-------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2222:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogResult(serialNumberOfResult, pla ... playerTempBetValue[myid], 4, proof);              
                ^-------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2261:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogResult(serialNumberOfResult, pla ... , playerTempReward[myid], 1, proof);                            
            ^-------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2272:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogResult(serialNumberOfResult, pla ... , playerTempReward[myid], 2, proof);                   
                ^-------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2289:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogResult(serialNumberOfResult, pla ... playerTempBetValue[myid], 0, proof);                                
            ^-------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2416:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerTransfer(sendTo, amount); 
        ^------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2427:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if(!owner.send(this.balance)) revert();
                       ^----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2428:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        LogOwnerTransfer(owner, this.balance); 
                                ^----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2428:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerTransfer(owner, this.balance); 
        ^-----------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2447:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRefund(originalPlayerBetId, sendTo, originalPlayerBetValue);        
        ^------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2482:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(owner);
        ^------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:326:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:362:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:365:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:365:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:365:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:365:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2093:5: Warning: No visibility specified. Defaulting to "public". 
    function Etheroll() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:2352:5: Warning: No visibility specified. Defaulting to "public". 
    function ()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:90:5: Warning: Function state mutability can be restricted to pure
    function init(buffer memory buf, uint _capacity) internal constant {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:109:5: Warning: Function state mutability can be restricted to pure
    function max(uint a, uint b) private constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:227:5: Warning: Function state mutability can be restricted to pure
    function shl8(uint8 x, uint8 y) private constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:365:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:776:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:796:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:814:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:841:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:876:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:894:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:941:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1083:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix, uint n_random_bytes) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1139:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:1233:5: Warning: Function state mutability can be restricted to pure
    function safeMemoryCleaner() internal constant {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Buffer.init (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#91-104) is declared view but contains assembly code
Buffer.append (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#124-166) is declared view but contains assembly code
Buffer.append (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#175-192) is declared view but contains assembly code
Buffer.appendInt (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#197-222) is declared view but contains assembly code
usingOraclize.getCodeSize (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#790-796) is declared view but contains assembly code
usingOraclize.safeMemoryCleaner (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1258-1260) is declared view but contains assembly code
strings.memcpy (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1326-1342) is declared view but contains assembly code
strings.toSlice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1351-1355) is declared view but contains assembly code
strings.toSliceB32 (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1392-1401) is declared view but contains assembly code
strings.toString (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1421-1430) is declared view but contains assembly code
strings.len (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1436-1456) is declared view but contains assembly code
strings.compare (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1479-1515) is declared view but contains assembly code
strings.nextRune (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1536-1572) is declared view but contains assembly code
strings.ord (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1594-1628) is declared view but contains assembly code
strings.keccak (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1632-1636) is declared view but contains assembly code
strings.startsWith (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1649-1666) is declared view but contains assembly code
strings.beyond (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1676-1696) is declared view but contains assembly code
strings.endsWith (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1704-1720) is declared view but contains assembly code
strings.until (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1727-1745) is declared view but contains assembly code
strings.findPtr (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1749-1787) is declared view but contains assembly code
strings.rfindPtr (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1791-1822) is declared view but contains assembly code
strings.concat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1975-1988) is declared view but contains assembly code
strings.join (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2003-2038) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Etheroll.Etheroll (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2141-2153):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2145-2146)
	- oraclize_setCustomGasPrice(10000000000) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2152)
	State variables written after the call(s):
	- OAR (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2152)
	- oraclize (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2152)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#321-328):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#326-328)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#327-328)
	State variables written after the call(s):
	- oraclize (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#327-328)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ret in strings.len (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1361) is a local variable never initialiazed
buf in usingOraclize.ba2cbor (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#953) is a local variable never initialiazed
buf in usingOraclize.stra2cbor (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#945) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
CBOR.encodeType (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#235-254) does not use the value returned by external calls:
	-buf.appendInt(value,1) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#241-242)
	-buf.appendInt(value,2) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#244-245)
	-buf.appendInt(value,4) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#249)
	-buf.appendInt(value,8) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#253)
CBOR.encodeBytes (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#271-276) does not use the value returned by external calls:
	-buf.append(value) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#275)
CBOR.encodeString (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#276-283) does not use the value returned by external calls:
	-buf.append(bytes(value)) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#280-281)
Etheroll.__callback (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2214-2390) does not use the value returned by external calls:
	-sl_result.beyond([.toSlice()).until(].toSlice()) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2222)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
strings.memcpy.len (local variable @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1326) shadows:
	- strings.len (function @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1359-1383)
	- strings.len (function @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1436-1456)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Etheroll.Etheroll (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2141-2153):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2145-2146)
	State variables written after the call(s):
	- gasForOraclize (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2151-2152)
	- houseEdge (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2147)
	- maxProfit (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2148-2149)
	- maxProfitAsPercentOfHouse (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2148-2149)
	- minBet (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2150-2151)
Reentrancy in Etheroll.Etheroll (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2141-2153):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2145-2146)
	- oraclize_setCustomGasPrice(10000000000) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2152)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2152)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#961-1021):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#974-977)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#984-985)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#984-985)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#984-985)
	- oraclize_randomDS_args (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1016-1020)
Reentrancy in Etheroll.playerRollDice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2154-2214):
	External calls:
	- rngId = oraclize_query(nested,queryString1_2_3,gasForOraclize) (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2181-2183)
	State variables written after the call(s):
	- maxPendingPayouts (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2203)
	- playerAddress (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2192)
	- playerBetId (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2184-2186)
	- playerBetValue (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2189-2191)
	- playerNumbers (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2187-2188)
	- playerProfit (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2195-2197)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Buffer.init uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#91-104)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#98-104
Buffer.append uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#124-166)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#134-149
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#152-155
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#157-166
Buffer.append uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#175-192)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#179-192
Buffer.appendInt uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#197-222)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#206-221
usingOraclize.getCodeSize uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#790-796)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#794-796
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#961-1021)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#977-981
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#982
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#985-1018
usingOraclize.verifySig uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1028-1049)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1040-1042
usingOraclize.copyBytes uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1167-1189)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1183-1185
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1193-1220)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1210-1220
usingOraclize.ecrecovery uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1223-1258)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1239-1255
usingOraclize.safeMemoryCleaner uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1258-1260)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1258-1260
strings.memcpy uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1326-1342)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1330-1332
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1336-1342
strings.toSlice uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1351-1355)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1352-1355
strings.toSliceB32 uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1392-1401)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1397-1400
strings.toString uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1421-1430)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1425
strings.len uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1436-1456)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1445-1446
strings.compare uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1479-1515)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1489-1495
strings.nextRune uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1536-1572)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1550-1553
strings.ord uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1594-1628)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1599-1603
strings.keccak uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1632-1636)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1634-1636
strings.startsWith uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1649-1666)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1654-1666
strings.beyond uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1676-1696)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1682-1691
strings.endsWith uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1704-1720)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1713-1719
strings.until uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1727-1745)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1734-1743
strings.findPtr uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1749-1787)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1759-1760
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1763-1765
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1769-1770
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1773-1775
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1779-1784
strings.rfindPtr uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1791-1822)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1800-1801
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1802-1804
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1807-1808
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1814-1815
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1818-1819
strings.concat uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1975-1988)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1985-1987
strings.join uses assembly (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2003-2038)
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2020-2025
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#37)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:
	- Version used: ['>=0.4.1<0.5', '^0.4.14', '^0.4.18']
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1 declares pragma solidity^0.4.18
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#33 declares pragma solidity>=0.4.1<0.5
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1322 declares pragma solidity^0.4.14
	- /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2038 declares pragma solidity^0.4.18
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#968:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1016-1020:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1043-1049:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1048-1049:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1119:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1139-1147:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1173:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1095:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1097:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2221:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2207:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2457:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2482:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2068:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2071:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2074:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2080:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2081:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2083:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#37-38) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#38-39) should be declared external
OraclizeI.query2 (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#39-40) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#40-41) should be declared external
OraclizeI.queryN (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#41-42) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#42-43) should be declared external
OraclizeI.getPrice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#43-44) should be declared external
OraclizeI.getPrice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#44-46) should be declared external
OraclizeI.useCoupon (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#46) should be declared external
OraclizeI.setProofType (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#47-48) should be declared external
OraclizeI.setConfig (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#48) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#49) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#49-53) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#56-59) should be declared external
usingOraclize.__callback (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#372-376) should be declared external
Etheroll.playerRollDice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2154-2214) should be declared external
Etheroll.playerWithdrawPendingTransactions (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2392-2412) should be declared external
Etheroll.playerGetPendingTxByAddress (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2413-2419) should be declared external
Etheroll.fallback (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2425-2433) should be declared external
Etheroll.ownerSetCallbackGasPrice (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2434) should be declared external
Etheroll.ownerSetOraclizeSafeGas (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2435-2437) should be declared external
Etheroll.ownerUpdateContractBalance (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2439-2442) should be declared external
Etheroll.ownerTransferEther (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2468-2486) should be declared external
Etheroll.ownerTransferAllEther (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Etheroll.ownerRefundPlayer (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Etheroll.ownerPauseGame (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Etheroll.ownerPausePayouts (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Etheroll.ownerSetTreasury (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Etheroll.ownerChangeOwner (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Etheroll.ownerkill (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol:
	- pragma solidity^0.4.18 (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1): it allows old versions
	- pragma solidity>=0.4.1<0.5 (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#33): it allows old versions
	- pragma solidity^0.4.14 (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1322): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2038): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Etheroll.playerWithdrawPendingTransactions (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2392-2412):
	-msg.sender.call.value(withdrawAmount)() /unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2401-2412
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#38-39) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#40-41) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#42-43) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#49-53) is not in mixedCase
Struct 'Buffer.buffer' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#90-91) is not in CapWords
Parameter '_capacity' of Buffer.init (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#92) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#299-1260) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#332-372) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#372-376) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#376-377) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#377-380) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#380-382) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#382-385) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#385-390) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#390-395) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#395-400) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#400-405) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#405-410) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#410-415) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#415-420) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#420-426) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#426-432) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#432-437) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#438-444) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#444-451) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#451-455) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#455-460) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#460-467) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#468-473) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#473-478) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#478-484) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#484-491) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#491-498) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#498-504) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#504-511) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#511-520) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#520-528) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#528-535) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#535-543) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#543-552) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#552-561) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#561-569) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#569-578) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#578-588) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#588-594) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#594-600) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#600-605) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#605-613) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#613-620) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#620-625) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#625-631) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#631-637) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#637-643) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#643-649) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#649-655) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#655-662) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#662-669) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#669-674) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#674-681) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#681-692) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#692-698) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#699-706) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#706-714) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#714-723) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#723-732) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#732-740) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#741-749) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#750-760) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#760-771) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#772-777) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#777-781) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#781-785) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#785-787) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#787-790) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#797) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#819) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#819) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#837-838) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#838-841) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#858) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#858) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#858) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#858) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#858) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#883) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#883-884) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#884) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#884) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#888) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#888) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#888) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#894) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#894) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#899-900) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#905) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#905) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#958-959) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#958-959) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#959-961) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#961-1021) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#963) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#963) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#963-964) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1021-1024) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1049-1084) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1098-1106) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1099) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1099) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1099-1100) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1107) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1110-1166) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1112) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1193-1220) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#300) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#301) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#301-302) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#302-303) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#303-304) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#305-306) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#306) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#308-310) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#310-312) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#312) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#312-313) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#313-315) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#315-316) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#316-318) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#319-320) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#957-958) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1024-1028) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1028) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1086-1098) is not in mixedCase
Contract 'strings' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1322-2038) is not in CapWords
Struct 'strings.slice' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#1323-1326) is not in CapWords
Function 'Etheroll.__callback' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2214-2390) is not in mixedCase
Function 'Etheroll.Etheroll' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2141-2153) is not in mixedCase
Constant 'Etheroll.maxProfitDivisor' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2083) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Etheroll.houseEdgeDivisor' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2083-2085) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Etheroll.maxNumber' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2085) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Etheroll.minNumber' (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#2085) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#300) is never used in Etheroll
usingOraclize.week (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#301) is never used in Etheroll
usingOraclize.month (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#301-302) is never used in Etheroll
usingOraclize.proofType_NONE (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#302-303) is never used in Etheroll
usingOraclize.proofType_Ledger (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#305-306) is never used in Etheroll
usingOraclize.proofType_Android (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#306) is never used in Etheroll
usingOraclize.proofType_Native (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#308-310) is never used in Etheroll
usingOraclize.networkID_mainnet (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#312-313) is never used in Etheroll
usingOraclize.networkID_testnet (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#313-315) is never used in Etheroll
usingOraclize.networkID_morden (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#315-316) is never used in Etheroll
usingOraclize.networkID_consensys (/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol#316-318) is never used in Etheroll
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/11/0xb36a782f7df39c36c09306c8be0487430c7f88af.sol analyzed (8 contracts), 262 result(s) found