INFO:Slither:Compilation warnings/errors on /unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol:
/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol:7:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol:308:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EligmaCrowdsaleContract() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol:158:45: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function calculateEthToToken(uint _eth, uint _blockNumber) constant public returns(uint) {
                                            ^---------------^
/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol:172:47: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function calculateTokenToEth(uint _token, uint _blockNumber) constant public returns(uint) {
                                              ^---------------^

INFO:Detectors:[93m
Crowdsale.checkCrowdsaleState (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#128-153) uses a dangerous strict equality:
	- tokensIssued == maxCap && crowdsaleState != state.crowdsaleEnded
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.fallback (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#115-128):
	External calls:
	- require(bool)(KycContractInterface(kycAddress).isAddressVerified(msg.sender)) (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#118-121)
	State variables written after the call(s):
	- crowdsaleState (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#121-122)
Reentrancy in Crowdsale.processTransaction (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#193-240):
	External calls:
	- MintingContractInterface(mintingContractAddress).doCrowdsaleMinting(_contributor,tokensToGive) (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#230-234)
	State variables written after the call(s):
	- contributorList (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#235)
	- tokensIssued (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#235-236)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Crowdsale.salvageTokensFromContract (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#240-246) does not use the value returned by external calls:
	-ERC20TokenInterface(_tokenAddress).transfer(_to,_amount) (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#243-246)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.fallback (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#115-128):
	External calls:
	- require(bool)(KycContractInterface(kycAddress).isAddressVerified(msg.sender)) (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#118-121)
	- processTransaction(msg.sender,msg.value) (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#125-127)
	External calls sending eth:
	- processTransaction(msg.sender,msg.value) (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#125-127)
	State variables written after the call(s):
	- contributorIndexes (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#125-127)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.startPhaseLength should be constant (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#90-92)
Crowdsale.startPhaseMaximumcontribution should be constant (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#92-95)
MintingContractInterface.crowdsaleContractAddress should be constant (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#50-51)
MintingContractInterface.tokenContractAddress should be constant (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#51-53)
MintingContractInterface.tokenTotalSupply should be constant (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#53)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Owned.transferOwnership (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#16-21) should be declared external
Owned.acceptOwnership (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#21-28) should be declared external
KycContractInterface.isAddressVerified (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#44-49) should be declared external
MintingContractInterface.doPresaleMinting (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#55-56) should be declared external
MintingContractInterface.doCrowdsaleMinting (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#56-57) should be declared external
MintingContractInterface.doTeamMinting (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#58) should be declared external
MintingContractInterface.setTokenContractAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#58-59) should be declared external
MintingContractInterface.setCrowdsaleContractAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#59-63) should be declared external
MintingContractInterface.killContract (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#63-64) should be declared external
ERC20TokenInterface.totalSupply (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#64-65) should be declared external
ERC20TokenInterface.balanceOf (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#65-66) should be declared external
ERC20TokenInterface.transfer (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#66-67) should be declared external
ERC20TokenInterface.transferFrom (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#67-68) should be declared external
ERC20TokenInterface.approve (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#68-69) should be declared external
ERC20TokenInterface.allowance (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#69-71) should be declared external
Crowdsale.fallback (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#115-128) should be declared external
Crowdsale.salvageTokensFromContract (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#240-246) should be declared external
Crowdsale.withdrawEth (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#247-250) should be declared external
Crowdsale.claimEthIfFailed (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#251-262) should be declared external
Crowdsale.batchReturnEthIfFailed (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#262-282) should be declared external
Crowdsale.withdrawRemainingBalanceForManualRecovery (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#282-293) should be declared external
Crowdsale.setMultisigAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#293-297) should be declared external
Crowdsale.setMintingContractAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#297-302) should be declared external
Crowdsale.setKycAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#302-308) should be declared external
Crowdsale.investorCount (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#308-313) should be declared external
Crowdsale.setCrowdsaleStartBlock (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#313-316) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol:
	- pragma solidity^0.4.21 (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#7-11) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#16) is not in mixedCase
Parameter '_stateChanged' of Crowdsale.refundTransaction (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#155-158) is not in mixedCase
Parameter '_eth' of Crowdsale.calculateEthToToken (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#161) is not in mixedCase
Parameter '_token' of Crowdsale.calculateTokenToEth (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#175) is not in mixedCase
Parameter '_contributor' of Crowdsale.processTransaction (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#193) is not in mixedCase
Parameter '_amount' of Crowdsale.processTransaction (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#193-194) is not in mixedCase
Parameter '_tokenAddress' of Crowdsale.salvageTokensFromContract (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#241) is not in mixedCase
Parameter '_to' of Crowdsale.salvageTokensFromContract (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#241) is not in mixedCase
Parameter '_amount' of Crowdsale.salvageTokensFromContract (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#241-243) is not in mixedCase
Parameter '_numberOfReturns' of Crowdsale.batchReturnEthIfFailed (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#263) is not in mixedCase
Parameter '_newAddress' of Crowdsale.setMultisigAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#293-294) is not in mixedCase
Parameter '_newAddress' of Crowdsale.setMintingContractAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#298-301) is not in mixedCase
Parameter '_newAddress' of Crowdsale.setKycAddress (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#303-306) is not in mixedCase
Parameter '_block' of Crowdsale.setCrowdsaleStartBlock (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#314) is not in mixedCase
Enum 'Crowdsale.state' (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol#78-80) is not in CapWords
Function 'EligmaCrowdsaleContract.EligmaCrowdsaleContract' (/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xe8ef703c0de875d5c6c882c71ff03d18598290b3.sol analyzed (7 contracts), 50 result(s) found