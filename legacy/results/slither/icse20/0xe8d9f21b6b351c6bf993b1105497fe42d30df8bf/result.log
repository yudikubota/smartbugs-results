INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol:
/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol:708:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
return bytes8(sha256(merkle(r+1,2*t)^merkle(r+1,2*t+1))<<192);
              ^---------------------------------------^
/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol:708:15: Warning: The provided argument of type bytes8 is not implicitly convertible to expected type bytes memory.
return bytes8(sha256(merkle(r+1,2*t)^merkle(r+1,2*t+1))<<192);
              ^---------------------------------------^
/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol:99:1: Warning: No visibility specified. Defaulting to "public". 
constructor() {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol:422:1: Warning: Function state mutability can be restricted to pure
function getInputBits(uint, address) public view returns(bytes8){}
^----------------------------------------------------------------^

INFO:Detectors:[93m
OpsCoinShield.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#558-591) does not use the value returned by external calls:
	-ops.transferFrom(msg.sender,address(this),amount) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#573-575)
OpsCoinShield.burn (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#627-659) does not use the value returned by external calls:
	-ops.transfer(payTo,value) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#648-650)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in OpsCoinShield.burn (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#627-659):
	External calls:
	- result = mv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#628-637)
	- C = mv.getInputBits(0,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#639-641)
	- ops.transfer(payTo,value) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#648-650)
	- Nc = mv.getInputBits(64,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#651-652)
	State variables written after the call(s):
	- currentRootIndex (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#657-658)
	- nCount (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#653)
	- ns (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#653)
	- roots (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#657-658)
Reentrancy in OpsCoinShield.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#558-591):
	External calls:
	- result = mv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#560-569)
	- ops.transferFrom(msg.sender,address(this),amount) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#573-575)
	- z = mv.getInputBits(64,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#576-578)
	State variables written after the call(s):
	- zCount (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#580-581)
	- zs (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#580-581)
Reentrancy in OpsCoinShield.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#558-591):
	External calls:
	- result = mv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#560-569)
	- ops.transferFrom(msg.sender,address(this),amount) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#573-575)
	- z = mv.getInputBits(64,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#576-578)
	- require(bool)(uint256(mv.getInputBits(0,msg.sender)) == amount) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#582-583)
	State variables written after the call(s):
	- currentRootIndex (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#589-590)
	- roots (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#589-590)
Reentrancy in OpsCoinShield.transfer (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#592-627):
	External calls:
	- result = sv.verifyTx(proofs[msg.sender].a,proofs[msg.sender].a_p,proofs[msg.sender].b,proofs[msg.sender].b_p,proofs[msg.sender].c,proofs[msg.sender].c_p,proofs[msg.sender].h,proofs[msg.sender].k,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#595-599)
	- nc = sv.getInputBits(0,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#600)
	- nd = sv.getInputBits(64,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#600-606)
	- ze = sv.getInputBits(128,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#606-608)
	- zf = sv.getInputBits(192,msg.sender) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#608-610)
	State variables written after the call(s):
	- currentRootIndex (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#626)
	- nCount (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#615)
	- nCount (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#617-622)
	- ns (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#615)
	- ns (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#617-622)
	- roots (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#626)
	- zCount (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#622)
	- zCount (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#623-624)
	- zs (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#622)
	- zs (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#623-624)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
OpsCoin.transferFromAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#341-356) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > timeLock[_from][msg.sender]) (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#351-352)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
OpsCoinShield.balance should be constant (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#455-456)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
OpsCoin.totalSupply (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#171-172) should be declared external
ERC20Interface.totalSupply (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#7-12) should be declared external
OpsCoin.balanceOf (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#143-144) should be declared external
ERC20Interface.balanceOf (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#12-17) should be declared external
ERC20Interface.allowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#17-23) should be declared external
OpsCoin.allowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#157-171) should be declared external
ERC20Interface.transfer (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#23-28) should be declared external
OpsCoin.transfer (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#243-254) should be declared external
OpsCoin.approve (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#275-277) should be declared external
ERC20Interface.approve (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#28-34) should be declared external
OpsCoin.transferFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#316-330) should be declared external
ERC20Interface.transferFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#34-41) should be declared external
OpsCoin.close (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#132-133) should be declared external
OpsCoin.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#181-192) should be declared external
OpsCoin.burnFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#223-236) should be declared external
OpsCoin.approveAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#298-305) should be declared external
OpsCoin.transferFromAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#341-356) should be declared external
OpsCoin.increaseAllowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#375-381) should be declared external
OpsCoin.decreaseAllowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#408-434) should be declared external
Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#434-443) should be declared external
Verifier.getInputBits (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#448-450) should be declared external
OpsCoinShield.close (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#541-544) should be declared external
OpsCoinShield.getMintVerifier (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#544-548) should be declared external
OpsCoinShield.getTransferVerifier (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#548-555) should be declared external
OpsCoinShield.getOpsCoin (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#555-557) should be declared external
OpsCoinShield.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#558-591) should be declared external
OpsCoinShield.transfer (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#592-627) should be declared external
OpsCoinShield.burn (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#627-659) should be declared external
OpsCoinShield.setProofParams (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#665-703) should be declared external
OpsCoinShield.getTokens (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#704-722) should be declared external
OpsCoinShield.getRoot (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#724-725) should be declared external
OpsCoinShield.computeMerkle (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#725-727) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol:
	- pragma solidity^0.4.13 (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_address' of OpsCoin.balanceOf (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#143) is not in mixedCase
Parameter '_owner' of OpsCoin.allowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#157-159) is not in mixedCase
Parameter '_spender' of OpsCoin.allowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#159) is not in mixedCase
Parameter '_to' of OpsCoin.transfer (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#244) is not in mixedCase
Parameter '_value' of OpsCoin.transfer (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#244) is not in mixedCase
Parameter '_spender' of OpsCoin.approve (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#275) is not in mixedCase
Parameter '_value' of OpsCoin.approve (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#275) is not in mixedCase
Parameter '_from' of OpsCoin.transferFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#316) is not in mixedCase
Parameter '_to' of OpsCoin.transferFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#316) is not in mixedCase
Parameter '_value' of OpsCoin.transferFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#316-317) is not in mixedCase
Parameter '_account' of OpsCoin.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#181-182) is not in mixedCase
Parameter '_amount' of OpsCoin.mint (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#182) is not in mixedCase
Parameter '_account' of OpsCoin.burn (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#202-203) is not in mixedCase
Parameter '_amount' of OpsCoin.burn (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#203) is not in mixedCase
Parameter '_account' of OpsCoin.burnFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#223) is not in mixedCase
Parameter '_amount' of OpsCoin.burnFrom (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#223-224) is not in mixedCase
Parameter '_spender' of OpsCoin.approveAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#300) is not in mixedCase
Parameter '_value' of OpsCoin.approveAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#300) is not in mixedCase
Parameter '_timeLockTill' of OpsCoin.approveAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#300-301) is not in mixedCase
Parameter '_from' of OpsCoin.transferFromAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#342) is not in mixedCase
Parameter '_to' of OpsCoin.transferFromAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#342) is not in mixedCase
Parameter '_value' of OpsCoin.transferFromAt (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#342) is not in mixedCase
Parameter '_spender' of OpsCoin.increaseAllowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#376) is not in mixedCase
Parameter '_addedValue' of OpsCoin.increaseAllowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#376) is not in mixedCase
Parameter '_spender' of OpsCoin.decreaseAllowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#411-413) is not in mixedCase
Parameter '_subtractedValue' of OpsCoin.decreaseAllowance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#413-414) is not in mixedCase
Parameter '' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#434) is not in mixedCase
Parameter '_scope_0' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#434) is not in mixedCase
Parameter '_scope_1' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#434) is not in mixedCase
Parameter '_scope_2' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#434) is not in mixedCase
Parameter '_scope_3' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#436-439) is not in mixedCase
Parameter '_scope_4' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#439) is not in mixedCase
Parameter '_scope_5' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#439) is not in mixedCase
Parameter '_scope_6' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#439) is not in mixedCase
Parameter '_scope_7' of Verifier.verifyTx (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#439) is not in mixedCase
Parameter '' of Verifier.getInputBits (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#449) is not in mixedCase
Parameter '_scope_0' of Verifier.getInputBits (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#449) is not in mixedCase
Parameter 'a_p' of OpsCoinShield.setProofParams (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#666) is not in mixedCase
Parameter 'b_p' of OpsCoinShield.setProofParams (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#667) is not in mixedCase
Parameter 'c_p' of OpsCoinShield.setProofParams (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#668) is not in mixedCase
Constant 'OpsCoinShield.merkleWidth' (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#454) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'OpsCoinShield.merkleDepth' (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#455) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'OpsCoinShield.lastRow' (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#455) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
OpsCoinShield.merkleDepth (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#455) is never used in OpsCoinShield
OpsCoinShield.balance (/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol#455-456) is never used in OpsCoinShield
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/15/0xe8d9f21b6b351c6bf993b1105497fe42d30df8bf.sol analyzed (5 contracts), 85 result(s) found