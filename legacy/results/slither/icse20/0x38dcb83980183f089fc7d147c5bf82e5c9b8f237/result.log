INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:10:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:43:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:63:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:64:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:89:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:90:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:91:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:101:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:121:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SmartBondsToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^---------------------------------------------------------------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:124:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!canHolderTransfer()) throw;
                                 ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:125:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:126:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:127:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:156:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(balanceOf[owner] < _amount) throw;
                                       ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:193:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen
                                  ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:194:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:195:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:196:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:228:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (allowance[_from][msg.sender] > (allowance[_from][msg.sender] - _value)) throw;
                                                                                ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:256:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:263:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:267:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:244:37: Warning: This declaration shadows an existing declaration.
    function freeze(address target, bool freeze) onlyOwner {
                                    ^---------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:244:5: The shadowed declaration is here:
    function freeze(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:67:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:95:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:164:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(owner, holder, reward);
            ^-----------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:200:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:207:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:208:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:246:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:259:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:269:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:19:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:78:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function SmartBondsToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^---------------------------------------------------------------------------------------^
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddresses() constant returns (address[]){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function distributeTokens(uint _amount) onlyOwner returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:174:5: Warning: No visibility specified. Defaulting to "public". 
    function unlockTransfer() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:178:5: Warning: No visibility specified. Defaulting to "public". 
    function lockTransfer() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:182:5: Warning: No visibility specified. Defaulting to "public". 
    function canHolderTransfer() constant returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:185:5: Warning: No visibility specified. Defaulting to "public". 
    function setIcoAddress(address _icoAddress) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:204:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:215:3: Warning: No visibility specified. Defaulting to "public". 
  function burn(uint256 _value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:224:3: Warning: No visibility specified. Defaulting to "public". 
  function burnFrom(address _from, uint256 _value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:233:3: Warning: No visibility specified. Defaulting to "public". 
  function _burn(address _who, uint256 _value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:244:5: Warning: No visibility specified. Defaulting to "public". 
    function freeze(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:249:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:254:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:262:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#22-108) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#63-70)
SmartBondsToken (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#110-272) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#125-149)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SmartBondsToken.freeze.freeze (local variable @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#251-252) shadows:
	- SmartBondsToken.freeze (function @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#250-255)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
SmartBondsToken.tokenName should be constant (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#121)
SmartBondsToken.tokenSymbol should be constant (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#121-123)
token.standard should be constant (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#23-24)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#11:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#64:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#65:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#92:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#105-107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#128-129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#195:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#196:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#197-198:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#198:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#161:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#235:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#266:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#14-19) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#19-21) should be declared external
token.transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#63-70) should be declared external
SmartBondsToken.transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#125-149) should be declared external
token.approveAndCall (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#79-88) should be declared external
token.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#88-100) should be declared external
SmartBondsToken.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#194-208) should be declared external
token.fallback (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#105-108) should be declared external
SmartBondsToken.getAddresses (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#149-159) should be declared external
SmartBondsToken.distributeTokens (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#159-174) should be declared external
SmartBondsToken.unlockTransfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#182-183) should be declared external
SmartBondsToken.lockTransfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#183-185) should be declared external
SmartBondsToken.setIcoAddress (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#191-192) should be declared external
SmartBondsToken.mintToken (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#208-220) should be declared external
SmartBondsToken.burn (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#221-222) should be declared external
SmartBondsToken.burnFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#227-236) should be declared external
SmartBondsToken.freeze (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#250-255) should be declared external
SmartBondsToken.setPrices (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#255-257) should be declared external
SmartBondsToken.buy (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#257-265) should be declared external
SmartBondsToken.sell (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#265-272) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol:
	- pragma solidity^0.4.18 (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#2-19) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#19-21) is not in CapWords
Contract 'token' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#22-108) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#63) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#63) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#73) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#73) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#79-80) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#80) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#80) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#89) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#89) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#89) is not in mixedCase
Parameter '_to' of SmartBondsToken.transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#125) is not in mixedCase
Parameter '_value' of SmartBondsToken.transfer (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#125) is not in mixedCase
Parameter '_from' of SmartBondsToken.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#194) is not in mixedCase
Parameter '_to' of SmartBondsToken.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#194) is not in mixedCase
Parameter '_value' of SmartBondsToken.transferFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#194) is not in mixedCase
Function 'SmartBondsToken.SmartBondsToken' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#123-125) is not in mixedCase
Parameter '_amount' of SmartBondsToken.distributeTokens (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#159-160) is not in mixedCase
Parameter '_icoAddress' of SmartBondsToken.setIcoAddress (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#191-192) is not in mixedCase
Parameter '_value' of SmartBondsToken.burn (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#221) is not in mixedCase
Parameter '_from' of SmartBondsToken.burnFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#227) is not in mixedCase
Parameter '_value' of SmartBondsToken.burnFrom (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#227) is not in mixedCase
Function 'SmartBondsToken._burn' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#236-250) is not in mixedCase
Parameter '_who' of SmartBondsToken._burn (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#236) is not in mixedCase
Parameter '_value' of SmartBondsToken._burn (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#236-238) is not in mixedCase
Constant 'SmartBondsToken.initialSupply' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#119-120) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SmartBondsToken.decimalUnits' (/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol#120-121) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0x38dcb83980183f089fc7d147c5bf82e5c9b8f237.sol analyzed (4 contracts), 74 result(s) found