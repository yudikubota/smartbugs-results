INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:767:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:857:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:860:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:878:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:941:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1182:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1240:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MintableToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1306:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PreIco(MintableToken _token) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1319:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1421:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ICO(MintableToken _token, PreIco _preIco) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1449:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:781:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:781:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:813:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:816:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:831:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:878:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:893:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:893:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:893:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:893:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:893:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:915:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:915:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1085:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1114:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1152:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
        ^-----------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1163:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
        ^-----------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1202:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1250:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_to, _amount);
        ^----------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1251:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0x0, _to, _amount);
        ^-------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1266:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_to, _amount);
        ^----------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1267:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0x0, _to, _amount);
        ^-------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1277:9: Warning: Invoking events without "emit" prefix is deprecated.
        MintFinished();
        ^------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1320:9: Warning: Invoking events without "emit" prefix is deprecated.
        updatedEtherPrice(result);
        ^-----------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1325:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1326:13: Warning: Invoking events without "emit" prefix is deprecated.
            updatingViaOracle("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
            ^----------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1328:13: Warning: Invoking events without "emit" prefix is deprecated.
            updatingViaOracle("Oraclize query was sent, standing by for the answer..");
            ^------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1353:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenPurchase(msg.sender, msg.sender, weiAmount, tokens);
        ^------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1450:9: Warning: Invoking events without "emit" prefix is deprecated.
        updatedEtherPrice(result);
        ^-----------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1455:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (oraclize_getPrice("URL") > this.balance) {
                                       ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1456:13: Warning: Invoking events without "emit" prefix is deprecated.
            updatingViaOracle("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
            ^----------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1458:13: Warning: Invoking events without "emit" prefix is deprecated.
            updatingViaOracle("Oraclize query was sent, standing by for the answer..");
            ^------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1529:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenPurchase(msg.sender, msg.sender, weiAmount, tokens);
        ^------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1538:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance - amount >= 0);
                ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:87:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:126:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:126:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:126:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1182:5: Warning: No visibility specified. Defaulting to "public". 
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1240:5: Warning: No visibility specified. Defaulting to "public". 
    function MintableToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1306:5: Warning: No visibility specified. Defaulting to "public". 
    function PreIco(MintableToken _token) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1313:5: Warning: No visibility specified. Defaulting to "public". 
    function setDollar(uint256 _dollarCost) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1318:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1318:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result) {
                        ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1324:5: Warning: No visibility specified. Defaulting to "public". 
    function updatePrice() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1338:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1421:5: Warning: No visibility specified. Defaulting to "public". 
    function ICO(MintableToken _token, PreIco _preIco) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1443:5: Warning: No visibility specified. Defaulting to "public". 
    function setDollar(uint256 _dollarCost) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1448:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1448:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result) {
                        ^----------^
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1454:5: Warning: No visibility specified. Defaulting to "public". 
    function updatePrice() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1497:5: Warning: No visibility specified. Defaulting to "public". 
    function oneGetMoneyBack() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1508:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1534:5: Warning: No visibility specified. Defaulting to "public". 
    function forwardFunds(uint256 amount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:126:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:537:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:557:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:575:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:602:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:637:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:655:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:672:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:714:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:762:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:875:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:936:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1048:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1054:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1061:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1066:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1368:5: Warning: Function state mutability can be restricted to pure
    function validPurchase(uint256 value) internal constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:1551:5: Warning: Function state mutability can be restricted to pure
    function validPurchase(uint256 value) internal constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#547-550) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in ICO.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol):
	External calls:
	- require(bool)(! hasFunded()) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
	State variables written after the call(s):
	- weiRaised (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#73-82):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#77-82)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#81-82)
	State variables written after the call(s):
	- oraclize (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#81-82)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
PreIco.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1392-1412) does not use the value returned by external calls:
	-token.mintPreico(msg.sender,tokens.mul(10 ** decimals)) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1407)
ICO.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol) does not use the value returned by external calls:
	-token.mint(msg.sender,tokens.mul(10 ** decimals)) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ICO.getMoneyBack has external calls inside a loop:
	- investorsArray[i].transfer(investors[investorsArray[i]].amount) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1538-1543)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in ICO.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol):
	External calls:
	- require(bool)(! hasFunded()) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
	State variables written after the call(s):
	- rate (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
Reentrancy in ICO.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol):
	External calls:
	- require(bool)(! hasFunded()) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
	- token.mint(msg.sender,tokens.mul(10 ** decimals)) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
	State variables written after the call(s):
	- investors (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
	- investorsArray (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol)
Reentrancy in ICO.getMoneyBack (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1531-1548):
	External calls:
	- require(bool)(! hasFunded()) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1533)
	External calls sending eth:
	- investorsArray[i].transfer(investors[investorsArray[i]].amount) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1538-1543)
	State variables written after the call(s):
	- investors (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1543-1544)
	- investors (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1547)
Reentrancy in ICO.oneGetMoneyBack (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1548-1559):
	External calls:
	- require(bool)(! hasFunded()) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1551)
	External calls sending eth:
	- msg.sender.transfer(investors[msg.sender].amount) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1554-1556)
	State variables written after the call(s):
	- investors (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1556-1557)
	- investors (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1557-1559)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#780-804):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#786-789)
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#800-802)
	External calls sending eth:
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#800-802)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#800-802)
	- oraclize_randomDS_args (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#802-804)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#547-550)
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#548-550
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#780-804)
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#790-799
usingOraclize.verifySig uses assembly (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#815-834)
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#825-830
usingOraclize.copyBytes uses assembly (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#962-980)
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#974-977
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#986-1012)
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1003-1012
usingOraclize.ecrecovery uses assembly (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1016-1056)
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1027-1054
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ICO.decimals should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1451)
ICO.dollarMultiplier should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1451-1454)
ICO.minimumCost should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1456)
OraclizeI.cbAddress should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#36)
PreIco.decimals should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1329)
PreIco.dollarMultiplier should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1329)
PreIco.minimumCost should be constant (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1333-1334)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:
	- Version used: ['^0.4.0', '^0.4.11']
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1 declares pragma solidity^0.4.11
	- /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#32 declares pragma solidity^0.4.0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#781:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#802-804:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#831-834:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#833-834:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#908-910:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#931-936:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#965:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#878:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#885:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1359:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1489:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#36-37) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#37-38) should be declared external
OraclizeI.query2 (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#38-39) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#39-40) should be declared external
OraclizeI.queryN (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#40-41) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#41-42) should be declared external
OraclizeI.getPrice (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#42-43) should be declared external
OraclizeI.getPrice (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#43-45) should be declared external
OraclizeI.useCoupon (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#45) should be declared external
OraclizeI.setProofType (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#46-47) should be declared external
OraclizeI.setConfig (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#47) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#48) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#48-51) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#53-54) should be declared external
PreIco.__callback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1355-1362) should be declared external
ICO.__callback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1486-1490) should be declared external
usingOraclize.__callback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#126-129) should be declared external
BasicToken.balanceOf (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1119-1121) should be declared external
ERC20Basic.balanceOf (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1057-1061) should be declared external
BasicToken.transfer (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1108-1119) should be declared external
ERC20Basic.transfer (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1061-1063) should be declared external
StandardToken.allowance (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1169-1175) should be declared external
ERC20.allowance (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1067-1073) should be declared external
StandardToken.transferFrom (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1126-1138) should be declared external
ERC20.transferFrom (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1073-1078) should be declared external
ERC20.approve (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1078-1079) should be declared external
StandardToken.approve (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1152-1157) should be declared external
StandardToken.increaseApproval (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1188-1198) should be declared external
StandardToken.decreaseApproval (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1198-1213) should be declared external
Ownable.transferOwnership (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1248-1256) should be declared external
Ownable.setPreIco (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1256-1259) should be declared external
Ownable.setICO (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1259-1261) should be declared external
MintableToken.mintPreico (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1284-1297) should be declared external
MintableToken.mint (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1304-1318) should be declared external
MintableToken.finishMinting (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1320-1325) should be declared external
PreIco.setDollar (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1352-1355) should be declared external
PreIco.updatePrice (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1364-1382) should be declared external
PreIco.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1392-1412) should be declared external
ICO.setDollar (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1480-1486) should be declared external
ICO.updatePrice (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1490-1503) should be declared external
ICO.getMoneyBack (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1531-1548) should be declared external
ICO.oneGetMoneyBack (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1548-1559) should be declared external
ICO.fallback (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol) should be declared external
ICO.forwardFunds (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol:
	- pragma solidity^0.4.11 (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#32): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#37-38) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#39-40) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#41-42) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#48-51) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#54-1056) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#88-126) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#126-129) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#129-133) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#133-134) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#135-138) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#138-142) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#142-147) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#147-152) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#152-157) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#157-162) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#162-167) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#167-172) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#172-177) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#177-183) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#183-189) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#189-194) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#194-201) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#201-208) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#208-213) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#213-217) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#217-223) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#223-229) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#230-235) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#236-241) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#241-248) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#248-254) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#255-261) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#261-268) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#268-276) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#276-284) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#285-292) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#292-300) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#300-309) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#309-318) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#318-326) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#326-335) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#335-345) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#345-351) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#351-357) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#357-363) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#363-369) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#369-377) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#377-381) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#381-386) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#386-392) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#393-398) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#399-404) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#404-410) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#410-417) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#417-423) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#423-430) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#430-437) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#437-445) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#446-453) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#453-461) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#461-469) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#469-478) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#478-486) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#486-495) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#495-504) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#504-516) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#517-527) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#527-528) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#528-532) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#533-538) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#538-542) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#543-547) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#550) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#575) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#575) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#590) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#590) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#613) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#613) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#613) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#613-614) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#614) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#638) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#638) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#638-639) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#639) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#642) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#642) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#642) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#646) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#646-647) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#650-651) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#656) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#656) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#775-777) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#775) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#777-779) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#780-804) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#780) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#780) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#780-781) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#804-812) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#835-869) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#885-896) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#885-886) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#886-887) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#888-889) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#900-960) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#902) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#986-1012) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#55-56) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#56-57) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#57-58) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#58-59) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#59-60) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#60-61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#61-62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#62-63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#63-64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#64-65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#66-67) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#67-69) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#69-72) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#72-73) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#775) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#812-813) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#813-815) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#869-885) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1119-1120) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1108) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1108-1109) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1170) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1170-1171) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1128) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1128) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1128) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1152) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1152) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1189-1190) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1190-1191) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1199-1200) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1200) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1229-1232) is not in mixedCase
Parameter '_preIco' of Ownable.setPreIco (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1257) is not in mixedCase
Parameter '_ico' of Ownable.setICO (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1259) is not in mixedCase
Function 'MintableToken.MintableToken' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1278-1283) is not in mixedCase
Parameter '_to' of MintableToken.mintPreico (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1284-1286) is not in mixedCase
Parameter '_amount' of MintableToken.mintPreico (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1286) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1304-1306) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1306) is not in mixedCase
Event 'PreIco.updatedEtherPrice' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1341-1343) is not in CapWords
Event 'PreIco.updatingViaOracle' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1343-1344) is not in CapWords
Function 'PreIco.__callback' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1355-1362) is not in mixedCase
Function 'PreIco.PreIco' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1346-1352) is not in mixedCase
Parameter '_token' of PreIco.PreIco (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1346) is not in mixedCase
Parameter '_dollarCost' of PreIco.setDollar (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1352) is not in mixedCase
Event 'ICO.updatedEtherPrice' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1459) is not in CapWords
Event 'ICO.updatingViaOracle' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1459-1463) is not in CapWords
Function 'ICO.__callback' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1486-1490) is not in mixedCase
Function 'ICO.ICO' (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1463-1480) is not in mixedCase
Parameter '_token' of ICO.ICO (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1463) is not in mixedCase
Parameter '_preIco' of ICO.ICO (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1463-1464) is not in mixedCase
Parameter '_dollarCost' of ICO.setDollar (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#1480-1482) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#55-56) is never used in PreIco
usingOraclize.week (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#56-57) is never used in PreIco
usingOraclize.month (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#57-58) is never used in PreIco
usingOraclize.proofType_NONE (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#58-59) is never used in PreIco
usingOraclize.proofType_TLSNotary (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#59-60) is never used in PreIco
usingOraclize.proofType_Android (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#60-61) is never used in PreIco
usingOraclize.proofType_Ledger (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#61-62) is never used in PreIco
usingOraclize.proofType_Native (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#62-63) is never used in PreIco
usingOraclize.proofStorage_IPFS (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#63-64) is never used in PreIco
usingOraclize.networkID_mainnet (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#65-66) is never used in PreIco
usingOraclize.networkID_testnet (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#66-67) is never used in PreIco
usingOraclize.networkID_morden (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#67-69) is never used in PreIco
usingOraclize.networkID_consensys (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#69-72) is never used in PreIco
usingOraclize.day (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#55-56) is never used in ICO
usingOraclize.week (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#56-57) is never used in ICO
usingOraclize.month (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#57-58) is never used in ICO
usingOraclize.proofType_NONE (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#58-59) is never used in ICO
usingOraclize.proofType_TLSNotary (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#59-60) is never used in ICO
usingOraclize.proofType_Android (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#60-61) is never used in ICO
usingOraclize.proofType_Ledger (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#61-62) is never used in ICO
usingOraclize.proofType_Native (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#62-63) is never used in ICO
usingOraclize.proofStorage_IPFS (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#63-64) is never used in ICO
usingOraclize.networkID_mainnet (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#65-66) is never used in ICO
usingOraclize.networkID_testnet (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#66-67) is never used in ICO
usingOraclize.networkID_morden (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#67-69) is never used in ICO
usingOraclize.networkID_consensys (/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol#69-72) is never used in ICO
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/11/0xb0c45487696eeb2df4012b463919d69a99070fa5.sol analyzed (12 contracts), 241 result(s) found