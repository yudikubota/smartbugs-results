INFO:Slither:Compilation warnings/errors on /unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:94:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ERC20StandardToken() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:202:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:230:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Manageable() public Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:268:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ReturnableToken() public {}    
    ^----------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:379:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenHolder() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:431:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BCSCrowdsale(        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:639:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BCSAddBonusCrowdsale(        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:115:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:126:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:132:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:249:9: Warning: Invoking events without "emit" prefix is deprecated.
        ManagerSet(manager, state);
        ^------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:500:9: Warning: Invoking events without "emit" prefix is deprecated.
        Invested(msg.sender, weiPaid, tokensToBuy);
        ^----------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:514:13: Warning: Invoking events without "emit" prefix is deprecated.
            Refund(from, returnedTo[from]);
            ^----------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:579:17: Warning: Invoking events without "emit" prefix is deprecated.
                OverpayRefund(msg.sender, amount);
                ^-------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:594:9: Warning: Invoking events without "emit" prefix is deprecated.
        Refund(beneficiary, amount);
        ^-------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:327:5: Warning: No visibility specified. Defaulting to "public". 
    function canInvest(address investor, uint amount, uint tokensLeft) constant returns (bool result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:332:5: Warning: No visibility specified. Defaulting to "public". 
    function investHappened(address investor, uint amount) managerOnly {}    
    ^-------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:332:29: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function investHappened(address investor, uint amount) managerOnly {}    
                            ^--------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:332:47: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function investHappened(address investor, uint amount) managerOnly {}    
                                              ^---------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:344:5: Warning: No visibility specified. Defaulting to "public". 
    function howManyTokensForEther(uint256 weiAmount) constant returns(uint256 tokens, uint256 excess) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:349:5: Warning: No visibility specified. Defaulting to "public". 
    function tokensLeft() constant returns(uint256 _left) { _left;}    
    ^-------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:379:5: Warning: No visibility specified. Defaulting to "public". 
    function TokenHolder() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:431:5: Warning: No visibility specified. Defaulting to "public". 
    function BCSCrowdsale(        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:469:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:473:5: Warning: No visibility specified. Defaulting to "public". 
    function invest() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:519:5: Warning: No visibility specified. Defaulting to "public". 
    function canInvest(address investor, uint256 amount) constant returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:526:5: Warning: No visibility specified. Defaulting to "public". 
    function howManyTokensForEther(uint256 weiAmount) constant returns(uint256 tokens, uint256 excess) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:541:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentBonusPct(uint256 investment) constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:541:33: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getCurrentBonusPct(uint256 investment) constant returns (uint256) {
                                ^----------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:546:5: Warning: No visibility specified. Defaulting to "public". 
    function tokensLeft() constant returns(uint256) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:551:5: Warning: No visibility specified. Defaulting to "public". 
    function amountToBeneficiary() constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:556:5: Warning: No visibility specified. Defaulting to "public". 
    function getState() constant returns (State) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:573:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawOverpay() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:587:5: Warning: No visibility specified. Defaulting to "public". 
    function transferToBeneficiary() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:598:5: Warning: No visibility specified. Defaulting to "public". 
    function makeFailed(bool state) managerOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:603:5: Warning: No visibility specified. Defaulting to "public". 
    function changeBeneficiary(address newBeneficiary) managerOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:639:5: Warning: No visibility specified. Defaulting to "public". 
    function BCSAddBonusCrowdsale(        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:27:5: Warning: Function state mutability can be restricted to pure
    function name() public constant returns (string _name) { _name; }
    ^---------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:28:5: Warning: Function state mutability can be restricted to pure
    function symbol() public constant returns (string _symbol) { _symbol; }
    ^---------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:29:5: Warning: Function state mutability can be restricted to pure
    function decimals() public constant returns (uint8 _decimals) { _decimals; }
    ^--------------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:31:5: Warning: Function state mutability can be restricted to pure
    function totalSupply() public constant returns (uint total) {total;}
    ^------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:32:5: Warning: Function state mutability can be restricted to pure
    function balanceOf(address _owner) public constant returns (uint balance) {_owner; balance;}    
    ^------------------------------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:33:5: Warning: Function state mutability can be restricted to pure
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {_owner; _spender; remaining;}
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:171:5: Warning: Function state mutability can be restricted to pure
    function getTokenAmount() public constant returns (uint256 tokens) {tokens;}
    ^--------------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:193:5: Warning: Function state mutability can be restricted to pure
    function owner() public constant returns (address) {}
    ^---------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:327:5: Warning: Function state mutability can be restricted to pure
    function canInvest(address investor, uint amount, uint tokensLeft) constant returns (bool result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:332:5: Warning: Function state mutability can be restricted to view
    function investHappened(address investor, uint amount) managerOnly {}    
    ^-------------------------------------------------------------------^
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:344:5: Warning: Function state mutability can be restricted to pure
    function howManyTokensForEther(uint256 weiAmount) constant returns(uint256 tokens, uint256 excess) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:349:5: Warning: Function state mutability can be restricted to pure
    function tokensLeft() constant returns(uint256 _left) { _left;}    
    ^-------------------------------------------------------------^

INFO:Detectors:[91m
BCSCrowdsale.transferToBeneficiary (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#606-612) sends eth to arbitrary user
	Dangerous calls:
	- beneficiary.transfer(amount) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#610-611)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
ERC20StandardToken.decimals (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#89) is never initialized. It is used in:
	- getRealTokenAmount (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#148-153)
ERC20StandardToken.tokensIssued (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#90-91) is never initialized. It is used in:
	- totalSupply (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#106-107)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
BCSCrowdsale.getState (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#573-588) uses a dangerous strict equality:
	- (endTime == 0 || now < endTime) && tokensLeft() > 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in BCSCrowdsale.invest (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#487-510):
	External calls:
	- require(bool)(canInvest(msg.sender,msg.value)) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#488)
	- (tokensToBuy,excess) = howManyTokensForEther(weiPaid) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#491-492)
	- require(bool)(tokensToBuy <= tokensLeft() && tokensToBuy > 0) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#492-494)
	State variables written after the call(s):
	- weiCollected (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#504-505)
Reentrancy in BCSCrowdsale.transferToBeneficiary (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#606-612):
	External calls:
	- require(bool)(getState() == State.FinishedSuccess && ! withdrew) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#606-608)
	State variables written after the call(s):
	- withdrew (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#608)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in BCSCrowdsale.invest (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#487-510):
	External calls:
	- require(bool)(canInvest(msg.sender,msg.value)) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#488)
	- (tokensToBuy,excess) = howManyTokensForEther(weiPaid) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#491-492)
	- require(bool)(tokensToBuy <= tokensLeft() && tokensToBuy > 0) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#492-494)
	State variables written after the call(s):
	- investedFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#498-500)
	- overpays (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#495-498)
	- tokensSold (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#504)
	- tokensSoldTo (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#501-503)
Reentrancy in BCSCrowdsale.invest (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#487-510):
	External calls:
	- require(bool)(canInvest(msg.sender,msg.value)) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#488)
	- (tokensToBuy,excess) = howManyTokensForEther(weiPaid) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#491-492)
	- require(bool)(tokensToBuy <= tokensLeft() && tokensToBuy > 0) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#492-494)
	- restrictions.investHappened(msg.sender,msg.value) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#506)
	- require(bool)(tokenPool.token().transferFrom(tokenPool,msg.sender,tokensToBuy)) (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#506-508)
	State variables written after the call(s):
	- totalInvestments (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#508)
Reentrancy in BCSCrowdsale.returnToken (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#518-527):
	External calls:
	- msg.sender == address(tokenPool.token()) && getState() == State.FinishedFailure (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#519-527)
	State variables written after the call(s):
	- investedFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#526)
	- returnedTo (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#525-526)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20StandardToken.decimals should be constant (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#89)
ERC20StandardToken.name should be constant (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#87)
ERC20StandardToken.symbol should be constant (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#88)
ERC20StandardToken.tokensIssued should be constant (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#90-91)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
IERC20Token.name (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#27-28) should be declared external
IERC20Token.symbol (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#28-29) should be declared external
IERC20Token.decimals (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#29-31) should be declared external
IERC20Token.totalSupply (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#31-32) should be declared external
ERC20StandardToken.totalSupply (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#106-107) should be declared external
ERC20StandardToken.balanceOf (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#107-111) should be declared external
IERC20Token.balanceOf (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#32-33) should be declared external
IERC20Token.allowance (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#33-35) should be declared external
ERC20StandardToken.allowance (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#137-144) should be declared external
ERC20StandardToken.transfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#113-120) should be declared external
IERC20Token.transfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#35-36) should be declared external
IERC20Token.transferFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#36-37) should be declared external
ERC20StandardToken.transferFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#120-131) should be declared external
IERC20Token.approve (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#37-40) should be declared external
ERC20StandardToken.approve (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#131-137) should be declared external
ERC20StandardToken.getRealTokenAmount (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#148-153) should be declared external
ITokenPool.setTrustee (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#169-171) should be declared external
ITokenPool.getTokenAmount (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#173-174) should be declared external
IOwned.owner (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#196-197) should be declared external
Manageable.setManager (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#252-254) should be declared external
ReturnableToken.setReturnAgent (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#277-281) should be declared external
ReturnableToken.removeReturnAgent (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#282-286) should be declared external
ReturnTokenAgent.returnToken (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#309-310) should be declared external
BCSCrowdsale.returnToken (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#518-527) should be declared external
ReturnTokenAgent.setReturnableToken (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#311-314) should be declared external
ReturnTokenAgent.removeReturnableToken (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#315-319) should be declared external
IInvestRestrictions.canInvest (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#333-336) should be declared external
IInvestRestrictions.investHappened (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#336-338) should be declared external
TokenHolder.withdrawTokens (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#394-396) should be declared external
ITokenHolder.withdrawTokens (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#377-382) should be declared external
BCSCrowdsale.fallback (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#485-486) should be declared external
BCSCrowdsale.withdrawOverpay (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#590-604) should be declared external
BCSCrowdsale.transferToBeneficiary (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#606-612) should be declared external
BCSCrowdsale.makeFailed (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#612-614) should be declared external
BCSCrowdsale.changeBeneficiary (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#616-619) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol:
	- pragma solidity^0.4.18 (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#6-8): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of ERC20StandardToken.balanceOf (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#110) is not in mixedCase
Parameter '_owner' of ERC20StandardToken.allowance (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#138-141) is not in mixedCase
Parameter '_spender' of ERC20StandardToken.allowance (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#141) is not in mixedCase
Parameter '_to' of ERC20StandardToken.transfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#113) is not in mixedCase
Parameter '_value' of ERC20StandardToken.transfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#113) is not in mixedCase
Parameter '_from' of ERC20StandardToken.transferFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#122) is not in mixedCase
Parameter '_to' of ERC20StandardToken.transferFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#122) is not in mixedCase
Parameter '_value' of ERC20StandardToken.transferFrom (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#122) is not in mixedCase
Parameter '_spender' of ERC20StandardToken.approve (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#132) is not in mixedCase
Parameter '_value' of ERC20StandardToken.approve (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#132) is not in mixedCase
Function 'ERC20StandardToken.ERC20StandardToken' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#99-102) is not in mixedCase
Parameter '_from' of ERC20StandardToken.doTransfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#154) is not in mixedCase
Parameter '_to' of ERC20StandardToken.doTransfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#154-156) is not in mixedCase
Parameter '_value' of ERC20StandardToken.doTransfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#156) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#219-220) is not in mixedCase
Function 'Owned.Owned' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#212-213) is not in mixedCase
Parameter '_newOwner' of Manageable.transferOwnership (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#248) is not in mixedCase
Function 'Manageable.Manageable' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#240-241) is not in mixedCase
Parameter '_from' of ReturnableToken.doTransfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#286) is not in mixedCase
Parameter '_to' of ReturnableToken.doTransfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#286-287) is not in mixedCase
Parameter '_value' of ReturnableToken.doTransfer (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#287) is not in mixedCase
Function 'ReturnableToken.ReturnableToken' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#276) is not in mixedCase
Parameter '_token' of TokenHolder.withdrawTokens (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#394) is not in mixedCase
Parameter '_to' of TokenHolder.withdrawTokens (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#394-395) is not in mixedCase
Parameter '_amount' of TokenHolder.withdrawTokens (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#395) is not in mixedCase
Function 'TokenHolder.TokenHolder' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#391) is not in mixedCase
Function 'BCSCrowdsale.BCSCrowdsale' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#444-485) is not in mixedCase
Parameter '_tokenPool' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#446) is not in mixedCase
Parameter '_restrictions' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#447) is not in mixedCase
Parameter '_beneficiary' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#448-449) is not in mixedCase
Parameter '_startTime' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#450) is not in mixedCase
Parameter '_durationInHours' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#451-452) is not in mixedCase
Parameter '_goalInWei' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#452-453) is not in mixedCase
Parameter '_tokensForOneEther' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#455) is not in mixedCase
Parameter '_bonusPct' of BCSCrowdsale.BCSCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#455) is not in mixedCase
Function 'BCSAddBonusCrowdsale.BCSAddBonusCrowdsale' (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#659-690) is not in mixedCase
Parameter '_bonusPct' of BCSAddBonusCrowdsale.BCSAddBonusCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#670) is not in mixedCase
Parameter '_maxDecreasePct' of BCSAddBonusCrowdsale.BCSAddBonusCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#670-671) is not in mixedCase
Parameter '_decreaseStepPct' of BCSAddBonusCrowdsale.BCSAddBonusCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#671-674) is not in mixedCase
Parameter '_stepDurationDays' of BCSAddBonusCrowdsale.BCSAddBonusCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#674) is not in mixedCase
Parameter '_investSteps' of BCSAddBonusCrowdsale.BCSAddBonusCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#674) is not in mixedCase
Parameter '_bonusPctSteps' of BCSAddBonusCrowdsale.BCSAddBonusCrowdsale (/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol#674-676) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/9/0x8418c859eb647209785c972f50b003efb4290d05.sol analyzed (15 contracts), 88 result(s) found