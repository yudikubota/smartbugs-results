INFO:Slither:Compilation warnings/errors on /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:240:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:279:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:284:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:289:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:410:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:420:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:424:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:430:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:437:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:448:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:468:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:475:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:509:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:526:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:547:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:564:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:568:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:585:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:600:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:612:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:624:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:628:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:696:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:766:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:806:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:807:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:815:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:816:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:824:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track participants for thank you email
                          ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:825:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:843:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (bytes1(sha3(customerId)) != checksum) throw;
                                              ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:966:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiMaximumLimit, uint _weiCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:972:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:977:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:981:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:995:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1007:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Funding) throw;
                                    ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1009:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw; // No empty buys
                       ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1019:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1030:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1056:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1060:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(address(crowdsale) == 0) throw;
                                ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1070:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1083:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1112:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1117:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1138:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Refunding) throw;
                                      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1141:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(balances[investor] == 0) throw;
                                ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1144:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!(investor.call.value(amount)())) throw;
                                         ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1174:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Refunding) throw;
                                      ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1202:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:14:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:512:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:572:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:627:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:681:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:798:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:805:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:805:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:843:16: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:843:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:843:16: Warning: The provided argument of type uint128 is not implicitly convertible to expected type bytes memory.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:869:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:881:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1035:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(investor, msg.value, customerId);
    ^---------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1073:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensBoughts(tokensBought);
    ^-------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1129:5: Warning: Invoking events without "emit" prefix is deprecated.
    Distributed(investor, amount);
    ^---------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1145:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refunded(investor, amount);
    ^------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:66:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:77:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:106:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:115:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:161:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:183:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:184:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:195:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:196:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:197:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:240:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:258:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:410:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:447:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:542:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:561:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:580:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:670:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:679:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:720:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:766:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:867:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:878:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:966:3: Warning: No visibility specified. Defaulting to "public". 
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiMaximumLimit, uint _weiCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1098:3: Warning: No visibility specified. Defaulting to "public". 
  function claimAll() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1106:3: Warning: No visibility specified. Defaulting to "public". 
  function claim(uint amount) stopInEmergency {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1135:3: Warning: No visibility specified. Defaulting to "public". 
  function refund() stopInEmergency {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1155:34: Warning: Statement has no effect.
    if(!crowdsale.isCrowdsale()) true;
                                 ^--^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1201:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:15:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:21:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:28:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:33:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:66:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:72:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:77:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:98:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:106:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:115:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:149:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:686:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1082:8: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    if(getState() != State.Distributing) {
       ^--------^
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1180:3: Warning: Function state mutability can be restricted to view
  function getState() public returns(State) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:1196:3: Warning: Function state mutability can be restricted to pure
  function isPresale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in PreICOProxyBuyer.buyForEverybody (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1096-1120):
	External calls:
	- crowdsale.invest.value(weiRaised)(address(this)) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1107-1111)
	- tokensBought = getToken().balanceOf(address(this)) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1115-1116)
	External calls sending eth:
	- crowdsale.invest.value(weiRaised)(address(this)) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1107-1111)
	State variables written after the call(s):
	- tokensBought (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1115-1116)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1096-1120) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1096-1120) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.getState (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol) uses a dangerous strict equality:
	- tokensBought == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#542-555):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#554-555)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#555)
Reentrancy in CrowdsaleBase.investInternal (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#471-537):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#480-492)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#495-499)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#511-512)
	- weiRaised (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#509-511)
Reentrancy in CrowdsaleBase.investInternal (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#471-537):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#480-492)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#495-499)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#512-520)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#516-520)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
PreICOProxyBuyer.claim (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1151-1170) does not use the value returned by external calls:
	-getToken().transfer(investor,amount) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1166-1167)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#427-460):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#441-445)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#456-457)
	- minimumFundingGoal (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#458-460)
	- multisigWallet (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#445-446)
	- startsAt (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#454)
Reentrancy in CrowdsaleBase.investInternal (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#471-537):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#480-492)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#495-499)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#504-508)
	- investorCount (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#504)
	- tokenAmountOf (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#508)
Reentrancy in Crowdsale.preallocate (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#804-821):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#806-807)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#814-815)
	- tokenAmountOf (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#815-816)
	- tokensSold (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#812-814)
	- weiRaised (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#812)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#669-695) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#681-695)
	- block.timestamp < startsAt (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#679-695)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#336-337)
ERC20Basic.totalSupply should be constant (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#185)
FractionalERC20.decimals should be constant (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#214)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#294-295:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#299:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#300-301:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#449-451:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#454:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#455:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#458:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#462:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#481-483:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#492:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#529:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#546:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#572:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#590:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#592:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#607:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#622-623:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#633-634:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#648:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#653-654:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#716-717:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#826-827:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#830:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#841:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#841-842:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#850:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#855:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#875:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#875:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1018:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1022:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1024:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1038:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1052:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1052:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1066:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1079:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1132-1133:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1173:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1177:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1181-1182:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#67-73) should be declared external
SafeMathLib.minus (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#74-79) should be declared external
SafeMathLib.plus (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#79-86) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#102-104) should be declared external
PricingStrategy.isSane (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#111-112) should be declared external
PricingStrategy.isPresalePurchase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#120-123) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#130-136) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#155-156) should be declared external
FinalizeAgent.isSane (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#165-166) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#168) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#185-192) should be declared external
ERC20Basic.transfer (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#192-194) should be declared external
ERC20.allowance (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#197-198) should be declared external
ERC20.transferFrom (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#198-203) should be declared external
ERC20.approve (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#203-207) should be declared external
Ownable.transferOwnership (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#270-275) should be declared external
CrowdsaleBase.fallback (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#462) should be declared external
CrowdsaleBase.finalize (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#542-555) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#561-573) should be declared external
CrowdsaleBase.setEndsAt (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#584-593) should be declared external
CrowdsaleBase.setMultisig (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#619-623) should be declared external
CrowdsaleBase.loadRefund (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#631-634) should be declared external
CrowdsaleBase.refund (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#641-655) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#660-661) should be declared external
CrowdsaleBase.isPricingSane (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#662-664) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#702-708) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#710-713) should be declared external
CrowdsaleBase.isCrowdsale (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#714-715) should be declared external
Crowdsale.preallocate (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#804-821) should be declared external
Crowdsale.buyWithSignedAddress (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#863-868) should be declared external
Crowdsale.buyWithCustomerIdWithChecksum (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#869-878) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#879-881) should be declared external
Crowdsale.buy (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#890-892) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#894-897) should be declared external
Crowdsale.setRequireSignedAddress (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#901-910) should be declared external
PreICOProxyBuyer.buyWithCustomerId (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1085-1089) should be declared external
PreICOProxyBuyer.buy (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1089-1091) should be declared external
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1096-1120) should be declared external
PreICOProxyBuyer.claimAll (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1145-1149) should be declared external
PreICOProxyBuyer.refund (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1171-1184) should be declared external
PreICOProxyBuyer.setCrowdsale (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1188-1196) should be declared external
PreICOProxyBuyer.setTimeLock (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1204) should be declared external
PreICOProxyBuyer.forceRefund (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol) should be declared external
PreICOProxyBuyer.loadRefund (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol) should be declared external
PreICOProxyBuyer.isPresale (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol) should be declared external
PreICOProxyBuyer.fallback (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in PreICOProxyBuyer.refund (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1171-1184):
	-! (investor.call.value(amount)()) /unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1180-1182
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#255) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#427-460) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#429-430) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#430-435) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#435-436) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#436) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#436) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#436-439) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#597-599) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#336-337) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#780-787) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#902) is not in mixedCase
Function 'PreICOProxyBuyer.PreICOProxyBuyer' (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1011-1033) is not in mixedCase
Parameter '_owner' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1013) is not in mixedCase
Parameter '_freezeEndsAt' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1013-1015) is not in mixedCase
Parameter '_weiMinimumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1015) is not in mixedCase
Parameter '_weiMaximumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1015) is not in mixedCase
Parameter '_weiCap' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1015-1017) is not in mixedCase
Parameter '_crowdsale' of PreICOProxyBuyer.setCrowdsale (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol#1189-1191) is not in mixedCase
Parameter '_timeLock' of PreICOProxyBuyer.setTimeLock (/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xe18fa7b1e1a7af9b338d3fb89c23a83d0c2e4b5d.sol analyzed (12 contracts), 127 result(s) found