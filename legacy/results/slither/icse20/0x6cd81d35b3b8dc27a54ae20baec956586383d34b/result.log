INFO:Slither:Compilation warnings/errors on /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:31:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:47:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:53:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:80:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:85:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:301:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:311:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:315:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:321:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:328:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:339:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:361:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:365:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:373:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:391:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:397:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!multisigWallet.send(weiAmount)) throw;
                                         ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:441:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:442:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:450:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:451:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:459:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:460:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:498:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:519:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:558:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time < now) { throw; }
                      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:561:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time > endsAt) { throw; }
                         ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:564:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (startsAt < now) { throw; }
                          ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:583:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:600:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:615:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:627:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:639:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:643:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:700:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:790:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:846:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:905:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:912:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:930:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:11:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMathLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:30:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:788:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:400:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:432:7: Warning: Invoking events without "emit" prefix is deprecated.
      Invested(receiver, weiAmount, tokenAmount, 0);
      ^-------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:440:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:440:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:529:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:541:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:549:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:567:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(endsAt);
    ^---------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:587:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:642:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:822:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:832:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:849:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:891:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:899:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:13:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:19:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:58:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:116:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:156:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:169:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:170:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:173:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:174:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:301:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:338:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:514:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:527:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:538:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:547:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParticipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:555:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:580:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:595:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:685:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:724:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:819:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:826:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:836:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:840:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:853:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:930:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:937:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:937:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:937:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:937:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:30:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:108:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:116:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:144:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:690:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:772:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:776:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:780:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:784:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:788:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol:815:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#513-528):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#525-527)
	State variables written after the call(s):
	- finalized (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#527)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#358-412):
	External calls:
	- state = getState() (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#366-368)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#382-385)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#400-404)
	- weiRaised (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#400)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMathLib.assert (function @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#30-41) shadows built-in symbol "assert"
SafeMath.assert (function @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#819-820) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#310-349):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#327-331)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#343-345)
	- minimumFundingGoal (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#348-349)
	- multisigWallet (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#331-332)
	- startsAt (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#337-338)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#358-412):
	External calls:
	- state = getState() (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#366-368)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#382-385)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#391-396)
	- investorCount (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#390)
	- tokenAmountOf (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#397-399)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#684-714) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#700-714)
	- block.timestamp < startsAt (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#698-714)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#214-216)
FractionalERC20.decimals should be constant (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#198)
MintableToken.mintingFinished should be constant (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#898-899)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#39-41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#87-89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#333-335:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#336:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#343:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#346:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#352:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#377:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#382:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#387:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#407:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#409-410:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#452:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#453-455:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#460:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#465:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#473:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#476:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#518:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#538:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#579:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#582-583:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#591:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#607:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#622-623:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#638:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#649:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#663:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#670:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#721-722:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#820:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#881:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#937:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#938:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#13-19) should be declared external
SafeMathLib.minus (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#19-24) should be declared external
SafeMathLib.plus (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#24-30) should be declared external
Ownable.transferOwnership (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#59-70) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#112-114) should be declared external
PricingStrategy.isSane (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#121-124) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#131-138) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#149-151) should be declared external
FinalizeAgent.isSane (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#156-165) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#168-169) should be declared external
StandardToken.balanceOf (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#863-865) should be declared external
ERC20.balanceOf (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#172-173) should be declared external
StandardToken.allowance (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#885-889) should be declared external
ERC20.allowance (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#173-174) should be declared external
ERC20.transfer (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#174-175) should be declared external
StandardToken.transfer (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#842-845) should be declared external
StandardToken.transferFrom (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#845-863) should be declared external
ERC20.transferFrom (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#175-176) should be declared external
ERC20.approve (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#176-181) should be declared external
StandardToken.approve (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#865-885) should be declared external
Crowdsale.fallback (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#349-352) should be declared external
Crowdsale.preallocate (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#426-447) should be declared external
Crowdsale.buyWithSignedAddress (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#483-492) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#492-496) should be declared external
Crowdsale.buy (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#502-506) should be declared external
Crowdsale.finalize (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#513-528) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#533-539) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#541-547) should be declared external
Crowdsale.setRequireSignedAddress (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#554-563) should be declared external
Crowdsale.setEarlyParticipantWhitelist (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#567-573) should be declared external
Crowdsale.setStartsAt (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#576-593) should be declared external
Crowdsale.setEndsAt (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#605-608) should be declared external
Crowdsale.setMultisig (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#634-639) should be declared external
Crowdsale.loadRefund (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#647-649) should be declared external
Crowdsale.refund (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#656-670) should be declared external
Crowdsale.isFinalizerSane (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#675-676) should be declared external
Crowdsale.isPricingSane (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#677-679) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#717) should be declared external
Crowdsale.isCrowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#718-719) should be declared external
StandardToken.isToken (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#840-842) should be declared external
MintableToken.mint (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#919-930) should be declared external
MintableToken.setMintAgent (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#930-935) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#49-52) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#310-349) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#310-311) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#311-315) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#315-318) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#318) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#318-320) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#320-321) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#555-557) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#614) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#214-216) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#864-865) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#885-886) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#886) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#842) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#842) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#846) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#846) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#846) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#866) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#866) is not in mixedCase
Function 'MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale' (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol#949-952) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale (/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x6cd81d35b3b8dc27a54ae20baec956586383d34b.sol analyzed (12 contracts), 109 result(s) found