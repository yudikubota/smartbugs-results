INFO:Slither:Compilation warnings/errors on /unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ownerOnly() public { owner = msg.sender; }
    ^-------------------------------------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:48:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Game() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:83:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(msg.sender) & keccak256(i)]=cows(cow_code,true,time,true,0,time);
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:83:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            user[keccak256(msg.sender) & keccak256(i)]=cows(cow_code,true,time,true,0,time);
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:83:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(msg.sender) & keccak256(i)]=cows(cow_code,true,time,true,0,time);
                                         ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:83:42: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            user[keccak256(msg.sender) & keccak256(i)]=cows(cow_code,true,time,true,0,time);
                                         ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                     ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                     ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                                        ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:41: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                                        ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:78: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                                                                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:78: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                                                                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:97: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                                                                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:98:97: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            if (user[keccak256(gamer) & keccak256(i)].cow_live==true && user[keccak256(gamer) & keccak256(i)].place) {
                                                                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:101:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                uint datedeadcow=user[keccak256(gamer) & keccak256(i)].date_buy+time_to_live;
                                      ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:101:39: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                uint datedeadcow=user[keccak256(gamer) & keccak256(i)].date_buy+time_to_live;
                                      ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:101:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                uint datedeadcow=user[keccak256(gamer) & keccak256(i)].date_buy+time_to_live;
                                                         ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:101:58: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                uint datedeadcow=user[keccak256(gamer) & keccak256(i)].date_buy+time_to_live;
                                                         ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:107:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                         ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:107:42: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                         ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:107:61: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                                            ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:107:61: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                                            ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:111:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:111:30: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:111:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:111:49: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:113:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].cow_live=false;
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:113:30: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].cow_live=false;
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:113:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].cow_live=false;
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:113:49: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].cow_live=false;
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:115:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:115:30: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:115:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:115:49: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:120:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                         ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:120:42: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                         ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:120:61: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                                            ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:120:61: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                    time_milk=(time-user[keccak256(gamer) & keccak256(i)].date_milk)/time_to_milk;
                                                            ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:123:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:123:30: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:123:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:123:49: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].milk+=(volume_milk*time_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:124:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:124:30: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:124:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:124:49: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                        user[keccak256(gamer) & keccak256(i)].date_milk+=(time_milk*time_to_milk);
                                                ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:150:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                milk_to_sale += user[keccak256(msg.sender) & keccak256(i)].milk;
                                     ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:150:38: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                milk_to_sale += user[keccak256(msg.sender) & keccak256(i)].milk;
                                     ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:150:62: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                milk_to_sale += user[keccak256(msg.sender) & keccak256(i)].milk;
                                                             ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:150:62: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                milk_to_sale += user[keccak256(msg.sender) & keccak256(i)].milk;
                                                             ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:152:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                user[keccak256(msg.sender) & keccak256(i)].milk = 0;
                     ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:152:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
                user[keccak256(msg.sender) & keccak256(i)].milk = 0;
                     ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:152:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                user[keccak256(msg.sender) & keccak256(i)].milk = 0;
                                             ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:152:46: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
                user[keccak256(msg.sender) & keccak256(i)].milk = 0;
                                             ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                                         ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:42: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                                         ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:87: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                                                                                      ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:87: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                                                                                      ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:111: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                                                                                                              ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:163:111: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        if (user[keccak256(msg.sender) & keccak256(num_cow)].cow_live == true && user[keccak256(msg.sender) & keccak256(num_cow)].place==true) {
                                                                                                              ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                 ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                 ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                                    ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:37: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                                    ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                                                                     ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:70: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                                                                     ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:94: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                                                                                             ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:169:94: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            user[keccak256(gamer) & keccak256(cows_count)]=cows(user[keccak256(msg.sender) & keccak256(num_cow)].cow,
                                                                                             ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:170:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            true,user[keccak256(msg.sender) & keccak256(num_cow)].date_buy,
                      ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:170:23: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            true,user[keccak256(msg.sender) & keccak256(num_cow)].date_buy,
                      ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:170:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            true,user[keccak256(msg.sender) & keccak256(num_cow)].date_buy,
                                              ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:170:47: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            true,user[keccak256(msg.sender) & keccak256(num_cow)].date_buy,
                                              ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:171:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live,0,now);
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:171:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live,0,now);
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:171:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live,0,now);
                                         ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:171:42: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live,0,now);
                                         ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:174:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live= false;
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:174:18: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live= false;
                 ^-------------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:174:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live= false;
                                         ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:174:42: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
            user[keccak256(msg.sender) & keccak256(num_cow)].cow_live= false;
                                         ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:184:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live = false;
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:184:14: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live = false;
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:184:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live = false;
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:184:33: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live = false;
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:197:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        msg.sender.transfer(this.balance);
                            ^----------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:215:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (user[keccak256(gamer) & keccak256(num_cow)].cow,
                     ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:215:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        return (user[keccak256(gamer) & keccak256(num_cow)].cow,
                     ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:215:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (user[keccak256(gamer) & keccak256(num_cow)].cow,
                                        ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:215:41: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        return (user[keccak256(gamer) & keccak256(num_cow)].cow,
                                        ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:216:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].place,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:216:14: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].place,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:216:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].place,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:216:33: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].place,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:217:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].date_buy,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:217:14: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].date_buy,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:217:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].date_buy,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:217:33: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].date_buy,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:218:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:218:14: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:218:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:218:33: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].cow_live,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:219:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].milk,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:219:14: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].milk,
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:219:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].milk,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:219:33: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].milk,
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:220:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].date_milk);   
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:220:14: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].date_milk);   
             ^--------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:220:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        user[keccak256(gamer) & keccak256(num_cow)].date_milk);   
                                ^----------------^
/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:220:33: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        user[keccak256(gamer) & keccak256(num_cow)].date_milk);   
                                ^----------------^

INFO:Detectors:[93m
Game.MilkCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#103-152) uses a dangerous strict equality:
	- user[keccak256()(gamer) & keccak256()(i)].cow_live == true && user[keccak256()(gamer) & keccak256()(i)].place
Game.MilkCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#103-152) uses a dangerous strict equality:
	- user[keccak256()(gamer) & keccak256()(i)].cow_live == true && user[keccak256()(gamer) & keccak256()(i)].place
Game.TransferCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#184-220) uses a dangerous strict equality:
	- user[keccak256()(msg.sender) & keccak256()(num_cow)].cow_live == true && user[keccak256()(msg.sender) & keccak256()(num_cow)].place == true
	- user[keccak256()(msg.sender) & keccak256()(num_cow)].cow_live == true && user[keccak256()(msg.sender) & keccak256()(num_cow)].place == true
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Game.pay (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#85-86) should be declared external
Game.saleMilk (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#157-180) should be declared external
Game.TransferCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#184-220) should be declared external
Game.DeadCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#224-228) should be declared external
Game.TelegaSend (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) should be declared external
Game.SendOwner (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) should be declared external
Game.TelegaOut (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) should be declared external
Game.CountCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) should be declared external
Game.StatusCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) should be declared external
Game.Statustelega (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol:
	- pragma solidity^0.4.18 (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'ownerOnly' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#3-14) is not in CapWords
Struct 'Game.cows' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#21-28) is not in CapWords
Function 'Game.Game' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#58-84) is not in mixedCase
Function 'Game.MilkCow' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#103-152) is not in mixedCase
Function 'Game.TransferCow' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#184-220) is not in mixedCase
Parameter 'num_cow' of Game.TransferCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#187) is not in mixedCase
Function 'Game.DeadCow' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#224-228) is not in mixedCase
Parameter 'num_cow' of Game.DeadCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#224-225) is not in mixedCase
Function 'Game.TelegaSend' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Function 'Game.SendOwner' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Function 'Game.TelegaOut' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Function 'Game.CountCow' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Function 'Game.StatusCow' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Parameter 'num_cow' of Game.StatusCow (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Function 'Game.Statustelega' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol) is not in mixedCase
Variable 'Game.cow_code' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#19-20) is not in mixedCase
Variable 'Game.users_cows' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#31-32) is not in mixedCase
Variable 'Game.volume_milk' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#44-45) is not in mixedCase
Variable 'Game.time_to_milk' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#48-50) is not in mixedCase
Variable 'Game.time_to_live' (/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol#51) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/27/0x15d8502417beaebe6abbb48f07b6b31fbcccff52.sol analyzed (2 contracts), 33 result(s) found