INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:
/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:32:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:840:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function FeeWallet(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:922:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function DexdexERC20(ITraders _traders, IFeeWallet _feeWallet) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:182:13: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
            loop:
            ^--^
/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:182:13: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
            loop:
            ^--^
/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:187:13: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
            jumpi(loop , lt(loop_index , chunk_count))
            ^----------------------------------------^

INFO:Detectors:[91m
DexdexERC20.buy (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#982-1031) sends eth to arbitrary user
	Dangerous calls:
	- destinationAddr.transfer(address(this).balance) (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#1023-1025)
DexdexERC20.fillOrder (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#1131-1155) sends eth to arbitrary user
	Dangerous calls:
	- address(trader).transfer(volumeEth) (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#1150-1151)
DexdexERC20.collectBuyFee (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol) sends eth to arbitrary user
	Dangerous calls:
	- feeWallet.collect.value(fee)(affiliate) (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol)
DexdexERC20.collectSellFee (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol) sends eth to arbitrary user
	Dangerous calls:
	- feeWallet.collect.value(fee)(affiliate) (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
BytesToTypes.bytesToAddress (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#138-145) is declared view but contains assembly code
BytesToTypes.bytesToBool (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#146-155) is declared view but contains assembly code
BytesToTypes.getStringSize (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#155-170) is declared view but contains assembly code
BytesToTypes.slice (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#197-257) is declared view but contains assembly code
BytesToTypes.bytesToBytes32 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#257-263) is declared view but contains assembly code
BytesToTypes.bytesToInt8 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#272-279) is declared view but contains assembly code
BytesToTypes.bytesToInt16 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#279-286) is declared view but contains assembly code
BytesToTypes.bytesToInt24 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#286-293) is declared view but contains assembly code
BytesToTypes.bytesToInt32 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#293-300) is declared view but contains assembly code
BytesToTypes.bytesToInt40 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#301-308) is declared view but contains assembly code
BytesToTypes.bytesToInt48 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#308-315) is declared view but contains assembly code
BytesToTypes.bytesToInt56 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#316-323) is declared view but contains assembly code
BytesToTypes.bytesToInt64 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#323-330) is declared view but contains assembly code
BytesToTypes.bytesToInt72 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#331-338) is declared view but contains assembly code
BytesToTypes.bytesToInt80 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#338-345) is declared view but contains assembly code
BytesToTypes.bytesToInt88 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#345-352) is declared view but contains assembly code
BytesToTypes.bytesToInt96 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#352-359) is declared view but contains assembly code
BytesToTypes.bytesToInt104 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#359-366) is declared view but contains assembly code
BytesToTypes.bytesToInt112 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#366-373) is declared view but contains assembly code
BytesToTypes.bytesToInt120 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#373-380) is declared view but contains assembly code
BytesToTypes.bytesToInt128 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#380-387) is declared view but contains assembly code
BytesToTypes.bytesToInt136 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#388-395) is declared view but contains assembly code
BytesToTypes.bytesToInt144 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#396-402) is declared view but contains assembly code
BytesToTypes.bytesToInt152 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#405-411) is declared view but contains assembly code
BytesToTypes.bytesToInt160 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#412-419) is declared view but contains assembly code
BytesToTypes.bytesToInt168 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#419-426) is declared view but contains assembly code
BytesToTypes.bytesToInt176 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#426-433) is declared view but contains assembly code
BytesToTypes.bytesToInt184 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#433-440) is declared view but contains assembly code
BytesToTypes.bytesToInt192 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#440-447) is declared view but contains assembly code
BytesToTypes.bytesToInt200 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#447-454) is declared view but contains assembly code
BytesToTypes.bytesToInt208 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#454-461) is declared view but contains assembly code
BytesToTypes.bytesToInt216 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#461-468) is declared view but contains assembly code
BytesToTypes.bytesToInt224 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#468-475) is declared view but contains assembly code
BytesToTypes.bytesToInt232 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#475-482) is declared view but contains assembly code
BytesToTypes.bytesToInt240 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#482-489) is declared view but contains assembly code
BytesToTypes.bytesToInt248 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#489-496) is declared view but contains assembly code
BytesToTypes.bytesToInt256 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#496-503) is declared view but contains assembly code
BytesToTypes.bytesToUint8 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#504-511) is declared view but contains assembly code
BytesToTypes.bytesToUint16 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#511-518) is declared view but contains assembly code
BytesToTypes.bytesToUint24 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#519-526) is declared view but contains assembly code
BytesToTypes.bytesToUint32 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#526-533) is declared view but contains assembly code
BytesToTypes.bytesToUint40 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#534-541) is declared view but contains assembly code
BytesToTypes.bytesToUint48 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#541-548) is declared view but contains assembly code
BytesToTypes.bytesToUint56 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#548-555) is declared view but contains assembly code
BytesToTypes.bytesToUint64 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#555-562) is declared view but contains assembly code
BytesToTypes.bytesToUint72 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#562-569) is declared view but contains assembly code
BytesToTypes.bytesToUint80 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#569-576) is declared view but contains assembly code
BytesToTypes.bytesToUint88 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#576-583) is declared view but contains assembly code
BytesToTypes.bytesToUint96 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#583-590) is declared view but contains assembly code
BytesToTypes.bytesToUint104 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#590-597) is declared view but contains assembly code
BytesToTypes.bytesToUint112 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#598-604) is declared view but contains assembly code
BytesToTypes.bytesToUint120 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#605-612) is declared view but contains assembly code
BytesToTypes.bytesToUint128 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#613-620) is declared view but contains assembly code
BytesToTypes.bytesToUint136 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#622-629) is declared view but contains assembly code
BytesToTypes.bytesToUint144 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#629-636) is declared view but contains assembly code
BytesToTypes.bytesToUint152 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#636-643) is declared view but contains assembly code
BytesToTypes.bytesToUint160 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#643-650) is declared view but contains assembly code
BytesToTypes.bytesToUint168 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#650-657) is declared view but contains assembly code
BytesToTypes.bytesToUint176 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#657-664) is declared view but contains assembly code
BytesToTypes.bytesToUint184 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#664-671) is declared view but contains assembly code
BytesToTypes.bytesToUint192 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#671-678) is declared view but contains assembly code
BytesToTypes.bytesToUint200 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#678-685) is declared view but contains assembly code
BytesToTypes.bytesToUint208 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#685-692) is declared view but contains assembly code
BytesToTypes.bytesToUint216 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#692-699) is declared view but contains assembly code
BytesToTypes.bytesToUint224 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#699-706) is declared view but contains assembly code
BytesToTypes.bytesToUint232 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#706-718) is declared view but contains assembly code
BytesToTypes.bytesToUint240 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#718-723) is declared view but contains assembly code
BytesToTypes.bytesToUint248 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#723-726) is declared view but contains assembly code
BytesToTypes.bytesToUint256 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#726-731) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[92m
DexdexERC20.trade has external calls inside a loop:
	- trader = traders.getTrader(protocolId) (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#1109-1111)
DexdexERC20.trade has external calls inside a loop:
	- dataLength = trader.getDataLength() (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#1113)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
BytesToTypes.bytesToAddress uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#138-145)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#142-145
BytesToTypes.bytesToBool uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#146-155)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#151
BytesToTypes.getStringSize uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#155-170)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#157-170
BytesToTypes.bytesToString uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#170-197)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#175-197
BytesToTypes.slice uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#197-257)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#201-257
BytesToTypes.bytesToBytes32 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#257-263)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#260-263
BytesToTypes.bytesToInt8 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#272-279)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#276-279
BytesToTypes.bytesToInt16 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#279-286)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#286
BytesToTypes.bytesToInt24 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#286-293)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#293
BytesToTypes.bytesToInt32 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#293-300)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#300
BytesToTypes.bytesToInt40 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#301-308)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#307-308
BytesToTypes.bytesToInt48 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#308-315)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#314-315
BytesToTypes.bytesToInt56 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#316-323)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#321-323
BytesToTypes.bytesToInt64 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#323-330)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#328-330
BytesToTypes.bytesToInt72 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#331-338)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#335-338
BytesToTypes.bytesToInt80 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#338-345)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#342-345
BytesToTypes.bytesToInt88 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#345-352)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#349-352
BytesToTypes.bytesToInt96 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#352-359)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#356-359
BytesToTypes.bytesToInt104 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#359-366)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#363-366
BytesToTypes.bytesToInt112 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#366-373)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#370-373
BytesToTypes.bytesToInt120 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#373-380)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#377-380
BytesToTypes.bytesToInt128 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#380-387)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#384-387
BytesToTypes.bytesToInt136 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#388-395)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#392-395
BytesToTypes.bytesToInt144 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#396-402)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#399-402
BytesToTypes.bytesToInt152 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#405-411)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#407-411
BytesToTypes.bytesToInt160 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#412-419)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#414-419
BytesToTypes.bytesToInt168 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#419-426)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#422-426
BytesToTypes.bytesToInt176 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#426-433)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#429-433
BytesToTypes.bytesToInt184 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#433-440)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#436-440
BytesToTypes.bytesToInt192 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#440-447)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#443-447
BytesToTypes.bytesToInt200 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#447-454)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#450-454
BytesToTypes.bytesToInt208 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#454-461)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#457-461
BytesToTypes.bytesToInt216 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#461-468)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#464-468
BytesToTypes.bytesToInt224 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#468-475)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#472-475
BytesToTypes.bytesToInt232 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#475-482)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#479-482
BytesToTypes.bytesToInt240 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#482-489)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#487-489
BytesToTypes.bytesToInt248 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#489-496)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#496
BytesToTypes.bytesToInt256 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#496-503)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#503
BytesToTypes.bytesToUint8 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#504-511)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#510-511
BytesToTypes.bytesToUint16 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#511-518)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#517-518
BytesToTypes.bytesToUint24 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#519-526)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#524-526
BytesToTypes.bytesToUint32 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#526-533)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#531-533
BytesToTypes.bytesToUint40 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#534-541)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#538-541
BytesToTypes.bytesToUint48 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#541-548)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#545-548
BytesToTypes.bytesToUint56 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#548-555)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#552-555
BytesToTypes.bytesToUint64 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#555-562)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#559-562
BytesToTypes.bytesToUint72 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#562-569)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#566-569
BytesToTypes.bytesToUint80 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#569-576)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#573-576
BytesToTypes.bytesToUint88 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#576-583)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#580-583
BytesToTypes.bytesToUint96 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#583-590)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#587-590
BytesToTypes.bytesToUint104 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#590-597)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#594-597
BytesToTypes.bytesToUint112 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#598-604)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#601-604
BytesToTypes.bytesToUint120 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#605-612)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#609-612
BytesToTypes.bytesToUint128 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#613-620)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#617-620
BytesToTypes.bytesToUint136 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#622-629)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#624-629
BytesToTypes.bytesToUint144 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#629-636)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#631-636
BytesToTypes.bytesToUint152 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#636-643)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#639-643
BytesToTypes.bytesToUint160 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#643-650)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#646-650
BytesToTypes.bytesToUint168 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#650-657)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#653-657
BytesToTypes.bytesToUint176 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#657-664)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#660-664
BytesToTypes.bytesToUint184 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#664-671)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#667-671
BytesToTypes.bytesToUint192 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#671-678)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#674-678
BytesToTypes.bytesToUint200 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#678-685)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#681-685
BytesToTypes.bytesToUint208 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#685-692)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#689-692
BytesToTypes.bytesToUint216 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#692-699)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#697-699
BytesToTypes.bytesToUint224 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#699-706)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#706
BytesToTypes.bytesToUint232 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#706-718)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#715-718
BytesToTypes.bytesToUint240 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#718-723)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#720-723
BytesToTypes.bytesToUint248 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#723-726)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#725-726
BytesToTypes.bytesToUint256 uses assembly (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#726-731)
	- /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#730-731
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#43-54) should be declared external
ITrader.getDataLength (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#788-789) should be declared external
ITrader.getProtocol (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#789-791) should be declared external
ITrader.getAvailableVolume (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#791-792) should be declared external
ITrader.isExpired (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#795-798) should be declared external
ITrader.trade (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#798-801) should be declared external
ITrader.getFillVolumes (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#802-807) should be declared external
ITraders.addTrader (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#811-812) should be declared external
ITraders.removeTrader (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#815-816) should be declared external
ITraders.getTrader (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#816-822) should be declared external
ITraders.isValidTraderAddress (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#825-828) should be declared external
Members.addMember (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#843-846) should be declared external
Members.removeMember (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#848-851) should be declared external
IFeeWallet.getFee (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#851-855) should be declared external
FeeWallet.getFee (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#889-892) should be declared external
FeeWallet.collect (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#900-922) should be declared external
IFeeWallet.collect (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#855-856) should be declared external
FeeWallet.changeServiceAccount (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#872-875) should be declared external
FeeWallet.changeServicePercentage (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#876-880) should be declared external
FeeWallet.changeAffiliatePercentage (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#882-884) should be declared external
FeeWallet.withdraw (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#922-928) should be declared external
DexdexERC20.fallback (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#967-970) should be declared external
DexdexERC20.changeFeeWallet (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#972-975) should be declared external
DexdexERC20.changeTraders (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#976-977) should be declared external
DexdexERC20.changeTradingEnabled (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#979-981) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol:
	- pragma solidity^0.4.21 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#19-24): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#33-39) is not in mixedCase
Parameter '_bytes' of BytesToTypes.slice (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#198) is not in mixedCase
Parameter '_start' of BytesToTypes.slice (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#198-199) is not in mixedCase
Parameter '_length' of BytesToTypes.slice (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#199) is not in mixedCase
Parameter '_member' of Members.isValidMember (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#838) is not in mixedCase
Parameter '_member' of Members.addMember (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#845) is not in mixedCase
Parameter '_member' of Members.removeMember (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#850) is not in mixedCase
Parameter '_affiliate' of FeeWallet.collect (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#902-903) is not in mixedCase
Function 'FeeWallet.FeeWallet' (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#865-871) is not in mixedCase
Parameter '_serviceAccount' of FeeWallet.FeeWallet (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#865-866) is not in mixedCase
Parameter '_servicePercentage' of FeeWallet.FeeWallet (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#866) is not in mixedCase
Parameter '_affiliatePercentage' of FeeWallet.FeeWallet (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#866-867) is not in mixedCase
Parameter '_serviceAccount' of FeeWallet.changeServiceAccount (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#872) is not in mixedCase
Parameter '_servicePercentage' of FeeWallet.changeServicePercentage (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#877-879) is not in mixedCase
Parameter '_affiliatePercentage' of FeeWallet.changeAffiliatePercentage (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#883) is not in mixedCase
Function 'DexdexERC20.DexdexERC20' (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#953-963) is not in mixedCase
Parameter '_traders' of DexdexERC20.DexdexERC20 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#954-955) is not in mixedCase
Parameter '_feeWallet' of DexdexERC20.DexdexERC20 (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#955-958) is not in mixedCase
Parameter '_feeWallet' of DexdexERC20.changeFeeWallet (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#972-973) is not in mixedCase
Parameter '_traders' of DexdexERC20.changeTraders (/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol#976-977) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x0c577fbf29f8797d9d29a33de59001b872a1d4dc.sol analyzed (10 contracts), 191 result(s) found