INFO:Slither:Compilation warnings/errors on /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:79:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:177:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SmartBillions() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:51:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, owner, _value);
        ^---------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:56:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:85:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:96:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:313:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(_amount > 0 && this.balance >= (investBalance * 9 / 10) + walletBalance + _amount);
                               ^----------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:315:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            require((_amount <= this.balance / 400) && coldStoreLast + 4 * 60 * 24 * 7 <= block.number);
                                ^----------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:367:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint maxpay = this.balance / 2;
                      ^----------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:426:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0),msg.sender,senderBalance); // for etherscan
        ^-------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:427:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0),owner,ownerBalance); // for etherscan
        ^-------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:428:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0),animator,animatorBalance); // for etherscan
        ^-------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:429:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogInvestment(msg.sender,_partner,investing);
        ^------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:439:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender,address(0),balances[msg.sender]); // for etherscan
        ^--------------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:476:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogDividend(_who,balance,last);
        ^----------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:550:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogLate(msg.sender,player.blockNum,block.number);
            ^----------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:565:21: Warning: Invoking events without "emit" prefix is deprecated.
                    LogLate(msg.sender,player.blockNum,block.number);
                    ^----------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:574:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogLate(msg.sender,player.blockNum,block.number);
                ^----------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:581:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogWin(msg.sender,uint(player.betHash),uint(hash),prize);
            ^------------------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:584:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogRecordWin(msg.sender,prize);
                ^----------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:589:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogLoss(msg.sender,uint(player.betHash),uint(hash));
            ^-------------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:618:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return playSystem(uint(keccak256(msg.sender,block.number)), address(0));
                               ^--------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:626:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return playSystem(uint(keccak256(msg.sender,block.number)), _partner);
                               ^--------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:660:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogBet(msg.sender,uint(bethash),hashNext,msg.value);
            ^-------------------------------------------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:521:43: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            return(betPrize(player,uint24(block.blockhash(player.blockNum))));
                                          ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:557:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            hash = uint24(block.blockhash(player.blockNum));
                          ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:699:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        return( ( uint(block.blockhash(_lastb  )) & 0xFFFFFF )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:700:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+1)) & 0xFFFFFF ) << 24 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:701:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+2)) & 0xFFFFFF ) << 48 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:702:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+3)) & 0xFFFFFF ) << 72 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:703:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+4)) & 0xFFFFFF ) << 96 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:704:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+5)) & 0xFFFFFF ) << 120 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:705:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+6)) & 0xFFFFFF ) << 144 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:706:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+7)) & 0xFFFFFF ) << 168 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:707:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+8)) & 0xFFFFFF ) << 192 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:708:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            | ( ( uint(block.blockhash(_lastb+9)) & 0xFFFFFF ) << 216 )
                       ^-------------^
/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:481:5: Warning: Function state mutability can be restricted to pure
    function betPrize(Bet _player, uint24 _hash) constant private returns (uint) { // house fee 13.85%
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ERC20Basic (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#15-25) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#20-21)
ERC20 (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#25-32) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#27-28)
	-approve (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#28-29)
BasicToken (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#32-70) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#45-60)
StandardToken (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#70-115) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#78-88)
	-approve (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#93-100)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
SmartBillions.addHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#689-705) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize)
SmartBillions.addHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#689-705) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize)
SmartBillions.betOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#524-549) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum <= 1) || (block.number < player.blockNum) || (block.number >= player.blockNum + (10 * hashesSize))
	- hash == 0x1000000
SmartBillions.addHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#689-705) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize)
SmartBillions.betOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#524-549) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum <= 1) || (block.number < player.blockNum) || (block.number >= player.blockNum + (10 * hashesSize))
	- hash == 0x1000000
SmartBillions.betPrize (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#491-522) uses a dangerous strict equality:
	- (hit & 0xF) == 0
	- (hit & 0xF0) == 0
	- (hit & 0xF0) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
SmartBillions.addHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#689-705) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize)
SmartBillions.betOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#524-549) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum <= 1) || (block.number < player.blockNum) || (block.number >= player.blockNum + (10 * hashesSize))
	- hash == 0x1000000
SmartBillions.betPrize (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#491-522) uses a dangerous strict equality:
	- (hit & 0xF) == 0
	- (hit & 0xF0) == 0
	- (hit & 0xF0) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
SmartBillions.putHash (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#750-761) uses a dangerous strict equality:
	- lastb == 0 || block.number <= lastb + 10
SmartBillions.addHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#689-705) uses a dangerous strict equality:
	- require(bool)(hashFirst == 0 && _sadd > 0 && _sadd <= hashesSize)
SmartBillions.betOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#524-549) uses a dangerous strict equality:
	- (player.value == 0) || (player.blockNum <= 1) || (block.number < player.blockNum) || (block.number >= player.blockNum + (10 * hashesSize))
	- hash == 0x1000000
SmartBillions.betPrize (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#491-522) uses a dangerous strict equality:
	- (hit & 0xF) == 0
	- (hit & 0xF0) == 0
	- (hit & 0xF0) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF00) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF0000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
	- (hit & 0xF00000) == 0
SmartBillions.putHash (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#750-761) uses a dangerous strict equality:
	- lastb == 0 || block.number <= lastb + 10
SmartBillions.won (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#550-609) uses a dangerous strict equality:
	- player.blockNum == 0
	- (player.value == 0) || (player.blockNum == 1)
	- (player.value == 0) || (player.blockNum == 1)
	- hash == 0x1000000
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
ERC20.allowance.owner (local variable @ /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#26) shadows:
	- ERC20Basic.owner (state variable @ /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#17-18)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
SmartBillions.investBalanceMax should be constant (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#141-143)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#539-541:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#566:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#708-731:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#19-20) should be declared external
BasicToken.balanceOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#64-70) should be declared external
BasicToken.transfer (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#45-60) should be declared external
ERC20Basic.transfer (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#20-21) should be declared external
ERC20.allowance (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#26-27) should be declared external
StandardToken.allowance (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#105-115) should be declared external
ERC20.transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#27-28) should be declared external
StandardToken.transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#78-88) should be declared external
ERC20.approve (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#28-29) should be declared external
StandardToken.approve (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#93-100) should be declared external
SmartBillions.playRandom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#639-643) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol:
	- pragma solidity^0.4.17 (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#65) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#45) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#45-46) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#105-106) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#107-110) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#79) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#79) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#79) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#93) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#93-94) is not in mixedCase
Parameter '_who' of SmartBillions.commitDividend (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#470) is not in mixedCase
Function 'SmartBillions.SmartBillions' (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#181-191) is not in mixedCase
Parameter '_owner' of SmartBillions.walletBalanceOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#204) is not in mixedCase
Parameter '_owner' of SmartBillions.walletPeriodOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#212) is not in mixedCase
Parameter '_owner' of SmartBillions.walletBlockOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#222) is not in mixedCase
Parameter '_owner' of SmartBillions.betValueOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#229-230) is not in mixedCase
Parameter '_owner' of SmartBillions.betHashOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#238) is not in mixedCase
Parameter '_owner' of SmartBillions.betBlockNumberOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#245) is not in mixedCase
Parameter '_who' of SmartBillions.changeOwner (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#273) is not in mixedCase
Parameter '_who' of SmartBillions.changeAnimator (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#284) is not in mixedCase
Parameter '_when' of SmartBillions.setInvestStart (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#293) is not in mixedCase
Parameter '_maxsum' of SmartBillions.setBetMax (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#306) is not in mixedCase
Parameter '_amount' of SmartBillions.coldStore (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#315) is not in mixedCase
Parameter '_amount' of SmartBillions.pay (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#377) is not in mixedCase
Parameter '_partner' of SmartBillions.invest (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#402) is not in mixedCase
Parameter '_player' of SmartBillions.betPrize (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#491-492) is not in mixedCase
Parameter '_hash' of SmartBillions.betPrize (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#492) is not in mixedCase
Parameter '_who' of SmartBillions.betOf (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#524-525) is not in mixedCase
Parameter '_partner' of SmartBillions.playRandom (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#639) is not in mixedCase
Parameter '_hash' of SmartBillions.playSystem (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#646) is not in mixedCase
Parameter '_partner' of SmartBillions.playSystem (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#646) is not in mixedCase
Parameter '_sadd' of SmartBillions.addHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#692) is not in mixedCase
Parameter '_lastb' of SmartBillions.calcHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#707-708) is not in mixedCase
Parameter '_delta' of SmartBillions.calcHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#708) is not in mixedCase
Parameter '_block' of SmartBillions.getHash (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#732-733) is not in mixedCase
Parameter '_num' of SmartBillions.putHashes (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol) is not in mixedCase
Constant 'SmartBillions.hashesSize' (/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol#158) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/7/0x103c2c150a2dbcc277ee084c59881978060c8c22.sol analyzed (6 contracts), 63 result(s) found