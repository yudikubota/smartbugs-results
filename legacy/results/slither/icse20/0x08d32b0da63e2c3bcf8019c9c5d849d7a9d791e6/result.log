INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:16:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:21:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:26:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newOwner == 0x0) throw;
                             ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:58:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:183:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DentacoinToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:218:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value < DCNForGas) throw;                                      // Prevents drain and spam
                                ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:237:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                    if(!msg.sender.send(gasForDCN)) throw;                  // Send eth to sender
                                                    ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:240:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                    if(!_to.send(gasForDCN)) throw;                         // Send eth to recipient
                                             ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:243:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        } else { throw; }
                 ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:249:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (buyPriceEth == 0 || msg.value < buyPriceEth) throw;             // Avoid dividing 0, sending small amounts and spam
                                                         ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:251:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[this] < amount) throw;                                 // Check if it has enough to sell
                                     ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:261:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (sellPriceEth == 0 || amount < DCNForGas) throw;                 // Avoid selling and spam
                                                     ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:262:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[msg.sender] < amount) throw;                           // Check if the sender has enough to sell
                                           ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:264:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (safeSub(this.balance, revenue) < gasReserve) throw;             // Keep min amount of eth in contract to provide gas for transactions
                                                         ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:266:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                                          // To do this last to avoid recursion attacks
            ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:280:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                                          // To do this last to avoid recursion attacks
            ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:284:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[this] < dcn) throw;                                    // Check if it has enough to sell
                                  ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:294:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!directTradeAllowed) throw;
                                     ^---^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:57:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:125:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:137:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:148:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:229:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(msg.sender, _to, _value);                          // Notify anyone listening that this transfer took place
                ^-------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:234:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(msg.sender, _to, safeSub(_value, DCNForGas));      // Notify anyone listening that this transfer took place
                ^---------------------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:254:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                                 // Execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:264:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (safeSub(this.balance, revenue) < gasReserve) throw;             // Keep min amount of eth in contract to provide gas for transactions
                    ^----------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:270:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, msg.sender, revenue);                            // Execute an event reflecting on the change
            ^---------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:282:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, msg.sender, eth);                                // Execute an event reflecting on the change
            ^-----------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:287:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, dcn);                                    // Execute an event reflecting the change
        ^-----------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:81:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:87:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:94:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:117:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:130:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:142:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:183:5: Warning: No visibility specified. Defaulting to "public". 
    function DentacoinToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:189:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrices(uint256 newBuyPriceEth, uint256 newSellPriceEth) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:193:5: Warning: No visibility specified. Defaulting to "public". 
    function setGasForDCN(uint newGasAmountInWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:196:5: Warning: No visibility specified. Defaulting to "public". 
    function setDCNForGas(uint newDCNAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:199:5: Warning: No visibility specified. Defaulting to "public". 
    function setGasReserve(uint newGasReserveInWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:202:5: Warning: No visibility specified. Defaulting to "public". 
    function setMinBalance(uint minimumBalanceInWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:208:5: Warning: No visibility specified. Defaulting to "public". 
    function haltDirectTrade() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:211:5: Warning: No visibility specified. Defaulting to "public". 
    function unhaltDirectTrade() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:217:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:248:5: Warning: No visibility specified. Defaulting to "public". 
    function buyDentacoinsAgainstEther() payable returns (uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:260:5: Warning: No visibility specified. Defaulting to "public". 
    function sellDentacoinsAgainstEther(uint256 amount) returns (uint revenue) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:277:5: Warning: No visibility specified. Defaulting to "public". 
    function refundToOwner (uint256 amountOfEth, uint256 dcn) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:292:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:57:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
DentacoinToken.totalSupply (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#173) shadows:
	- Token.totalSupply (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#79)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#58-66) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
DentacoinToken.decimals should be constant (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#172)
DentacoinToken.name should be constant (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#169)
DentacoinToken.symbol should be constant (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#170)
DentacoinToken.totalSupply should be constant (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#173)
Token.totalSupply should be constant (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#79)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#27:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#23-25:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#220:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#241:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#249:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#249:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#251:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#253:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#263:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#264:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#266:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#269:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#284:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#286:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#25-35) should be declared external
StandardToken.balanceOf (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#146-148) should be declared external
Token.balanceOf (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#83-84) should be declared external
DentacoinToken.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#219-249) should be declared external
Token.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#89) should be declared external
StandardToken.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#118-131) should be declared external
StandardToken.transferFrom (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#131-146) should be declared external
Token.transferFrom (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#96-97) should be declared external
Token.approve (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#102-103) should be declared external
StandardToken.approve (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#148-156) should be declared external
StandardToken.allowance (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#156-167) should be declared external
Token.allowance (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#107-108) should be declared external
DentacoinToken.setEtherPrices (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#190-197) should be declared external
DentacoinToken.setGasForDCN (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#197-200) should be declared external
DentacoinToken.setDCNForGas (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#200-203) should be declared external
DentacoinToken.setGasReserve (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#203-208) should be declared external
DentacoinToken.setMinBalance (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#208-211) should be declared external
DentacoinToken.haltDirectTrade (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#216-217) should be declared external
DentacoinToken.unhaltDirectTrade (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#217-218) should be declared external
DentacoinToken.refundToOwner (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#280-295) should be declared external
DentacoinToken.fallback (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol:
	- pragma solidity^0.4.8 (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#13-35) is not in CapWords
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#146) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#118-119) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#119) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#131) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#131) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#131) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#148-149) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#149-150) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#156-157) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#157) is not in mixedCase
Parameter '_to' of DentacoinToken.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#219) is not in mixedCase
Parameter '_value' of DentacoinToken.transfer (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#219-220) is not in mixedCase
Function 'DentacoinToken.DentacoinToken' (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#189-190) is not in mixedCase
Variable 'DentacoinToken.DentacoinAddress' (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#171) is not in mixedCase
Variable 'DentacoinToken.DCNForGas' (/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol#177) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/1/0x08d32b0da63e2c3bcf8019c9c5d849d7a9d791e6.sol analyzed (5 contracts), 57 result(s) found