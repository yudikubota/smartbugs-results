INFO:Slither:Compilation warnings/errors on /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:17:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function owned() public{
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:45:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function casino(uint minBet, uint maxBet) public{
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:121:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function blackjack(uint minBet, uint maxBet) casino(minBet, maxBet) public{
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:187:5: Warning: Use of the "var" keyword is deprecated.
    var id = keccak256(seed);
    ^----^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:221:10: Warning: Use of the "var" keyword is deprecated.
    var (win,loss) = determineOutcome(deck, numCards, splits, doubled, bet);
         ^-^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:221:14: Warning: Use of the "var" keyword is deprecated.
    var (win,loss) = determineOutcome(deck, numCards, splits, doubled, bet);
             ^--^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:292:5: Warning: Use of the "var" keyword is deprecated.
    var playerValues = getPlayerValues(cards, numCards, splits);
    ^--------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:293:10: Warning: Use of the "var" keyword is deprecated.
    var (dealerValue, dealerBJ) = getDealerValue(cards, sum(numCards));
         ^---------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:293:23: Warning: Use of the "var" keyword is deprecated.
    var (dealerValue, dealerBJ) = getDealerValue(cards, sum(numCards));
                      ^------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:213:80: Warning: This declaration shadows an existing declaration.
 ... uint8[] splits ... 
     ^------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:103:3: The shadowed declaration is here:
  mapping(bytes32 => uint8[]) splits;
  ^--------------------------------^

/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:213:96: Warning: This declaration shadows an existing declaration.
 ... bool[] doubled ... 
     ^------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:105:3: The shadowed declaration is here:
  mapping(bytes32 => mapping(uint8 => bool)) doubled;
  ^------------------------------------------------^

/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:290:62: Warning: This declaration shadows an existing declaration.
 ... uint8[] splits ... 
     ^------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:103:3: The shadowed declaration is here:
  mapping(bytes32 => uint8[]) splits;
  ^--------------------------------^

/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:290:78: Warning: This declaration shadows an existing declaration.
 ... bool[] doubled ... 
     ^------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:105:3: The shadowed declaration is here:
  mapping(bytes32 => mapping(uint8 => bool)) doubled;
  ^------------------------------------------------^

/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:141:5: Warning: Invoking events without "emit" prefix is deprecated.
    NewGame(srvSeed, deck, cSeed, player, value);
    ^------------------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:158:5: Warning: Invoking events without "emit" prefix is deprecated.
    Double(id, hand);
    ^--------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:176:5: Warning: Invoking events without "emit" prefix is deprecated.
    Split(id,hand);
    ^------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:187:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var id = keccak256(seed);
             ^-------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:187:14: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
    var id = keccak256(seed);
             ^-------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:193:7: Warning: Invoking events without "emit" prefix is deprecated.
      Result(id, player, bet / 2, true);
      ^-------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:197:7: Warning: Invoking events without "emit" prefix is deprecated.
      Result(id, player, bet / 2, false);
      ^--------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:215:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    gameId = keccak256(seed);
             ^-------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:215:14: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
    gameId = keccak256(seed);
             ^-------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:228:7: Warning: Invoking events without "emit" prefix is deprecated.
      NewGame(gameId, deckHash, cSeed, player, bet);
      ^-------------------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:232:7: Warning: Invoking events without "emit" prefix is deprecated.
      Result(gameId, player, win-loss, true); 
      ^------------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:236:7: Warning: Invoking events without "emit" prefix is deprecated.
      Result(gameId, player, loss-win, false); 
      ^-------------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:239:7: Warning: Invoking events without "emit" prefix is deprecated.
      Result(gameId, player, 0, false);
      ^------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:251:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(convertToBytes(deck), seed) != deckHash) return false;
        ^-----------------------------------^
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:260:3: Warning: Function state mutability can be restricted to pure
  function convertToBytes(uint8[] byteArray) internal constant returns(bytes b) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:422:3: Warning: Function state mutability can be restricted to pure
  function sum(uint8[] numbers) constant internal returns(uint8 s) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
numAces in blackjack.getDealerValue (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#406) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
blackjack.stand.splits (local variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#217-218) shadows:
	- blackjack.splits (state variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#105)
blackjack.stand.doubled (local variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#218) shadows:
	- blackjack.doubled (state variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#107-108)
blackjack.determineOutcome.splits (local variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#296) shadows:
	- blackjack.splits (state variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#105)
blackjack.determineOutcome.doubled (local variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#296-297) shadows:
	- blackjack.doubled (state variable @ /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#107-108)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
owned.changeOwner (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#21-26) should be declared external
mortal.close (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#27-32) should be declared external
casino.setMinimumBet (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#54-59) should be declared external
casino.setMaximumBet (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#63-69) should be declared external
casino.authorize (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#72-77) should be declared external
casino.deauthorize (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#80-86) should be declared external
blackjack.initGame (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#136-146) should be declared external
blackjack.double (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#153-164) should be declared external
blackjack.split (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#171-183) should be declared external
blackjack.surrender (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#191-204) should be declared external
blackjack.stand (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#215-250) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol:
	- pragma solidity^0.4.17 (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#8-10): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in blackjack.initGame (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#136-146):
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,value,false)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#141-145
Low level call in blackjack.double (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#153-164):
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,value,false)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#162
Low level call in blackjack.split (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#171-183):
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,value,false)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#180-182
Low level call in blackjack.surrender (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#191-204):
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,bet / 2,true)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#196-197
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,bet / 2,false)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#202-203
Low level call in blackjack.stand (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#215-250):
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,win - loss,true)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#235
	-assert(bool)(msg.sender.call(bytes4(keccak256()(shift(address,uint256,bool))),player,loss - win,false)) /unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#244-246
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#10-26) is not in CapWords
Contract 'mortal' (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#26-33) is not in CapWords
Contract 'casino' (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#33-95) is not in CapWords
Contract 'blackjack' (/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol#95-428) is not in CapWords
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/34/0xfc44094c53832e8a3cea0e97600950c11f14fe5f.sol analyzed (4 contracts), 26 result(s) found