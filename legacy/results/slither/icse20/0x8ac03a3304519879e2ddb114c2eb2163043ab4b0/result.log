INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:33:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:73:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:78:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:83:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:364:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:374:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:378:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:384:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:391:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:402:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:422:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:429:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:463:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:480:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:501:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:518:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:522:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:539:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:554:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:566:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:578:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:582:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:650:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:715:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function AllocatedCrowdsaleMixin(address _beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:750:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!token.transferFrom(beneficiary, receiver, tokenAmount)) throw;
                                                                ^---^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:931:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function KYCCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) AllocatedCrowdsaleMixin(_beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:955:12: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
           ^----------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:955:32: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
                               ^--------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:955:44: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
                                           ^----^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:955:52: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
                                                   ^----^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:22:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Ownable {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:875:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    KYCPayload payload;
    ^----------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:53:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:466:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:526:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:581:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:635:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:875:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory payload'?
    KYCPayload payload;
    ^----------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:983:5: Warning: Invoking events without "emit" prefix is deprecated.
    SignerChanged(signerAddress);
    ^--------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:118:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:124:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:129:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:204:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:213:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:259:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:364:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:401:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:496:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:515:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:534:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:624:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:633:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:674:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:715:3: Warning: No visibility specified. Defaulting to "public". 
  function AllocatedCrowdsaleMixin(address _beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:722:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:722:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:722:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:722:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:778:3: Warning: No visibility specified. Defaulting to "public". 
  function slice32(bytes b, uint offset) constant returns (bytes32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:790:3: Warning: No visibility specified. Defaulting to "public". 
  function sliceAddress(bytes b, uint offset) constant returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:802:3: Warning: No visibility specified. Defaulting to "public". 
  function slice16(bytes b, uint offset) constant returns (bytes16) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:814:3: Warning: No visibility specified. Defaulting to "public". 
  function slice4(bytes b, uint offset) constant returns (bytes4) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:826:3: Warning: No visibility specified. Defaulting to "public". 
  function slice2(bytes b, uint offset) constant returns (bytes2) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:931:3: Warning: No visibility specified. Defaulting to "public". 
  function KYCCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) AllocatedCrowdsaleMixin(_beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:981:3: Warning: No visibility specified. Defaulting to "public". 
  function setSignerAddress(address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:118:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:124:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:129:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:196:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:204:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:213:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:247:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:640:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:778:3: Warning: Function state mutability can be restricted to pure
  function slice32(bytes b, uint offset) constant returns (bytes32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:790:3: Warning: Function state mutability can be restricted to pure
  function sliceAddress(bytes b, uint offset) constant returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:802:3: Warning: Function state mutability can be restricted to pure
  function slice16(bytes b, uint offset) constant returns (bytes16) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:814:3: Warning: Function state mutability can be restricted to pure
  function slice4(bytes b, uint offset) constant returns (bytes4) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:826:3: Warning: Function state mutability can be restricted to pure
  function slice2(bytes b, uint offset) constant returns (bytes2) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:876:5: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    payload.whitelistedAddress = dataframe.sliceAddress(0);
    ^------------------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:877:5: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    payload.customerId = uint128(dataframe.slice16(20));
    ^----------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:878:5: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    payload.minETH = uint32(dataframe.slice4(36));
    ^------------^
/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol:879:5: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    payload.maxETH = uint32(dataframe.slice4(40));
    ^------------^

INFO:Detectors:[91m
payload in KYCPayloadDeserializer.deserializeKYCPayload (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#892-893) is a storage variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-storage-variables[0m
INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#494-509):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#506-508)
	State variables written after the call(s):
	- finalized (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#508)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#425-485):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#434-445)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#447-451)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#463-465)
	- weiRaised (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#462-463)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#425-485):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#434-445)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#447-451)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#465-472)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#466-471)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
minETH in KYCCrowdsale.buyWithKYCData (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#980) is a local variable never initialiazed
maxETH in KYCCrowdsale.buyWithKYCData (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#980) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#377-412):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#394-395)
	State variables written after the call(s):
	- endsAt (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#409)
	- minimumFundingGoal (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#412)
	- multisigWallet (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#395-399)
	- startsAt (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#406-408)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#425-485):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#434-445)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#447-451)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#458-460)
	- investorCount (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#457)
	- tokenAmountOf (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#460-462)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#619-648) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#634-648)
	- block.timestamp < startsAt (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#633-648)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#288-290)
ERC20Basic.totalSupply should be constant (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#156-157)
FractionalERC20.decimals should be constant (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#186)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#84-85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#399-400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#405:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#408:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#411:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#416:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#435:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#443-445:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#483:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#499:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#522:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#539:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#544:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#560-561:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#576:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#586:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#600:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#605-606:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#670:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#779:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#51-63) should be declared external
SafeMathLib.times (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#122-129) should be declared external
SafeMathLib.minus (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#129-138) should be declared external
SafeMathLib.plus (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#138-140) should be declared external
ERC20Basic.balanceOf (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#157-162) should be declared external
ERC20Basic.transfer (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#163-164) should be declared external
ERC20.allowance (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#168-170) should be declared external
ERC20.transferFrom (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#170-175) should be declared external
ERC20.approve (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#175-177) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#202-204) should be declared external
PricingStrategy.isSane (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#210-213) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#221-222) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#232-234) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#254-256) should be declared external
FinalizeAgent.isSane (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#268-269) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#272) should be declared external
CrowdsaleBase.fallback (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#415-416) should be declared external
CrowdsaleBase.finalize (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#494-509) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#512-525) should be declared external
CrowdsaleBase.setEndsAt (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#537-546) should be declared external
CrowdsaleBase.setMultisig (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#571-577) should be declared external
CrowdsaleBase.loadRefund (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#582-588) should be declared external
CrowdsaleBase.refund (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#594-607) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#613-615) should be declared external
CrowdsaleBase.isPricingSane (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#616-617) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#650-660) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#664-667) should be declared external
CrowdsaleBase.isCrowdsale (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#667-668) should be declared external
BytesDeserializer.slice32 (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#808-818) should be declared external
BytesDeserializer.sliceAddress (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#824-831) should be declared external
BytesDeserializer.slice16 (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#841-846) should be declared external
BytesDeserializer.slice4 (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#849-858) should be declared external
BytesDeserializer.slice2 (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#861-863) should be declared external
KYCCrowdsale.buyWithKYCData (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#968-986) should be declared external
KYCCrowdsale.setSignerAddress (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#34-39) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#377-412) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#379-381) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#381-383) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#384-387) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#387) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#387-389) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#389-390) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#550) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#288-290) is not in mixedCase
Function 'AllocatedCrowdsaleMixin.AllocatedCrowdsaleMixin' (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#740-745) is not in mixedCase
Parameter '_beneficiary' of AllocatedCrowdsaleMixin.AllocatedCrowdsaleMixin (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#741) is not in mixedCase
Function 'KYCCrowdsale.KYCCrowdsale' (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol#955-963) is not in mixedCase
Parameter '_signerAddress' of KYCCrowdsale.setSignerAddress (/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x8ac03a3304519879e2ddb114c2eb2163043ab4b0.sol analyzed (13 contracts), 81 result(s) found