INFO:Slither:Compilation warnings/errors on /unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:109:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:164:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:759:9: Warning: Use of the "var" keyword is deprecated.
        var txsByCur = externalTxs[uint8(_currency)];
        ^----------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:76:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:117:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:135:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:213:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:224:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:264:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:272:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:720:9: Warning: Invoking events without "emit" prefix is deprecated.
        NotifierChanged(notifier, _notifier);
        ^----------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:779:9: Warning: Invoking events without "emit" prefix is deprecated.
        ExternalSale(_currency, _txIdSha3, _buyer, _amountWei, _tokensE18);
        ^----------------------------------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:819:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return externalTxs[_currency][keccak256(_txId)];
                                      ^--------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:819:39: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return externalTxs[_currency][keccak256(_txId)];
                                      ^--------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:11:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:20:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:21:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:73:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:85:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:108:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:126:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:145:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:164:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:180:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:204:3: Warning: No visibility specified. Defaulting to "public". 
  function setSaleAgent(address newSaleAgnet) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:209:3: Warning: No visibility specified. Defaulting to "public". 
  function mint(address _to, uint256 _amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:221:3: Warning: No visibility specified. Defaulting to "public". 
  function finishMinting() returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:262:3: Warning: No visibility specified. Defaulting to "public". 
  function pause() onlyOwner whenNotPaused {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:270:3: Warning: No visibility specified. Defaulting to "public". 
  function unpause() onlyOwner whenPaused {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:287:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:292:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:297:3: Warning: No visibility specified. Defaulting to "public". 
  function lock(address addr, uint periodInDays) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:302:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:32:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:38:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:45:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:50:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:784:5: Warning: Function state mutability can be restricted to pure
    function btcId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:788:5: Warning: Function state mutability can be restricted to pure
    function ltcId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:792:5: Warning: Function state mutability can be restricted to pure
    function zecId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:796:5: Warning: Function state mutability can be restricted to pure
    function dashId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:800:5: Warning: Function state mutability can be restricted to pure
    function wavesId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:804:5: Warning: Function state mutability can be restricted to pure
    function usdId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:808:5: Warning: Function state mutability can be restricted to pure
    function eurId() public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in CommonSale.createTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#443-469):
	External calls:
	- token.mint(this,tokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#455)
	- token.transfer(msg.sender,tokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#456)
	External calls sending eth:
	- multisigWallet.transfer(msg.value) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#450-451)
	State variables written after the call(s):
	- stages (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#465)
	- stages (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#469)
	- totalInvested (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#461-465)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:
	Contract CovestingToken has payable functions:
	 - fallback (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#325-329)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#770-812):
	External calls:
	- token.mint(this,_tokensE18) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#792-793)
	- token.transfer(_buyer,_tokensE18) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#793-796)
	State variables written after the call(s):
	- stages (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#801-804)
	- stages (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#805-808)
	- totalInvested (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#800-801)
Reentrancy in IncreaseTokensOperator.extraMintArray (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#942-946):
	External calls:
	- value = token.balanceOf(tokenHolder) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	- token.mint(this,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	- token.transfer(tokenHolder,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	State variables written after the call(s):
	- minted (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
CommonSale.createTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#443-469) does not use the value returned by external calls:
	-token.mint(this,tokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#455)
	-token.transfer(msg.sender,tokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#456)
CommonSale.retrieveTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#470-481) does not use the value returned by external calls:
	-alienToken.transfer(multisigWallet,token.balanceOf(this)) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#476-481)
Presale.retrieveTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#503-508) does not use the value returned by external calls:
	-alienToken.transfer(multisigWallet,token.balanceOf(this)) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#507-508)
Mainsale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#530-562) does not use the value returned by external calls:
	-token.mint(this,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#550-552)
	-token.transfer(foundersTokensWallet,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#555-556)
	-token.mint(this,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#556)
	-token.transfer(bountyTokensWallet,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#557-558)
	-token.finishMinting() (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#560-562)
UpdateMainsale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#709-736) does not use the value returned by external calls:
	-token.mint(this,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#726-727)
	-token.transfer(foundersTokensWallet,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#730-732)
	-token.mint(this,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#732-733)
	-token.transfer(bountyTokensWallet,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#733-734)
	-token.finishMinting() (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#736)
UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#770-812) does not use the value returned by external calls:
	-token.mint(this,_tokensE18) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#792-793)
	-token.transfer(_buyer,_tokensE18) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#793-796)
IncreaseTokensOperator.extraMint (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#928-942) does not use the value returned by external calls:
	-token.mint(this,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#936-937)
	-token.transfer(tokenHolder,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#937-941)
IncreaseTokensOperator.extraMintArray (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#942-946) does not use the value returned by external calls:
	-token.mint(this,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	-token.transfer(tokenHolder,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
IncreaseTokensOperator.extraMintArray has external calls inside a loop:
	- value = token.balanceOf(tokenHolder) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
IncreaseTokensOperator.extraMintArray has external calls inside a loop:
	- token.mint(this,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
IncreaseTokensOperator.extraMintArray has external calls inside a loop:
	- token.transfer(tokenHolder,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#770-812):
	External calls:
	- token.mint(this,_tokensE18) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#792-793)
	- token.transfer(_buyer,_tokensE18) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#793-796)
	State variables written after the call(s):
	- totalExternalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#797-800)
	- totalTokensMinted (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#796-797)
Reentrancy in CommonSale.createTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#443-469):
	External calls:
	- token.mint(this,tokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#455)
	- token.transfer(msg.sender,tokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#456)
	External calls sending eth:
	- multisigWallet.transfer(msg.value) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#450-451)
	State variables written after the call(s):
	- totalTokensMinted (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#456-461)
Reentrancy in TestConfigurator.deploy (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#567-610):
	External calls:
	- presale.setToken(token) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#569)
	- presale.addStage(5,300) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#569)
	- presale.setMultisigWallet(0x055fa3f2DAc0b9Db661A4745965DDD65490d56A8) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#569-571)
	- presale.setStart(1507208400) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#571-572)
	- presale.setPeriod(2) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#573)
	- presale.setMinPrice(100000000000000000) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#573-574)
	- token.setSaleAgent(presale) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#574-575)
	State variables written after the call(s):
	- mainsale (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#575-577)
Reentrancy in Configurator.deploy (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#614-658):
	External calls:
	- presale.setToken(token) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#616-617)
	- presale.addStage(5000,300) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#617)
	- presale.setMultisigWallet(0x6245C05a6fc205d249d0775769cfE73CB596e57D) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#617-618)
	- presale.setStart(1508504400) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#618)
	- presale.setPeriod(30) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#618-619)
	- presale.setMinPrice(100000000000000000) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#619-621)
	- token.setSaleAgent(presale) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#621-622)
	State variables written after the call(s):
	- mainsale (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#622)
Reentrancy in IncreaseTokensOperator.extraMint (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#928-942):
	External calls:
	- value = token.balanceOf(tokenHolder) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#932)
	- token.mint(this,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#936-937)
	- token.transfer(tokenHolder,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#937-941)
	State variables written after the call(s):
	- minted (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#941)
	- mintedList (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#941-942)
Reentrancy in IncreaseTokensOperator.extraMintArray (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#942-946):
	External calls:
	- value = token.balanceOf(tokenHolder) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	- token.mint(this,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	- token.transfer(tokenHolder,diffValue) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
	State variables written after the call(s):
	- mintedList (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol)
Reentrancy in Mainsale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#530-562):
	External calls:
	- mintedTokens = token.totalSupply() (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#532-533)
	- token.mint(this,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#550-552)
	- token.lock(foundersTokensWallet,lockPeriod * 86400) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#552-555)
	- token.transfer(foundersTokensWallet,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#555-556)
	- token.mint(this,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#556)
	- token.transfer(bountyTokensWallet,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#557-558)
	State variables written after the call(s):
	- totalTokensMinted (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#558-560)
Reentrancy in UpdateMainsale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#709-736):
	External calls:
	- mintedTokens = token.totalSupply() (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#712)
	- token.mint(this,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#726-727)
	- token.lock(foundersTokensWallet,lockPeriod * 86400) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#728-729)
	- token.transfer(foundersTokensWallet,foundersTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#730-732)
	- token.mint(this,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#732-733)
	- token.transfer(bountyTokensWallet,bountyTokens) (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#733-734)
	State variables written after the call(s):
	- totalTokensMinted (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#734-735)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Mainsale.percentRate should be constant (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#515)
UpdateMainsale.percentRate should be constant (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#696)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#10-11) should be declared external
BasicToken.balanceOf (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#86-94) should be declared external
StandardToken.allowance (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#152-154) should be declared external
ERC20.allowance (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#20-21) should be declared external
ERC20.approve (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#22-23) should be declared external
StandardToken.approve (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#128-141) should be declared external
Ownable.transferOwnership (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#189-191) should be declared external
MintableToken.setSaleAgent (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#209-212) should be declared external
MintableToken.mint (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#212-222) should be declared external
MintableToken.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#232-241) should be declared external
Pausable.pause (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#277-280) should be declared external
Pausable.unpause (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#283-287) should be declared external
CovestingToken.lock (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#310-325) should be declared external
CovestingToken.fallback (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#325-329) should be declared external
StagedCrowdsale.stagesCount (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#342-343) should be declared external
StagedCrowdsale.setStart (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#343-346) should be declared external
StagedCrowdsale.setPeriod (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#348-349) should be declared external
StagedCrowdsale.addStage (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#349-356) should be declared external
StagedCrowdsale.removeStage (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#357-366) should be declared external
StagedCrowdsale.changeStage (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#368-375) should be declared external
StagedCrowdsale.insertStage (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#376-392) should be declared external
StagedCrowdsale.clearStages (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#393-402) should be declared external
CommonSale.setMinPrice (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#436-438) should be declared external
CommonSale.setMultisigWallet (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#438-441) should be declared external
Presale.setMultisigWallet (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#489-495) should be declared external
CommonSale.setToken (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#441-443) should be declared external
Presale.retrieveTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#503-508) should be declared external
CommonSale.retrieveTokens (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#470-481) should be declared external
Presale.setMainsale (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#482-489) should be declared external
Presale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#495-501) should be declared external
Mainsale.setLockPeriod (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#516-519) should be declared external
Mainsale.setFoundersTokensPercent (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#519-524) should be declared external
Mainsale.setBountyTokensPercent (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#524-526) should be declared external
Mainsale.setFoundersTokensWallet (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#526-528) should be declared external
Mainsale.setBountyTokensWallet (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#528-530) should be declared external
Mainsale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#530-562) should be declared external
TestConfigurator.deploy (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#567-610) should be declared external
Configurator.deploy (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#614-658) should be declared external
UpdateMainsale.setLockPeriod (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#697-701) should be declared external
UpdateMainsale.setFoundersTokensPercent (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#701-703) should be declared external
UpdateMainsale.setBountyTokensPercent (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#703-705) should be declared external
UpdateMainsale.setFoundersTokensWallet (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#705-707) should be declared external
UpdateMainsale.setBountyTokensWallet (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#707-709) should be declared external
UpdateMainsale.finishMinting (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#709-736) should be declared external
UpdateMainsale.setNotifier (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#740-744) should be declared external
UpdateMainsale.externalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#744-770) should be declared external
UpdateMainsale.btcId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#814-815) should be declared external
UpdateMainsale.ltcId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#815-818) should be declared external
UpdateMainsale.zecId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#818-822) should be declared external
UpdateMainsale.dashId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#822-823) should be declared external
UpdateMainsale.wavesId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#823-827) should be declared external
UpdateMainsale.usdId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#827-830) should be declared external
UpdateMainsale.eurId (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#830-834) should be declared external
UpdateMainsale.tokensByBtcTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#846-850) should be declared external
UpdateMainsale.tokensByLtcTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#850-856) should be declared external
UpdateMainsale.tokensByZecTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#856-861) should be declared external
UpdateMainsale.tokensByDashTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#861-864) should be declared external
UpdateMainsale.tokensByWavesTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#864-868) should be declared external
UpdateMainsale.tokensByUsdTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#868-870) should be declared external
UpdateMainsale.tokensByEurTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#870-872) should be declared external
UpdateConfigurator.deploy (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#877-916) should be declared external
IncreaseTokensOperator.extraMint (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#928-942) should be declared external
IncreaseTokensOperator.extraMintArray (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#942-946) should be declared external
IncreaseTokensOperator.setIncreaseK (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol) should be declared external
IncreaseTokensOperator.setToken (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol) should be declared external
IncreaseTokensOperator.authorize (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol) should be declared external
IncreaseTokensOperator.unauthorize (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol:
	- pragma solidity^0.4.17 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#87-92) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#74) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#74) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#153) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#153) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#109-111) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#111) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#111) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#128-129) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#129) is not in mixedCase
Function 'Ownable.Ownable' (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#172-177) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#213) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#214) is not in mixedCase
Parameter '_to' of CovestingToken.transfer (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#294) is not in mixedCase
Parameter '_value' of CovestingToken.transfer (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#294-297) is not in mixedCase
Parameter '_from' of CovestingToken.transferFrom (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#299) is not in mixedCase
Parameter '_to' of CovestingToken.transferFrom (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#299) is not in mixedCase
Parameter '_value' of CovestingToken.transferFrom (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#299) is not in mixedCase
Parameter '_notifier' of UpdateMainsale.setNotifier (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#740-741) is not in mixedCase
Parameter '_currencies' of UpdateMainsale.externalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#747-749) is not in mixedCase
Parameter '_txIdSha3' of UpdateMainsale.externalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#749-750) is not in mixedCase
Parameter '_buyers' of UpdateMainsale.externalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#750-751) is not in mixedCase
Parameter '_amountsWei' of UpdateMainsale.externalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#751) is not in mixedCase
Parameter '_tokensE18' of UpdateMainsale.externalSales (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#751) is not in mixedCase
Function 'UpdateMainsale._externalSaleSha3' (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#770-812) is not in mixedCase
Parameter '_currency' of UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#771-773) is not in mixedCase
Parameter '_txIdSha3' of UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#773) is not in mixedCase
Parameter '_buyer' of UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#774-775) is not in mixedCase
Parameter '_amountWei' of UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#775) is not in mixedCase
Parameter '_tokensE18' of UpdateMainsale._externalSaleSha3 (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#775-776) is not in mixedCase
Function 'UpdateMainsale._tokensByTx' (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#835-839) is not in mixedCase
Parameter '_currency' of UpdateMainsale._tokensByTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#836-838) is not in mixedCase
Parameter '_txId' of UpdateMainsale._tokensByTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#838) is not in mixedCase
Parameter '_currency' of UpdateMainsale.tokensByTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#842) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#842) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByBtcTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#846) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByLtcTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#851) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByZecTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#857-858) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByDashTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#862) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByWavesTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#865) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByUsdTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#868-869) is not in mixedCase
Parameter '_txId' of UpdateMainsale.tokensByEurTx (/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol#871) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x3068c2faedcc3046efef0101c7adf45211338e4c.sol analyzed (18 contracts), 134 result(s) found