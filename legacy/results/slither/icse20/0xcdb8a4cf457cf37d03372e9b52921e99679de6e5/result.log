INFO:Slither:Compilation warnings/errors on /unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol:
/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol:18:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Manager() public {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
AlchemyPatent.changePatentSale (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#311-329) uses a dangerous strict equality:
	- require(bool)(patent.patentOwner == msg.sender)
	- require(bool)(patent.onSale == true)
AlchemyPatent.changePatentSale (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#311-329) uses a dangerous strict equality:
	- require(bool)(patent.patentOwner == msg.sender)
	- require(bool)(patent.onSale == true)
AlchemySynthesize.getSynthesizationResult (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#569-631) uses a dangerous strict equality:
	- resultAssets[i] > 3 && patents[resultAssets[i]].patentOwner == address(0)
AlchemyPatent.changePatentSale (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#311-329) uses a dangerous strict equality:
	- require(bool)(patent.patentOwner == msg.sender)
	- require(bool)(patent.onSale == true)
AlchemySynthesize.getSynthesizationResult (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#569-631) uses a dangerous strict equality:
	- resultAssets[i] > 3 && patents[resultAssets[i]].patentOwner == address(0)
AlchemyPatent.sellPatent (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#271-294) uses a dangerous strict equality:
	- require(bool)(patent.patentOwner == msg.sender)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in AlchemySynthesize.getSynthesizationResult (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#569-631):
	External calls:
	- skinType = skinContract.getActiveSkin(account) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#584-586)
	- resultAssets = chemistry.turnOnFurnace(_pendingAssets,skinType) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#586-587)
	State variables written after the call(s):
	- accountsToFurnace (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#625)
Reentrancy in AlchemySynthesize.synthesize (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#474-546):
	External calls:
	- skinType = skinContract.getActiveSkin(msg.sender) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#529)
	- _cooldownTime = chemistry.computeCooldownTime(skinType,cooldownLevels[maxLevel]) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#532)
	State variables written after the call(s):
	- accountsToFurnace (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#534-536)
	- accountsToFurnace (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#536-539)
	- accountsToFurnace (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#539-540)
	- assets (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#541)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
count in AlchemySynthesize.synthesize (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#487-488) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in AlchemySynthesize.getSynthesizationResult (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#569-631):
	External calls:
	- skinType = skinContract.getActiveSkin(account) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#584-586)
	- resultAssets = chemistry.turnOnFurnace(_pendingAssets,skinType) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#586-587)
	State variables written after the call(s):
	- assets (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#628-629)
	- patents (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#604-618)
Reentrancy in AlchemySynthesize.setChemistryAddress (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#452-458):
	External calls:
	- require(bool)(candidateContract.isChemistry()) (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#457)
	State variables written after the call(s):
	- chemistry (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#457-458)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
AlchemyMarket.maxSaleNum should be constant (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#776-779)
AlchemyMinting.zoDailyLimit should be constant (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#648-649)
AlchemyPatent.patentSaleTimeDelay should be constant (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#258-260)
AlchemyPatent.patentValidTime should be constant (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#257-258)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Manager.changeAllowTransferState (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#45-54) should be declared external
Manager.demiseCEO (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#63-69) should be declared external
Manager.setCFO (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#69-74) should be declared external
Manager.setCOO (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#74-79) should be declared external
Manager.setCAO (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#79-87) should be declared external
Manager.pause (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#110-113) should be declared external
Manager.unpause (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#120-125) should be declared external
AlchemyBase.assetOf (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#133-134) should be declared external
AlchemyBase.transfer (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#205-227) should be declared external
AlchemyPatent.sellPatent (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#271-294) should be declared external
AlchemyPatent.publicSell (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#294-309) should be declared external
AlchemySynthesize.initializeLevel (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#411-435) should be declared external
AlchemySynthesize.setAssetLevel (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#435-438) should be declared external
AlchemySynthesize.getFurnace (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#440-449) should be declared external
AlchemySynthesize.synthesize (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#474-546) should be declared external
ChemistryInterface.isChemistry (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#631-632) should be declared external
ChemistryInterface.turnOnFurnace (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#636-637) should be declared external
ChemistryInterface.computeCooldownTime (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#637-640) should be declared external
SkinInterface.getActiveSkin (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#642-646) should be declared external
AlchemyMarket.setTrCut (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#795-798) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol:
	- pragma solidity^0.4.18 (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Manager.Manager' (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#18-26) is not in mixedCase
Function 'AlchemyBase._checkAndAdd' (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#136-171) is not in mixedCase
Function 'AlchemyBase._checkAndSub' (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#171-204) is not in mixedCase
Function 'AlchemySynthesize._isCooldownReady' (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol#466-471) is not in mixedCase
Function 'AlchemyMarket._computeCut' (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol) is not in mixedCase
Parameter '_price' of AlchemyMarket._computeCut (/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/32/0xcdb8a4cf457cf37d03372e9b52921e99679de6e5.sol analyzed (8 contracts), 36 result(s) found