INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:27:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HELP(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:72:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:73:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:74:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:75:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:84:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:92:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:93:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:94:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:95:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:96:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:105:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:106:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:114:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:115:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:123:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:124:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:133:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:25:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:78:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:100:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:109:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:118:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:127:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:56:5: Warning: No visibility specified. Defaulting to "public". 
    function HELP(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:91:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:113:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:122:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:132:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:138:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:25:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
HELP (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#32-140) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#72-82)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#25-31) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#31:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#72:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#74:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#75:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#76:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#87-90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#92-93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#94:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#95:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
HELP.transfer (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#72-82) should be declared external
HELP.approve (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#83-91) should be declared external
HELP.transferFrom (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#91-105) should be declared external
HELP.burn (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#105-114) should be declared external
HELP.freeze (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#114-123) should be declared external
HELP.unfreeze (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#123-134) should be declared external
HELP.withdrawEther (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#138-140) should be declared external
HELP.fallback (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol:
	- pragma solidity^0.4.19 (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'HELP.HELP' (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#58-71) is not in mixedCase
Parameter '_to' of HELP.transfer (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#72) is not in mixedCase
Parameter '_value' of HELP.transfer (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#72) is not in mixedCase
Parameter '_spender' of HELP.approve (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#84-85) is not in mixedCase
Parameter '_value' of HELP.approve (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#85) is not in mixedCase
Parameter '_from' of HELP.transferFrom (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#92) is not in mixedCase
Parameter '_to' of HELP.transferFrom (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#92) is not in mixedCase
Parameter '_value' of HELP.transferFrom (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#92) is not in mixedCase
Parameter '_value' of HELP.burn (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#105) is not in mixedCase
Parameter '_value' of HELP.freeze (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#114) is not in mixedCase
Parameter '_value' of HELP.unfreeze (/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol#123) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0xbbc2045d335cb224228f1850b29173d9d7d7b989.sol analyzed (2 contracts), 40 result(s) found