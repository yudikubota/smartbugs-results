INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:7:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:12:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:53:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Quitcoin() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:65:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (now-timeOfLastDistribution < 1 days) throw;
	                                         ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:66:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (totalSupply < 4639711657142857143) throw;
	                                       ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:67:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (totalSupply > 2*324779816*10**10) throw;
	                                      ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:83:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (n < difficulty) throw;
	                    ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:84:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (totalSupply > 4639711657142857143) throw;
	                                       ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:85:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (accountClaimedReward[msg.sender]) throw;
	                                      ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:112:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:113:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:114:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (frozenAccount[msg.sender]) throw;
	                               ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:115:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (totalSupply < 4639711657142857143) throw;
	                                       ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:121:94: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if (_value+ownerDailyWithdrawal > 324779816*10**8 || totalSupply < 4747584953171428570) throw;
	                                                                                            ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:161:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:162:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:163:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:164:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (frozenAccount[_from]) throw;
	                          ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:165:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (totalSupply < 4639711657142857143) throw;
	                                       ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:171:94: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if (_value+ownerDailyWithdrawal > 324779816*10**8 || totalSupply < 4747584953171428570) throw;
	                                                                                            ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:210:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:29:39: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
    bytes32 public currentChallenge = 1;
                                      ^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:26: Warning: "sha3" has been deprecated in favour of "keccak256"
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	                        ^---------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	                        ^---------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:21: Warning: "sha3" has been deprecated in favour of "keccak256"
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	                   ^---------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	                   ^---------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:21: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	                   ^---------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:16: Warning: "sha3" has been deprecated in favour of "keccak256"
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	              ^---------------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	              ^---------------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:82:16: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
	uint n = uint(sha3(sha3(sha3(nonce, currentChallenge, msg.sender))));
	              ^---------------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:100:25: Warning: "sha3" has been deprecated in favour of "keccak256"
	    currentChallenge = sha3(nonce, currentChallenge, block.blockhash(block.number-1));
	                       ^------------------------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:100:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    currentChallenge = sha3(nonce, currentChallenge, block.blockhash(block.number-1));
	                       ^------------------------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:137:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:144:2: Warning: Invoking events without "emit" prefix is deprecated.
	Approval(msg.sender, _spender, _value);
	^------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:188:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:205:2: Warning: Invoking events without "emit" prefix is deprecated.
	FrozenFunds(target, freeze);
	^-------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:2:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function Quitcoin() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:64:5: Warning: No visibility specified. Defaulting to "public". 
    function interestDistribution() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:81:5: Warning: No visibility specified. Defaulting to "public". 
    function proofOfWork(uint nonce) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:100:55: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
	    currentChallenge = sha3(nonce, currentChallenge, block.blockhash(block.number-1));
	                                                     ^-------------^
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:111:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:150:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function raiseTrivialThreshold(uint256 newTrivialThreshold) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:203:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:209:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Quitcoin (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#17-212) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#112-142)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Quitcoin.max should be constant (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#33)
Quitcoin.name should be constant (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#20-21)
Quitcoin.standard should be constant (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#19-20)
Quitcoin.symbol should be constant (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#21-22)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#13:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#67:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#69:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#71:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#83-85:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#101-103:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#115-116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#118-119:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#124:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#163:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#165:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#167:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#171:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#175:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
tokenRecipient.receiveApproval (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#2) should be declared external
Quitcoin.interestDistribution (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#65-82) should be declared external
Quitcoin.proofOfWork (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#82-112) should be declared external
Quitcoin.transfer (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#112-142) should be declared external
Quitcoin.approveAndCall (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#152-161) should be declared external
Quitcoin.transferFrom (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#161-195) should be declared external
Quitcoin.raiseTrivialThreshold (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#195-208) should be declared external
Quitcoin.freezeAccount (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#208-212) should be declared external
Quitcoin.fallback (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol:
	- pragma solidity^0.4.2 (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#2-3) is not in CapWords
Contract 'owned' (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#4-17) is not in CapWords
Function 'Quitcoin.Quitcoin' (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#54-65) is not in mixedCase
Parameter '_to' of Quitcoin.transfer (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#112) is not in mixedCase
Parameter '_value' of Quitcoin.transfer (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#112-113) is not in mixedCase
Parameter '_spender' of Quitcoin.approve (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#144) is not in mixedCase
Parameter '_value' of Quitcoin.approve (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#145) is not in mixedCase
Parameter '_spender' of Quitcoin.approveAndCall (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#153) is not in mixedCase
Parameter '_value' of Quitcoin.approveAndCall (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#153) is not in mixedCase
Parameter '_extraData' of Quitcoin.approveAndCall (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#153-154) is not in mixedCase
Parameter '_from' of Quitcoin.transferFrom (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#161-162) is not in mixedCase
Parameter '_to' of Quitcoin.transferFrom (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#162) is not in mixedCase
Parameter '_value' of Quitcoin.transferFrom (/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol#162) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/30/0x7b937131b8d1761fc0722b632517ff46e5349496.sol analyzed (3 contracts), 46 result(s) found