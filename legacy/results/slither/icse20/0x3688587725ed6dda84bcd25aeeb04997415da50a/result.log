INFO:Slither:Compilation warnings/errors on /unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:38:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned(){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:119:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function BFreeContract() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:187:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance >= revenue);
		        ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:195:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance > sellPrice);
		        ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:196:48: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(tokenBalanceOf[msg.sender] * sellPrice <= this.balance) {
		                                             ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:199:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
			sell(this.balance / sellPrice);
			     ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:235:3: Warning: Invoking events without "emit" prefix is deprecated.
		orderToTransfer(msg.sender, _from, _to, _value, "Order to transfer tokens from allowed account");
		^----------------------------------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:255:4: Warning: Invoking events without "emit" prefix is deprecated.
			minGoalReached(icoMin, "Minimal goal of ICO is reached!");
			^-------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:263:4: Warning: Invoking events without "emit" prefix is deprecated.
			preIcoEnded(preIcoLimit, "Token amount for preICO sold!");
			^-------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:308:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value);
		^--------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:324:4: Warning: Invoking events without "emit" prefix is deprecated.
			priceUpdated(oldPrice, currentTokenPrice, "Token price updated!");
			^---------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:372:4: Warning: Invoking events without "emit" prefix is deprecated.
			FrozenFunds(msg.sender, account, "Account set frozen!");
			^-----------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:374:4: Warning: Invoking events without "emit" prefix is deprecated.
			FrozenFunds(msg.sender, account, "Account set free for use!");
			^-----------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:389:3: Warning: Invoking events without "emit" prefix is deprecated.
		tokenCreated(msg.sender, amount, "Additional tokens created!");
		^------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:404:3: Warning: Invoking events without "emit" prefix is deprecated.
		tokenDestroyed(msg.sender, amount, "An amount of tokens destroyed!");
		^------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:413:3: Warning: Invoking events without "emit" prefix is deprecated.
		ownerChanged(msg.sender, oldOwner, newOwner);
		^------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:420:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance > 0);
                ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:422:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		withdraw(this.balance);
		         ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:428:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		uint256 contractbalance = this.balance;
		                          ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:432:3: Warning: Invoking events without "emit" prefix is deprecated.
		withdrawed(sender, summeInWei, "wei withdrawed");
		^----------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:440:3: Warning: Invoking events without "emit" prefix is deprecated.
		deposited(msg.sender, msg.value, "wei deposited");
		^-----------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:456:4: Warning: Invoking events without "emit" prefix is deprecated.
			icoStatusUpdated(msg.sender, "Coin offering was stopped!");
			^--------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:458:4: Warning: Invoking events without "emit" prefix is deprecated.
			icoStatusUpdated(msg.sender, "Coin offering is running!");
			^-------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:470:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance >= revenue);
		        ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:483:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance <= revenue);
		        ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:485:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		msg.sender.transfer(this.balance); 
		                    ^----------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:8:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalAmount);
	^------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:11:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance);
	^--------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:14:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint256 _value) returns (bool success);
	^--------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:17:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
	^---------------------------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:22:2: Warning: No visibility specified. Defaulting to "public". 
	function approve(address _spender, uint256 _value) returns (bool success);
	^------------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:25:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining);
	^----------------------------------------------------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:38:2: Warning: No visibility specified. Defaulting to "public". 
	function owned(){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:49:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner);
	^-------------------------------------------^
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:119:2: Warning: No visibility specified. Defaulting to "public". 
	function BFreeContract() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:134:2: Warning: No visibility specified. Defaulting to "public". 
	function () payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:142:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalAmount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:152:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:158:2: Warning: No visibility specified. Defaulting to "public". 
	function calculateTheEndPrice(uint256 howManyTokenToBuy) constant returns (uint256 summarizedPriceInWeis) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:168:2: Warning: No visibility specified. Defaulting to "public". 
	function checkFrozenAccounts(address account) constant returns (bool accountIsFrozen) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:180:2: Warning: No visibility specified. Defaulting to "public". 
	function sell(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:192:2: Warning: No visibility specified. Defaulting to "public". 
	function sellMaximumPossibleAmountOfTokens() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:204:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:223:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from,	address _to,	uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:243:2: Warning: No visibility specified. Defaulting to "public". 
	function approve(address _spender, uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:330:2: Warning: No visibility specified. Defaulting to "public". 
	function setPreICOPrice(uint256 priceForPreIcoInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:339:2: Warning: No visibility specified. Defaulting to "public". 
	function setICOPrice(uint256 priceForIcoInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:349:2: Warning: No visibility specified. Defaulting to "public". 
	function setPrices(uint256 priceForPreIcoInWei, uint256 priceForIcoInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:359:2: Warning: No visibility specified. Defaulting to "public". 
	function setSellPrice(uint256 priceInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:367:2: Warning: No visibility specified. Defaulting to "public". 
	function freezeAccount(address account, bool freeze) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:380:2: Warning: No visibility specified. Defaulting to "public". 
	function mintToken(uint256 amount) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:394:2: Warning: No visibility specified. Defaulting to "public". 
	function destroyToken(uint256 amount) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:409:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:419:2: Warning: No visibility specified. Defaulting to "public". 
	function collect() isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:427:2: Warning: No visibility specified. Defaulting to "public". 
	function withdraw(uint256 summeInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:437:2: Warning: No visibility specified. Defaulting to "public". 
	function deposit() payable isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:445:2: Warning: No visibility specified. Defaulting to "public". 
	function allowIcoExit(bool exitAllowed) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:452:2: Warning: No visibility specified. Defaulting to "public". 
	function stopThisIco(bool icoIsStopped) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:463:2: Warning: No visibility specified. Defaulting to "public". 
	function exitThisIcoForHalfOfTokenPrice() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:476:2: Warning: No visibility specified. Defaulting to "public". 
	function getAllMyTokensForAllEtherOnContract() {
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BFreeContract._transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#296-323) uses a dangerous strict equality:
	- tokenBalanceOf[_to] == 0
	- tokenBalanceOf[_from] == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
BFreeContract.icoMin should be constant (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#60-61)
BFreeContract.preIcoLimit should be constant (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#61-62)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#8-10) should be declared external
BFreeContract.totalSupply (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#146-148) should be declared external
BFreeContract.balanceOf (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#151-152) should be declared external
ERC20Interface.balanceOf (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#11-13) should be declared external
BFreeContract.transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#208-219) should be declared external
ERC20Interface.transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#14-16) should be declared external
BFreeContract.transferFrom (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#227-243) should be declared external
ERC20Interface.transferFrom (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#17-19) should be declared external
BFreeContract.approve (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#251-258) should be declared external
ERC20Interface.approve (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#22-24) should be declared external
ERC20Interface.allowance (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#25-27) should be declared external
BFreeContract.allowance (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#156-158) should be declared external
owned.transferOwnership (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#51) should be declared external
BFreeContract.transferOwnership (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#421-428) should be declared external
BFreeContract.fallback (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#139-143) should be declared external
BFreeContract.calculateTheEndPrice (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#160-168) should be declared external
BFreeContract.checkFrozenAccounts (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#172-177) should be declared external
BFreeContract.buy (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#180-182) should be declared external
BFreeContract.sellMaximumPossibleAmountOfTokens (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#196-206) should be declared external
BFreeContract.setPreICOPrice (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#339-346) should be declared external
BFreeContract.setICOPrice (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#348-352) should be declared external
BFreeContract.setPrices (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#358-365) should be declared external
BFreeContract.setSellPrice (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#368-371) should be declared external
BFreeContract.freezeAccount (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#379-384) should be declared external
BFreeContract.mintToken (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#386-402) should be declared external
BFreeContract.destroyToken (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#403-418) should be declared external
BFreeContract.collect (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#430-433) should be declared external
BFreeContract.deposit (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#451-455) should be declared external
BFreeContract.allowIcoExit (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#458-463) should be declared external
BFreeContract.stopThisIco (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#465-471) should be declared external
BFreeContract.exitThisIcoForHalfOfTokenPrice (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#472-484) should be declared external
BFreeContract.getAllMyTokensForAllEtherOnContract (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol:
	- pragma solidity^0.4.16 (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#35-55) is not in CapWords
Event 'owned.ownerChanged' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#51-54) is not in CapWords
Constant 'owned.supervisor' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#36-39) is not in UPPER_CASE_WITH_UNDERSCORES
Event 'BFreeContract.minGoalReached' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#94-95) is not in CapWords
Event 'BFreeContract.preIcoEnded' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#97-98) is not in CapWords
Event 'BFreeContract.priceUpdated' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#100-101) is not in CapWords
Event 'BFreeContract.withdrawed' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#103-104) is not in CapWords
Event 'BFreeContract.deposited' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#106-107) is not in CapWords
Event 'BFreeContract.orderToTransfer' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#109-110) is not in CapWords
Event 'BFreeContract.tokenCreated' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#112-113) is not in CapWords
Event 'BFreeContract.tokenDestroyed' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#115-116) is not in CapWords
Event 'BFreeContract.icoStatusUpdated' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#119-121) is not in CapWords
Parameter '_owner' of BFreeContract.balanceOf (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#151) is not in mixedCase
Parameter '_to' of BFreeContract.transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#209) is not in mixedCase
Parameter '_value' of BFreeContract.transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#209) is not in mixedCase
Parameter '_from' of BFreeContract.transferFrom (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#228) is not in mixedCase
Parameter '_to' of BFreeContract.transferFrom (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#228-229) is not in mixedCase
Parameter '_value' of BFreeContract.transferFrom (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#229) is not in mixedCase
Parameter '_spender' of BFreeContract.approve (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#251) is not in mixedCase
Parameter '_value' of BFreeContract.approve (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#251-252) is not in mixedCase
Parameter '_owner' of BFreeContract.allowance (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#156) is not in mixedCase
Parameter '_spender' of BFreeContract.allowance (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#156) is not in mixedCase
Function 'BFreeContract.BFreeContract' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#123-138) is not in mixedCase
Function 'BFreeContract._transfer' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#296-323) is not in mixedCase
Parameter '_from' of BFreeContract._transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#297) is not in mixedCase
Parameter '_to' of BFreeContract._transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#297-298) is not in mixedCase
Parameter '_value' of BFreeContract._transfer (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#298) is not in mixedCase
Variable 'BFreeContract._totalSupply' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#60) is not in mixedCase
Variable 'BFreeContract.ICOprice' (/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol#66-67) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/34/0x3688587725ed6dda84bcd25aeeb04997415da50a.sol analyzed (3 contracts), 64 result(s) found