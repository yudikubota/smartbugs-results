INFO:Slither:Compilation warnings/errors on /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:983:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:1095:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:1095:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:1095:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:1113:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:1679:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) public {
                                                     ^---------^
/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:364:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1679-1680)
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1686-1688)
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1694-1695)
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1700-1703)
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1708-1709)
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
BettingController.owner (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1766) shadows:
	- oraclizeController.owner (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1614)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
Buffer.init (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#91-104) is declared view but contains assembly code
Buffer.append (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#124-166) is declared view but contains assembly code
Buffer.append (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#175-192) is declared view but contains assembly code
Buffer.appendInt (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#197-222) is declared view but contains assembly code
usingOraclize.getCodeSize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#784-790) is declared view but contains assembly code
usingOraclize.copyBytes (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1159-1180) is declared view but contains assembly code
usingOraclize.safeMemoryCleaner (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1270-1273) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in oraclizeController.constructor (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1638-1643):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1638-1639)
	- oraclize_setCustomGasPrice(30000000000) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1639)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1639)
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1639)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#317-325):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#322-325)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#323-325)
	State variables written after the call(s):
	- oraclize (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#323-325)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
buf in usingOraclize.stra2cbor (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#939) is a local variable never initialiazed
buf in usingOraclize.ba2cbor (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#946-947) is a local variable never initialiazed
coinPrePrice in Race.getCoinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1558) is a local variable never initialiazed
winning_bet_total in Race.calculateReward (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1529) is a local variable never initialiazed
coinPostPrice in Race.getCoinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1558-1563) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
CBOR.encodeType (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#231-250) does not use the value returned by external calls:
	-buf.appendInt(value,1) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#237-238)
	-buf.appendInt(value,2) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#240-241)
	-buf.appendInt(value,4) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#245)
	-buf.appendInt(value,8) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#249)
CBOR.encodeBytes (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#267-272) does not use the value returned by external calls:
	-buf.append(value) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#271)
CBOR.encodeString (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#272-279) does not use the value returned by external calls:
	-buf.append(bytes(value)) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#276-277)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in oraclizeController.__callback (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1711-1746):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress()) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1715)
	State variables written after the call(s):
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1736)
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1743-1744)
Reentrancy in oraclizeController.constructor (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1638-1643):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1638-1639)
	- oraclize_setCustomGasPrice(30000000000) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1639)
	State variables written after the call(s):
	- horses (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1639-1640)
	- horses (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1641)
	- horses (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1641-1642)
	- horses (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1643)
	- horses (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1643)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1639)
	- owner (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1642)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#955-1015):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#968-971)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#978-979)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#978-979)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#978-979)
	- oraclize_randomDS_args (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1010-1014)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	State variables written after the call(s):
	- coinIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1671-1672)
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1669-1671)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1671)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1674-1678)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1679)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1683-1684)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1685)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1692)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1692-1694)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1697-1698)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1698-1699)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1661-1709):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1663-1709)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1667-1669)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1672-1674)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1681-1683)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1689-1692)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1695-1697)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1706-1707)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1707)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1703-1705)
Reentrancy in BettingController.spawnRaceManual (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol):
	External calls:
	- RaceDeployed(address(race),race.owner(),_bettingDuration,_raceDuration,now) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
	State variables written after the call(s):
	- isOraclizeEnabled (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
Reentrancy in BettingController.spawnRaceManual (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol):
	External calls:
	- RaceDeployed(address(race),race.owner(),_bettingDuration,_raceDuration,now) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
	- setupRace(_bettingDuration,_raceDuration,address(race)) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
	External calls sending eth:
	- setupRace(_bettingDuration,_raceDuration,address(race)) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
	- oraclizeInverseIndex (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
	- oraclize_network_name (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Race.priceCallback (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1394-1425) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(! chronus.race_end) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1396)
	- now >= chronus.starting_time + chronus.race_duration + 3600 (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1407-1421)
	- now >= chronus.starting_time + chronus.betting_duration + 3600 (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1401-1405)
Race.refund (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1590-1598) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((chronus.betting_open && ! chronus.race_start) || (chronus.race_start && ! chronus.race_end)) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1592-1595)
	- require(bool)(now > chronus.starting_time + chronus.race_duration) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1591-1592)
Race.recovery (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1603-1614) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((chronus.race_end && now > chronus.starting_time + chronus.race_duration + (2592000)) || (chronus.voided_bet && now > chronus.voided_timestamp + (2592000))) (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1607-1613)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Buffer.init uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#91-104)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#98-104
Buffer.append uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#124-166)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#134-149
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#152-155
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#157-166
Buffer.append uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#175-192)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#179-192
Buffer.appendInt uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#197-222)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#206-221
usingOraclize.getCodeSize uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#784-790)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#787-790
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#955-1015)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#971-975
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#976
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#979-1010
usingOraclize.verifySig uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1022-1043)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1034-1035
usingOraclize.copyBytes uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1159-1180)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1174-1176
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1184-1211)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1201-1211
usingOraclize.ecrecovery uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1214-1270)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1229-1266
usingOraclize.safeMemoryCleaner uses assembly (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1270-1273)
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1271-1273
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#39)
Race.house_takeout should be constant (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1297-1300)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:
	- Version used: ['>=0.4.18', '^0.4.21']
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1 declares pragma solidity^0.4.21
	- /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#35 declares pragma solidity>=0.4.18
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
OraclizeI.query2 (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#41-42) should be declared external
OraclizeI.queryN (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#43-44) should be declared external
OraclizeI.getPrice (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#45-46) should be declared external
OraclizeI.getPrice (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#46-47) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#53-59) should be declared external
usingOraclize.__callback (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#370-373) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol:
	- pragma solidity^0.4.21 (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1): it allows old versions
	- pragma solidity>=0.4.18 (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#35): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#40-41) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#42-43) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#44-45) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#49-53) is not in mixedCase
Struct 'Buffer.buffer' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#90-91) is not in CapWords
Parameter '_capacity' of Buffer.init (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#92) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#295-1273) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#326-331) is not in mixedCase
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#331-370) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#370-373) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#373-377) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#377-379) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#379-382) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#382-387) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#387-391) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#392-397) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#397-402) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#402-407) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#407-411) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#412-417) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#417-423) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#423-429) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#429-433) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#434-441) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#441-448) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#448-452) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#452-457) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#457-464) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#464-470) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#470-475) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#475-481) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#481-488) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#488-495) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#495-501) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#501-508) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#508-517) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#517-525) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#525-532) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#532-540) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#540-549) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#549-558) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#558-566) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#566-575) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#575-585) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#585-591) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#591-597) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#597-602) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#602-610) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#610-617) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#617-622) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#622-628) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#628-634) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#634-640) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#640-646) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#646-652) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#652-659) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#659-666) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#666-671) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#671-678) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#678-689) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#689-695) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#695-703) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#703-711) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#711-720) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#720-729) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#729-737) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#737-746) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#746-757) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#757-770) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#770-775) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#775-778) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#778-781) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#781-784) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#791) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#812-813) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#813) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#830-831) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#831-832) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#852) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#852) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#852) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#852) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#852) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#876-877) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#877) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#877) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#877) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#881) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#881-882) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#882) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#887-888) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#888) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#892-893) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#898-899) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#899) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#952-953) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#952) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#953-955) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#955-1015) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#957) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#957) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#957-958) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1015-1018) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1043-1078) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1092-1100) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1092-1093) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1093) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1093) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1100-1101) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1104-1157) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1105-1106) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1184-1211) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#296) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#297) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#297-298) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#298-299) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#299-300) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#301) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#302) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#304-306) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#306-308) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#308) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#308-309) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#309-311) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#311-312) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#312-314) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#314-316) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#951-952) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1018-1022) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1022) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1080-1091) is not in mixedCase
Struct 'Race.chronus_info' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1302-1315) is not in CapWords
Struct 'Race.horses_info' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1315-1326) is not in CapWords
Struct 'Race.bet_info' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1326-1332) is not in CapWords
Struct 'Race.coin_info' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1332-1342) is not in CapWords
Struct 'Race.voter_info' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1342-1348) is not in CapWords
Parameter '_newOwner' of Race.changeOwnership (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1389) is not in mixedCase
Parameter 'coin_pointer' of Race.priceCallback (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1394-1395) is not in mixedCase
Parameter '_bettingDuration' of Race.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1439-1440) is not in mixedCase
Parameter '_raceDuration' of Race.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1441-1442) is not in mixedCase
Function 'Race.claim_reward' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1544-1551) is not in mixedCase
Function 'Race.reward_total' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1585-1588) is not in mixedCase
Variable 'Race.house_takeout' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1297-1300) is not in mixedCase
Constant 'Race.version' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1301-1302) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Race.total_reward' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1358-1359) is not in mixedCase
Variable 'Race.total_bettors' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1362) is not in mixedCase
Variable 'Race.winner_horse' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1362) is not in mixedCase
Contract 'oraclizeController' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1614-1763) is not in CapWords
Struct 'oraclizeController.horsesInfo' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1618-1623) is not in CapWords
Struct 'oraclizeController.coinInfo' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1623-1626) is not in CapWords
Event 'oraclizeController.newOraclizeQuery' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1615-1616) is not in CapWords
Function 'oraclizeController.__callback' (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1711-1746) is not in mixedCase
Parameter '_newGasPrice' of oraclizeController.changeOraclizeGasPrice (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1659-1661) is not in mixedCase
Parameter 'locking_duration' of oraclizeController.setupRace (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1662) is not in mixedCase
Parameter 'coin_pointer' of oraclizeController.ethorseOracle (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#1747-1748) is not in mixedCase
Parameter '_bettingDuration' of BettingController.spawnRaceManual (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_raceDuration' of BettingController.spawnRaceManual (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_isOraclizeUsed' of BettingController.spawnRaceManual (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_race' of BettingController.enableRefund (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_race' of BettingController.manualRecovery (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_race' of BettingController.changeRaceOwnership (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_newOwner' of BettingController.changeRaceOwnership (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Parameter '_amount' of BettingController.extractFund (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#296) is never used in BettingController
usingOraclize.week (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#297) is never used in BettingController
usingOraclize.month (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#297-298) is never used in BettingController
usingOraclize.proofType_NONE (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#298-299) is never used in BettingController
usingOraclize.proofType_Ledger (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#301) is never used in BettingController
usingOraclize.proofType_Android (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#302) is never used in BettingController
usingOraclize.proofType_Native (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#304-306) is never used in BettingController
usingOraclize.networkID_mainnet (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#308-309) is never used in BettingController
usingOraclize.networkID_testnet (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#309-311) is never used in BettingController
usingOraclize.networkID_morden (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#311-312) is never used in BettingController
usingOraclize.networkID_consensys (/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol#312-314) is never used in BettingController
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/7/0x22cf5a32db839f2dab774ed81f8a4d6e24faf85a.sol analyzed (9 contracts), 221 result(s) found