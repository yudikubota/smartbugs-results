INFO:Slither:Compilation warnings/errors on /unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:20:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Matthew(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:36:13: Warning: Use of the "var" keyword is deprecated.
            var nextStake = this.balance * WINNERTAX_PRECENT/100;  // leave some money for the next round
            ^-----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:45:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (msg.value < this.balance + DELTA) throw; // you must rise the stake by Delta
                                                  ^---^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:75:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:36:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            var nextStake = this.balance * WINNERTAX_PRECENT/100;  // leave some money for the next round
                            ^----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:38:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                isSuccess = whale.send(this.balance - nextStake); // pay out the stake
                                       ^----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:39:46: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            MatthewWon("Matthew won", whale, this.balance, block.number);
                                             ^----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:39:13: Warning: Invoking events without "emit" prefix is deprecated.
            MatthewWon("Matthew won", whale, this.balance, block.number);
            ^----------------------------------------------------------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:45:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (msg.value < this.balance + DELTA) throw; // you must rise the stake by Delta
                            ^----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:46:51: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            bool isOtherSuccess = msg.sender.send(this.balance); // give back the old stake
                                                  ^----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:48:54: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            StakeIncreased("stake increased", whale, this.balance, blockheight);
                                                     ^----------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:48:13: Warning: Invoking events without "emit" prefix is deprecated.
            StakeIncreased("stake increased", whale, this.balance, blockheight);
            ^-----------------------------------------------------------------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:20:5: Warning: No visibility specified. Defaulting to "public". 
    function Matthew(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:32:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:46:13: Warning: Unused local variable.
            bool isOtherSuccess = msg.sender.send(this.balance); // give back the old stake
            ^-----------------^
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function destroyWhenRoundOver() onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:58:5: Warning: No visibility specified. Defaulting to "public". 
    function setNewPeriod(uint _newPeriod) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function getPeriod() constant returns (uint){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Matthew.fallback (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#34-53) sends eth to arbitrary user
	Dangerous calls:
	- isSuccess = whale.send(this.balance - nextStake) (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#38-39)
	- isOtherSuccess = msg.sender.send(this.balance) (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#46-47)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Matthew.fallback (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#34-53) allows anyone to destruct the contract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#suicidal[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#46:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Matthew.fallback (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#34-53) should be declared external
Matthew.destroyWhenRoundOver (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#54-58) should be declared external
Matthew.setNewPeriod (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#59-63) should be declared external
Matthew.getPeriod (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#63-67) should be declared external
Matthew.getBlocksTillMatthew (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#68-75) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol:
	- pragma solidity^0.4.6 (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Matthew.Matthew' (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#20-25) is not in mixedCase
Parameter '_newPeriod' of Matthew.setNewPeriod (/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol#59-62) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x40360631db85eddab268dd1b6ffea4377733e125.sol analyzed (1 contracts), 12 result(s) found