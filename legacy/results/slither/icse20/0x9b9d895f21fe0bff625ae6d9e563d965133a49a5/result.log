INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:20:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:131:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(!istransferAllowed) throw;
                             ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:150:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GACToken(uint256 _fundingStartBlock, uint256 _fundingEndBlock){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:179:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(!istransferAllowed) throw;
                             ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:193:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!ownership[msg.sender]) throw;
                                   ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:218:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!ownership[msg.sender]) throw;
                                   ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:223:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!ownership[msg.sender]) throw;
                                   ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:228:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!ownership[msg.sender]) throw;
                                   ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:233:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!ownership[msg.sender]) throw;
                                   ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:236:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(usdraised<minCapUSD) throw;
                                ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:261:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(usdraised>maxCapUSD) throw;
                                ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:267:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:307:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:436:9: Warning: Use of the "var" keyword is deprecated.
        var ibit = uint8(txBytes[pos]);
        ^------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:491:13: Warning: Use of the "var" keyword is deprecated.
            var pkhash = parseOutputScript(txBytes, script_starts[i], output_script_lens[i]);
            ^--------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:509:14: Warning: Use of the "var" keyword is deprecated.
        var (output_values, script_starts, output_script_lens,) = scanOutputs(txBytes, pos, 0);
             ^-----------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:509:29: Warning: Use of the "var" keyword is deprecated.
        var (output_values, script_starts, output_script_lens,) = scanOutputs(txBytes, pos, 0);
                            ^-----------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:509:44: Warning: Use of the "var" keyword is deprecated.
        var (output_values, script_starts, output_script_lens,) = scanOutputs(txBytes, pos, 0);
                                           ^----------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:513:13: Warning: Use of the "var" keyword is deprecated.
            var pkhash = parseOutputScript(txBytes, script_starts[i], output_script_lens[i]);
            ^--------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:541:14: Warning: Use of the "var" keyword is deprecated.
        for (var i = 0; i < halt; i++) {
             ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:574:14: Warning: Use of the "var" keyword is deprecated.
        for (var i = 0; i < halt; i++) {
             ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:718:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if(ETHUSD==0) throw;
                          ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:723:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if(BTCUSD==0) throw;
                          ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:729:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if(valueInUSD<mincontribprivatesale) throw;
                                                 ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:732:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if(valueInUSD<mincontribpresale) throw;
                                             ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:735:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if(valueInUSD>=mincontribpublicsale) throw;
                                                 ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:847:4: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
   function NewTokenSale(address tokenAddress,address strategy){
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:864:14: Warning: Use of the "var" keyword is deprecated.
        var (discount,usd) = pricingstrategy.totalDiscount(currentState,msg.value,"ethereum");
             ^------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:864:23: Warning: Use of the "var" keyword is deprecated.
        var (discount,usd) = pricingstrategy.totalDiscount(currentState,msg.value,"ethereum");
                      ^-^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:883:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!ownerAddr.send(this.balance))throw;
                                         ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:895:18: Warning: Use of the "var" keyword is deprecated.
            var (a,b) = BTC.checkValueSent(txn,btcaddr,valueToBeSent);
                 ^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:895:20: Warning: Use of the "var" keyword is deprecated.
            var (a,b) = BTC.checkValueSent(txn,btcaddr,valueToBeSent);
                   ^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:911:14: Warning: Use of the "var" keyword is deprecated.
        var (discount,usd) = pricingstrategy.totalDiscount(state,value,"bitcoin");
             ^------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:911:23: Warning: Use of the "var" keyword is deprecated.
        var (discount,usd) = pricingstrategy.totalDiscount(state,value,"bitcoin");
                      ^-^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:942:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(currentState!=ICOSaleState.Success) throw;
                                               ^---^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:40:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:135:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:184:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:195:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(this), _person, value);
        ^-------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:209:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:317:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:325:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:541:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i = 0; i < halt; i++) {
             ^-------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:574:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i = 0; i < halt; i++) {
             ^-------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:717:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(types)==keccak256("ethereum")){
           ^--------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:717:12: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        if(keccak256(types)==keccak256("ethereum")){
           ^--------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:720:13: Warning: Invoking events without "emit" prefix is deprecated.
            logval(valueInUSD);
            ^----------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:722:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        }else if(keccak256(types)==keccak256("bitcoin")){
                 ^--------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:722:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        }else if(keccak256(types)==keccak256("bitcoin")){
                 ^--------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:725:13: Warning: Invoking events without "emit" prefix is deprecated.
            logval(valueInUSD);
            ^----------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:883:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if(!ownerAddr.send(this.balance))throw;
                           ^----------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:20:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:87:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:91:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:130:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:150:5: Warning: No visibility specified. Defaulting to "public". 
    function GACToken(uint256 _fundingStartBlock, uint256 _fundingEndBlock){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:157:5: Warning: No visibility specified. Defaulting to "public". 
    function changeEndBlock(uint256 _newFundingEndBlock) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:162:5: Warning: No visibility specified. Defaulting to "public". 
    function changeStartBlock(uint256 _newFundingStartBlock) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:168:5: Warning: No visibility specified. Defaulting to "public". 
    function changeMinCapUSD(uint256 _newMinCap) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:173:5: Warning: No visibility specified. Defaulting to "public". 
    function changeMaxCapUSD(uint256 _newMaxCap) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:178:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3 * 32) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function addToBalances(address _person,uint256 value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:198:5: Warning: No visibility specified. Defaulting to "public". 
    function addToOwnership(address owners) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:202:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:206:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) onlyPayloadSize(2 * 32) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:213:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:217:5: Warning: No visibility specified. Defaulting to "public". 
    function increaseEthRaised(uint256 value){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:222:5: Warning: No visibility specified. Defaulting to "public". 
    function increaseBTCRaised(uint256 value){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:227:5: Warning: No visibility specified. Defaulting to "public". 
    function increaseUSDRaised(uint256 value){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:232:5: Warning: No visibility specified. Defaulting to "public". 
    function finalizeICO(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:250:5: Warning: No visibility specified. Defaulting to "public". 
    function finalizeICOOwner() onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function isValid() returns(bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:266:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:434:5: Warning: No visibility specified. Defaulting to "public". 
    function parseVarInt(bytes txBytes, uint pos) returns (uint, uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:450:5: Warning: No visibility specified. Defaulting to "public". 
    function getBytesLE(bytes data, uint pos, uint bits) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:474:5: Warning: No visibility specified. Defaulting to "public". 
    function getFirstTwoOutputs(bytes txBytes)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:502:5: Warning: No visibility specified. Defaulting to "public". 
    function checkValueSent(bytes txBytes, bytes20 btcAddress, uint value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function scanInputs(bytes txBytes, uint pos, uint stop)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:555:5: Warning: No visibility specified. Defaulting to "public". 
    function scanOutputs(bytes txBytes, uint pos, uint stop)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:587:5: Warning: No visibility specified. Defaulting to "public". 
    function sliceBytes20(bytes data, uint start) returns (bytes20) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:596:5: Warning: No visibility specified. Defaulting to "public". 
    function isP2PKH(bytes txBytes, uint pos, uint script_len) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:606:5: Warning: No visibility specified. Defaulting to "public". 
    function isP2SH(bytes txBytes, uint pos, uint script_len) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:615:5: Warning: No visibility specified. Defaulting to "public". 
    function parseOutputScript(bytes txBytes, uint pos, uint script_len)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:673:5: Warning: No visibility specified. Defaulting to "public". 
    function getLatest(uint btcusd,uint ethusd) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:715:5: Warning: No visibility specified. Defaulting to "public". 
    function totalDiscount(Sales.ICOSaleState state,uint256 contribution,string types) returns (uint256,uint256){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:743:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:847:4: Warning: No visibility specified. Defaulting to "public". 
   function NewTokenSale(address tokenAddress,address strategy){
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:888:5: Warning: No visibility specified. Defaulting to "public". 
    function processTransaction(bytes txn, uint256 txHash,address addr,bytes20 btcaddr)  onlyOwner returns (uint)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:966:5: Warning: No visibility specified. Defaulting to "public". 
    function getStateFunding() returns (ICOSaleState){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:255:5: Warning: Function state mutability can be restricted to view
    function isValid() returns(bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:450:5: Warning: Function state mutability can be restricted to pure
    function getBytesLE(bytes data, uint pos, uint bits) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:587:5: Warning: Function state mutability can be restricted to pure
    function sliceBytes20(bytes data, uint start) returns (bytes20) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:596:5: Warning: Function state mutability can be restricted to pure
    function isP2PKH(bytes txBytes, uint pos, uint script_len) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:606:5: Warning: Function state mutability can be restricted to pure
    function isP2SH(bytes txBytes, uint pos, uint script_len) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:636:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:645:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:652:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:657:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:837:5: Warning: Function state mutability can be restricted to view
    function checkExistsInArray(address addr) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:966:5: Warning: Function state mutability can be restricted to view
    function getStateFunding() returns (ICOSaleState){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:
	Contract GACToken has payable functions:
	 - fallback (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#289-290)
	But does not have a function to withdraw the ether
Contract locking ether found in /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:
	Contract PricingStrategy has payable functions:
	 - fallback (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#768)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
valueInUSD in PricingStrategy.totalDiscount (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#733-734) is a local variable never initialiazed
found in NewTokenSale.addToBalances (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#839) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
NewTokenSale.alottMainSaleToken has external calls inside a loop:
	- token.addToBalances(arr[i],balances[arr[i]].value) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#859-860)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in NewTokenSale.NewTokenSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#866-871):
	External calls:
	- valueToBeSent = token.valueToBeSent() (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#869)
	State variables written after the call(s):
	- pricingstrategy (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#870)
Reentrancy in NewTokenSale.allottTokensBTC (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#920-966):
	External calls:
	- currentState = getStateFunding() (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#921-922)
	- (discount,usd) = pricingstrategy.totalDiscount(state,value,bitcoin) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#924-926)
	State variables written after the call(s):
	- balances (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#958-962)
	- balancesArr (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#958-962)
	- currentPreSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#942-943)
	- currentPrivateSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#936-937)
	- currentPublicSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#952-953)
	- currentSupply (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#954-957)
Reentrancy in NewTokenSale.allottTokensBTC (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#920-966):
	External calls:
	- currentState = getStateFunding() (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#921-922)
	- (discount,usd) = pricingstrategy.totalDiscount(state,value,bitcoin) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#924-926)
	- token.increaseBTCRaised(value) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#962)
	- token.increaseUSDRaised(usd) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#962-963)
	State variables written after the call(s):
	- numberOfBackers (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#966)
Reentrancy in NewTokenSale.alottTokensExchange (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#967-969):
	External calls:
	- token.addToBalances(contributor,value) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#968)
	State variables written after the call(s):
	- currentSupply (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#969)
Reentrancy in NewTokenSale.fallback (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#872-907):
	External calls:
	- require(bool)(token.isValid()) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#872-873)
	- currentState = getStateFunding() (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#873-874)
	- (discount,usd) = pricingstrategy.totalDiscount(currentState,msg.value,ethereum) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#876-878)
	State variables written after the call(s):
	- balances (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#900-901)
	- balancesArr (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#900-901)
	- currentPreSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#890-892)
	- currentPrivateSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#886-888)
	- currentPublicSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#896-898)
	- currentSupply (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#898-899)
Reentrancy in NewTokenSale.fallback (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#872-907):
	External calls:
	- require(bool)(token.isValid()) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#872-873)
	- currentState = getStateFunding() (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#873-874)
	- (discount,usd) = pricingstrategy.totalDiscount(currentState,msg.value,ethereum) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#876-878)
	- token.increaseEthRaised(msg.value) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#901-903)
	- token.increaseUSDRaised(usd) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#905-906)
	State variables written after the call(s):
	- numberOfBackers (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#906-907)
Reentrancy in NewTokenSale.processTransaction (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#909-919):
	External calls:
	- require(bool)(token.isValid()) (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#912)
	- currentState = getStateFunding() (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#913)
	State variables written after the call(s):
	- transactionsClaimed (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#916)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
GACToken.tokenCreationMax should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#118-119)
GACToken.valueToBeSent should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#108-109)
GACToken.version should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#105-107)
NewTokenSale.distributorAddress should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#787-788)
NewTokenSale.fundssent should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#776)
NewTokenSale.investorCount should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#817-819)
NewTokenSale.maxPreSale should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#794-796)
NewTokenSale.maxPrivateSale should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#790-792)
NewTokenSale.maxPublicSale should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#799-800)
NewTokenSale.ownerAddr should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#782-783)
NewTokenSale.tokenCreationMax should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#780-781)
PricingStrategy.called should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#695-696)
PricingStrategy.exchangeRate should be constant (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#695)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#199:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#228:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#233:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#236:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#241:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#246:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#283:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#290:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#323:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#735:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#749:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#755:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#760:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#765:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#907:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#971:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#38-49) should be declared external
GACToken.balanceOf (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#206-208) should be declared external
Token.balanceOf (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#88-89) should be declared external
Token.transfer (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#89) should be declared external
GACToken.transfer (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#131-144) should be declared external
Token.transferFrom (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#89-91) should be declared external
GACToken.transferFrom (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#180-195) should be declared external
Token.approve (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#91) should be declared external
GACToken.approve (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#208-218) should be declared external
GACToken.allowance (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#218-224) should be declared external
Token.allowance (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#91-93) should be declared external
GACToken.burnTokens (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#144-151) should be declared external
GACToken.changeEndBlock (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#162-163) should be declared external
GACToken.changeStartBlock (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#167-170) should be declared external
GACToken.changeMinCapUSD (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#173-178) should be declared external
GACToken.changeMaxCapUSD (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#178-180) should be declared external
GACToken.addToBalances (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#195-203) should be declared external
GACToken.addToOwnership (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#203-206) should be declared external
GACToken.increaseEthRaised (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#224-229) should be declared external
GACToken.increaseBTCRaised (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#229-234) should be declared external
GACToken.increaseUSDRaised (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#234-237) should be declared external
GACToken.finalizeICO (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#237-249) should be declared external
GACToken.enableTransfers (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#249-251) should be declared external
GACToken.disableTransfers (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#252-256) should be declared external
GACToken.finalizeICOOwner (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#259-264) should be declared external
GACToken.isValid (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#264-283) should be declared external
GACToken.fallback (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#289-290) should be declared external
Pausable.pause (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#330-332) should be declared external
Pausable.unpause (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#334-336) should be declared external
BTC.getFirstTwoOutputs (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#486-508) should be declared external
BTC.checkValueSent (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#512-533) should be declared external
PricingStrategy.getLatest (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#696-699) should be declared external
PricingStrategy.changeprivatebonus (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#704-708) should be declared external
PricingStrategy.changepublicbonus (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#708-715) should be declared external
PricingStrategy.changepresalebonus (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#715-716) should be declared external
PricingStrategy.changeminprivatesale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#719-723) should be declared external
PricingStrategy.changeminpresale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#723-727) should be declared external
PricingStrategy.changeminpublicsale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#728-730) should be declared external
PricingStrategy.totalDiscount (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#731-767) should be declared external
PricingStrategy.fallback (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#768) should be declared external
NewTokenSale.getBalance (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#829-831) should be declared external
NewTokenSale.alottMainSaleToken (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#848-861) should be declared external
NewTokenSale.processTransaction (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#909-919) should be declared external
NewTokenSale.alottTokensExchange (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#967-969) should be declared external
NewTokenSale.finalizeTokenSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#969-971) should be declared external
NewTokenSale.killContract (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#971-976) should be declared external
NewTokenSale.changeEndPrivateSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol) should be declared external
NewTokenSale.changeEndPreSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol) should be declared external
NewTokenSale.changeTokensPerUSD (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol:
	- pragma solidity^0.4.11 (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#20-26) is not in mixedCase
Parameter '_owner' of GACToken.balanceOf (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#207) is not in mixedCase
Parameter '_to' of GACToken.transfer (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#132) is not in mixedCase
Parameter '_value' of GACToken.transfer (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#132) is not in mixedCase
Parameter '_from' of GACToken.transferFrom (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#180) is not in mixedCase
Parameter '_to' of GACToken.transferFrom (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#180) is not in mixedCase
Parameter '_value' of GACToken.transferFrom (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#180) is not in mixedCase
Parameter '_spender' of GACToken.approve (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#209) is not in mixedCase
Parameter '_value' of GACToken.approve (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#209) is not in mixedCase
Parameter '_owner' of GACToken.allowance (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#219) is not in mixedCase
Parameter '_spender' of GACToken.allowance (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#219-222) is not in mixedCase
Parameter '_value' of GACToken.burnTokens (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#144-145) is not in mixedCase
Function 'GACToken.GACToken' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#152-159) is not in mixedCase
Parameter '_fundingStartBlock' of GACToken.GACToken (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#153) is not in mixedCase
Parameter '_fundingEndBlock' of GACToken.GACToken (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#153-156) is not in mixedCase
Parameter '_newFundingEndBlock' of GACToken.changeEndBlock (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#162) is not in mixedCase
Parameter '_newFundingStartBlock' of GACToken.changeStartBlock (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#167-168) is not in mixedCase
Parameter '_newMinCap' of GACToken.changeMinCapUSD (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#173-174) is not in mixedCase
Parameter '_newMaxCap' of GACToken.changeMaxCapUSD (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#178-179) is not in mixedCase
Parameter '_person' of GACToken.addToBalances (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#196-198) is not in mixedCase
Constant 'GACToken.GACFund' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#114-115) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter 'script_len' of BTC.isP2PKH (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#606-607) is not in mixedCase
Parameter 'script_len' of BTC.isP2SH (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#616-617) is not in mixedCase
Parameter 'script_len' of BTC.parseOutputScript (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#645) is not in mixedCase
Event 'PricingStrategy.logval' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#731) is not in CapWords
Parameter '_value' of PricingStrategy.changeprivatebonus (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#707) is not in mixedCase
Parameter '_value' of PricingStrategy.changepublicbonus (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#712) is not in mixedCase
Parameter '_value' of PricingStrategy.changepresalebonus (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#715) is not in mixedCase
Parameter '_value' of PricingStrategy.changeminprivatesale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#720-722) is not in mixedCase
Parameter '_value' of PricingStrategy.changeminpresale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#724) is not in mixedCase
Parameter '_value' of PricingStrategy.changeminpublicsale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#728) is not in mixedCase
Variable 'PricingStrategy.ETHUSD' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#691-692) is not in mixedCase
Variable 'PricingStrategy.BTCUSD' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#692-695) is not in mixedCase
Struct 'NewTokenSale.balanceStruct' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#819-824) is not in CapWords
Event 'NewTokenSale.logaddr' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#828) is not in CapWords
Function 'NewTokenSale.NewTokenSale' (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#866-871) is not in mixedCase
Parameter '_newend' of NewTokenSale.changeEndPrivateSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol) is not in mixedCase
Parameter '_newend' of NewTokenSale.changeEndPreSale (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol) is not in mixedCase
Parameter '_val' of NewTokenSale.changeTokensPerUSD (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
NewTokenSale.fundssent (/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol#776) is never used in NewTokenSale
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/19/0x9b9d895f21fe0bff625ae6d9e563d965133a49a5.sol analyzed (10 contracts), 121 result(s) found