INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:767:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:883:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:886:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:904:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:962:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1194:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1212:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1213:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1256:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1257:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1268:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1357:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / divisor;
        ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1467:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1495:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1725:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1749:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(length);
        ^-----^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1772:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToAdd(a, b)) throw;
                              ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1781:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToSubtract(a, b)) throw;
                                   ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1794:226: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1802:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(gamePaused == true) throw;
                           ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1810:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(payoutsPaused == true) throw;
                              ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1818:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != oraclize_cbAddress()) throw;
                                            ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1826:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != owner) throw;
                             ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1834:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != treasury) throw;
                                ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1894:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Xflip() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1942:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(maxPendingPayouts >= contractBalance) throw;
                                             ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1956:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (playerAddress[myid]==0x0) throw;
                                  ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1959:5: Warning: Use of the "var" keyword is deprecated.
    var sl_result = result.toSlice();
    ^-----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2171:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(newMaxProfitAsPercent > 10000) throw;
                                      ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2191:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!sendTo.send(amount)) throw;
                             ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2209:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!sendTo.send(originalPlayerBetValue)) throw;
                                             ^---^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1303:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1210:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint l) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:807:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:807:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:839:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:842:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:857:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:919:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:919:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:919:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:919:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:919:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:937:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:937:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1526:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1526:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1527:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1529:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1531:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1531:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1563:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1563:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1564:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1566:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1568:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1569:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1569:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1571:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1571:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1944:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogBet(playerBetId[rngId], playerAd ... tValue[rngId], playerNumber[rngId]);          
    ^-------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1970:34: Warning: "sha3" has been deprecated in favour of "keccak256"
    playerDieResult[myid] = uint(sha3(playerRandomResult[myid], proof)) % 100 + 1;        
                                 ^-----------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1970:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    playerDieResult[myid] = uint(sha3(playerRandomResult[myid], proof)) % 100 + 1;        
                                 ^-----------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2002:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogResult(serialNumberOfResult, pla ... 3, proof, playerRandomResult[myid]);            
      ^-------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2010:11: Warning: Invoking events without "emit" prefix is deprecated.
          LogResult(serialNumberOfResult, pla ... 4, proof, playerRandomResult[myid]);              
          ^-------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2034:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogResult(serialNumberOfResult, pla ... 1, proof, playerRandomResult[myid]);                            
      ^-------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2045:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogResult(serialNumberOfResult, pla ... 2, proof, playerRandomResult[myid]);                   
        ^-------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2059:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogResult(serialNumberOfResult, pla ... 0, proof, playerRandomResult[myid]);                                
      ^-------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2122:17: Warning: "sha3" has been deprecated in favour of "keccak256"
    return uint(sha3(randomResult, proof)) % 100 + 1;
                ^-----------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2122:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return uint(sha3(randomResult, proof)) % 100 + 1;
                ^-----------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2192:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogOwnerTransfer(sendTo, amount);
    ^------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2211:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogRefund(originalPlayerBetId, sendTo, originalPlayerBetValue);
    ^------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2246:5: Warning: "suicide" has been deprecated in favour of "selfdestruct"
    suicide(owner);
    ^------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:87:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:126:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:126:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:126:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1894:3: Warning: No visibility specified. Defaulting to "public". 
  function Xflip() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2128:3: Warning: No visibility specified. Defaulting to "public". 
  function ()
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:126:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:537:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:557:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:575:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:602:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:637:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:655:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:672:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:714:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:762:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:901:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix, uint n_random_bytes) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:957:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1098:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1122:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1135:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1184:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1210:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint l) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1238:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1251:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1295:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1346:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1395:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1407:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1433:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1462:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1490:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1768:5: Warning: Function state mutability can be restricted to pure
    function safeToAdd(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:1776:5: Warning: Function state mutability can be restricted to pure
    function safeToSubtract(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:2121:3: Warning: Function state mutability can be restricted to pure
  function playerCheckProvablyFair(uint randomResult, bytes proof) public constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#547-550) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Xflip.Xflip (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1937-1944):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1939)
	- oraclize_setCustomGasPrice(20000000000) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1944)
	State variables written after the call(s):
	- OAR (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1944)
	- oraclize (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1944)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#73-82):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#77-82)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#81-82)
	State variables written after the call(s):
	- oraclize (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#81-82)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ret in strings.len (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1169) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Xflip.__callback (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2001-2156) does not use the value returned by external calls:
	-sl_result.beyond([.toSlice()).until(].toSlice()) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2005-2006)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
strings.memcpy.len (local variable @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1135) shadows:
	- strings.len (function @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1169-1193)
	- strings.len (function @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1246-1266)
strings.nextRune.len (local variable @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1348-1349) shadows:
	- strings.len (function @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1169-1193)
	- strings.len (function @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1246-1266)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Xflip.Xflip (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1937-1944):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1939)
	State variables written after the call(s):
	- gasForOraclize (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1943)
	- houseEdge (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1940)
	- maxProfit (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1940-1941)
	- maxProfitAsPercentOfHouse (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1940-1941)
	- minBet (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1942-1943)
Reentrancy in Xflip.Xflip (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1937-1944):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1939)
	- oraclize_setCustomGasPrice(20000000000) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1944)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1944)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#781-833):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#792-795)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#800-801)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#800-801)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#800-801)
	- oraclize_randomDS_args (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#829-830)
Reentrancy in Xflip.playerRollDice (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1948-1998):
	External calls:
	- rngId = oraclize_query(nested,[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random["serialNumber","data"]', '\n{"jsonrpc":"2.0","method":"generateSignedIntegers","params":{"apiKey":"a7527e4d-e83e-419a-a56e-1133b30acac1","n":1,"min":1,"max":100,"replacement":true,"base":10${[identity] "}"},"id":1${[identity] "}"}'],gasForOraclize) (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1958-1967)
	State variables written after the call(s):
	- maxPendingPayouts (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1985-1986)
	- playerAddress (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1974-1975)
	- playerBetId (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1968)
	- playerBetValue (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1972-1973)
	- playerNumber (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1970)
	- playerProfit (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1978-1982)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#547-550)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#548-550
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#781-833)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#795-798
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#798-799
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#802-830
usingOraclize.verifySig uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#841-861)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#853-857
usingOraclize.copyBytes uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#983-1001)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#995-999
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1010-1034)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1024-1033
usingOraclize.ecrecovery uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1037-1070)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1049-1068
strings.memcpy uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1133-1149)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1139-1141
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1144-1149
strings.toSlice uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1158-1164)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1162-1164
strings.toSliceB32 uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1204-1211)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1206-1210
strings.toString uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1225-1236)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1234
strings.len uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1246-1266)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1252-1254
strings.compare uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1289-1318)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1298-1304
strings.nextRune uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1343-1378)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1355-1356
strings.ord uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1397-1433)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1405-1407
strings.keccak uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1439-1443)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1441-1443
strings.startsWith uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1453-1471)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1461-1470
strings.beyond uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1484-1501)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1489-1497
strings.endsWith uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1512-1524)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1520-1523
strings.until uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1529-1545)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1537-1542
strings.findPtr uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1552-1585)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1558-1570
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1575-1577
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1579-1581
strings.rfindPtr uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1593-1627)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1599-1615
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1620-1621
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1623-1624
strings.concat uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1780-1793)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1786-1791
strings.join uses assembly (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1802-1843)
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1823-1825
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#36)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:
	- Version used: ['^0.4.0', '^0.4.14', '^0.4.18']
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1 declares pragma solidity^0.4.18
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#32 declares pragma solidity^0.4.0
	- /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1131 declares pragma solidity^0.4.14
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#786:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#829-830:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#858-861:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#860-861:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#924:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#933-934:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#956-957:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#986:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#906:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#913:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1850:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1857:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2002:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2011:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1988:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2197-2198:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2235:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1872:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1875:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1881:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1882:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1884:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1885:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#36-37) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#37-38) should be declared external
OraclizeI.query2 (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#38-39) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#39-40) should be declared external
OraclizeI.queryN (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#40-41) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#41-42) should be declared external
OraclizeI.getPrice (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#42-43) should be declared external
OraclizeI.getPrice (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#43-45) should be declared external
OraclizeI.useCoupon (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#45) should be declared external
OraclizeI.setProofType (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#46-47) should be declared external
OraclizeI.setConfig (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#47) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#48) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#48-51) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#53-54) should be declared external
usingOraclize.__callback (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#126-129) should be declared external
Xflip.playerRollDice (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1948-1998) should be declared external
Xflip.playerWithdrawPendingTransactions (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2160-2181) should be declared external
Xflip.playerGetPendingTxByAddress (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2183-2187) should be declared external
Xflip.playerCheckProvablyFair (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2196-2198) should be declared external
Xflip.fallback (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2198-2201) should be declared external
Xflip.ownerSetCallbackGasPrice (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2201-2203) should be declared external
Xflip.ownerSetOraclizeSafeGas (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2206-2208) should be declared external
Xflip.ownerUpdateContractBalance (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2210-2215) should be declared external
Xflip.ownerTransferEther (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Xflip.ownerRefundPlayer (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Xflip.ownerPauseGame (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Xflip.ownerPausePayouts (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Xflip.ownerSetTreasury (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Xflip.ownerChangeOwner (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Xflip.ownerkill (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol:
	- pragma solidity^0.4.18 (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#32): it allows old versions
	- pragma solidity^0.4.14 (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1131): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Xflip.playerWithdrawPendingTransactions (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2160-2181):
	-msg.sender.call.value(withdrawAmount)() /unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2170-2181
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#37-38) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#39-40) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#41-42) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#48-51) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#54-1071) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#88-126) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#126-129) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#129-133) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#133-134) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#135-138) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#138-142) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#142-147) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#147-152) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#152-157) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#157-162) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#162-167) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#167-172) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#172-177) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#177-183) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#183-189) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#189-194) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#194-201) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#201-208) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#208-213) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#213-217) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#217-223) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#223-230) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#230-235) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#236-241) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#241-248) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#248-254) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#255-261) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#261-268) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#268-276) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#276-284) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#285-292) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#292-300) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#300-309) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#309-318) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#318-326) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#326-335) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#335-345) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#345-351) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#351-357) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#357-363) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#363-369) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#369-377) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#377-381) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#381-386) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#386-393) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#393-398) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#399-404) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#404-410) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#410-417) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#417-423) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#423-430) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#430-437) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#437-445) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#446-453) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#453-461) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#461-469) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#469-478) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#478-486) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#486-495) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#495-504) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#504-516) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#517-527) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#527-528) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#528-533) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#533-538) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#538-543) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#543-547) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#550) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#575) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#575) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#590) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#590) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#613) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#613) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#613) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#613-614) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#614) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#638) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#638) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#638-639) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#639) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#642) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#642) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#642) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#646) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#646-647) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#650-651) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#656) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#656) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#776-778) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#777) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#778-780) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#781-833) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#781-782) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#782) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#783) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#833-839) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#861-896) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#913-921) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#913) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#913-915) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#915) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#922) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#927-982) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#927-928) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1010-1034) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#55-56) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#56-57) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#57-58) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#58-59) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#59-60) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#60-61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#61-62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#62-63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#63-64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#64-65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#66-67) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#67-69) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#69-72) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#72-73) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#774-776) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#839-840) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#840-841) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#896-913) is not in mixedCase
Contract 'strings' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1131-1843) is not in CapWords
Struct 'strings.slice' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1132-1133) is not in CapWords
Function 'Xflip.__callback' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#2001-2156) is not in mixedCase
Function 'Xflip.Xflip' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1937-1944) is not in mixedCase
Constant 'Xflip.maxProfitDivisor' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1885-1886) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Xflip.houseEdgeDivisor' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1886-1887) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Xflip.maxNumber' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1887) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Xflip.minNumber' (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#1887-1888) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#55-56) is never used in Xflip
usingOraclize.week (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#56-57) is never used in Xflip
usingOraclize.month (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#57-58) is never used in Xflip
usingOraclize.proofType_NONE (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#58-59) is never used in Xflip
usingOraclize.proofType_Android (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#60-61) is never used in Xflip
usingOraclize.proofType_Ledger (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#61-62) is never used in Xflip
usingOraclize.proofType_Native (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#62-63) is never used in Xflip
usingOraclize.networkID_mainnet (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#65-66) is never used in Xflip
usingOraclize.networkID_testnet (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#66-67) is never used in Xflip
usingOraclize.networkID_morden (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#67-69) is never used in Xflip
usingOraclize.networkID_consensys (/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol#69-72) is never used in Xflip
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/13/0xe994c93026b13337fda5a96c4141e2e3bc7c47af.sol analyzed (6 contracts), 233 result(s) found