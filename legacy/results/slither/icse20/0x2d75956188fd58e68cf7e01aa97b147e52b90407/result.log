INFO:Slither:Compilation warnings/errors on /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:44:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:73:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Bazeries() 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:85:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:86:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:87:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:88:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:97:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:105:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:106:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:107:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:108:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:109:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:118:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:119:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:127:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:128:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:136:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:137:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:146:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:42:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:91:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:113:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:131:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:140:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:73:5: Warning: No visibility specified. Defaulting to "public". 
    function Bazeries() 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:117:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:126:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:135:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:145:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:151:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:42:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Bazeries (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#49-153) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#85-95)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#42-49) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#48:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#109-110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Bazeries.transfer (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#85-95) should be declared external
Bazeries.approve (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#97-104) should be declared external
Bazeries.transferFrom (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#105-118) should be declared external
Bazeries.burn (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#118-127) should be declared external
Bazeries.freeze (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#127-136) should be declared external
Bazeries.unfreeze (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#136-150) should be declared external
Bazeries.withdrawEther (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#151-153) should be declared external
Bazeries.fallback (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol:
	- pragma solidity^0.4.8 (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Bazeries.Bazeries' (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#75-85) is not in mixedCase
Parameter '_to' of Bazeries.transfer (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#85) is not in mixedCase
Parameter '_value' of Bazeries.transfer (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#85) is not in mixedCase
Parameter '_spender' of Bazeries.approve (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#98) is not in mixedCase
Parameter '_value' of Bazeries.approve (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#98) is not in mixedCase
Parameter '_from' of Bazeries.transferFrom (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#105) is not in mixedCase
Parameter '_to' of Bazeries.transferFrom (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#105) is not in mixedCase
Parameter '_value' of Bazeries.transferFrom (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#105) is not in mixedCase
Parameter '_value' of Bazeries.burn (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#118) is not in mixedCase
Parameter '_value' of Bazeries.freeze (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#127-128) is not in mixedCase
Parameter '_value' of Bazeries.unfreeze (/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol#136-137) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/38/0x2d75956188fd58e68cf7e01aa97b147e52b90407.sol analyzed (2 contracts), 40 result(s) found