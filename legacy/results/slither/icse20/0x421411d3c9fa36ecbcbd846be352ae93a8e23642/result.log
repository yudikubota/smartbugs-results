INFO:Slither:Compilation warnings/errors on /unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:20:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BLAccess() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:78:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BLStorage() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:38:7: Warning: Invoking events without "emit" prefix is deprecated.
      UpdatedBonusAccount(_newSecondary);
      ^--------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:45:9: Warning: Invoking events without "emit" prefix is deprecated.
        UpdatedMainAccount(_newMainAddress);
        ^---------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        StorageUpdated(newAddress);
        ^------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:90:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        key = keccak256(x, ":", y);
              ^------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:106:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return s.getUInt(keccak256(msg.sender, "balance"));
                         ^------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:111:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return s.getUInt(keccak256(_account, "balance"));
                         ^----------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:115:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return s.getUInt(keccak256(_account, "promoAllowance"));
                         ^-----------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:119:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return s.getUInt(keccak256(msg.sender, "promoAllowance"));
                         ^-------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:125:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      uint bonus = s.getUInt(keccak256(key, "bonus"));
                             ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:126:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      uint balance = s.getUInt(keccak256(msg.sender, "balance"));
                               ^------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:128:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      s.setUInt(keccak256(msg.sender, "balance"), total);
                ^------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:129:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      s.setUInt(keccak256(key, "bonus"), 0);
                ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:131:9: Warning: Invoking events without "emit" prefix is deprecated.
        BonusGranted(msg.sender, bonus);
        ^-----------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:137:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint existingAllowance = s.getUInt(keccak256(beneficiary, "promoAllowance"));
                                           ^--------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:139:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(beneficiary, "promoAllowance"), existingAllowance);
                  ^--------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:140:9: Warning: Invoking events without "emit" prefix is deprecated.
        AllowanceGranted(beneficiary, allowance);
        ^--------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:145:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint balance = s.getUInt(keccak256(msg.sender, "balance"));
                                 ^------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:147:9: Warning: Invoking events without "emit" prefix is deprecated.
        WithdrawBalance(msg.sender, balance);
        ^----------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:163:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address nw = s.getAdd(keccak256(keccak256(x-1, ":", y-1), "owner"));
                                      ^----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:163:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address nw = s.getAdd(keccak256(keccak256(x-1, ":", y-1), "owner"));
                            ^------------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:164:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address n = s.getAdd(keccak256(keccak256(x-1, ":", y), "owner"));
                                     ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:164:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address n = s.getAdd(keccak256(keccak256(x-1, ":", y), "owner"));
                           ^----------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:165:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address ne = s.getAdd(keccak256(keccak256(x-1, ":", y+1), "owner"));
                                      ^----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:165:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address ne = s.getAdd(keccak256(keccak256(x-1, ":", y+1), "owner"));
                            ^------------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:166:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address w = s.getAdd(keccak256(keccak256(x, ":", y-1), "owner"));
                                     ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:166:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address w = s.getAdd(keccak256(keccak256(x, ":", y-1), "owner"));
                           ^----------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:167:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address e = s.getAdd(keccak256(keccak256(x, ":", y+1), "owner"));
                                     ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:167:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address e = s.getAdd(keccak256(keccak256(x, ":", y+1), "owner"));
                           ^----------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:168:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address sw = s.getAdd(keccak256(keccak256(x+1, ":", y-1), "owner"));
                                      ^----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:168:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address sw = s.getAdd(keccak256(keccak256(x+1, ":", y-1), "owner"));
                            ^------------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:169:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address south = s.getAdd(keccak256(keccak256(x+1, ":", y), "owner"));
                                         ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:169:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address south = s.getAdd(keccak256(keccak256(x+1, ":", y), "owner"));
                               ^----------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:170:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address se = s.getAdd(keccak256(keccak256(x+1, ":", y+1), "owner"));
                                      ^----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:170:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      address se = s.getAdd(keccak256(keccak256(x+1, ":", y+1), "owner"));
                            ^------------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:182:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      uint balance = s.getUInt(keccak256(account, "balance"));
                               ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:184:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      s.setUInt(keccak256(account, "balance"), balance);
                ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:185:7: Warning: Invoking events without "emit" prefix is deprecated.
      SentAmountToNeighbours(reward,account);
      ^------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:190:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint mainBalance = s.getUInt(keccak256(mainAddress, "balance"));
                                     ^-------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:192:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(mainAddress, "balance"), mainBalance);
                  ^-------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:193:9: Warning: Invoking events without "emit" prefix is deprecated.
        SentFeeToPlatform(fee);
        ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:200:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        address owner = s.getAdd(keccak256(key, "owner"));
                                 ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:202:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            rewardBalance = s.getUInt(keccak256(mainAddress, "balance"));
                                      ^-------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:204:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            s.setUInt(keccak256(mainAddress, "balance"), rewardBalance);
                      ^-------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:205:13: Warning: Invoking events without "emit" prefix is deprecated.
            SentAmountToOwner(amount, mainAddress);
            ^------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:207:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            rewardBalance = s.getUInt(keccak256(owner, "balance"));
                                      ^-------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:209:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            s.setUInt(keccak256(owner, "balance"), rewardBalance);
                      ^-------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:210:13: Warning: Invoking events without "emit" prefix is deprecated.
            SentAmountToOwner(amount, owner);
            ^------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:275:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        address owner = s.getAdd(keccak256(key, "owner"));
                                 ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:276:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint allowance = s.getUInt(keccak256(msg.sender, "promoAllowance"));
                                   ^-------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:282:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            s.setUInt(keccak256(key, "price"), msg.value);
                      ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:285:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            s.setUInt(keccak256(msg.sender, "promoAllowance"), allowance);
                      ^-------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:286:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            s.setUInt(keccak256(key, "price"), initialPrice);
                      ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:288:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "name"), name);
                     ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:289:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "description"), description);
                     ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:290:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "url"), url);
                     ^-------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:291:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "imageURL"), imageURL);
                     ^------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:292:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setAdd(keccak256(key, "owner"), msg.sender);
                 ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:298:9: Warning: Invoking events without "emit" prefix is deprecated.
        CreatedBlock(x,
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:320:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        price = s.getUInt(keccak256(key, "price"));
                          ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:321:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        name = s.getBytes32(keccak256(key, "name"));
                            ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:322:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        description = s.getBytes32(keccak256(key, "description"));
                                   ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:323:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        url = s.getBytes32(keccak256(key, "url"));
                           ^-------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:324:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        imageURL = s.getBytes32(keccak256(key, "imageURL"));
                                ^------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:325:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        forSale = s.getUInt(keccak256(key, "forSale"));
                            ^-----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:326:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        pricePerDay = s.getUInt(keccak256(key, "pricePerDay"));
                                ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:327:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        owner = s.getAdd(keccak256(key, "owner"));
                         ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:333:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint basePrice = s.getUInt(keccak256(key, "price"));
                                   ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:334:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(s.getAdd(keccak256(key, "owner")) == msg.sender);
                         ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:336:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(key, "forSale"), price);
                  ^-----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:337:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetBlockForSale(x, y, price, msg.sender);
        ^--------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:343:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(s.getAdd(keccak256(key, "owner")) == msg.sender);
                         ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:344:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(key, "forSale"), 0);
                  ^-----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:345:9: Warning: Invoking events without "emit" prefix is deprecated.
        UnsetBlockForSale(x, y, msg.sender);
        ^---------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:358:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint price = s.getUInt(keccak256(key, "price"));
                               ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:359:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint forSale = s.getUInt(keccak256(key, "forSale"));
                                 ^-----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:360:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        address owner = s.getAdd(keccak256(key, "owner"));
                                 ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:365:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(key, "price"), msg.value);
                  ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:366:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "name"), name);
                     ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:367:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "description"), description);
                     ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:368:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "url"), url);
                     ^-------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:369:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "imageURL"), imageURL);
                     ^------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:370:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setAdd(keccak256(key, "owner"), msg.sender);
                 ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:371:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(key, "forSale"), 0);
                  ^-----------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:372:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(key, "pricePerDay"), 0);
                  ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:375:9: Warning: Invoking events without "emit" prefix is deprecated.
        BoughtBlock(x, y, msg.value, msg.sender,
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:377:9: Warning: Invoking events without "emit" prefix is deprecated.
        SoldBlock(x, y, price, msg.value, feePercentage, owner);
        ^-----------------------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:390:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        address owner = s.getAdd(keccak256(key, "owner"));
                                 ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:392:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "name"), name);
                     ^--------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:393:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "description"), description);
                     ^---------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:394:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "url"), url);
                     ^-------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:395:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setBytes32(keccak256(key, "imageURL"), imageURL);
                     ^------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:396:9: Warning: Invoking events without "emit" prefix is deprecated.
        UpdatedBlock(x, y, name, description, url, imageURL, msg.sender);
        ^--------------------------------------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:407:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint bonusBalance = s.getUInt(keccak256(bonusAddress, "balance"));
                                      ^--------------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:409:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        s.setUInt(keccak256(key, "bonus"), bonus);
                  ^---------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:432:9: Warning: Invoking events without "emit" prefix is deprecated.
        ChangedInitialPrice(price);
        ^------------------------^
/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:438:9: Warning: Invoking events without "emit" prefix is deprecated.
        ChangedFeePercentage(feePercentage);
        ^---------------------------------^

INFO:Detectors:[92m
DataStorageInterface.getUInt (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#56-57) should be declared external
DataStorageInterface.setUInt (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#58) should be declared external
DataStorageInterface.getAdd (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#58-59) should be declared external
DataStorageInterface.setAdd (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#60) should be declared external
DataStorageInterface.getBytes32 (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#60-61) should be declared external
DataStorageInterface.setBytes32 (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#62) should be declared external
DataStorageInterface.getBool (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#62-64) should be declared external
DataStorageInterface.setBool (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#64-68) should be declared external
DataStorageInterface.withdraw (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#68-71) should be declared external
BLStorage.setDataStorage (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#84-90) should be declared external
BLBalances.getBalance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#106-110) should be declared external
BLBalances.getAccountBalance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#111-115) should be declared external
BLBalances.getAccountAllowance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#115-119) should be declared external
BLBalances.getMyAllowance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#119-123) should be declared external
BLBalances.grantAllowance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#137-146) should be declared external
BLBalances.withdraw (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#147-152) should be declared external
BLBlocks.createBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#274-319) should be declared external
BLBlocks.getBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#320-336) should be declared external
BLBlocks.sellBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#337-348) should be declared external
BLBlocks.cancelSellBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#351-359) should be declared external
BLBlocks.buyBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#360-392) should be declared external
BLBlocks.updateBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#393-408) should be declared external
BLBlocks.addBonusToBlock (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#415-427) should be declared external
BLMain.totalSupply (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#436-439) should be declared external
BLMain.setInitialPrice (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#442-446) should be declared external
BLMain.setFeePercentage (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#447-450) should be declared external
BLMain.getInitialPrice (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol) should be declared external
BLMain.getFeePercentage (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol:
	- pragma solidity^0.4.18 (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#1): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#7-10): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BLAccess.BLAccess' (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#20-25) is not in mixedCase
Parameter '_newSecondary' of BLAccess.setSecondary (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#35-36) is not in mixedCase
Parameter '_newMainAddress' of BLAccess.setPrimaryAccount (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#42-43) is not in mixedCase
Function 'BLStorage.BLStorage' (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#80-82) is not in mixedCase
Parameter '_account' of BLBalances.getAccountBalance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#111-114) is not in mixedCase
Parameter '_account' of BLBalances.getAccountAllowance (/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol#115-116) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/46/0x421411d3c9fa36ecbcbd846be352ae93a8e23642.sol analyzed (6 contracts), 35 result(s) found