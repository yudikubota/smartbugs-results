INFO:Detectors:[93m
Reentrancy in FxxxLandRush.finalise (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol):
	External calls:
	- parcelToken.disableMinting() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol)
	State variables written after the call(s):
	- finalised (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol)
Reentrancy in FxxxLandRush.receiveApproval (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#374-396):
	External calls:
	- bonusList.isInBonusList(from) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#380-383)
	- (_parcelGze,_live) = parcelGzeWithBonusOnList() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#381-382)
	- (_parcelGze,_live) = parcelGzeWithBonusOffList() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#383)
	- require(bool)(ERC20Interface(token).transferFrom(from,wallet,gzeToTransfer)) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#390-392)
	- lock = mintParcelTokens(from,parcels) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#393-394)
	State variables written after the call(s):
	- parcelsSold (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#393-394)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in FxxxLandRush.fallback (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#398-414):
	External calls:
	- (_parcelEth,_live) = parcelEth() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#400-401)
	State variables written after the call(s):
	- contributedEth (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#407)
Reentrancy in FxxxLandRush.fallback (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#398-414):
	External calls:
	- (_parcelEth,_live) = parcelEth() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#400-401)
	- lock = mintParcelTokens(msg.sender,parcels) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#410-411)
	External calls sending eth:
	- msg.sender.transfer(ethToRefund) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#409-410)
	State variables written after the call(s):
	- finalised (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#410-411)
Reentrancy in FxxxLandRush.mintParcelTokens (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#423-434):
	External calls:
	- _lock = parcelToken.balanceOf(account).add(parcelUsd.mul(parcels)) >= usdLockAccountThreshold (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#429-431)
	- require(bool)(parcelToken.mint(account,parcelUsd.mul(parcels),_lock)) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#431-434)
	- parcelToken.disableMinting() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol)
	State variables written after the call(s):
	- finalised (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol)
Reentrancy in FxxxLandRush.purchaseWithGze (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#366-371):
	External calls:
	- require(bool)(gzeToken.allowance(msg.sender,this) >= tokens) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#367-369)
	- receiveApproval(msg.sender,tokens,gzeToken,) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#369-371)
	State variables written after the call(s):
	- finalised (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#369-371)
Reentrancy in FxxxLandRush.receiveApproval (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#374-396):
	External calls:
	- bonusList.isInBonusList(from) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#380-383)
	- (_parcelGze,_live) = parcelGzeWithBonusOnList() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#381-382)
	- (_parcelGze,_live) = parcelGzeWithBonusOffList() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#383)
	State variables written after the call(s):
	- contributedGze (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#389-390)
Reentrancy in FxxxLandRush.receiveApproval (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#374-396):
	External calls:
	- bonusList.isInBonusList(from) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#380-383)
	- (_parcelGze,_live) = parcelGzeWithBonusOnList() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#381-382)
	- (_parcelGze,_live) = parcelGzeWithBonusOffList() (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#383)
	- require(bool)(ERC20Interface(token).transferFrom(from,wallet,gzeToTransfer)) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#390-392)
	- lock = mintParcelTokens(from,parcels) (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#393-394)
	State variables written after the call(s):
	- finalised (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#393-394)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Owned.transferOwnership (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#32-35) should be declared external
Owned.acceptOwnership (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#35-41) should be declared external
Owned.transferOwnershipImmediately (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#41-47) should be declared external
ERC20Interface.totalSupply (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#93-94) should be declared external
ERC20Interface.balanceOf (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#94) should be declared external
ERC20Interface.allowance (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#94-96) should be declared external
ERC20Interface.transfer (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#96-97) should be declared external
ERC20Interface.approve (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#97) should be declared external
ERC20Interface.transferFrom (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#100-101) should be declared external
BTTSTokenInterface.symbol (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#131-133) should be declared external
BTTSTokenInterface.name (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#133) should be declared external
BTTSTokenInterface.decimals (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#133-135) should be declared external
BTTSTokenInterface.approveAndCall (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#135-137) should be declared external
BTTSTokenInterface.signedTransferHash (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#139) should be declared external
BTTSTokenInterface.signedTransferCheck (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#139-140) should be declared external
BTTSTokenInterface.signedTransfer (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#140-142) should be declared external
BTTSTokenInterface.signedApproveHash (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#143) should be declared external
BTTSTokenInterface.signedApproveCheck (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#143-144) should be declared external
BTTSTokenInterface.signedApprove (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#144-146) should be declared external
BTTSTokenInterface.signedTransferFromHash (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#146-147) should be declared external
BTTSTokenInterface.signedTransferFromCheck (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#147-148) should be declared external
BTTSTokenInterface.signedTransferFrom (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#148-150) should be declared external
BTTSTokenInterface.signedApproveAndCallHash (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#150-151) should be declared external
BTTSTokenInterface.signedApproveAndCallCheck (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#151-152) should be declared external
BTTSTokenInterface.signedApproveAndCall (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#152-155) should be declared external
BTTSTokenInterface.mint (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#156-159) should be declared external
BTTSTokenInterface.unlockAccount (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#159) should be declared external
BTTSTokenInterface.disableMinting (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#160) should be declared external
BTTSTokenInterface.enableTransfers (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#161) should be declared external
PriceFeedInterface.name (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#184-186) should be declared external
PriceFeedInterface.getRate (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#186) should be declared external
BonusListInterface.isInBonusList (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#194) should be declared external
FxxxLandRush.setWallet (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#257-263) should be declared external
FxxxLandRush.setStartDate (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#263-269) should be declared external
FxxxLandRush.setEndDate (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#269-275) should be declared external
FxxxLandRush.setMaxParcels (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#275-281) should be declared external
FxxxLandRush.setParcelUsd (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#281-285) should be declared external
FxxxLandRush.setUsdLockAccountThreshold (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#286-291) should be declared external
FxxxLandRush.setGzeBonusOffList (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#291-298) should be declared external
FxxxLandRush.setGzeBonusOnList (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#298-305) should be declared external
FxxxLandRush.symbol (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#305-308) should be declared external
FxxxLandRush.name (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#309-310) should be declared external
FxxxLandRush.gzeEth (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#316-319) should be declared external
FxxxLandRush.purchaseWithGze (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#366-371) should be declared external
FxxxLandRush.fallback (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#398-414) should be declared external
FxxxLandRush.offlinePurchase (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#416-421) should be declared external
FxxxLandRush.finalise (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_owner' of Owned.initOwned (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#27-28) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#32-33) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnershipImmediately (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#42) is not in mixedCase
Constant 'BTTSTokenInterface.bttsVersion' (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#116-117) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signingPrefix' (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#117-118) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedTransferSig' (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#118-119) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedApproveSig' (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#119-120) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedTransferFromSig' (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#120-122) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedApproveAndCallSig' (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#122-123) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '' of FxxxLandRush.receiveApproval (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#375-376) is not in mixedCase
Parameter '_parcelToken' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#230) is not in mixedCase
Parameter '_gzeToken' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#230) is not in mixedCase
Parameter '_ethUsdPriceFeed' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#230-231) is not in mixedCase
Parameter '_gzeEthPriceFeed' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#231) is not in mixedCase
Parameter '_bonusList' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#231) is not in mixedCase
Parameter '_wallet' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#231-232) is not in mixedCase
Parameter '_startDate' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#232) is not in mixedCase
Parameter '_endDate' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#232) is not in mixedCase
Parameter '_maxParcels' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#232) is not in mixedCase
Parameter '_parcelUsd' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#232) is not in mixedCase
Parameter '_usdLockAccountThreshold' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#232) is not in mixedCase
Parameter '_gzeBonusOffList' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#232-233) is not in mixedCase
Parameter '_gzeBonusOnList' of FxxxLandRush. (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#233) is not in mixedCase
Parameter '_wallet' of FxxxLandRush.setWallet (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#258) is not in mixedCase
Parameter '_startDate' of FxxxLandRush.setStartDate (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#264) is not in mixedCase
Parameter '_endDate' of FxxxLandRush.setEndDate (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#270) is not in mixedCase
Parameter '_maxParcels' of FxxxLandRush.setMaxParcels (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#275-276) is not in mixedCase
Parameter '_parcelUsd' of FxxxLandRush.setParcelUsd (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#281-282) is not in mixedCase
Parameter '_usdLockAccountThreshold' of FxxxLandRush.setUsdLockAccountThreshold (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#286) is not in mixedCase
Parameter '_gzeBonusOffList' of FxxxLandRush.setGzeBonusOffList (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#292-293) is not in mixedCase
Parameter '_gzeBonusOnList' of FxxxLandRush.setGzeBonusOnList (/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol#299-300) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xf9a6d564217c44ab64e28c7f34cb8fe246f57539.sol analyzed (8 contracts), 86 result(s) found