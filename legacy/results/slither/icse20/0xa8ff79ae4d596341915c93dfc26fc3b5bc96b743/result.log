INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:10:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:36:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:51:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:52:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:77:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:78:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:79:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:89:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:104:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TravelZediToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:113:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:114:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:115:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:123:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:124:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:125:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:126:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:155:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(isSelling == false) throw;
                               ^---^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:55:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:83:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:118:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:137:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:138:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:143:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:159:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, msg.sender, amount);                // execute an event reflecting the change
        ^---------------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:19:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:59:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:76:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function TravelZediToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:122:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:134:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function setBuyRate(uint newBuyRate) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:150:5: Warning: No visibility specified. Defaulting to "public". 
    function setSelling(bool newStatus) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:162:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawToOwner(uint256 amountWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#22-95) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#51-58)
TravelZediToken (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#95-165) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#113-122)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#11:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#51-52:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#53:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#79:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#124:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#157:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#14-19) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#19-21) should be declared external
token.transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#51-58) should be declared external
TravelZediToken.transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#113-122) should be declared external
token.approveAndCall (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#66-76) should be declared external
TravelZediToken.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#123-136) should be declared external
token.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#76-87) should be declared external
token.fallback (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#93-95) should be declared external
TravelZediToken.mintToken (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#136-143) should be declared external
TravelZediToken.freezeAccount (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#143-150) should be declared external
TravelZediToken.setBuyRate (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#151-155) should be declared external
TravelZediToken.setSelling (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#155-156) should be declared external
TravelZediToken.buy (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#157-165) should be declared external
TravelZediToken.withdrawToOwner (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol:
	- pragma solidity^0.4.2 (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#2-19) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#19-21) is not in CapWords
Contract 'token' (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#22-95) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#51) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#51) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#60-61) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#61) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#67) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#67-68) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#68) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#77) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#77) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#77) is not in mixedCase
Parameter '_to' of TravelZediToken.transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#113) is not in mixedCase
Parameter '_value' of TravelZediToken.transfer (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#113-114) is not in mixedCase
Parameter '_from' of TravelZediToken.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#123) is not in mixedCase
Parameter '_to' of TravelZediToken.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#123) is not in mixedCase
Parameter '_value' of TravelZediToken.transferFrom (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#123) is not in mixedCase
Function 'TravelZediToken.TravelZediToken' (/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol#107-113) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/15/0xa8ff79ae4d596341915c93dfc26fc3b5bc96b743.sol analyzed (4 contracts), 51 result(s) found