INFO:Slither:Compilation warnings/errors on /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:62:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ETHT(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:78:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                    ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:79:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value <= 0) throw; 
                     ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:80:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                        ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:81:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                  ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:90:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value <= 0) throw; 
                     ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:98:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                    ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:99:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value <= 0) throw; 
                     ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:100:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                   ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:101:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                  ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:102:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                               ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:111:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                        ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:112:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value <= 0) throw; 
                     ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:120:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                        ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:121:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value <= 0) throw; 
                     ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:129:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                       ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:130:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_value <= 0) throw; 
                     ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:139:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.sender != owner)throw;
                           ^---^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:84:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
    ^-------------------------------^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:106:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:115:5: Warning: Invoking events without "emit" prefix is deprecated.
    Burn(msg.sender, _value);
    ^----------------------^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Freeze(msg.sender, _value);
    ^------------------------^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:133:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unfreeze(msg.sender, _value);
    ^--------------------------^
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:62:3: Warning: No visibility specified. Defaulting to "public". 
  function ETHT(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:77:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:88:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:97:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:110:3: Warning: No visibility specified. Defaulting to "public". 
  function burn(uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:119:3: Warning: No visibility specified. Defaulting to "public". 
  function freeze(uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:128:3: Warning: No visibility specified. Defaulting to "public". 
  function unfreeze(uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:138:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawEther(uint256 amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:144:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ETHT (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#38-146) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#78-88)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#100-101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#131:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#131-132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ETHT.transfer (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#78-88) should be declared external
ETHT.approve (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#90-97) should be declared external
ETHT.transferFrom (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#98-111) should be declared external
ETHT.burn (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#111-120) should be declared external
ETHT.freeze (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#120-129) should be declared external
ETHT.unfreeze (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#129-140) should be declared external
ETHT.withdrawEther (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#144-146) should be declared external
ETHT.fallback (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol:
	- pragma solidity^0.4.8 (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ETHT.ETHT' (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#64-78) is not in mixedCase
Parameter '_to' of ETHT.transfer (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#78) is not in mixedCase
Parameter '_value' of ETHT.transfer (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#78) is not in mixedCase
Parameter '_spender' of ETHT.approve (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#90-91) is not in mixedCase
Parameter '_value' of ETHT.approve (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#91) is not in mixedCase
Parameter '_from' of ETHT.transferFrom (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#98) is not in mixedCase
Parameter '_to' of ETHT.transferFrom (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#98) is not in mixedCase
Parameter '_value' of ETHT.transferFrom (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#98) is not in mixedCase
Parameter '_value' of ETHT.burn (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#111) is not in mixedCase
Parameter '_value' of ETHT.freeze (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#120) is not in mixedCase
Parameter '_value' of ETHT.unfreeze (/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol#129-130) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/40/0xe9e9f28addb61ece34198eb1e5c33cbf07a4e181.sol analyzed (2 contracts), 40 result(s) found