INFO:Slither:Compilation warnings/errors on /unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:11:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:224:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function Crowdsale(address _DARFtokenAddress, address _to) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:371:3: Warning: Use of the "var" keyword is deprecated.
		var remains = MAX_CAP - coinSentToEther;
		^---------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:468:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:517:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function DARFtoken() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:255:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Backer backer = backers[beneficiary];
        ^-----------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:270:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
				Potential_Investor potential_investor = Potential_Investors[beneficiary];
				^-----------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:376:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Backer backer = backers[owner];
		^-----------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:112:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require(this.balance >= payment);
            ^----------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:260:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        multisigEther.send(msg.value);
        ^---------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:267:4: Warning: Invoking events without "emit" prefix is deprecated.
			LogInvestshare(msg.sender,share);
			^------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:281:6: Warning: Invoking events without "emit" prefix is deprecated.
					LogInvestshare(msg.sender,potential_investor.profitshare);
					^-------------------------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:292:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogCoinsEmited(msg.sender ,coinToSend);
		^------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:293:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogReceivedETH(beneficiary, etherReceived);
		^----------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:335:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(multisigEther.send(this.balance)); // Move the remaining Ether to the multisig address
		                           ^----------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:349:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(owner.send(this.balance)) ;
		                   ^----------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:385:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogCoinsEmited(this ,remains);
		^---------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:386:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogReceivedETH(owner, etherReceived);
		^----------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:434:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:476:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:494:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:528:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, 0x0, _value);
    ^-------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:11:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:29:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:107:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawPayments() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:224:2: Warning: No visibility specified. Defaulting to "public". 
	function Crowdsale(address _DARFtokenAddress, address _to) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:232:2: Warning: No visibility specified. Defaulting to "public". 
	function() stopInEmergency respectTimeFrame payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:239:2: Warning: No visibility specified. Defaulting to "public". 
	function start() onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:337:3: Warning: Unused local variable.
		uint remains = coin.balanceOf(this);
		^----------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:348:2: Warning: No visibility specified. Defaulting to "public". 
	function drain() onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:416:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:417:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:431:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:443:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:450:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:451:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:452:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:467:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:485:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:504:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:517:3: Warning: No visibility specified. Defaulting to "public". 
  function DARFtoken() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:525:3: Warning: No visibility specified. Defaulting to "public". 
  function burn(uint _value) onlyOwner returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:63:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:69:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:76:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:81:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in Crowdsale.receiveETH (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#252-307):
	External calls:
	- coin.transfer(beneficiary,coinToSend) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#259-260)
	External calls sending eth:
	- multisigEther.send(msg.value) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#267)
	State variables written after the call(s):
	- coinSentToEther (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#300-303)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Crowdsale.start (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#250-251) uses a dangerous strict equality:
	- require(bool)(startTime == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.getRemainCoins (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#382-394):
	External calls:
	- coin.transfer(owner,remains) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#392)
	State variables written after the call(s):
	- backers (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#392-393)
	- coinSentToEther (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#393-394)
Reentrancy in Crowdsale.receiveETH (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#252-307):
	External calls:
	- coin.transfer(beneficiary,coinToSend) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#259-260)
	State variables written after the call(s):
	- backers (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#262-264)
	- backers (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#264-265)
Reentrancy in Crowdsale.refund (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#404-427):
	External calls:
	- coin.transferFrom(msg.sender,address(this),_value) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#410-415)
	State variables written after the call(s):
	- backers (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#421-422)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Crowdsale.receiveETH (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#252-307) does not use the value returned by external calls:
	-coin.transfer(beneficiary,coinToSend) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#259-260)
Crowdsale.getRemainCoins (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#382-394) does not use the value returned by external calls:
	-coin.transfer(owner,remains) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#392)
Crowdsale.refund (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#404-427) does not use the value returned by external calls:
	-coin.transferFrom(msg.sender,address(this),_value) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#410-415)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.finalize (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#333-361):
	External calls:
	- remains = coin.balanceOf(this) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#353)
	External calls sending eth:
	- require(bool)(multisigEther.send(this.balance)) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#348-349)
	State variables written after the call(s):
	- crowdsaleClosed (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#361)
Reentrancy in Crowdsale.receiveETH (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#252-307):
	External calls:
	- coin.transfer(beneficiary,coinToSend) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#259-260)
	External calls sending eth:
	- multisigEther.send(msg.value) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#267)
	State variables written after the call(s):
	- MAX_INVEST_SHARE (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#280-281)
	- MAX_INVEST_SHARE (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#288)
	- Potential_Investors (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#274-275)
	- Potential_Investors (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#275)
	- Potential_Investors (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#281-288)
	- Potential_Investors (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#289-292)
	- etherReceived (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#298)
Reentrancy in Crowdsale.refund (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#404-427):
	External calls:
	- coin.transferFrom(msg.sender,address(this),_value) (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#410-415)
	State variables written after the call(s):
	- payments (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#424)
	- totalPayments (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#424)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.invcoinSentToEther should be constant (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#193-195)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#29-37) should be declared external
PullPayment.withdrawPayments (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#111-126) should be declared external
Crowdsale.fallback (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#243-249) should be declared external
Crowdsale.start (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#250-251) should be declared external
Crowdsale.finalize (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#333-361) should be declared external
Crowdsale.drain (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#363-368) should be declared external
Crowdsale.setMultisig (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#370-372) should be declared external
Crowdsale.backDARFtokenOwner (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#374-377) should be declared external
Crowdsale.getRemainCoins (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#382-394) should be declared external
Crowdsale.refund (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#404-427) should be declared external
ERC20Basic.balanceOf (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#429-431) should be declared external
BasicToken.balanceOf (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#453-458) should be declared external
BasicToken.transfer (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#442-451) should be declared external
ERC20Basic.transfer (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#431-432) should be declared external
StandardToken.allowance (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#522-526) should be declared external
ERC20.allowance (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#462-463) should be declared external
StandardToken.transferFrom (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#476-489) should be declared external
ERC20.transferFrom (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#463-464) should be declared external
StandardToken.approve (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#494-510) should be declared external
ERC20.approve (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#464-465) should be declared external
DARFtoken.burn (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol:
	- pragma solidity^0.4.15 (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#11-17) is not in mixedCase
Struct 'Crowdsale.Potential_Investor' (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#150-154) is not in CapWords
Function 'Crowdsale.Crowdsale' (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#232-239) is not in mixedCase
Parameter '_DARFtokenAddress' of Crowdsale.Crowdsale (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#232-233) is not in mixedCase
Parameter '_to' of Crowdsale.Crowdsale (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#233-236) is not in mixedCase
Parameter '_value' of Crowdsale.refund (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#405) is not in mixedCase
Variable 'Crowdsale.MAX_INVEST_SHARE' (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#159-161) is not in mixedCase
Variable 'Crowdsale.Potential_Investors' (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#205-210) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#456) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#443) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#443) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#523) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#523) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#478-481) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#481) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#481) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#494-495) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol#495-496) is not in mixedCase
Function 'DARFtoken.DARFtoken' (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol) is not in mixedCase
Parameter '_value' of DARFtoken.burn (/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/34/0xfacc5b21597487575667dde047fc6e5d58bdae55.sol analyzed (10 contracts), 54 result(s) found