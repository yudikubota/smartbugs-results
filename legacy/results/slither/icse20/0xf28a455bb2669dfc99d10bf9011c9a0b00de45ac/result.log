INFO:Slither:Compilation warnings/errors on /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:739:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:829:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:832:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:850:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:913:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1142:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1160:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1161:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1205:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1206:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1217:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1306:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1416:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1444:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1674:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1698:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1721:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToAdd(a, b)) throw;
                              ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1730:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToSubtract(a, b)) throw;
                                   ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1745:230: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1753:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(gamePaused == true) throw;
                               ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1761:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(payoutsPaused == true) throw;
                                  ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1769:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1777:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if (msg.sender != owner) throw;
                                  ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1785:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if (msg.sender != treasury) throw;
                                     ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1848:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Xdice() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1908:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(maxPendingPayouts >= contractBalance) throw;
                                                 ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1925:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (playerAddress[myid]==0x0) throw;
                                      ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1928:9: Warning: Use of the "var" keyword is deprecated.
        var sl_result = result.toSlice();        
        ^-----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2131:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(newMaxProfitAsPercent > 10000) throw;
                                          ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2151:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!sendTo.send(amount)) throw;
                                 ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2169:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!sendTo.send(originalPlayerBetValue)) throw;
                                                 ^---^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1162:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1158:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1252:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1158:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1301:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1158:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1648:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1648:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1694:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1158:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1302:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:753:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:753:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:785:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:788:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:803:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:850:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:865:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:865:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:865:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:865:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:865:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:887:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:887:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1475:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1475:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1476:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1478:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1480:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1480:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1512:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1512:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1513:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1515:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1517:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1518:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1518:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1520:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1520:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1910:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogBet(playerBetId[rngId], playerAd ... playerNumber[rngId], randomQueryID);          
        ^-------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1965:14: Warning: Invoking events without "emit" prefix is deprecated.
             LogResult(serialNumberOfResult, pla ... playerTempBetValue[myid], 3, proof);            
             ^-------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1973:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogResult(serialNumberOfResult, pla ... playerTempBetValue[myid], 4, proof);              
                ^-------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1998:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogResult(serialNumberOfResult, pla ... , playerTempReward[myid], 1, proof);                            
            ^-------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2009:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogResult(serialNumberOfResult, pla ... , playerTempReward[myid], 2, proof);                   
                ^-------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2025:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogResult(serialNumberOfResult, pla ... playerTempBetValue[myid], 0, proof);                                
            ^-------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2152:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerTransfer(sendTo, amount); 
        ^------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2171:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRefund(originalPlayerBetId, sendTo, originalPlayerBetValue);        
        ^------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2206:3: Warning: "suicide" has been deprecated in favour of "selfdestruct"
		suicide(owner);
		^------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:8:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:10:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:12:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:17:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:18:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:20:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:23:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:59:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:98:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:98:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:98:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:98:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1848:5: Warning: No visibility specified. Defaulting to "public". 
    function Xdice() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:2088:5: Warning: No visibility specified. Defaulting to "public". 
    function ()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:98:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:509:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:529:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:547:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:574:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:609:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:627:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:644:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:686:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:734:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:847:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:908:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1046:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1070:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1083:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1132:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1158:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1187:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1200:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1244:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1295:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1344:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1356:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1382:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1411:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1439:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1717:5: Warning: Function state mutability can be restricted to pure
    function safeToAdd(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:1725:5: Warning: Function state mutability can be restricted to pure
    function safeToSubtract(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#518-521) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Xdice.Xdice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1889-1904):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1893-1894)
	- oraclize_setCustomGasPrice(20000000000) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1903)
	State variables written after the call(s):
	- OAR (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1903)
	- oraclize (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1903)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#45-54):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#49-53)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#51-53)
	State variables written after the call(s):
	- oraclize (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#51-53)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ret in strings.len (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1117) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
strings.memcpy.len (local variable @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1081) shadows:
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1116-1139)
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1194-1214)
strings.len.len (local variable @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1198) shadows:
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1116-1139)
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1194-1214)
strings.nextRune.len (local variable @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1295-1296) shadows:
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1116-1139)
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1194-1214)
strings.ord.len (local variable @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1353) shadows:
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1116-1139)
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1194-1214)
strings.count.count (local variable @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1690) shadows:
	- strings.count (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1688-1699)
strings.join.len (local variable @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1758-1760) shadows:
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1116-1139)
	- strings.len (function @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1194-1214)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Xdice.Xdice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1889-1904):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1893-1894)
	State variables written after the call(s):
	- gasForOraclize (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1901)
	- houseEdge (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1896)
	- maxProfit (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1897-1898)
	- maxProfitAsPercentOfHouse (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1897-1898)
	- minBet (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1899-1900)
Reentrancy in Xdice.Xdice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1889-1904):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1893-1894)
	- oraclize_setCustomGasPrice(20000000000) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1903)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1903)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#751-776):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#758-761)
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#772-773)
	External calls sending eth:
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#772-773)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#772-773)
	- oraclize_randomDS_args (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#773-776)
Reentrancy in Xdice.playerRollDice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1905-1963):
	External calls:
	- rngId = oraclize_query(nested,queryString1_2_3,gasForOraclize) (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1929-1932)
	State variables written after the call(s):
	- maxPendingPayouts (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1949-1950)
	- playerAddress (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1940)
	- playerBetId (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1932)
	- playerBetValue (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1936-1937)
	- playerNumber (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1935)
	- playerProfit (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1942-1945)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#518-521)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#520-521
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#751-776)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#761-769
usingOraclize.verifySig uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#786-806)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#797-800
usingOraclize.copyBytes uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#934-950)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#943-949
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#956-984)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#974-983
usingOraclize.ecrecovery uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#988-1021)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#999-1019
strings.memcpy uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1080-1096)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1085-1087
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1091-1096
strings.toSlice uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1103-1111)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1109-1110
strings.toSliceB32 uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1151-1158)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1153-1158
strings.toString uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1171-1183)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1176-1179
strings.len uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1194-1214)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1200-1201
strings.compare uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1234-1266)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1244-1249
strings.nextRune uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1291-1326)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1301-1304
strings.ord uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1346-1382)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1354-1356
strings.keccak uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1387-1391)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1389-1391
strings.startsWith uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1399-1418)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1409-1418
strings.beyond uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1431-1449)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1437-1446
strings.endsWith uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1461-1472)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1469-1472
strings.until uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1478-1492)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1486-1490
strings.findPtr uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1500-1532)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1506-1518
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1522-1524
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1527-1529
strings.rfindPtr uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1541-1576)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1547-1563
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1565-1570
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1571-1572
strings.concat uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1726-1744)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1733-1737
strings.join uses assembly (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1750-1786)
	- /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1768-1769
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#7-8)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#753:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#773-776:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#802-806:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#805-806:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#880-882:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#902-907:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#937:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#848:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#857:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1795:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1803-1804:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1968:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1955:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2188:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1820-1821:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1824:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1826-1827:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1831:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1835:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1836:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#8-9) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#9-10) should be declared external
OraclizeI.query2 (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#10-11) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#11-12) should be declared external
OraclizeI.queryN (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#12-13) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#13-14) should be declared external
OraclizeI.getPrice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#14-15) should be declared external
OraclizeI.getPrice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#15-16) should be declared external
OraclizeI.useCoupon (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#16-17) should be declared external
OraclizeI.setProofType (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#17-18) should be declared external
OraclizeI.setConfig (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#18-19) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#19-20) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#20-22) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#23-25) should be declared external
usingOraclize.__callback (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#96-101) should be declared external
Xdice.playerRollDice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1905-1963) should be declared external
Xdice.playerWithdrawPendingTransactions (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2120-2143) should be declared external
Xdice.playerGetPendingTxByAddress (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2144-2148) should be declared external
Xdice.fallback (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2156-2158) should be declared external
Xdice.ownerSetCallbackGasPrice (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2159-2161) should be declared external
Xdice.ownerSetOraclizeSafeGas (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2163-2165) should be declared external
Xdice.ownerUpdateContractBalance (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2167-2170) should be declared external
Xdice.ownerTransferEther (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2202-2210) should be declared external
Xdice.ownerRefundPlayer (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol) should be declared external
Xdice.ownerPauseGame (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol) should be declared external
Xdice.ownerPausePayouts (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol) should be declared external
Xdice.ownerSetTreasury (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol) should be declared external
Xdice.ownerChangeOwner (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol) should be declared external
Xdice.ownerkill (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in Xdice.playerWithdrawPendingTransactions (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2120-2143):
	-msg.sender.call.value(withdrawAmount)() /unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#2130-2143
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#9-10) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#11-12) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#13-14) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#20-22) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#25-1021) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#59-96) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#96-101) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#101-102) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#103-106) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#106-110) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#110-114) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#114-118) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#119-123) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#123-129) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#129-134) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#134-139) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#139-143) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#143-149) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#149-154) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#154-160) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#160-166) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#166-172) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#172-179) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#179-184) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#184-188) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#189-194) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#194-201) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#201-206) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#207-212) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#212-219) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#219-226) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#226-232) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#232-239) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#239-247) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#247-255) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#256-263) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#263-271) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#271-280) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#280-289) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#289-297) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#298-306) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#306-316) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#316-323) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#323-329) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#329-334) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#335-341) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#341-348) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#348-353) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#353-358) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#358-364) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#364-370) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#370-376) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#376-382) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#382-388) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#388-395) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#395-402) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#402-409) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#409-417) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#417-425) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#425-433) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#433-441) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#441-449) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#449-458) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#458-467) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#467-476) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#476-487) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#487-496) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#497-500) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#500-503) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#503-509) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#509-514) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#514-518) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#522) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#545-547) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#547) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#562) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#562) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#584-585) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#585) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#585) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#585) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#585) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#609) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#609-610) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#610) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#610) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#613-614) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#614) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#614) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#617) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#617) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#621) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#627) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#627) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#747-748) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#747) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#749-751) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#751-776) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#752) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#752) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#752) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#776-782) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#806-841) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#857-866) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#857) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#857-858) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#858) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#872-932) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#873-874) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#956-984) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#26-27) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#27-28) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#28-29) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#29-30) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#30-31) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#31-32) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#32-33) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#33-34) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#34-35) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#35-36) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#36-37) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#37-38) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#39) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#39-43) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#43-44) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#746-747) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#783-784) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#784-785) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#841-857) is not in mixedCase
Contract 'strings' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1079-1786) is not in CapWords
Struct 'strings.slice' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1079-1080) is not in CapWords
Function 'Xdice.__callback' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1964-2117) is not in mixedCase
Function 'Xdice.Xdice' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1889-1904) is not in mixedCase
Constant 'Xdice.maxProfitDivisor' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1837-1838) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Xdice.houseEdgeDivisor' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1838) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Xdice.maxNumber' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1838) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Xdice.minNumber' (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#1838) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#26-27) is never used in Xdice
usingOraclize.week (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#27-28) is never used in Xdice
usingOraclize.month (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#28-29) is never used in Xdice
usingOraclize.proofType_NONE (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#29-30) is never used in Xdice
usingOraclize.proofType_Android (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#31-32) is never used in Xdice
usingOraclize.proofType_Ledger (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#32-33) is never used in Xdice
usingOraclize.proofType_Native (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#33-34) is never used in Xdice
usingOraclize.networkID_mainnet (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#36-37) is never used in Xdice
usingOraclize.networkID_testnet (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#37-38) is never used in Xdice
usingOraclize.networkID_morden (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#39) is never used in Xdice
usingOraclize.networkID_consensys (/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol#39-43) is never used in Xdice
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/25/0xf28a455bb2669dfc99d10bf9011c9a0b00de45ac.sol analyzed (6 contracts), 229 result(s) found