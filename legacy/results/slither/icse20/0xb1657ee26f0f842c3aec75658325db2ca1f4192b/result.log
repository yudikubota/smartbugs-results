INFO:Slither:Compilation warnings/errors on /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:47:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:69:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TacoToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:84:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.data.length < (2 * 32) + 4) { throw; }
                                             ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:104:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.data.length < (3 * 32) + 4) { throw; }
                                             ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:144:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:150:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:161:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!purchasingAllowed) { throw; }
                                  ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:249:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:261:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:265:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (value == 0) throw;
                      ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:285:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:288:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (agent == 0x0) throw;
                        ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:290:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != upgradeMaster) throw;
                                       ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:292:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (getUpgradeState() == UpgradeState.Upgrading) throw;
                                                       ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:297:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(!upgradeAgent.isUpgradeAgent()) throw;
                                         ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:299:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (upgradeAgent.originalSupply() != totalSupply) throw;
                                                        ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:320:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (master == 0x0) throw;
                         ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:321:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != upgradeMaster) throw;
                                       ^---^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:4:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:45:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:97:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:121:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:132:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:173:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes20 bonusHash = ripemd160(block.coinbase, block.number, block.timestamp);
                                ^------------------------------------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:191:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(this), msg.sender, tokensIssued);
        ^-----------------------------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:275:7: Warning: Invoking events without "emit" prefix is deprecated.
      Upgrade(msg.sender, upgradeAgent, value);
      ^--------------------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:301:7: Warning: Invoking events without "emit" prefix is deprecated.
      UpgradeAgentSet(upgradeAgent);
      ^---------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function TacoToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256) { return balances[_owner]; }
    ^----------------------------------------------------------------------------------------^
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:102:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:136:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:143:5: Warning: No visibility specified. Defaulting to "public". 
    function enablePurchasing() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:149:5: Warning: No visibility specified. Defaulting to "public". 
    function disablePurchasing() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:156:5: Warning: No visibility specified. Defaulting to "public". 
    function getStats() constant returns (uint256, uint256, uint256, bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:249:3: Warning: No visibility specified. Defaulting to "public". 
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:29:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:33:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:37:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:41:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:45:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:206:3: Warning: Function state mutability can be restricted to pure
  function isUpgradeAgent() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:328:3: Warning: Function state mutability can be restricted to pure
  function canUpgrade() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
TacoToken.fallback (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#166-199) uses a dangerous strict equality:
	- bonusHash[0] == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#46-53) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
TacoToken.transferFrom.allowance (local variable @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#112) shadows:
	- TacoToken.allowance (function @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#140-141)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
TacoToken.fallback (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#166-199) uses timestamp for comparisons
	Dangerous comparisons:
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- bonusHash[0] == 0 (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-196)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x02 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x04 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x04 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x02 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x01 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x04 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x04 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x08 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x10 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x80 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x40 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
	- (bonusHash[1] & 0x20 != 0) (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#177-184)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
UpgradeAgent.originalSupply should be constant (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#212-214)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#53:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#152:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#157:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#271:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#274:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#294:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#297:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#298:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#302-304:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#307-308:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#309:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
TacoToken.balanceOf (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#80-83) should be declared external
TacoToken.transfer (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#83-103) should be declared external
TacoToken.transferFrom (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#103-127) should be declared external
TacoToken.approve (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#127-138) should be declared external
TacoToken.allowance (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#140-141) should be declared external
TacoToken.enablePurchasing (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#149-156) should be declared external
TacoToken.disablePurchasing (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#156-157) should be declared external
TacoToken.getStats (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#157-166) should be declared external
TacoToken.fallback (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#166-199) should be declared external
UpgradeAgent.isUpgradeAgent (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#216) should be declared external
UpgradeAgent.upgradeFrom (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#216-217) should be declared external
UpgradeableToken.upgrade (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#264-289) should be declared external
UpgradeableToken.setUpgradeMaster (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#329-332) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'TacoToken.TacoToken' (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#69-80) is not in mixedCase
Parameter '_owner' of TacoToken.TacoToken (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#69) is not in mixedCase
Parameter '_name' of TacoToken.TacoToken (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#70) is not in mixedCase
Parameter '_symbol' of TacoToken.TacoToken (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#70-71) is not in mixedCase
Parameter '_totalSupply' of TacoToken.TacoToken (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#71) is not in mixedCase
Parameter '_decimals' of TacoToken.TacoToken (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#72) is not in mixedCase
Parameter '_owner' of TacoToken.balanceOf (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#82) is not in mixedCase
Parameter '_to' of TacoToken.transfer (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#83) is not in mixedCase
Parameter '_value' of TacoToken.transfer (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#83-84) is not in mixedCase
Parameter '_from' of TacoToken.transferFrom (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#103) is not in mixedCase
Parameter '_to' of TacoToken.transferFrom (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#103-104) is not in mixedCase
Parameter '_value' of TacoToken.transferFrom (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#104) is not in mixedCase
Parameter '_spender' of TacoToken.approve (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#128) is not in mixedCase
Parameter '_value' of TacoToken.approve (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#128) is not in mixedCase
Parameter '_owner' of TacoToken.allowance (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#140) is not in mixedCase
Parameter '_spender' of TacoToken.allowance (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#140) is not in mixedCase
Function 'UpgradeableToken.UpgradeableToken' (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#258-259) is not in mixedCase
Parameter '_upgradeMaster' of UpgradeableToken.UpgradeableToken (/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol#259) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/32/0xb1657ee26f0f842c3aec75658325db2ca1f4192b.sol analyzed (4 contracts), 52 result(s) found