INFO:Slither:Compilation warnings/errors on /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:31:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:47:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:53:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:80:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:85:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:297:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:311:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:315:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:321:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:328:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:337:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:356:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:363:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:371:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:389:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:395:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:408:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:409:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:417:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:418:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:448:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:469:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:502:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:512:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:521:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:525:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:590:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:607:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:698:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:724:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:737:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:759:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:872:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:878:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:883:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:895:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:907:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Funding) throw;
                                    ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:909:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw; // No empty buys
                       ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:919:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:942:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:946:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(address(crowdsale) == 0) throw;
                                ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:956:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:969:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:996:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1001:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1022:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Refunding) throw;
                                      ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1025:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(balances[investor] == 0) throw;
                                ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1028:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!investor.send(amount)) throw;
                               ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1059:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:11:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMathLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:30:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:696:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:398:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:479:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:489:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:524:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:611:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:732:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:745:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:762:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:930:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(investor, msg.value);
    ^---------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:959:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensBoughts(tokensBought);
    ^-------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1013:5: Warning: Invoking events without "emit" prefix is deprecated.
    Distributed(investor, amount);
    ^---------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1029:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refunded(investor, amount);
    ^------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:13:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:19:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:58:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:116:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:156:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:169:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:170:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:173:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:174:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:297:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:336:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:464:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:477:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:487:5: Warning: No visibility specified. Defaulting to "public". 
    function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:497:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:567:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:604:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:633:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:729:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:736:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:749:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:753:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:766:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:776:3: Warning: No visibility specified. Defaulting to "public". 
  function addApproval(address _spender, uint _addedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:789:3: Warning: No visibility specified. Defaulting to "public". 
  function subApproval(address _spender, uint _subtractedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:872:3: Warning: No visibility specified. Defaulting to "public". 
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:984:3: Warning: No visibility specified. Defaulting to "public". 
  function claimAll() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:992:3: Warning: No visibility specified. Defaulting to "public". 
  function claim(uint amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1019:3: Warning: No visibility specified. Defaulting to "public". 
  function refund() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1039:34: Warning: Statement has no effect.
    if(!crowdsale.isCrowdsale()) true;
                                 ^--^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1058:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:108:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:116:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:144:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:30:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:572:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:580:3: Warning: Function state mutability can be restricted to pure
  function onInvest() internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:680:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:684:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:688:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:692:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:696:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:968:8: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    if(getState() != State.Distributing) {
       ^--------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:971:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return balances[investor].times(tokensBought) / weiRaisedTotal;
           ^------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:978:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return getClaimAmount(investor).minus(claimed[investor]);
           ^-----------------------------------------------^
/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:1045:3: Warning: Function state mutability can be restricted to view
  function getState() public returns(State) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#977-1002):
	External calls:
	- crowdsale.invest.value(weiRaisedTotal)(address(this)) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#989-990)
	- tokensBought = getToken().balanceOf(address(this)) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#993-996)
	External calls sending eth:
	- crowdsale.invest.value(weiRaisedTotal)(address(this)) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#989-990)
	State variables written after the call(s):
	- tokensBought (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#993-996)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
Crowdsale.minimumFundingGoal (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#228) is never initialized. It is used in:
	- isMinimumGoalReached (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#552-553)
Crowdsale.requiredSignedAddress (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#259) is never initialized. It is used in:
	- investWithCustomerId (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#417-426)
	- invest (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#427-440)
	- setRequireCustomerId (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#493-497)
Crowdsale.signerAddress (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#262) is never initialized. It is used in:
	- setRequireCustomerId (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#493-497)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#977-1002) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#977-1002) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.getState (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol) uses a dangerous strict equality:
	- tokensBought == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#462-477):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#474)
	State variables written after the call(s):
	- finalized (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#475-477)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#358-414):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#366-380)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#380-383)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#398-401)
	- weiRaised (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#398)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
PreICOProxyBuyer.claim (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1033-1058) does not use the value returned by external calls:
	-getToken().transfer(investor,amount) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1053-1057)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SafeMathLib.assert (function @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#30-41) shadows built-in symbol "assert"
SafeMath.assert (function @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#727-729) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#305-347):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#327-332)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#344)
	- multisigWallet (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#334)
	- startsAt (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#343)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#358-414):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#366-380)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#380-383)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#389-394)
	- investorCount (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#388)
	- tokenAmountOf (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#394-397)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#562-592) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#578-591)
	- block.timestamp < startsAt (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#572-591)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.minimumFundingGoal should be constant (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#228)
Crowdsale.requiredSignedAddress should be constant (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#259)
Crowdsale.signerAddress should be constant (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#262)
ERC20.totalSupply should be constant (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#172)
FractionalERC20.decimals should be constant (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#198)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#39-41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#87-89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#336:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#341:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#344:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#346:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#350:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#367-369:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#380:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#385:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#407:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#408:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#418:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#421-422:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#431:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#433:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#465-467:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#487:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#520:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#531:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#539:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#546:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#628:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#619-620:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#729:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#787:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#743-744:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#922:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#925:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#940-941:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#951-952:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#952:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#965:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#982:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#985:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1000:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1011:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1036:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1043:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#13-19) should be declared external
SafeMathLib.minus (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#19-24) should be declared external
SafeMathLib.plus (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#24-30) should be declared external
Ownable.transferOwnership (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#59-70) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#112-114) should be declared external
PricingStrategy.isSane (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#121-124) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#131-138) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#149-151) should be declared external
FinalizeAgent.isSane (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#156-165) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#168-169) should be declared external
ERC20.balanceOf (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#172-173) should be declared external
StandardToken.balanceOf (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#767-773) should be declared external
StandardToken.allowance (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#790-796) should be declared external
ERC20.allowance (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#173-174) should be declared external
ERC20.transfer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#174-175) should be declared external
StandardToken.transfer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#744-755) should be declared external
StandardToken.transferFrom (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#755-767) should be declared external
ERC20.transferFrom (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#175-176) should be declared external
ERC20.approve (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#176-181) should be declared external
StandardToken.approve (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#773-790) should be declared external
Crowdsale.fallback (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#347-350) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#442-444) should be declared external
Crowdsale.buy (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#451-453) should be declared external
Crowdsale.finalize (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#462-477) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#480-488) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#493-497) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#501-509) should be declared external
Crowdsale.loadRefund (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#529-532) should be declared external
Crowdsale.refund (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#536-546) should be declared external
Crowdsale.isFinalizerSane (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#555-557) should be declared external
Crowdsale.isPricingSane (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#558-559) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#595-598) should be declared external
Crowdsale.isCrowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#598-601) should be declared external
Crowdsale.setEndsAt (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#627-629) should be declared external
StandardToken.addApproval (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#801-812) should be declared external
StandardToken.subApproval (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#814-828) should be declared external
PreICOProxyBuyer.invest (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#946-975) should be declared external
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#977-1002) should be declared external
PreICOProxyBuyer.claimAll (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#1027-1029) should be declared external
PreICOProxyBuyer.refund (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol) should be declared external
PreICOProxyBuyer.setCrowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol) should be declared external
PreICOProxyBuyer.fallback (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#49-52) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#305-347) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#305-307) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#307) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#307-309) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#309) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#309-310) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#310-311) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#513) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#767-769) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#791) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#791-793) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#744-745) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#745) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#755) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#755) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#755-756) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#773) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#773) is not in mixedCase
Parameter '_spender' of StandardToken.addApproval (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#807) is not in mixedCase
Parameter '_addedValue' of StandardToken.addApproval (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#807) is not in mixedCase
Parameter '_spender' of StandardToken.subApproval (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#814-815) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.subApproval (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#815) is not in mixedCase
Function 'PreICOProxyBuyer.PreICOProxyBuyer' (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#915-930) is not in mixedCase
Parameter '_owner' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#915) is not in mixedCase
Parameter '_freezeEndsAt' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#915-917) is not in mixedCase
Parameter '_weiMinimumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol#917) is not in mixedCase
Parameter '_crowdsale' of PreICOProxyBuyer.setCrowdsale (/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x41c4413c7a2dcaa95b5e3441d8401f13e24d337c.sol analyzed (11 contracts), 130 result(s) found