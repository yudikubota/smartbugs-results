INFO:Slither:Compilation warnings/errors on /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:91:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:118:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Recoverable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:139:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:144:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:149:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:515:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:524:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:528:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:534:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:541:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:585:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:592:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:627:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:644:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:665:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:682:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:686:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:703:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:718:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:730:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:742:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:746:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:814:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:865:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:905:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:906:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:914:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:915:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:923:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track participants for thank you email
                          ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:924:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:942:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (bytes1(sha3(customerId)) != checksum) throw;
                                              ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:997:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1188:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1195:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:109:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:187:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistedAddressAdded(addr);
      ^---------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:215:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistedAddressRemoved(addr);
      ^-----------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:324:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:358:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:374:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:400:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:421:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:630:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:690:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:745:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:799:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:897:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:904:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:904:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:942:16: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:942:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:942:16: Warning: The provided argument of type uint128 is not implicitly convertible to expected type bytes memory.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:968:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:980:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1174:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1182:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:17:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:32:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:41:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:61:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:67:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:118:3: Warning: No visibility specified. Defaulting to "public". 
  function Recoverable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:515:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:660:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:679:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:698:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:788:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:797:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:838:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:865:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:966:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:977:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:997:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1004:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1004:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1004:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1004:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:24:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:32:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:41:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:61:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:67:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:72:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:130:3: Warning: Function state mutability can be restricted to view
  function tokensToBeReturned(ERC20Basic token) public returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:5:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:804:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:1146:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#664-676):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#675-676)
	State variables written after the call(s):
	- finalized (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#676)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#578-658):
	External calls:
	- require(bool)(dc.whitelist(msg.sender)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#596-598)
	- require(bool)(dc.whitelist(receiver)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#598)
	- getState() == State.PreFunding (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#599-611)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#617-621)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#636-638)
	- weiRaised (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#630-635)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#578-658):
	External calls:
	- require(bool)(dc.whitelist(msg.sender)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#596-598)
	- require(bool)(dc.whitelist(receiver)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#598)
	- getState() == State.PreFunding (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#599-611)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#617-621)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#638-640)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#638-640)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Recoverable.recoverTokens (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#127-128) does not use the value returned by external calls:
	-token.transfer(owner,tokensToBeReturned(token)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#128)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#540-567):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#551-557)
	State variables written after the call(s):
	- endsAt (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#563)
	- minimumFundingGoal (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#567)
	- multisigWallet (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#557-559)
	- startsAt (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#562)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#578-658):
	External calls:
	- require(bool)(dc.whitelist(msg.sender)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#596-598)
	- require(bool)(dc.whitelist(receiver)) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#598)
	- getState() == State.PreFunding (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#599-611)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#617-621)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#626-627)
	- investorCount (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#626)
	- tokenAmountOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#627-630)
Reentrancy in Crowdsale.preallocate (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#905-923):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#907-911)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#914-915)
	- tokenAmountOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#915-920)
	- tokensSold (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#914)
	- weiRaised (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#913-914)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#789-824) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#805-824)
	- block.timestamp < startsAt (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#803-824)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#446-447)
FractionalERC20.decimals should be constant (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#266-267)
MintableToken.mintingFinished should be constant (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1193-1195)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#148:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#153-154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#560:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#561-562:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#563:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#565:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#604:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#611:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#652:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#672:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#696:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#710:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#711:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#727:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#743-744:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#753:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#768-770:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#773:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#838:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#932:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#932:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#941:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#943:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#954:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#956:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#977:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#977:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
FinalizeAgent.isFinalizeAgent (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#5-9) should be declared external
FinalizeAgent.isSane (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#14-16) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#17-21) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#24-28) should be declared external
PricingStrategy.isSane (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#32-37) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#41-46) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#56-61) should be declared external
SafeMathLib.times (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#62-68) should be declared external
SafeMathLib.minus (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#68-73) should be declared external
SafeMathLib.plus (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#74-84) should be declared external
Ownable.transferOwnership (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#109-120) should be declared external
Recoverable.recoverTokens (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#127-128) should be declared external
Whitelist.addAddressesToWhitelist (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#201-210) should be declared external
Whitelist.removeAddressesFromWhitelist (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#230-240) should be declared external
BasicToken.totalSupply (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#317-321) should be declared external
ERC20Basic.totalSupply (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#240-243) should be declared external
BasicToken.balanceOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#346-348) should be declared external
ERC20Basic.balanceOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#243-244) should be declared external
StandardToken.allowance (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#393-396) should be declared external
ERC20.allowance (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#246-247) should be declared external
CrowdsaleBase.finalize (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#664-676) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#686-696) should be declared external
CrowdsaleBase.setEndsAt (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#708-712) should be declared external
CrowdsaleBase.setMultisig (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#740-744) should be declared external
CrowdsaleBase.loadRefund (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#752-757) should be declared external
CrowdsaleBase.refund (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#764-774) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#779-781) should be declared external
CrowdsaleBase.isPricingSane (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#782-783) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#827-828) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#831-833) should be declared external
CrowdsaleBase.isCrowdsale (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#833-834) should be declared external
Crowdsale.preallocate (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#905-923) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#966-968) should be declared external
Crowdsale.buyWithCustomerIdWithChecksum (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#972-979) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#980-984) should be declared external
Crowdsale.buy (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#994-995) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#997) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1002-1008) should be declared external
Crowdsale.fallback (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1013-1015) should be declared external
ERC827.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1044-1046) should be declared external
ERC827Token.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1081-1086) should be declared external
ERC827Token.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1099-1104) should be declared external
ERC827.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1046-1048) should be declared external
ERC827.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1048-1053) should be declared external
ERC827Token.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1117-1124) should be declared external
ERC827Token.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1138-1153) should be declared external
ERC827Token.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1172-1180) should be declared external
StandardTokenExt.isToken (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1185-1187) should be declared external
MintableToken.mint (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol) should be declared external
MintableToken.setMintAgent (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol:
	- pragma solidity^0.4.13 (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in ERC827Token.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1081-1086):
	-require(bool)(_spender.call(_data)) /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1084
Low level call in ERC827Token.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1099-1104):
	-require(bool)(_to.call(_data)) /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1102-1103
Low level call in ERC827Token.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1117-1124):
	-require(bool)(_to.call(_data)) /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1123
Low level call in ERC827Token.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1138-1153):
	-require(bool)(_spender.call(_data)) /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1151
Low level call in ERC827Token.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1172-1180):
	-require(bool)(_spender.call(_data)) /unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1179-1180
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#96-98) is not in mixedCase
Function 'Recoverable.Recoverable' (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#122) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#346-347) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#324) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#324-325) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#393-394) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#394) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#357) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#358) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#358) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#381) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#382) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#408) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#408) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#427-429) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#429) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#540-567) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#541-542) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#542-544) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#544-545) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#545) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#545) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#545-549) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#721-725) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#446-447) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#883-888) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1004) is not in mixedCase
Function 'MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale' (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1017-1029) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1024) is not in mixedCase
Parameter '_spender' of ERC827Token.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1081-1082) is not in mixedCase
Parameter '_value' of ERC827Token.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1082) is not in mixedCase
Parameter '_data' of ERC827Token.approve (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1082) is not in mixedCase
Parameter '_to' of ERC827Token.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1101) is not in mixedCase
Parameter '_value' of ERC827Token.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1101) is not in mixedCase
Parameter '_data' of ERC827Token.transfer (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1101) is not in mixedCase
Parameter '_from' of ERC827Token.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1120) is not in mixedCase
Parameter '_to' of ERC827Token.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1120) is not in mixedCase
Parameter '_value' of ERC827Token.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1120) is not in mixedCase
Parameter '_data' of ERC827Token.transferFrom (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1120) is not in mixedCase
Parameter '_spender' of ERC827Token.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1143) is not in mixedCase
Parameter '_addedValue' of ERC827Token.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1143) is not in mixedCase
Parameter '_data' of ERC827Token.increaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1143) is not in mixedCase
Parameter '_spender' of ERC827Token.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1172-1173) is not in mixedCase
Parameter '_subtractedValue' of ERC827Token.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1173) is not in mixedCase
Parameter '_data' of ERC827Token.decreaseApproval (/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol#1173) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/33/0x61d29c746c239079bc938752fcab7e6dd12d9377.sol analyzed (20 contracts), 140 result(s) found