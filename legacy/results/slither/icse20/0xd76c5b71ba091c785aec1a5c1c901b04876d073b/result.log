INFO:Slither:Compilation warnings/errors on /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2969:9: Warning: This declaration shadows an existing declaration.
        bytes4[] memory availableCurrencyKeys = new bytes4[](availableSynths.length);
        ^-----------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2964:5: The shadowed declaration is here:
    function availableCurrencyKeys()
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:996:13: Warning: Return value of low-level calls not used.
            recipient.call(abi.encodeWithSignature("tokenFallback(address,uint256,bytes)", sender, amount, data));
            ^---------------------------------------------------------------------------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1034:1: Warning: Base constructor arguments given twice.
contract ExternStateToken is SelfDestructible, Proxyable, TokenFallbackCaller {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:456:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:858:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1267:37: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_ONE = START_DATE + SECONDS_IN_YEAR.mul(1);
                                    ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1268:37: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_TWO = START_DATE + SECONDS_IN_YEAR.mul(2);
                                    ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1269:39: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_THREE = START_DATE + SECONDS_IN_YEAR.mul(3);
                                      ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1270:38: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_FOUR = START_DATE + SECONDS_IN_YEAR.mul(4);
                                     ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1271:38: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_FIVE = START_DATE + SECONDS_IN_YEAR.mul(5);
                                     ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1272:37: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_SIX = START_DATE + SECONDS_IN_YEAR.mul(6);
                                    ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:1273:39: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint public constant YEAR_SEVEN = START_DATE + SECONDS_IN_YEAR.mul(7);
                                      ^---------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2085:40: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant MAX_ISSUANCE_RATIO = SafeDecimalMath.unit();
                                       ^--------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2347:1: Warning: Base constructor arguments given twice.
contract Synth is ExternStateToken {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:456:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:858:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2667:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address account) public view returns (uint);
    ^-------------------------------------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2668:5: Warning: Functions in interfaces should be declared external.
    function appendVestingEntry(address account, uint quantity) public;
    ^-----------------------------------------------------------------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2796:1: Warning: Base constructor arguments given twice.
contract Synthetix is ExternStateToken {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:456:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:858:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:2811:38: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant SYNTHETIX_SUPPLY = 1e8 * SafeDecimalMath.unit();
                                     ^--------------------------^

INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol:
	Contract Proxy has payable functions:
	 - fallback (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#795-843)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in Synthetix.issueMaxSynths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3395-3399):
	External calls:
	- maxIssuable = remainingIssuableSynths(messageSender,currencyKey) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3398)
	- issueSynths(currencyKey,maxIssuable) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3399)
	State variables written after the call(s):
	- messageSender (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3399)
Reentrancy in Synthetix.issueSynths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3370-3387):
	External calls:
	- require(bool,string)(amount <= remainingIssuableSynths(messageSender,currencyKey),Amount too large) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3375-3380)
	- _addToDebtRegister(currencyKey,amount) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3381-3383)
	State variables written after the call(s):
	- messageSender (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3381-3383)
Reentrancy in Synthetix.removeSynth (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2943-2982):
	External calls:
	- require(bool,string)(synths[currencyKey].totalSupply() == 0,Synth supply exists) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2948)
	State variables written after the call(s):
	- synths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2973-2975)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
SynthetixState.debtLedger (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2136-2138) shadows:
	- ISynthetixState.debtLedger (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2067-2069)
SynthetixState.issuanceRatio (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2145-2147) shadows:
	- ISynthetixState.issuanceRatio (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2069)
SynthetixState.issuanceData (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2127-2131) shadows:
	- ISynthetixState.issuanceData (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2069-2070)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[93m
empty in Synthetix.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3094) is a local variable never initialiazed
empty in Synth.transferSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2564) is a local variable never initialiazed
empty in Synth.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2523) is a local variable never initialiazed
empty in Synth.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2478-2479) is a local variable never initialiazed
empty in Synthetix.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3071) is a local variable never initialiazed
empty in Synth.transferFromSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2603) is a local variable never initialiazed
empty in Synth.triggerTokenFallbackIfNeeded (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2691) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Synth.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2466-2480) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2475-2476)
Synth.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2483-2499) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2494-2496)
Synth.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2503-2524) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2520)
Synth.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2529-2548) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2545-2546)
Synth.transferSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2554-2565) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2558-2559)
Synth.transferSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2569-2581) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2575-2576)
Synth.transferFromSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2585-2606) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2599-2602)
Synth.transferFromSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2611-2631) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2628-2631)
Synthetix.mint (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol) does not use the value returned by external calls:
	-supplySchedule.updateMintValues() (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ExternStateToken.allowance.owner (local variable @ /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1120) shadows:
	- Owned.owner (state variable @ /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#385)
ExternStateToken.emitApproval.owner (local variable @ /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1221-1222) shadows:
	- Owned.owner (state variable @ /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#385)
Synthetix.availableCurrencyKeys.availableCurrencyKeys (local variable @ /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3057-3058) shadows:
	- Synthetix.availableCurrencyKeys (function @ /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3056-3060)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Synthetix.totalIssuedSynths has external calls inside a loop:
	- synthValue = availableSynths[i].totalSupply().multiplyDecimalRound(exchangeRates.rateForCurrency(availableSynths[i].currencyKey())).divideDecimalRound(currencyRate) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3045-3049)
Synthetix.availableCurrencyKeys has external calls inside a loop:
	- availableCurrencyKeys[i] = availableSynths[i].currencyKey() (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3059)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in SynthetixState._addToDebtRegister (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2257-2343):
	External calls:
	- xdrValue = synthetix.effectiveValue(sUSD,amount,XDR) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2270-2273)
	State variables written after the call(s):
	- importedXDRAmount (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2290)
Reentrancy in SynthetixState._addToDebtRegister (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2257-2343):
	External calls:
	- xdrValue = synthetix.effectiveValue(sUSD,amount,XDR) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2270-2273)
	- existingDebt = synthetix.debtBalanceOf(account,XDR) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2309-2310)
	State variables written after the call(s):
	- debtLedger (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2337-2340)
	- debtLedger (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2341-2343)
	- issuanceData (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2326-2328)
	- issuanceData (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2328-2330)
	- totalIssuerCount (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2322-2324)
Reentrancy in Synthetix.addSynth (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2929-2937):
	External calls:
	- currencyKey = synth.currencyKey() (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2933)
	State variables written after the call(s):
	- availableSynths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2934-2936)
	- synths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2936)
Reentrancy in Synth.burn (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2665-2677):
	External calls:
	- tokenState.setBalanceOf(account,tokenState.balanceOf(account).sub(amount)) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2668-2673)
	State variables written after the call(s):
	- totalSupply (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2673)
Reentrancy in Synth.constructor (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2430-2450):
	External calls:
	- require(bool,string)(_synthetix.synths(_currencyKey) == Synth(0),Currency key is already in use) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2443-2447)
	State variables written after the call(s):
	- currencyKey (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2450)
	- feePool (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2448-2449)
	- synthetix (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2449)
Reentrancy in Synth.issue (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2651-2658):
	External calls:
	- tokenState.setBalanceOf(account,tokenState.balanceOf(account).add(amount)) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2652-2656)
	State variables written after the call(s):
	- totalSupply (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2656)
Reentrancy in Synthetix.mint (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol):
	External calls:
	- supplyToMint = supplySchedule.mintableSupply() (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- supplySchedule.updateMintValues() (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- minterReward = supplySchedule.minterReward() (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- tokenState.setBalanceOf(rewardEscrow,tokenState.balanceOf(rewardEscrow).add(supplyToMint.sub(minterReward))) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- emitTransfer(this,rewardEscrow,supplyToMint.sub(minterReward)) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- feePool.rewardsMinted(supplyToMint.sub(minterReward)) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- tokenState.setBalanceOf(msg.sender,tokenState.balanceOf(msg.sender).add(minterReward)) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	- emitTransfer(this,msg.sender,minterReward) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
	State variables written after the call(s):
	- totalSupply (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol)
Reentrancy in Synthetix.removeSynth (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2943-2982):
	External calls:
	- require(bool,string)(synths[currencyKey].totalSupply() == 0,Synth supply exists) (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2948)
	State variables written after the call(s):
	- availableSynths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2953-2954)
	- availableSynths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2965-2969)
	- availableSynths (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2971)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Proxy._emit uses assembly (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#760-795)
	- /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#768-795
Proxy.fallback uses assembly (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#795-843)
	- /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#796-813
	- /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#824-843
TokenFallbackCaller.callTokenFallbackIfNeeded uses assembly (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#986-1036)
	- /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1012-1019
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
IFeePool.FEE_ADDRESS should be constant (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2371)
ISynthetixState.issuanceRatio should be constant (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2069)
SupplySchedule.mintPeriodDuration should be constant (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1286)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ExternStateToken.allowance (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1120-1122) should be declared external
ExternStateToken.balanceOf (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1124-1126) should be declared external
ExternStateToken.approve (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1194-1205) should be declared external
ExchangeRates.effectiveValue (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1863-1887) should be declared external
ExchangeRates.ratesForCurrencies (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1899-1911) should be declared external
ExchangeRates.lastRateUpdateTimeForCurrency (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1911-1922) should be declared external
ExchangeRates.lastRateUpdateTimesForCurrencies (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1923-1938) should be declared external
IFeePool.transferFeeIncurred (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2388-2392) should be declared external
Synth.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2466-2480) should be declared external
Synth.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2483-2499) should be declared external
Synth.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2503-2524) should be declared external
Synth.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2529-2548) should be declared external
Synth.transferSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2554-2565) should be declared external
Synth.transferSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2569-2581) should be declared external
Synth.transferFromSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2585-2606) should be declared external
Synth.transferFromSenderPaysFee (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2611-2631) should be declared external
ISynthetixEscrow.balanceOf (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2736) should be declared external
ISynthetixEscrow.appendVestingEntry (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2737) should be declared external
Synthetix.availableSynthCount (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3062-3065) should be declared external
Synthetix.transfer (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3068-3072) should be declared external
Synthetix.transferFrom (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3090-3096) should be declared external
Synthetix.collateralisationRatio (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3542-3551) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in TokenFallbackCaller.callTokenFallbackIfNeeded (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#986-1036):
	-recipient.call(abi.encodeWithSignature(tokenFallback(address,uint256,bytes),sender,amount,data)) /unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1027-1032
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'SafeDecimalMath._multiplyDecimalRound' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#181-195) is not in mixedCase
Function 'SafeDecimalMath._divideDecimalRound' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#265-276) is not in mixedCase
Constant 'SafeDecimalMath.highPrecisionDecimals' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#118-120) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_owner' of Owned. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#388-389) is not in mixedCase
Parameter '_owner' of Owned.nominateNewOwner (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#402) is not in mixedCase
Parameter '_owner' of SelfDestructible. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#467) is not in mixedCase
Parameter '_beneficiary' of SelfDestructible.setSelfDestructBeneficiary (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#482-483) is not in mixedCase
Parameter '_associatedContract' of State. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#588-589) is not in mixedCase
Parameter '_associatedContract' of State.setAssociatedContract (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#602-603) is not in mixedCase
Parameter '_target' of Proxy.setTarget (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#754) is not in mixedCase
Function 'Proxy._emit' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#760-795) is not in mixedCase
Parameter '_proxy' of Proxyable. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#898) is not in mixedCase
Parameter '_proxy' of Proxyable.setProxy (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#907) is not in mixedCase
Modifier 'Proxyable.optionalProxy_onlyOwner' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#923-933) is not in mixedCase
Parameter '_tokenState' of ExternStateToken. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1100) is not in mixedCase
Parameter '_name' of ExternStateToken. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1100-1102) is not in mixedCase
Parameter '_symbol' of ExternStateToken. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1102-1103) is not in mixedCase
Parameter '_totalSupply' of ExternStateToken. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1103) is not in mixedCase
Parameter '_decimals' of ExternStateToken. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1103-1104) is not in mixedCase
Parameter '_tokenState' of ExternStateToken.setTokenState (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1131) is not in mixedCase
Function 'ExternStateToken._internalTransfer' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1140-1171) is not in mixedCase
Function 'ExternStateToken._transfer_byProxy' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1178-1182) is not in mixedCase
Function 'ExternStateToken._transferFrom_byProxy' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1186-1193) is not in mixedCase
Parameter '_synthetix' of SupplySchedule.setSynthetix (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1334) is not in mixedCase
Function 'SupplySchedule._numWeeksRoundedDown' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1382-1389) is not in mixedCase
Parameter '_timeDiff' of SupplySchedule._numWeeksRoundedDown (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1382) is not in mixedCase
Function 'SupplySchedule._remainingSupplyFromPreviousYear' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1412-1439) is not in mixedCase
Parameter '_amount' of SupplySchedule.setMinterReward (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1474) is not in mixedCase
Parameter '_oracle' of ExchangeRates. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1567) is not in mixedCase
Parameter '_currencyKeys' of ExchangeRates. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1567) is not in mixedCase
Parameter '_newRates' of ExchangeRates. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1567-1568) is not in mixedCase
Parameter '_oracle' of ExchangeRates.setOracle (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1759) is not in mixedCase
Parameter '_time' of ExchangeRates.setRateStalePeriod (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1768) is not in mixedCase
Parameter '_issuanceRatio' of SynthetixState.setIssuanceRatio (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2235-2236) is not in mixedCase
Function 'SynthetixState._addToDebtRegister' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2257-2343) is not in mixedCase
Variable 'IFeePool.FEE_ADDRESS' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2371) is not in mixedCase
Function 'Synth._internalTransfer' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2635-2650) is not in mixedCase
Parameter '_proxy' of Synth. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2432) is not in mixedCase
Parameter '_synthetix' of Synth. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2432) is not in mixedCase
Parameter '_feePool' of Synth. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2432) is not in mixedCase
Parameter '_owner' of Synth. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2433) is not in mixedCase
Parameter '_currencyKey' of Synth. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2433) is not in mixedCase
Parameter '_synthetix' of Synth.setSynthetix (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2451-2453) is not in mixedCase
Parameter '_feePool' of Synth.setFeePool (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2455) is not in mixedCase
Parameter '_synthetixState' of Synthetix. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2905-2906) is not in mixedCase
Parameter '_exchangeRates' of Synthetix. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2906-2909) is not in mixedCase
Parameter '_feePool' of Synthetix. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2909) is not in mixedCase
Parameter '_supplySchedule' of Synthetix. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2909-2912) is not in mixedCase
Parameter '_rewardEscrow' of Synthetix. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2912) is not in mixedCase
Parameter '_escrow' of Synthetix. (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2912) is not in mixedCase
Parameter '_feePool' of Synthetix.setFeePool (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2921) is not in mixedCase
Parameter '_exchangeRates' of Synthetix.setExchangeRates (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2924-2925) is not in mixedCase
Function 'Synthetix._internalExchange' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3243-3290) is not in mixedCase
Function 'Synthetix._addToDebtRegister' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3303-3357) is not in mixedCase
Function 'Synthetix._appendAccountIssuanceRecord' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3438-3446) is not in mixedCase
Function 'Synthetix._removeFromDebtRegister' (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#3448-3495) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
SupplySchedule.SECONDS_IN_YEAR (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#1287-1288) is never used in SupplySchedule
Synth.DECIMALS (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2429) is never used in Synth
Synthetix.SYNTHETIX_SUPPLY (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2890) is never used in Synthetix
Synthetix.TOKEN_NAME (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2890-2891) is never used in Synthetix
Synthetix.TOKEN_SYMBOL (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2891-2892) is never used in Synthetix
Synthetix.DECIMALS (/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol#2892) is never used in Synthetix
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0xd76c5b71ba091c785aec1a5c1c901b04876d073b.sol analyzed (20 contracts), 122 result(s) found