INFO:Slither:Compilation warnings/errors on /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:50:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:97:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:108:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(ifDestory(msg.sender)) throw;
                              ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:157:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(ifDestory(msg.sender)) throw;
                              ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:158:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:180:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw ;
                                                               ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:212:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:246:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function GTSTOKEN (address admin_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:255:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:258:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:48:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:111:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:166:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:183:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:254:22: Warning: Using "years" as a unit denomination is deprecated.
      if (lockTime + 1 years > now) {
                     ^-----^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:262:29: Warning: Using "years" as a unit denomination is deprecated.
      lockTime = lockTime + 1 years;
                            ^-----^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:63:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:64:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value);
  ^----------------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function setDestoryAddress(address _destory) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function ifDestory(address from) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:107:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:119:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:131:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value);
  ^----------------------------------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:133:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value);
  ^--------------------------------------------^
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:156:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:174:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:192:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:222:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:246:3: Warning: No visibility specified. Defaulting to "public". 
  function GTSTOKEN (address admin_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:253:3: Warning: No visibility specified. Defaulting to "public". 
  function release() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:32:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:36:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:40:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:44:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:48:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:75:5: Warning: Function state mutability can be restricted to view
    function ifDestory(address from) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ERC20Basic (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#63-71) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#65)
BasicToken (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#90-130) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#108-116)
ERC20 (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#132-142) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#134-137)
	-approve (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#138-141)
StandardToken (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#151-204) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#158-171)
	-approve (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#177-189)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
GTSTOKEN.totalSupply (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#246-248) shadows:
	- ERC20Basic.totalSupply (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#63-64)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#49-58) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply should be constant (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#63-64)
GTSTOKEN.decimals should be constant (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#246)
GTSTOKEN.name should be constant (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#242-244)
GTSTOKEN.symbol should be constant (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#244)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#187:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#222:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#64-65) should be declared external
BasicToken.balanceOf (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#127-130) should be declared external
BasicToken.transfer (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#108-116) should be declared external
ERC20Basic.transfer (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#65) should be declared external
ERC20.allowance (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#132-134) should be declared external
StandardToken.allowance (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#201-203) should be declared external
ERC20.transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#134-137) should be declared external
StandardToken.transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#158-171) should be declared external
ERC20.approve (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#138-141) should be declared external
StandardToken.approve (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#177-189) should be declared external
Ownable.transferOwnership (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#235-240) should be declared external
GTSTOKEN.release (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#261-268) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_destory' of DestoryBasic.setDestoryAddress (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#75) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#128) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#109) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#109) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#201) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#201) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#160) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#160) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#160) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#177-178) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#178) is not in mixedCase
Function 'GTSTOKEN.GTSTOKEN' (/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol#254-261) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x00e9bcfab52c108505411849faba90e83c98101b.sol analyzed (8 contracts), 40 result(s) found