INFO:Slither:Compilation warnings/errors on /unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:258:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bool isRegistered = ethicHubStorage.getBool(keccak256("user", profile, msg.sender));
                                                    ^------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:264:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        address arbiter = ethicHubStorage.getAddress(keccak256("arbiter", this));
                                                     ^------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:275:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bool isInvestor = ethicHubStorage.getBool(keccak256("user", "investor", msg.sender));
                                                  ^---------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:276:57: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bool isPaymentGateway = ethicHubStorage.getBool(keccak256("user", "paymentGateway", msg.sender));
                                                        ^---------------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:299:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "representative", _borrower)));
                                        ^--------------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:302:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "localNode", _localNode)));
                                        ^----------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:325:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "community", _community)));
                                        ^----------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:326:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.maxDelayDays", this), _maxDelayDays);
                                ^-------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:327:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setAddress(keccak256("lending.community", this), _community);
                                   ^----------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:328:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setAddress(keccak256("lending.localNode", this), localNode);
                                   ^----------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:329:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.tier", this), _tier);
                                ^-----------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:330:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.communityMembers", this), _communityMembers);
                                ^-----------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:339:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "representative", _borrower)));
                                        ^--------------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:346:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "investor", newInvestor)));
                                        ^----------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:366:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            require(ethicHubStorage.getBool(keccak256("user", "investor", msg.sender)));
                                            ^---------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:395:105: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        EthicHubReputationInterface reputation = EthicHubReputationInterface(ethicHubStorage.getAddress(keccak256("contract.name", "reputation")));
                                                                                                        ^--------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:397:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.delayDays", this), maxDelayDays);
                                ^----------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:578:105: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        EthicHubReputationInterface reputation = EthicHubReputationInterface(ethicHubStorage.getAddress(keccak256("contract.name", "reputation")));
                                                                                                        ^--------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:581:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            ethicHubStorage.setUint(keccak256("lending.delayDays", this), delayDays);
                                    ^----------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:584:69: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint completedProjectsByTier  = ethicHubStorage.getUint(keccak256("community.completedProjectsByTier", this, tier)).add(1);
                                                                    ^--------------------------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:585:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            ethicHubStorage.setUint(keccak256("community.completedProjectsByTier", this, tier), completedProjectsByTier);
                                    ^--------------------------------------------------------^
/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:645:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return ethicHubStorage.getUint(keccak256("lending.maxDelayDays", this));
                                       ^-------------------------------------^

INFO:Detectors:[91m
EthicHubLending.reclaimContributionDefault (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#434-447) sends eth to arbitrary user
	Dangerous calls:
	- beneficiary.transfer(contribution) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#446-447)
EthicHubLending.reclaimContribution (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#452-458) sends eth to arbitrary user
	Dangerous calls:
	- beneficiary.transfer(contribution) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#457-458)
EthicHubLending.reclaimContributionWithInterest (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#473-482) sends eth to arbitrary user
	Dangerous calls:
	- beneficiary.transfer(contribution) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#481-482)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Reentrancy in EthicHubLending.constructor (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#290-324):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,representative,_borrower))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#303-305)
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,localNode,_localNode))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#308-310)
	State variables written after the call(s):
	- fundingStartTime (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#314-315)
Reentrancy in EthicHubLending.declareProjectDefault (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#396-409):
	External calls:
	- maxDelayDays = getMaxDelayDays() (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#398-399)
	- reputation = EthicHubReputationInterface(ethicHubStorage.getAddress(keccak256()(contract.name,reputation))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#401-404)
	- ethicHubStorage.setUint(keccak256()(lending.delayDays,this),maxDelayDays) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#405-406)
	- reputation.burnReputation(maxDelayDays) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#406-409)
	State variables written after the call(s):
	- state (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#409)
Reentrancy in EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#325-344):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,community,_community))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#328-329)
	- ethicHubStorage.setUint(keccak256()(lending.maxDelayDays,this),_maxDelayDays) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#330)
	- ethicHubStorage.setAddress(keccak256()(lending.community,this),_community) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#330-332)
	- ethicHubStorage.setAddress(keccak256()(lending.localNode,this),localNode) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#333-337)
	- ethicHubStorage.setUint(keccak256()(lending.tier,this),_tier) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#337-338)
	- ethicHubStorage.setUint(keccak256()(lending.communityMembers,this),_communityMembers) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#339-340)
	State variables written after the call(s):
	- state (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#341-344)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in EthicHubLending.changeInvestorAddress (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#349-363):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,investor,newInvestor))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#350-351)
	State variables written after the call(s):
	- investors (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#358-359)
	- investors (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#359)
	- investors (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#359-361)
	- investors (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#361-362)
Reentrancy in EthicHubLending.constructor (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#290-324):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,representative,_borrower))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#303-305)
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,localNode,_localNode))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#308-310)
	State variables written after the call(s):
	- annualInterest (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#320)
	- borrower (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#320)
	- ethicHubTeam (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#318-320)
	- ethichubFee (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#321-322)
	- fundingEndTime (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#316-317)
	- lendingDays (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#320-321)
	- localNode (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#317)
	- localNodeFee (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#322-323)
	- state (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#323-324)
	- totalLendingAmount (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#320)
	- version (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#314)
Reentrancy in EthicHubLending.fallback (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#363-380):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,investor,msg.sender))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#375-380)
	External calls sending eth:
	- contributeWithAddress(msg.sender) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#380)
	State variables written after the call(s):
	- capReached (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#380)
	- fundingEndTime (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#380)
	- investorCount (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#380)
	- investors (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#380)
	- totalContributed (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#380)
Reentrancy in EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#325-344):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,community,_community))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#328-329)
	- ethicHubStorage.setUint(keccak256()(lending.maxDelayDays,this),_maxDelayDays) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#330)
	- ethicHubStorage.setAddress(keccak256()(lending.community,this),_community) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#330-332)
	- ethicHubStorage.setAddress(keccak256()(lending.localNode,this),localNode) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#333-337)
	- ethicHubStorage.setUint(keccak256()(lending.tier,this),_tier) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#337-338)
	- ethicHubStorage.setUint(keccak256()(lending.communityMembers,this),_communityMembers) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#339-340)
	State variables written after the call(s):
	- tier (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#340)
Reentrancy in EthicHubLending.setBorrower (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#344-348):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,representative,_borrower))) (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#346-347)
	State variables written after the call(s):
	- borrower (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#347)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
EthicHubLending.borrowerReturnDate should be constant (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#228-229)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.renounceOwnership (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#63-68) should be declared external
Ownable.transferOwnership (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#72-77) should be declared external
EthicHubReputationInterface.getCommunityReputation (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#140-145) should be declared external
EthicHubReputationInterface.getLocalNodeReputation (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#145-151) should be declared external
Pausable.pause (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#176-180) should be declared external
Pausable.unpause (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#187-189) should be declared external
EthicHubLending.fallback (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#363-380) should be declared external
EthicHubLending.checkInvestorContribution (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#634-636) should be declared external
EthicHubLending.getUserContributionReclaimStatus (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol:
	- pragma solidity^0.4.13 (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Ownable.transferOwnership (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#72-76) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#80-89) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#81) is not in mixedCase
Parameter '_storageAddress' of EthicHubBase. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#196) is not in mixedCase
Event 'EthicHubLending.onCapReached' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#247-248) is not in CapWords
Event 'EthicHubLending.onContribution' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#248-250) is not in CapWords
Event 'EthicHubLending.onCompensated' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#250-252) is not in CapWords
Event 'EthicHubLending.onSurplusSent' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#252) is not in CapWords
Event 'EthicHubLending.onSurplusReclaimed' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#253-254) is not in CapWords
Event 'EthicHubLending.onInitalRateSet' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#254-255) is not in CapWords
Event 'EthicHubLending.onReturnRateSet' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#256-257) is not in CapWords
Event 'EthicHubLending.onReturnAmount' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#257-258) is not in CapWords
Event 'EthicHubLending.onBorrowerChanged' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#258) is not in CapWords
Event 'EthicHubLending.onInvestorChanged' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#259-264) is not in CapWords
Parameter '_fundingStartTime' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#291) is not in mixedCase
Parameter '_fundingEndTime' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#292) is not in mixedCase
Parameter '_borrower' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#294) is not in mixedCase
Parameter '_annualInterest' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#294-295) is not in mixedCase
Parameter '_totalLendingAmount' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#296) is not in mixedCase
Parameter '_lendingDays' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#297) is not in mixedCase
Parameter '_localNode' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#298) is not in mixedCase
Parameter '_ethicHubTeam' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#299) is not in mixedCase
Parameter '_ethichubFee' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#299) is not in mixedCase
Parameter '_localNodeFee' of EthicHubLending. (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#299) is not in mixedCase
Parameter '_maxDelayDays' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#325) is not in mixedCase
Parameter '_tier' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#325) is not in mixedCase
Parameter '_communityMembers' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#325-326) is not in mixedCase
Parameter '_community' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#326) is not in mixedCase
Parameter '_borrower' of EthicHubLending.setBorrower (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#344) is not in mixedCase
Parameter '_borrowerReturnEthPerFiatRate' of EthicHubLending.setBorrowerReturnEthPerFiatRate (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#410-411) is not in mixedCase
Parameter '_initialEthPerFiatRate' of EthicHubLending.finishInitialExchangingPeriod (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#417) is not in mixedCase
Constant 'EthicHubLending.interestBaseUint' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#235-238) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'EthicHubLending.interestBasePercent' (/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol#238-240) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x575ced4d4a9cc8e3820fb1151adfdff5b61a57ed.sol analyzed (7 contracts), 55 result(s) found