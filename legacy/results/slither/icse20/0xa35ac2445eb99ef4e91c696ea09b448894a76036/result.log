INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:40:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:70:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Destructible() public payable { }
    ^----------------------------------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:6:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract ERC20Basic {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:116:22: Warning: This declaration shadows an existing declaration.
    function addDeal(uint256 dealId, bytes32 dealHash, address[] addresses) onlyTrust returns (uint256) {
                     ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:120:26: Warning: This declaration shadows an existing declaration.
    function getDealHash(uint256 dealId) onlyTrust returns (bytes32) {
                         ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:124:31: Warning: This declaration shadows an existing declaration.
    function getDealAddrCount(uint256 dealId) onlyTrust returns (uint256) {
                              ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:128:33: Warning: This declaration shadows an existing declaration.
    function getDealAddrAtIndex(uint256 dealId, uint256 index) onlyTrust returns (address)  {
                                ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:132:24: Warning: This declaration shadows an existing declaration.
    function setSigned(uint256 dealId, address _address) onlyTrust {
                       ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:136:26: Warning: This declaration shadows an existing declaration.
    function setUnSigned(uint256 dealId, address _address) onlyTrust {
                         ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:140:24: Warning: This declaration shadows an existing declaration.
    function getSigned(uint256 dealId, address _address) onlyTrust returns (bool) {
                       ^------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:91:5: The shadowed declaration is here:
    uint256 dealId = 1;
    ^----------------^

/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:58:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:186:9: Warning: Invoking events without "emit" prefix is deprecated.
        DealSaved(dealId);
        ^---------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function setTrust(address _trust) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:108:5: Warning: No visibility specified. Defaulting to "public". 
    function getDealId() onlyTrust returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function setDealId(uint256 _dealId) onlyTrust {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:116:5: Warning: No visibility specified. Defaulting to "public". 
    function addDeal(uint256 dealId, bytes32 dealHash, address[] addresses) onlyTrust returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:120:5: Warning: No visibility specified. Defaulting to "public". 
    function getDealHash(uint256 dealId) onlyTrust returns (bytes32) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:124:5: Warning: No visibility specified. Defaulting to "public". 
    function getDealAddrCount(uint256 dealId) onlyTrust returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:128:5: Warning: No visibility specified. Defaulting to "public". 
    function getDealAddrAtIndex(uint256 dealId, uint256 index) onlyTrust returns (address)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:132:5: Warning: No visibility specified. Defaulting to "public". 
    function setSigned(uint256 dealId, address _address) onlyTrust {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:136:5: Warning: No visibility specified. Defaulting to "public". 
    function setUnSigned(uint256 dealId, address _address) onlyTrust {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:140:5: Warning: No visibility specified. Defaulting to "public". 
    function getSigned(uint256 dealId, address _address) onlyTrust returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:171:5: Warning: No visibility specified. Defaulting to "public". 
    function setStorage(address _storageAddress) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:108:5: Warning: Function state mutability can be restricted to view
    function getDealId() onlyTrust returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:120:5: Warning: Function state mutability can be restricted to view
    function getDealHash(uint256 dealId) onlyTrust returns (bytes32) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:124:5: Warning: Function state mutability can be restricted to view
    function getDealAddrCount(uint256 dealId) onlyTrust returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:128:5: Warning: Function state mutability can be restricted to view
    function getDealAddrAtIndex(uint256 dealId, uint256 index) onlyTrust returns (address)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:140:5: Warning: Function state mutability can be restricted to view
    function getSigned(uint256 dealId, address _address) onlyTrust returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:207:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        dealHash = trustStorage.getDealHash(dealId);
                   ^------------------------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:209:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 addrCount = trustStorage.getDealAddrCount(dealId);
                            ^-----------------------------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:216:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            addresses[i] = trustStorage.getDealAddrAtIndex(dealId, i);
                           ^----------------------------------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:217:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            signed[i] = trustStorage.getSigned(dealId , addresses[i]);
                        ^-------------------------------------------^
/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol:226:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 hash = trustStorage.getDealHash(dealId);
                       ^------------------------------^

INFO:Detectors:[93m
TrustService.createDeal (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#180-202) does not use the value returned by external calls:
	-trustStorage.addDeal(dealId,dealHash,addresses) (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#193-195)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
TrustServiceStorage.addDeal.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#117) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
TrustServiceStorage.getDealHash.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#124) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
TrustServiceStorage.getDealAddrCount.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#128) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
TrustServiceStorage.getDealAddrAtIndex.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#132) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
TrustServiceStorage.setSigned.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#136) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
TrustServiceStorage.setUnSigned.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#140) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
TrustServiceStorage.getSigned.dealId (local variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#145) shadows:
	- TrustServiceStorage.dealId (state variable @ /unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#95)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
TrustService.readDeal has external calls inside a loop:
	- addresses[i] = trustStorage.getDealAddrAtIndex(dealId,i) (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#222-225)
TrustService.readDeal has external calls inside a loop:
	- signed[i] = trustStorage.getSigned(dealId,addresses[i]) (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#225)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#7-8) should be declared external
ERC20Basic.balanceOf (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#8-9) should be declared external
ERC20Basic.transfer (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#9-10) should be declared external
ERC20.allowance (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#18-19) should be declared external
ERC20.transferFrom (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#19-20) should be declared external
ERC20.approve (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#20-21) should be declared external
Ownable.transferOwnership (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#56-66) should be declared external
Destructible.destroy (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#79-80) should be declared external
Destructible.destroyAndSend (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#80-87) should be declared external
TrustServiceStorage.setTrust (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#108-112) should be declared external
TrustServiceStorage.getDealId (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#112-116) should be declared external
TrustServiceStorage.setDealId (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#116-117) should be declared external
TrustServiceStorage.addDeal (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#117-122) should be declared external
TrustServiceStorage.getDealHash (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#124-125) should be declared external
TrustServiceStorage.getDealAddrCount (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#126-129) should be declared external
TrustServiceStorage.getDealAddrAtIndex (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#129-136) should be declared external
TrustServiceStorage.setSigned (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#136-140) should be declared external
TrustServiceStorage.setUnSigned (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#140-142) should be declared external
TrustServiceStorage.getSigned (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#145-151) should be declared external
TrustService.setFee (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#158-172) should be declared external
TrustService.clearFee (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#172-176) should be declared external
TrustService.setStorage (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#176-180) should be declared external
TrustService.createAndSignDeal (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#202-209) should be declared external
TrustService.readDeal (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#209-226) should be declared external
TrustService.confirmDeal (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#41-45) is not in mixedCase
Function 'Destructible.Destructible' (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#73) is not in mixedCase
Parameter '_recipient' of Destructible.destroyAndSend (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#81-84) is not in mixedCase
Parameter '_trust' of TrustServiceStorage.setTrust (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#108-109) is not in mixedCase
Parameter '_dealId' of TrustServiceStorage.setDealId (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#116) is not in mixedCase
Parameter '_address' of TrustServiceStorage.setSigned (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#136) is not in mixedCase
Parameter '_address' of TrustServiceStorage.setUnSigned (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#140) is not in mixedCase
Parameter '_address' of TrustServiceStorage.getSigned (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#145-147) is not in mixedCase
Parameter '_feeToken' of TrustService.setFee (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#158) is not in mixedCase
Parameter '_feeSender' of TrustService.setFee (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#158-159) is not in mixedCase
Parameter '_feeRecipient' of TrustService.setFee (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#159) is not in mixedCase
Parameter '_fee' of TrustService.setFee (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#159-160) is not in mixedCase
Parameter '_storageAddress' of TrustService.setStorage (/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol#177-178) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0xa35ac2445eb99ef4e91c696ea09b448894a76036.sol analyzed (6 contracts), 48 result(s) found