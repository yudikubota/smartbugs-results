INFO:Slither:Compilation warnings/errors on /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:18:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:71:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ALBtoken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:97:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:100:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:101:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:102:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:103:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:120:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:123:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:138:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:141:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:142:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:143:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:144:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:145:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:162:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:165:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:166:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:167:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:168:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:185:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:201:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:204:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:205:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:221:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:224:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:248:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:289:12: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
           throw;
           ^---^
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:16:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function ALBtoken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:130:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFromRoot(address _from, address _to, uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:177:5: Warning: No visibility specified. Defaulting to "public". 
    function addToken(uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:193:2: Warning: No visibility specified. Defaulting to "public". 
	function burn(uint256 _value) onlyOwner returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:214:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) onlyOwner{
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:229:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:232:3: Warning: No visibility specified. Defaulting to "public". 
  function RegisterMine(string _name, uint _tokensupply) onlyOwner
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:280:4: Warning: No visibility specified. Defaulting to "public". 
   function ModifyMine(uint256 _Id, bool _state, string _name, uint _tokensupply) onlyOwner 
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:339:1: Warning: No visibility specified. Defaulting to "public". 
function ModifyVigencia(uint256 _vigencia) onlyOwner
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:16:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
ALBtoken.transfer (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#92-112) allows anyone to destruct the contract
ALBtoken.approve (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#115-130) allows anyone to destruct the contract
ALBtoken.transferFrom (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#133-154) allows anyone to destruct the contract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#suicidal[0m
INFO:Detectors:[93m
ALBtoken (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#22-348) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#92-112)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#16-22) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
ALBtoken.transfer (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#92-112) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#100)
ALBtoken.approve (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#115-130) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#124-129)
ALBtoken.transferFrom (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#133-154) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#141-142)
ALBtoken.transferFromRoot (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#157-183) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#165-167)
ALBtoken.addToken (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#183-199) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#187-189)
ALBtoken.burn (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#199-221) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#205-206)
ALBtoken.withdrawEther (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#224-240) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#232-235)
ALBtoken.RegisterMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#243-291) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#257-260)
ALBtoken.ModifyMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#293-348) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= vigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#298-300)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#21-22:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#102-103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#126-127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#141-142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#143:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#144:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#146:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#146:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#167:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#171:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#189:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#206:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#206:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#207:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#237:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#260:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#299:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ALBtoken.transfer (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#92-112) should be declared external
ALBtoken.approve (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#115-130) should be declared external
ALBtoken.transferFrom (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#133-154) should be declared external
ALBtoken.transferFromRoot (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#157-183) should be declared external
ALBtoken.withdrawEther (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#224-240) should be declared external
ALBtoken.fallback (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#242) should be declared external
ALBtoken.RegisterMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#243-291) should be declared external
ALBtoken.ModifyMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#293-348) should be declared external
ALBtoken.ModifyVigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol:
	- pragma solidity^0.4.8 (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ALBtoken.ALBtoken' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#72-84) is not in mixedCase
Parameter '_to' of ALBtoken.transfer (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#92) is not in mixedCase
Parameter '_value' of ALBtoken.transfer (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#92-94) is not in mixedCase
Parameter '_spender' of ALBtoken.approve (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#115-116) is not in mixedCase
Parameter '_value' of ALBtoken.approve (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#116-118) is not in mixedCase
Parameter '_from' of ALBtoken.transferFrom (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#133-134) is not in mixedCase
Parameter '_to' of ALBtoken.transferFrom (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#134-135) is not in mixedCase
Parameter '_value' of ALBtoken.transferFrom (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#135-136) is not in mixedCase
Parameter '_from' of ALBtoken.transferFromRoot (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#158-159) is not in mixedCase
Parameter '_to' of ALBtoken.transferFromRoot (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#160) is not in mixedCase
Parameter '_value' of ALBtoken.transferFromRoot (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#160) is not in mixedCase
Parameter '_value' of ALBtoken.addToken (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#183-185) is not in mixedCase
Parameter '_value' of ALBtoken.burn (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#201) is not in mixedCase
Function 'ALBtoken.RegisterMine' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#243-291) is not in mixedCase
Parameter '_name' of ALBtoken.RegisterMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#246) is not in mixedCase
Parameter '_tokensupply' of ALBtoken.RegisterMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#246) is not in mixedCase
Function 'ALBtoken.ModifyMine' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#293-348) is not in mixedCase
Parameter '_Id' of ALBtoken.ModifyMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#293-294) is not in mixedCase
Parameter '_state' of ALBtoken.ModifyMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#294) is not in mixedCase
Parameter '_name' of ALBtoken.ModifyMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#294) is not in mixedCase
Parameter '_tokensupply' of ALBtoken.ModifyMine (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#294-295) is not in mixedCase
Function 'ALBtoken.ModifyVigencia' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol) is not in mixedCase
Parameter '_vigencia' of ALBtoken.ModifyVigencia (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol) is not in mixedCase
Variable 'ALBtoken.TokenMineSupply' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#33-35) is not in mixedCase
Variable 'ALBtoken._MineId' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#35-36) is not in mixedCase
Variable 'ALBtoken.TokensToModify' (/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol#40-43) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/42/0xbc307b1dd32f61637e8a47106e1ddd1300f28405.sol analyzed (2 contracts), 77 result(s) found