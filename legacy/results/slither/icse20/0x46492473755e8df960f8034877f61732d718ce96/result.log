INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:13:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:18:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;                      // functions with onlyOwner will throw an exception if not the contract owner
                                 ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:71:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:105:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:106:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if sender is frozen
                                       ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:107:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_to]) throw;                       // Check if target is frozen                 
                                ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:134:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if sender frozen       
                                  ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:135:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_to]) throw;                          // Check if target frozen                 
                                ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:137:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;    // Check for overflows
                                                      ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:138:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;       // Check allowance
                                                   ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:148:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((target == the120address) && (now < deadline120)) throw;    // Ensure you can not change 120address frozen status until deadline
                                                              ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:149:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((target == the365address) && (now < deadline365)) throw;    // Ensure you can not change 365address frozen status until deadline
                                                              ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:156:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (frozenAccount[msg.sender]) throw;                  // Check if sender frozen       
		                               ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:166:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                  // Check if sender frozen       
                                       ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:167:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                       // Check if recipient frozen 
                                  ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:170:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;      // Check allowance
                                                   ^---^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:110:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:118:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:142:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);                           // Tokens are send
        ^--------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:151:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);                                    // Notify event
        ^-------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:161:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender,0, _value);                        // Burn baby burn
        ^----------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:174:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, 0, _value);
        ^------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:22:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner { // transfer contract owner to new owner
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:27:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:102:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:115:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:133:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze ) onlyOwner {    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:165:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) onlyOwner returns (bool success)  {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
StandardToken.standard should be constant (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#45)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#18:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#140:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#149:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#150:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#157-158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#172:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#22-27) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#27-31) should be declared external
StandardToken.transfer (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#103-115) should be declared external
StandardToken.approveAndCall (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#125-133) should be declared external
StandardToken.transferFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#134-147) should be declared external
StandardToken.burn (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#157-166) should be declared external
StandardToken.burnFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#166-178) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol:
	- pragma solidity^0.4.11 (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#10-27) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#27-31) is not in CapWords
Function 'StandardToken.StandardToken' (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#74-102) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#103) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#103) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#117-118) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#118) is not in mixedCase
Parameter '_spender' of StandardToken.approveAndCall (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#125) is not in mixedCase
Parameter '_value' of StandardToken.approveAndCall (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#125-126) is not in mixedCase
Parameter '_extraData' of StandardToken.approveAndCall (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#126) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#134) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#134) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#134-135) is not in mixedCase
Parameter '_value' of StandardToken.burn (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#157) is not in mixedCase
Parameter '_from' of StandardToken.burnFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#167) is not in mixedCase
Parameter '_value' of StandardToken.burnFrom (/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol#167) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0x46492473755e8df960f8034877f61732d718ce96.sol analyzed (3 contracts), 39 result(s) found