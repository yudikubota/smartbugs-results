INFO:Slither:Compilation warnings/errors on /unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:
[91m/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.20;
^---------------------^
[91m/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:33:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:942:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1058:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1061:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1079:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1137:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1275:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1322:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Jackpot() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1331:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != oraclize_cbAddress()) throw;
                                              ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1373:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if (!owner.send(balance/10)) throw;
                                       ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1375:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if (!winner.send(balance - balance/10)) throw;
                                                  ^---^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1393:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    tickets[] tks = ticketsMap[_addr];
    ^-----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:226:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:982:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:982:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1014:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1017:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1032:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1094:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1094:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1094:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1094:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1094:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1112:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1112:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1295:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1344:36: Warning: "sha3" has been deprecated in favour of "keccak256"
          uint randomNumber = uint(sha3(_result)) % maxRange; // this is an efficient way to get the uint out in the [0, maxRange] range
                                   ^-----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1344:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
          uint randomNumber = uint(sha3(_result)) % maxRange; // this is an efficient way to get the uint out in the [0, maxRange] range
                                   ^-----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1344:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
          uint randomNumber = uint(sha3(_result)) % maxRange; // this is an efficient way to get the uint out in the [0, maxRange] range
                                   ^-----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1346:11: Warning: Invoking events without "emit" prefix is deprecated.
          newRandomNumber_uint(randomNumber); // this is the resulting random number (uint)
          ^--------------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1372:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
          uint balance = this.balance;
                         ^----------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1376:11: Warning: Invoking events without "emit" prefix is deprecated.
          newWinner(winner, randomNumber);
          ^-----------------------------^
/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol:1429:5: Warning: Invoking events without "emit" prefix is deprecated.
    newContribution(msg.sender, weiAmount);
    ^------------------------------------^

INFO:SlitherSolcParsing:No contract were found in /unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_contracts/0x06583160e024426d8560832f0883396726e40f29.sol analyzed (0 contracts), 0 result(s) found