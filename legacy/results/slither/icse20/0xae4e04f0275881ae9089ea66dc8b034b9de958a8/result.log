INFO:Detectors:[93m
Reentrancy in HoardCrowdsale.finalize (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#398-409):
	External calls:
	- require(bool)(token.transferFrom(beneficiary,foundersTeamMultisig,tokensForFoundingBoardWallet)) (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#408-409)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#409)
Reentrancy in HoardCrowdsale.investInternal (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#343-396):
	External calls:
	- getState() == State.PreFunding || getState() == State.Funding (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#347-373)
	- multiplier = 10 ** token.decimals() (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#363-364)
	State variables written after the call(s):
	- weiRaised (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#383)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in HoardCrowdsale.investInternal (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#343-396):
	External calls:
	- getState() == State.PreFunding || getState() == State.Funding (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#347-373)
	State variables written after the call(s):
	- presaleTokensSold (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#352-356)
	- presaleWeiRaised (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#349-351)
Reentrancy in HoardCrowdsale.investInternal (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#343-396):
	External calls:
	- getState() == State.PreFunding || getState() == State.Funding (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#347-373)
	- multiplier = 10 ** token.decimals() (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#363-364)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#378-380)
	- investorCount (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#376)
	- tokenAmountOf (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#380-382)
	- tokensSold (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#384-388)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
HoardCrowdsale.getState (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#498-516) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#504-516)
	- block.timestamp < startsAt (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#500-516)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
FractionalERC20.decimals should be constant (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#148)
HoardCrowdsale.crowdsaleTokenLimit should be constant (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#201)
HoardCrowdsale.minimumFundingGoal should be constant (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#182-183)
HoardCrowdsale.presaleTokenLimit should be constant (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#198-200)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#43-53) should be declared external
SafeMathLib.times (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#93-100) should be declared external
FractionalERC20.allowance (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#148-149) should be declared external
FractionalERC20.transferFrom (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#149-150) should be declared external
FractionalERC20.approve (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#150-153) should be declared external
FractionalERC20.totalSupply (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#154-155) should be declared external
FractionalERC20.balanceOf (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#155-159) should be declared external
FractionalERC20.transfer (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#160-163) should be declared external
HoardCrowdsale.fallback (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#326-328) should be declared external
HoardCrowdsale.invest (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#331-336) should be declared external
HoardCrowdsale.finalize (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#398-409) should be declared external
HoardCrowdsale.setFoundersTokenAllocation (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#416-423) should be declared external
HoardCrowdsale.setEndsAt (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#439-442) should be declared external
HoardCrowdsale.setStartsAt (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#443-447) should be declared external
HoardCrowdsale.setMultisig (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#457-463) should be declared external
HoardCrowdsale.loadRefund (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#467-470) should be declared external
HoardCrowdsale.refund (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#477-490) should be declared external
HoardCrowdsale.setOwnerTestValue (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#517-519) should be declared external
HoardCrowdsale.setPrePresaleTokens (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#525-529) should be declared external
HoardCrowdsale.setParticipantWhitelist (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#533-542) should be declared external
HoardCrowdsale.setPresaleWhitelist (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#545-551) should be declared external
HoardCrowdsale.setPricing (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#554-556) should be declared external
HoardCrowdsale.changeBeneficiary (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#561-569) should be declared external
HoardCrowdsale.changeFoundersWallet (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#575-581) should be declared external
HoardCrowdsale.isCrowdsale (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#586-588) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol:
	- pragma solidity^0.4.23 (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#12-15): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_token' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#297-298) is not in mixedCase
Parameter '_oneTokenInWei' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#298) is not in mixedCase
Parameter '_multisigWallet' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#298-300) is not in mixedCase
Parameter '_start' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#300) is not in mixedCase
Parameter '_end' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#300) is not in mixedCase
Parameter '_beneficiary' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#301) is not in mixedCase
Parameter '_foundersTeamMultisig' of HoardCrowdsale. (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#302-304) is not in mixedCase
Parameter '_percentageOfSoldTokensForFounders' of HoardCrowdsale.setFoundersTokenAllocation (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#416-418) is not in mixedCase
Parameter '_value' of HoardCrowdsale.setPrePresaleTokens (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#527) is not in mixedCase
Parameter '_oneTokenInWei' of HoardCrowdsale.setPricing (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#554) is not in mixedCase
Parameter '_beneficiary' of HoardCrowdsale.changeBeneficiary (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#565-568) is not in mixedCase
Parameter '_foundersTeamMultisig' of HoardCrowdsale.changeFoundersWallet (/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol#576-577) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xae4e04f0275881ae9089ea66dc8b034b9de958a8.sol analyzed (5 contracts), 44 result(s) found