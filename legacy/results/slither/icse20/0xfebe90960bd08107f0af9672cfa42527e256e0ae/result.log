INFO:Slither:Compilation warnings/errors on /unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:
[91m/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.19;
^---------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:935:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1091:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function nbagame() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:892:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:892:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:892:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:892:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:892:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:910:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:910:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1111:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
        ^----------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1111:9: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
        ^----------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1111:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
                                    ^---------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1111:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
                                    ^---------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1114:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
             ^----------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1114:14: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
             ^----------------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1114:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
                                         ^---------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1114:42: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
                                         ^---------------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1141:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint storedBalance = this.balance;
                         ^----------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1178:5: Warning: Invoking events without "emit" prefix is deprecated.
    BetMade(); // Trigger event
    ^-------^
/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol:1187:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint losingChunk = this.balance - totalAmountsBet[uint(winningTeam)];
                       ^----------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/25/0xfebe90960bd08107f0af9672cfa42527e256e0ae.sol analyzed (0 contracts), 0 result(s) found