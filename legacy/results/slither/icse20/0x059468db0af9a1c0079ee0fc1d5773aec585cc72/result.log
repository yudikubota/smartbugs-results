INFO:Slither:Compilation warnings/errors on /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:66:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StudioToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:115:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:116:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:117:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;
                                                      ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:118:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (  pauseForDividend == true ) throw;// Check for overflows
                                         ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:144:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:145:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:146:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:147:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:148:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (  pauseForDividend == true ) throw;// Check for overflows
                                         ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:157:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:165:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                // Check if the sender has enough
                                       ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:166:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;    // Check allowance
                                                   ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:231:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:236:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Dividend(address Studiocontract) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:152:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:160:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:169:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:247:11: Warning: Invoking events without "emit" prefix is deprecated.
          Log(accountCount);
          ^---------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:253:13: Warning: Invoking events without "emit" prefix is deprecated.
            Message(profit_per_token);
            ^-----------------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:2:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function StudioToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:81:5: Warning: No visibility specified. Defaulting to "public". 
    function getBalance ( address tokenHolder ) returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function getAccountCount ( ) returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:91:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress ( uint256 slot ) returns ( address ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply ( ) returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:133:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:143:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:156:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:164:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:181:5: Warning: No visibility specified. Defaulting to "public". 
    function pauseForDividend() onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership ( address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:236:5: Warning: No visibility specified. Defaulting to "public". 
    function Dividend(address Studiocontract) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:241:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:277:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawDividends (){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:10:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:16:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:23:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:28:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:81:5: Warning: Function state mutability can be restricted to view
    function getBalance ( address tokenHolder ) returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:86:5: Warning: Function state mutability can be restricted to view
    function getAccountCount ( ) returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:91:5: Warning: Function state mutability can be restricted to view
    function getAddress ( uint256 slot ) returns ( address ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:95:5: Warning: Function state mutability can be restricted to view
    function getTotalSupply ( ) returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
StudioToken (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#38-215) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#115-126)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Dividend.fallback has external calls inside a loop:
	- tokenHolder = studio.getAddress(i) (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#272-277)
Dividend.fallback has external calls inside a loop:
	- balanceOf[tokenHolder] += studio.getBalance(tokenHolder) * profit_per_token (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#277-280)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Dividend.fallback (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#251-290):
	External calls:
	- studio.pauseForDividend() (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#253-254)
	- accountCount = studio.getAccountCount() (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#255-257)
	State variables written after the call(s):
	- accountCount (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#255-257)
	- ether_profit (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#258-259)
Reentrancy in Dividend.fallback (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#251-290):
	External calls:
	- studio.pauseForDividend() (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#253-254)
	- accountCount = studio.getAccountCount() (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#255-257)
	- profit_per_token = ether_profit / studio.getTotalSupply() (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#260-261)
	State variables written after the call(s):
	- profit_per_token (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#260-261)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Dividend.holder_profit should be constant (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#228)
Dividend.holder_token_balance should be constant (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#226)
Dividend.studio_contract should be constant (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#217-218)
StudioToken.standard should be constant (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#41-42)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#118:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#147:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#148:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#149:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#150:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#159:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#167:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#240:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
tokenRecipient.receiveApproval (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#2) should be declared external
StudioToken.getBalance (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#82-87) should be declared external
StudioToken.getAccountCount (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#89-92) should be declared external
StudioToken.getAddress (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#92-98) should be declared external
StudioToken.getTotalSupply (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#100-104) should be declared external
StudioToken.transfer (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#115-126) should be declared external
StudioToken.approveAndCall (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#135-143) should be declared external
StudioToken.transferFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#144-157) should be declared external
StudioToken.burn (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#158-165) should be declared external
StudioToken.burnFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#165-183) should be declared external
StudioToken.pauseForDividend (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#190-205) should be declared external
StudioToken.transferOwnership (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#206-212) should be declared external
Dividend.fallback (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#251-290) should be declared external
Dividend.withdrawDividends (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol:
	- pragma solidity^0.4.11 (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#2-3) is not in CapWords
Function 'StudioToken.StudioToken' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#69-82) is not in mixedCase
Parameter '_to' of StudioToken.transfer (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#115) is not in mixedCase
Parameter '_value' of StudioToken.transfer (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#115) is not in mixedCase
Parameter '_spender' of StudioToken.approve (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#129-130) is not in mixedCase
Parameter '_value' of StudioToken.approve (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#130-132) is not in mixedCase
Parameter '_spender' of StudioToken.approveAndCall (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#135-136) is not in mixedCase
Parameter '_value' of StudioToken.approveAndCall (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#136) is not in mixedCase
Parameter '_extraData' of StudioToken.approveAndCall (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#136) is not in mixedCase
Parameter '_from' of StudioToken.transferFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#144) is not in mixedCase
Parameter '_to' of StudioToken.transferFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#144) is not in mixedCase
Parameter '_value' of StudioToken.transferFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#144) is not in mixedCase
Parameter '_value' of StudioToken.burn (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#158) is not in mixedCase
Parameter '_from' of StudioToken.burnFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#166) is not in mixedCase
Parameter '_value' of StudioToken.burnFrom (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#166) is not in mixedCase
Function 'Dividend.Dividend' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#245-250) is not in mixedCase
Parameter 'Studiocontract' of Dividend.Dividend (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#245) is not in mixedCase
Variable 'Dividend.studio_contract' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#217-218) is not in mixedCase
Variable 'Dividend.ether_profit' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#225) is not in mixedCase
Variable 'Dividend.profit_per_token' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#226) is not in mixedCase
Variable 'Dividend.holder_token_balance' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#226) is not in mixedCase
Variable 'Dividend.holder_profit' (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#228) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Dividend.studio_contract (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#217-218) is never used in Dividend
Dividend.holder_token_balance (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#226) is never used in Dividend
Dividend.holder_profit (/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol#228) is never used in Dividend
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/34/0x059468db0af9a1c0079ee0fc1d5773aec585cc72.sol analyzed (4 contracts), 57 result(s) found