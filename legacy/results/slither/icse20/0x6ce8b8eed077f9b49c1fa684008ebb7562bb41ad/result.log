INFO:Slither:Compilation warnings/errors on /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:26:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LeanFund() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:34:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (open || msg.sender != owner) throw; // we can only initialize once
                                     ^---^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:35:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_deadlineBlockNumber < block.number + 40) throw; // deadlines must be at least ten minutes hence
                                                  ^---^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:48:89: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
  modifier beforeDeadline() { if ((block.number < deadlineBlockNumber) && open) _; else throw; }
                                                                                        ^---^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:49:89: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
  modifier afterDeadline() { if ((block.number >= deadlineBlockNumber) && open) _; else throw; }
                                                                                        ^---^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:53:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value != 1 ether) { throw; } // only accept payments of 1 ETH exactly
                                ^---^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:67:35: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if ((msg.sender == owner) && (this.balance > amountRaised)) {
                                  ^----------^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:68:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      uint amount = this.balance - amountRaised;
                    ^----------^
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:26:3: Warning: No visibility specified. Defaulting to "public". 
  function LeanFund() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function initialize(uint _fundingGoalInWei, address _beneficiary, uint _deadlineBlockNumber) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:52:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable beforeDeadline {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:60:3: Warning: No visibility specified. Defaulting to "public". 
  function getContribution() constant returns (uint retVal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:66:3: Warning: No visibility specified. Defaulting to "public". 
  function safeKill() afterDeadline {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:76:3: Warning: No visibility specified. Defaulting to "public". 
  function safeWithdrawal() afterDeadline {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#34-35:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#35:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#54:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#49:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#51:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
LeanFund.initialize (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#33-48) should be declared external
LeanFund.fallback (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#53-60) should be declared external
LeanFund.getContribution (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#60-64) should be declared external
LeanFund.safeKill (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#67-75) should be declared external
LeanFund.safeWithdrawal (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#78-102) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol:
	- pragma solidity^0.4.1 (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'LeanFund.LeanFund' (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#27-32) is not in mixedCase
Parameter '_fundingGoalInWei' of LeanFund.initialize (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#33) is not in mixedCase
Parameter '_beneficiary' of LeanFund.initialize (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#33-34) is not in mixedCase
Parameter '_deadlineBlockNumber' of LeanFund.initialize (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#34) is not in mixedCase
Constant 'LeanFund.version' (/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol#6-8) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/28/0x6ce8b8eed077f9b49c1fa684008ebb7562bb41ad.sol analyzed (1 contracts), 16 result(s) found