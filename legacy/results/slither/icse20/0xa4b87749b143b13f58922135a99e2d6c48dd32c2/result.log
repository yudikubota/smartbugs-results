INFO:Slither:Compilation warnings/errors on /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:48:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:64:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:70:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:97:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:102:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:249:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:259:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:263:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:269:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:276:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:287:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:305:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:323:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:329:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:353:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:374:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:388:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:400:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:409:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:413:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:451:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:541:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:568:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:636:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:643:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:661:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:697:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function RelaunchedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) MintedTokenCappedCrowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _maximumSellableTokens) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:5:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract ERC20 {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:47:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:539:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:332:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount);
    ^----------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:412:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:563:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:576:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:586:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:623:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:710:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(_addr, _weiAmount, _tokenAmount);
    ^---------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:7:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:8:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:11:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:12:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:30:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:36:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:41:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:64:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:75:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:133:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:165:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:249:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:286:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:369:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:383:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:441:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:475:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:560:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:567:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:580:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:584:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:590:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:661:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:668:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:668:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:668:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:668:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:697:3: Warning: No visibility specified. Defaulting to "public". 
  function RelaunchedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) MintedTokenCappedCrowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _maximumSellableTokens) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:47:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:125:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:133:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:153:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:523:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:527:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:531:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:535:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol:539:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#365-379):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#373-374)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#376-379)
Reentrancy in Crowdsale.invest (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#307-347):
	External calls:
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender) (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#314-315)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#331-332)
	- weiRaised (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#329-331)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMathLib.assert (function @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#48-58) shadows built-in symbol "assert"
SafeMath.assert (function @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#561-563) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#257-298):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#272-275)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#286-287)
	- minimumFundingGoal (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#294-298)
	- multisigWallet (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#275-277)
	- startsAt (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#284)
Reentrancy in Crowdsale.invest (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#307-347):
	External calls:
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender) (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#314-315)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#322-323)
	- investorCount (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#320-321)
	- tokenAmountOf (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#325-329)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#434-461) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#446-461)
	- block.timestamp < startsAt (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#441-461)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
MintableToken.mintingFinished should be constant (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#629)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#75:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#279-280:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#280-281:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#285-286:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#293:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#300-301:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#317-318:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#338:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#345:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#367-368:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#388:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#405:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#413-414:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#424:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#428:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#469:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#562:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#661:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#663-665:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#602-606) should be declared external
ERC20.balanceOf (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#7-8) should be declared external
StandardToken.allowance (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#613-618) should be declared external
ERC20.allowance (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#8-10) should be declared external
StandardToken.transfer (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#573-580) should be declared external
ERC20.transfer (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#10-11) should be declared external
ERC20.transferFrom (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#11-12) should be declared external
StandardToken.transferFrom (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#580-602) should be declared external
ERC20.approve (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#12-13) should be declared external
StandardToken.approve (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#606-613) should be declared external
SafeMathLib.times (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#30-36) should be declared external
SafeMathLib.minus (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#36-41) should be declared external
SafeMathLib.plus (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#41-47) should be declared external
Ownable.transferOwnership (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#76-87) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#129-132) should be declared external
PricingStrategy.isSane (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#138-140) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#144-147) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#159-160) should be declared external
FinalizeAgent.isSane (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#171-174) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#177-178) should be declared external
Crowdsale.fallback (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#300-301) should be declared external
Crowdsale.buy (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#352-356) should be declared external
Crowdsale.finalize (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#365-379) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#383-390) should be declared external
Crowdsale.loadRefund (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#411-417) should be declared external
Crowdsale.refund (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#419-428) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#464-465) should be declared external
MintableToken.mint (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#642-656) should be declared external
MintableToken.setMintAgent (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#659-661) should be declared external
RelaunchedCrowdsale.setInvestorData (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#68-70) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#257-298) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#257-258) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#258-259) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#259-262) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#262) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#263) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#263-266) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#397-399) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#603) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#613-616) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#616) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#573) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#573-574) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#581) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#581) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#582-584) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#606-608) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#608) is not in mixedCase
Function 'MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale' (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#672-681) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#677-679) is not in mixedCase
Function 'RelaunchedCrowdsale.RelaunchedCrowdsale' (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol#714) is not in mixedCase
Parameter '_addr' of RelaunchedCrowdsale.setInvestorData (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol) is not in mixedCase
Parameter '_weiAmount' of RelaunchedCrowdsale.setInvestorData (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol) is not in mixedCase
Parameter '_tokenAmount' of RelaunchedCrowdsale.setInvestorData (/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xa4b87749b143b13f58922135a99e2d6c48dd32c2.sol analyzed (12 contracts), 85 result(s) found