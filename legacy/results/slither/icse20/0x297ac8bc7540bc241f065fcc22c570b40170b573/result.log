INFO:Slither:Compilation warnings/errors on /unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:61:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public { owner = msg.sender; }
  ^-----------------------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:432:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TraceTokenSale(uint256 _startTime, address traceTokenAddress, address _wallet, address _teamAndFoundersWallet, address _advisorsAndPreICO) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:75:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:144:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:210:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:251:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:262:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:302:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:303:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0x0, _to, _amount);
    ^-------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:313:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:350:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransferAllowed(_transferAllowed);
        ^-------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:495:8: Warning: Invoking events without "emit" prefix is deprecated.
       TokenPurchase(0x0, contributor, msg.value, amount);
       ^------------------------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:514:6: Warning: Invoking events without "emit" prefix is deprecated.
     Whitelist(contributor, eth_amount);
     ^--------------------------------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:561:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
  require(this.balance > 0);
          ^----------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:563:19: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
  wallet.transfer(this.balance);
                  ^----------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:656:5: Warning: Invoking events without "emit" prefix is deprecated.
    Finalized();
    ^---------^
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:18:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:24:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:31:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:36:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in TraceTokenSale.buyTokens (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#491-511):
	External calls:
	- require(bool)(! hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#493-494)
	- require(bool)((token.totalSupply() + amount) <= TOTAL_NUM_TOKENS) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#500-501)
	State variables written after the call(s):
	- totalEthers (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#506-507)
	- whitelist (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#501-504)
Reentrancy in TraceTokenSale.refund (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#639-646):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#640)
	- require(bool)(token.balanceOf(msg.sender) > 0) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#642-643)
	State variables written after the call(s):
	- etherBalances (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#644-645)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#588)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#592)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	- token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#596)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	- token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	- token.transfer(teamAndFoundersWallet,founderAmounts[4]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#599-600)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#600-601)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	- token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	- token.transfer(teamAndFoundersWallet,founderAmounts[4]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#599-600)
	- token.transfer(teamAndFoundersWallet,founderAmounts[3]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#605-607)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#607-609)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	- token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	- token.transfer(teamAndFoundersWallet,founderAmounts[4]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#599-600)
	- token.transfer(teamAndFoundersWallet,founderAmounts[3]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#605-607)
	- token.transfer(teamAndFoundersWallet,founderAmounts[2]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#610-611)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#611)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	- token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	- token.transfer(teamAndFoundersWallet,founderAmounts[4]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#599-600)
	- token.transfer(teamAndFoundersWallet,founderAmounts[3]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#605-607)
	- token.transfer(teamAndFoundersWallet,founderAmounts[2]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#610-611)
	- token.transfer(teamAndFoundersWallet,founderAmounts[1]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#614-615)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#615-616)
Reentrancy in TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#584)
	- token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	- token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	- token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	- token.transfer(teamAndFoundersWallet,founderAmounts[4]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#599-600)
	- token.transfer(teamAndFoundersWallet,founderAmounts[3]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#605-607)
	- token.transfer(teamAndFoundersWallet,founderAmounts[2]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#610-611)
	- token.transfer(teamAndFoundersWallet,founderAmounts[1]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#614-615)
	- token.transfer(teamAndFoundersWallet,founderAmounts[0]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#621-623)
	State variables written after the call(s):
	- founderAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#623-624)
Reentrancy in TraceTokenSale.withdrawTokensToAdvisors (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#624-639):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#627)
	- token.transfer(advisorsAndPreICO,preicoAndAdvisorsAmounts[1]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#629-630)
	State variables written after the call(s):
	- preicoAndAdvisorsAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#630-634)
Reentrancy in TraceTokenSale.withdrawTokensToAdvisors (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#624-639):
	External calls:
	- require(bool)(hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#627)
	- token.transfer(advisorsAndPreICO,preicoAndAdvisorsAmounts[1]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#629-630)
	- token.transfer(advisorsAndPreICO,preicoAndAdvisorsAmounts[0]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#635-638)
	State variables written after the call(s):
	- preicoAndAdvisorsAmounts (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#638-639)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
TraceTokenSale.buyTokens (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#491-511) does not use the value returned by external calls:
	-token.mint(contributor,amount) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#507-510)
TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624) does not use the value returned by external calls:
	-token.transfer(teamAndFoundersWallet,founderAmounts[7]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#587-588)
	-token.transfer(teamAndFoundersWallet,founderAmounts[6]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#591-592)
	-token.transfer(teamAndFoundersWallet,founderAmounts[5]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#595-596)
	-token.transfer(teamAndFoundersWallet,founderAmounts[4]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#599-600)
	-token.transfer(teamAndFoundersWallet,founderAmounts[3]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#605-607)
	-token.transfer(teamAndFoundersWallet,founderAmounts[2]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#610-611)
	-token.transfer(teamAndFoundersWallet,founderAmounts[1]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#614-615)
	-token.transfer(teamAndFoundersWallet,founderAmounts[0]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#621-623)
TraceTokenSale.withdrawTokensToAdvisors (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#624-639) does not use the value returned by external calls:
	-token.transfer(advisorsAndPreICO,preicoAndAdvisorsAmounts[1]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#629-630)
	-token.transfer(advisorsAndPreICO,preicoAndAdvisorsAmounts[0]) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#635-638)
TraceTokenSale.refund (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#639-646) does not use the value returned by external calls:
	-token.transfer(this,token.balanceOf(msg.sender)) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#645-646)
TraceTokenSale.finishCrowdsale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#646-674) does not use the value returned by external calls:
	-token.mint(wallet,bountyReward) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#656-660)
	-token.mint(advisorsAndPreICO,preicoAndAdvisors.div(5)) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#660-661)
	-token.mint(wallet,liquidityPool) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#661-663)
	-token.mint(wallet,futureDevelopment) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#663-666)
	-token.mint(this,teamAndFounders) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#666-667)
	-token.mint(this,preicoAndAdvisors.mul(4).div(5)) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#667-671)
	-token.mint(wallet,leftOverTokens) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol)
	-token.endMinting(true) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol)
	-token.endMinting(false) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in TraceTokenSale.addWhitelist (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#523-536):
	External calls:
	- require(bool)(! hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#526-527)
	State variables written after the call(s):
	- whitelist (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#534-536)
Reentrancy in TraceTokenSale.addWhitelists (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#536-551):
	External calls:
	- require(bool)(! hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#537-538)
	- require(bool)(addWhitelist(contributor,amount)) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#546-550)
	State variables written after the call(s):
	- whitelist (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#546-550)
Reentrancy in TraceTokenSale.buyTokens (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#491-511):
	External calls:
	- require(bool)(! hasEnded()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#493-494)
	- require(bool)((token.totalSupply() + amount) <= TOTAL_NUM_TOKENS) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#500-501)
	State variables written after the call(s):
	- etherBalances (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#504-506)
Reentrancy in TraceTokenSale.finishCrowdsale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#646-674):
	External calls:
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#649-651)
	- require(bool)(hasEnded() || hardCapReached()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#651-652)
	- token.mint(wallet,bountyReward) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#656-660)
	- token.mint(advisorsAndPreICO,preicoAndAdvisors.div(5)) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#660-661)
	- token.mint(wallet,liquidityPool) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#661-663)
	- token.mint(wallet,futureDevelopment) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#663-666)
	- token.mint(this,teamAndFounders) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#666-667)
	- token.mint(this,preicoAndAdvisors.mul(4).div(5)) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#667-671)
	- leftOverTokens = TOTAL_NUM_TOKENS.sub(token.totalSupply()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#671-674)
	State variables written after the call(s):
	- leftOverTokens (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#671-674)
Reentrancy in TraceTokenSale.finishCrowdsale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#646-674):
	External calls:
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#649-651)
	- require(bool)(hasEnded() || hardCapReached()) (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#651-652)
	State variables written after the call(s):
	- refundAllowed (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
TraceTokenSale.presaleLimitReached should be constant (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#386-388)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#74-79) should be declared external
BasicToken.balanceOf (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#158-160) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#114-115) should be declared external
StandardToken.allowance (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#245-249) should be declared external
ERC20.allowance (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#175-177) should be declared external
ERC20.approve (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#179-180) should be declared external
StandardToken.approve (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#228-237) should be declared external
StandardToken.increaseApproval (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#252-260) should be declared external
StandardToken.decreaseApproval (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#260-276) should be declared external
TraceToken.endMinting (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#356-364) should be declared external
TraceTokenSale.fallback (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#462-464) should be declared external
TraceTokenSale.balanceOf (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#513-516) should be declared external
TraceTokenSale.addWhitelists (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#536-551) should be declared external
TraceTokenSale.hasStarted (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#566-568) should be declared external
TraceTokenSale.withdraw (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#579-582) should be declared external
TraceTokenSale.withdrawTokenToFounders (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#583-624) should be declared external
TraceTokenSale.withdrawTokensToAdvisors (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#624-639) should be declared external
TraceTokenSale.refund (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#639-646) should be declared external
TraceTokenSale.finishCrowdsale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#646-674) should be declared external
TraceTokenSale.pauseSale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol) should be declared external
TraceTokenSale.unpauseSale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#6-8): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#64) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#158) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#141) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#141) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#245) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#245) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#207) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#207) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#207-208) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#229) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#229-230) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#255) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#255) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#260) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#260-262) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#309) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#309) is not in mixedCase
Parameter '_transferAllowed' of TraceToken.endMinting (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#356-358) is not in mixedCase
Function 'TraceTokenSale.TraceTokenSale' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#441-460) is not in mixedCase
Parameter '_startTime' of TraceTokenSale.TraceTokenSale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#441-442) is not in mixedCase
Parameter '_wallet' of TraceTokenSale.TraceTokenSale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#443) is not in mixedCase
Parameter '_teamAndFoundersWallet' of TraceTokenSale.TraceTokenSale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#443) is not in mixedCase
Parameter '_advisorsAndPreICO' of TraceTokenSale.TraceTokenSale (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#443) is not in mixedCase
Parameter '_owner' of TraceTokenSale.balanceOf (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#513-514) is not in mixedCase
Parameter 'eth_amount' of TraceTokenSale.checkWhitelist (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#519) is not in mixedCase
Parameter 'eth_amount' of TraceTokenSale.addWhitelist (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#525) is not in mixedCase
Constant 'TraceTokenSale.tokensForSale' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#376-377) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.softCap' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#380-381) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.hardCap' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#383) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.presaleLimit' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#383-385) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.min_investment_eth' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#391-392) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.max_investment_eth' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#393-394) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.min_investment_presale_eth' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#394-395) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.bountyReward' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#399) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.preicoAndAdvisors' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#399) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.liquidityPool' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#399-400) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.futureDevelopment' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#400) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.teamAndFounders' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#400) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.token_per_wei' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#425-427) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TraceTokenSale.weekInSeconds' (/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol#428-430) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x297ac8bc7540bc241f065fcc22c570b40170b573.sol analyzed (9 contracts), 85 result(s) found