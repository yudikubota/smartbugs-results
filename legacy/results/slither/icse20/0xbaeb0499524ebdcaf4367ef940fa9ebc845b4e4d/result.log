INFO:Slither:Compilation warnings/errors on /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:56:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier inState(State s) { if (s != state) throw; _; }
                                                ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:57:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyPayer() { if (msg.sender != payer) throw; _; }
                                                    ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:58:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyRecipient() { if (msg.sender != recipient) throw; _; }
                                                            ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:59:95: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyPayerOrRecipient() { if ((msg.sender != payer) && (msg.sender != recipient)) throw; _; }
                                                                                              ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:73:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BurnableOpenPayment(address _payer, uint _commitThreshold, DefaultAction _defaultAction, uint _defaultTimeoutLength, string _payerString)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:104:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:128:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value < commitThreshold) throw;
                                         ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:220:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (defaultAction == DefaultAction.None) throw;
                                                 ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:231:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (defaultAction == DefaultAction.None) throw;
                                                 ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:232:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < defaultTriggerTime) throw;
                                      ^---^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:77:13: Warning: Invoking events without "emit" prefix is deprecated.
            FundsAdded(msg.value);
            ^-------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:106:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundsAdded(msg.value);
        ^-------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:110:13: Warning: Invoking events without "emit" prefix is deprecated.
            Unexpended();
            ^----------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:119:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundsRecovered();
        ^--------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:131:13: Warning: Invoking events without "emit" prefix is deprecated.
            FundsAdded(msg.value);
            ^-------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:137:9: Warning: Invoking events without "emit" prefix is deprecated.
        Committed(recipient);
        ^------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:151:13: Warning: Invoking events without "emit" prefix is deprecated.
            FundsBurned(amount);
            ^-----------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:155:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (this.balance == 0) {
            ^----------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:157:13: Warning: Invoking events without "emit" prefix is deprecated.
            Expended();
            ^--------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:179:13: Warning: Invoking events without "emit" prefix is deprecated.
            FundsReleased(amount);
            ^-------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:183:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (this.balance == 0) {
            ^----------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:185:13: Warning: Invoking events without "emit" prefix is deprecated.
            Expended();
            ^--------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:204:9: Warning: Invoking events without "emit" prefix is deprecated.
        PayerStringUpdated(payerString);
        ^-----------------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:212:9: Warning: Invoking events without "emit" prefix is deprecated.
        RecipientStringUpdated(recipientString);
        ^-------------------------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:222:9: Warning: Invoking events without "emit" prefix is deprecated.
        DefaultActionDelayed();
        ^--------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:234:9: Warning: Invoking events without "emit" prefix is deprecated.
        DefaultActionCalled();
        ^-------------------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:236:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            internalBurn(this.balance);
                         ^----------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:239:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            internalRelease(this.balance);
                            ^----------^
/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:253:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewBOP(newBOPAddr, payer, commitThreshold, defaultAction, defaultTimeoutLength, initialPayerString);
        ^-------------------------------------------------------------------------------------------------^

INFO:Detectors:[91m
BurnableOpenPayment.internalRelease (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#178-199) sends eth to arbitrary user
	Dangerous calls:
	- success = recipient.send(amount) (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#183-184)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
BurnableOpenPayment.internalBurn (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#149-170) uses a dangerous strict equality:
	- this.balance == 0
BurnableOpenPayment.internalBurn (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#149-170) uses a dangerous strict equality:
	- this.balance == 0
BurnableOpenPayment.internalRelease (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#178-199) uses a dangerous strict equality:
	- this.balance == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#133-134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#230-231:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#238:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#239:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#57:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#59:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#61:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BurnableOpenPayment.getFullState (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#96-104) should be declared external
BurnableOpenPayment.addFunds (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#105-119) should be declared external
BurnableOpenPayment.recoverFunds (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#120-128) should be declared external
BurnableOpenPayment.commit (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#129-149) should be declared external
BurnableOpenPayment.burn (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#172-178) should be declared external
BurnableOpenPayment.release (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#199-207) should be declared external
BurnableOpenPayment.setPayerString (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#207-215) should be declared external
BurnableOpenPayment.setRecipientString (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#215-223) should be declared external
BurnableOpenPayment.delayDefaultAction (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#223-234) should be declared external
BurnableOpenPayment.callDefaultAction (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#234-247) should be declared external
BurnableOpenPaymentFactory.newBurnableOpenPayment (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#251-256) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol:
	- pragma solidity^0.4.10 (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#15-17): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BurnableOpenPayment.BurnableOpenPayment' (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#73-96) is not in mixedCase
Parameter '_payer' of BurnableOpenPayment.BurnableOpenPayment (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#73) is not in mixedCase
Parameter '_commitThreshold' of BurnableOpenPayment.BurnableOpenPayment (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#73) is not in mixedCase
Parameter '_defaultAction' of BurnableOpenPayment.BurnableOpenPayment (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#73-75) is not in mixedCase
Parameter '_defaultTimeoutLength' of BurnableOpenPayment.BurnableOpenPayment (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#75-76) is not in mixedCase
Parameter '_payerString' of BurnableOpenPayment.BurnableOpenPayment (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#76-77) is not in mixedCase
Parameter '_string' of BurnableOpenPayment.setPayerString (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#209-210) is not in mixedCase
Parameter '_string' of BurnableOpenPayment.setRecipientString (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#217-218) is not in mixedCase
Constant 'BurnableOpenPayment.burnAddress' (/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol#21-23) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xbaeb0499524ebdcaf4367ef940fa9ebc845b4e4d.sol analyzed (2 contracts), 33 result(s) found