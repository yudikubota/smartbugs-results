INFO:Slither:Compilation warnings/errors on /unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:138:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:301:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function OracleBase() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:406:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function OraclePoloniex() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:156:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:330:9: Warning: Invoking events without "emit" prefix is deprecated.
        BankSet(bankAddress);
        ^------------------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:344:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (getPrice() > this.balance) {
                         ^----------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:345:13: Warning: Invoking events without "emit" prefix is deprecated.
[91m            OraclizeError("Not enough ether");[0m
            ^-------------------------------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:351:13: Warning: Invoking events without "emit" prefix is deprecated.
[91m            OraclizeError("Unexpectedly high query price");[0m
            ^--------------------------------------------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:355:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewOraclizeQuery();
        ^----------------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:375:9: Warning: Invoking events without "emit" prefix is deprecated.
        PriceTicker(result, myid, proof);
        ^------------------------------^
/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:337:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return oraclize_getPrice(oracleConfig.datasource, gasLimit);
               ^--------------------------------------------------^

INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#116-124) is declared view but contains assembly code
OracleBase.getPrice (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#345-348) is declared view but changes state variables:
	- usingOraclize.OAR
	- usingOraclize.oraclize
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in OracleBase.__callback (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#378-391):
	External calls:
	- require(bool)(validIds[myid] && msg.sender == oraclize_cbAddress()) (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#380-382)
	State variables written after the call(s):
	- validIds (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#384-385)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#51-60):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#55-60)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#58-60)
	State variables written after the call(s):
	- oraclize (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#58-60)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
OracleBase.oracleName (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#277-278) shadows:
	- OracleI.oracleName (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#248)
OracleBase.oracleType (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#278-280) shadows:
	- OracleI.oracleType (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#248-249)
OracleBase.rate (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#288) shadows:
	- OracleI.rate (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#249)
OracleBase.waitQuery (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#288-289) shadows:
	- OracleI.waitQuery (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#250)
OracleBase.updateTime (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#280-281) shadows:
	- OracleI.updateTime (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#250-251)
OracleBase.callbackTime (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#281-283) shadows:
	- OracleI.callbackTime (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#251)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
Reentrancy in OracleBase.__callback (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#378-391):
	External calls:
	- require(bool)(validIds[myid] && msg.sender == oraclize_cbAddress()) (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#380-382)
	State variables written after the call(s):
	- callbackTime (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#385)
	- rate (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#383)
	- waitQuery (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#388-389)
Reentrancy in OracleBase.updateRate (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#351-371):
	External calls:
	- queryId = oraclize_query(oracleConfig.datasource,oracleConfig.arguments,gasLimit,priceLimit) (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#358-363)
	State variables written after the call(s):
	- updateTime (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#369)
	- validIds (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#368-369)
	- waitQuery (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#369)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#116-124)
	- /unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#124
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OracleBase.priceLimit should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#284)
OracleI.callbackTime should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#251)
OracleI.oracleName should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#248)
OracleI.oracleType should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#248-249)
OracleI.rate should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#249)
OracleI.updateTime should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#250-251)
OracleI.waitQuery should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#250)
OraclizeI.cbAddress should be constant (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#29)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:
	- Version used: ['^0.4.0', '^0.4.18']
	- /unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#1 declares pragma solidity^0.4.18
	- /unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#26-28 declares pragma solidity^0.4.0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
OraclizeI.query_withGasLimit (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#29-30) should be declared external
OraclizeI.getPrice (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#30-31) should be declared external
OraclizeI.setProofType (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#31-32) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#32-35) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#36-40) should be declared external
Ownable.transferOwnership (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#157-169) should be declared external
OracleBase.setBank (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#341-344) should be declared external
OracleI.setBank (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#256-258) should be declared external
OracleI.setGasPrice (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#258-260) should be declared external
OracleBase.setGasPrice (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#319-326) should be declared external
OracleI.setGasLimit (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#260-262) should be declared external
OracleBase.setGasLimit (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#328-337) should be declared external
OracleBase.__callback (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#400-403) should be declared external
OracleBase.fallback (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#404) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol:
	- pragma solidity^0.4.18 (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#1): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#26-28): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#29-30) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#40-125) is not in CapWords
Function 'usingOraclize.oraclize_setNetworkAuto' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#61-92) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#92-96) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#96-103) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#103-107) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#107-111) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#111-116) is not in mixedCase
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#41) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#41-42) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#43) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#44) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#45) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#47-48) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#48-50) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#145-147) is not in mixedCase
Parameter '_a' of Helpers.parseIntRound (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#216) is not in mixedCase
Parameter '_b' of Helpers.parseIntRound (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#216) is not in mixedCase
Parameter '_gasLimit' of OracleBase.setGasLimit (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#329-330) is not in mixedCase
Function 'OracleBase.OracleBase' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#310-312) is not in mixedCase
Function 'OracleBase.__callback' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#378-391) is not in mixedCase
Function 'OracleBase.__callback' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#400-403) is not in mixedCase
Function 'OraclePoloniex.OraclePoloniex' (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.proofType_NONE (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#41) is never used in OraclePoloniex
usingOraclize.proofType_Android (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#43) is never used in OraclePoloniex
usingOraclize.proofType_Ledger (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#44) is never used in OraclePoloniex
usingOraclize.proofType_Native (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#45) is never used in OraclePoloniex
OracleBase.MIN_REQUEST_PRICE (/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol#303-307) is never used in OraclePoloniex
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/21/0x2f3f9040db452ae3a06c307957b4f8fd1717a34e.sol analyzed (9 contracts), 54 result(s) found