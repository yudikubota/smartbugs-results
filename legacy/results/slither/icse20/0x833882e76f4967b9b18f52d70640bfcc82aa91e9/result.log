INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:82:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:134:27: Warning: Use of unary + is deprecated.
            balances[to] =+ value;            
                          ^-----^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:265:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:309:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < milestones.p1) throw;
                                 ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:310:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= milestones.p6) throw;
                                  ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:311:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:314:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (getTotalValue() + msg.value > SAFETY_LIMIT) throw; 
                                                        ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:322:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!wallet.send(msg.value)) throw;
                                     ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:500:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:515:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (etherPrice == 0) throw;
                             ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:528:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(retEther)) throw;
                                            ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:577:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress == 0x0) throw;
                                           ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:611:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != virtualExchangeAddress) throw;
                                                ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:708:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ableToIssueTokens) throw;
                               ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:711:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(this) > 0) throw;
                                 ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:714:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:718:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (requestValue > PROPOSAL_FUNDS_TH * percent) throw;
                                                        ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:757:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:761:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:768:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            requestValue     >  PROPOSAL_FUNDS_TH * percent) throw;
                                                             ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:808:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:811:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:814:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= proposals[id].votindEndTS) throw;
                                              ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:817:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].voted[msg.sender]) throw;
                                             ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:850:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:851:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].submitter != msg.sender) throw;
                                                   ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:854:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < proposals[id].votindEndTS) throw;
                                             ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:858:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:862:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].votesObjecting  > objectionThreshold) throw;
                                                                ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:899:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:922:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:927:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (eventInfo.getEventEnd() + 12 weeks)) throw;
                                                        ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:932:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            lastImpeachmentProposal.votindEndTS +  2 weeks > now) throw;
                                                                  ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:954:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.newExecutive == 0x0) throw;
                                                         ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:958:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:961:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.voted[msg.sender]) throw;
                                                       ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:964:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.votindEndTS + 2 weeks <= now) throw;
                                                                  ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1000:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress != 0x0) throw;
                                           ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1079:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1093:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyBeforeEnd() { if (now  >=  eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1094:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterEnd()  { if (now  <   eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1096:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterTradingStart()  { if (now  < eventInfo.getTradingStart()) throw; _; }
                                                                                ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1098:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyExecutive()     { if (msg.sender != executive) throw; _; }
                                                                ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1100:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyIfAbleToIssueTokens()  { if (!ableToIssueTokens) throw; _; } 
                                                                  ^---^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:105:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, to, value);
            ^-----------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:142:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(from, to, value);
            ^-----------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:185:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, value);
        ^----------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:540:9: Warning: Invoking events without "emit" prefix is deprecated.
        BuyForEtherTransaction(msg.sender, collectedEther, totalSupply, etherPrice, tokens);
        ^---------------------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:555:10: Warning: Invoking events without "emit" prefix is deprecated.
         PriceHKGChange(qtyForOneHKG, preferedQtySold, totalSupply);
         ^--------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:589:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(this, virtualExchangeAddress, qtyToEmit);
        ^-----------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:592:9: Warning: Invoking events without "emit" prefix is deprecated.
        DstTokensIssued(hkgPrice, preferedQtySold, totalSupply, qtyToEmit);
        ^----------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:629:7: Warning: Invoking events without "emit" prefix is deprecated.
      BuyForHKGTransaction(sender, preferedQtySold, totalSupply, hkgPrice, tokensQty);
      ^-----------------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:654:10: Warning: Invoking events without "emit" prefix is deprecated.
         DstTokensIssued(qtyForOneEther, totalSupply, totalSupply, qtyToEmit);
         ^------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:668:10: Warning: Invoking events without "emit" prefix is deprecated.
         NewEtherPrice(qtyForOneEther);
         ^---------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:680:9: Warning: Invoking events without "emit" prefix is deprecated.
        DisableTokenIssuance();
        ^--------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:694:9: Warning: Invoking events without "emit" prefix is deprecated.
        BurnedAllRemainedTokens();
        ^-----------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:721:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (requestValue > this.balance) 
                           ^----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:722:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            requestValue = this.balance;    
                           ^----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:726:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:726:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:734:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:778:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:778:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:788:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:829:10: Warning: Invoking events without "emit" prefix is deprecated.
         ObjectedVote(id, msg.sender, votes);         
         ^---------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:876:12: Warning: Invoking events without "emit" prefix is deprecated.
           EtherRedeemAccepted(proposals[id].submitter, proposals[id].value);                              
           ^---------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:903:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        bool success = msg.sender.send(this.balance);        
                                       ^----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:942:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentProposed(msg.sender, urlDetails, now + 2 weeks, newExecutive);
        ^----------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:971:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentSupport(msg.sender, votingRights[msg.sender]);
        ^------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:980:13: Warning: Invoking events without "emit" prefix is deprecated.
            ImpeachmentAccepted(executive);
            ^----------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1009:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance);
    ^-------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:29:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success);
    ^----------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:161:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:178:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:265:5: Warning: No visibility specified. Defaulting to "public". 
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:290:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:307:5: Warning: No visibility specified. Defaulting to "public". 
    function createHKG(address holder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:330:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:376:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:387:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:396:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalValue() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:500:5: Warning: No visibility specified. Defaulting to "public". 
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:552:6: Warning: No visibility specified. Defaulting to "public". 
     function setHKGPrice(uint qtyForOneHKG) onlyExecutive  {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:569:5: Warning: No visibility specified. Defaulting to "public". 
    function issuePreferedTokens(uint qtyForOneHKG, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:607:5: Warning: No visibility specified. Defaulting to "public". 
    function buyForHackerGold(uint hkgValue) onlyBeforeEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:644:5: Warning: No visibility specified. Defaulting to "public". 
    function issueTokens(uint qtyForOneEther, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:663:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrice(uint qtyForOneEther) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:677:5: Warning: No visibility specified. Defaulting to "public". 
    function disableTokenIssuance() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:688:5: Warning: No visibility specified. Defaulting to "public". 
    function burnRemainToken() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:704:5: Warning: No visibility specified. Defaulting to "public". 
    function submitEtherProposal(uint requestValue, string url) onlyAfterEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:749:5: Warning: No visibility specified. Defaulting to "public". 
    function submitHKGProposal(uint requestValue, string url) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:803:6: Warning: No visibility specified. Defaulting to "public". 
     function objectProposal(bytes32 id){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:805:9: Warning: Unused local variable.
        Proposal memory proposal = proposals[id];
        ^----------------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:833:6: Warning: No visibility specified. Defaulting to "public". 
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:848:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemProposalFunds(bytes32 id) onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:873:12: Warning: Unused local variable.
           bool success = proposals[id].submitter.send(proposals[id].value); 
           ^----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:894:5: Warning: No visibility specified. Defaulting to "public". 
    function getAllTheFunds() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:903:9: Warning: Unused local variable.
        bool success = msg.sender.send(this.balance);        
        ^----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:918:6: Warning: No visibility specified. Defaulting to "public". 
     function submitImpeachmentProposal(string urlDetails, address newExecutive){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:951:5: Warning: No visibility specified. Defaulting to "public". 
    function supportImpeachment(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:991:5: Warning: No visibility specified. Defaulting to "public". 
    function votingRightsOf(address _owner) constant returns (uint256 result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:995:5: Warning: No visibility specified. Defaulting to "public". 
    function getPreferedQtySold() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:999:5: Warning: No visibility specified. Defaulting to "public". 
    function setVirtualExchange(address virtualExchangeAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1004:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGOwned() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1008:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherValue() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1012:5: Warning: No visibility specified. Defaulting to "public". 
    function getExecutive() constant returns (address result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1016:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1020:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1024:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTName() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1028:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTNameBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1032:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbol() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1036:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbolBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1040:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() constant returns (address result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1044:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1048:5: Warning: No visibility specified. Defaulting to "public". 
    function getCollectedEther() constant returns (uint results) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1052:5: Warning: No visibility specified. Defaulting to "public". 
    function getCounterProposals() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1056:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalIdByIndex(uint i) constant returns (bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1060:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalObjectionByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1064:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalValueByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1068:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentUrlDetails() constant returns (string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1073:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentVotesSupporting() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1077:5: Warning: No visibility specified. Defaulting to "public". 
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1147:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventStart() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1154:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventEnd() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1163:5: Warning: No visibility specified. Defaulting to "public". 
    function getVotingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1171:5: Warning: No visibility specified. Defaulting to "public". 
    function getTradingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1178:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:833:6: Warning: Function state mutability can be restricted to view
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1029:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(name);
               ^-----------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1037:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(symbol);
               ^-------------^
/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:1077:5: Warning: Function state mutability can be restricted to pure
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in DSTContract.redeemProposalFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#872-909):
	External calls:
	- hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#891-894)
	External calls sending eth:
	- success = proposals[id].submitter.send(proposals[id].value) (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#897-898)
	State variables written after the call(s):
	- proposals (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#906-907)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
DSTContract.objectProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#829-860) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.objectProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#829-860) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#872-909) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.objectProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#829-860) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#872-909) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.supportImpeachment (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#976-1020) uses a dangerous strict equality:
	- lastImpeachmentProposal.newExecutive == 0x0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#767-818):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#796-797)
	- requestValue = getHKGOwned() (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#797)
	State variables written after the call(s):
	- counterProposals (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#811)
	- timeOfLastProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#812-813)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
DSTContract.redeemProposalFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#872-909) does not use the value returned by external calls:
	-hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#891-894)
DSTContract.getAllTheFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#921-932) does not use the value returned by external calls:
	-hackerGold.transfer(msg.sender,getHKGOwned()) (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#931-932)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#767-818):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#796-797)
	- requestValue = getHKGOwned() (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#797)
	State variables written after the call(s):
	- listProposals (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#810)
	- proposals (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#808)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSTContract.convert uses assembly (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1109-1111)
	- /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1110-1111
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DSTContract.DECIMAL_ZEROS should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#422)
DSTContract.PROPOSAL_FUNDS_TH should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#428)
DSTContract.PROPOSAL_LIFETIME should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#423-425)
DSTContract.decimals should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#447-449)
EventInfo.eventStart should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol)
HackerGold.BASE_PRICE should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#237-239)
HackerGold.DECIMAL_ZEROS should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#246-248)
HackerGold.FIN_PRICE should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#242)
HackerGold.MID_PRICE should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#240-242)
HackerGold.SAFETY_LIMIT should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#245)
HackerGold.decimals should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#232-233)
HackerGold.name should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#230-231)
HackerGold.symbol should be constant (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#235-236)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#319:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#320-321:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#322:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#326-327:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#334:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#533:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#552:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#600:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#637:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#729:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#729:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#733:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#736:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#747:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#781:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#782:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#789-790:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#799-801:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#836:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#841-842:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#844:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#847:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#875:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#876:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#878-879:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#885:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#888:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#927:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#947:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#954:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#961:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#979:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#987:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#991:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#995:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1040:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1123:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
TokenInterface.approve (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#42-46) should be declared external
StandardToken.approve (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#182-195) should be declared external
StandardToken.allowance (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#212-215) should be declared external
TokenInterface.allowance (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#55-58) should be declared external
HackerGold.fallback (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#299-301) should be declared external
HackerGold.getTotalSupply (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#391-394) should be declared external
HackerGold.getNow (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#404-407) should be declared external
DSTContract.fallback (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#527-565) should be declared external
DSTContract.setHKGPrice (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#570-573) should be declared external
DSTContract.issuePreferedTokens (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#581-611) should be declared external
DSTContract.buyForHackerGold (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#625-653) should be declared external
DSTContract.issueTokens (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#663-678) should be declared external
DSTContract.setEtherPrice (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#686-698) should be declared external
DSTContract.disableTokenIssuance (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#702-705) should be declared external
DSTContract.burnRemainToken (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#707-713) should be declared external
DSTContract.submitEtherProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#720-758) should be declared external
DSTContract.submitHKGProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#767-818) should be declared external
DSTContract.objectProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#829-860) should be declared external
DSTContract.redeemProposalFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#872-909) should be declared external
DSTContract.getAllTheFunds (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#921-932) should be declared external
DSTContract.submitImpeachmentProposal (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#939-971) should be declared external
DSTContract.supportImpeachment (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#976-1020) should be declared external
DSTContract.votingRightsOf (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1025-1031) should be declared external
DSTContract.getPreferedQtySold (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1032-1036) should be declared external
DSTContract.setVirtualExchange (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1036-1042) should be declared external
DSTContract.getEtherValue (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1048-1049) should be declared external
DSTContract.getExecutive (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1051-1053) should be declared external
DSTContract.getHKGPrice (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1054-1056) should be declared external
DSTContract.getEtherPrice (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1057-1060) should be declared external
DSTContract.getDSTName (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1060-1064) should be declared external
DSTContract.getDSTNameBytes (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1064-1066) should be declared external
DSTContract.getDSTSymbol (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1066-1068) should be declared external
DSTContract.getDSTSymbolBytes (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1069-1073) should be declared external
DSTContract.getAddress (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1073-1075) should be declared external
DSTContract.getTotalSupply (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1077-1078) should be declared external
DSTContract.getCollectedEther (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1079-1085) should be declared external
DSTContract.getCounterProposals (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1086-1091) should be declared external
DSTContract.getProposalIdByIndex (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1093-1094) should be declared external
DSTContract.getProposalObjectionByIndex (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1094-1098) should be declared external
DSTContract.getProposalValueByIndex (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1098-1100) should be declared external
DSTContract.getCurrentImpeachmentUrlDetails (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1100-1105) should be declared external
DSTContract.getCurrentImpeachmentVotesSupporting (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1108-1109) should be declared external
EventInfo.getEventStart (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol) should be declared external
EventInfo.getEventEnd (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol) should be declared external
EventInfo.getVotingStart (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol) should be declared external
EventInfo.getTradingStart (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol) should be declared external
EventInfo.getNow (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol:
	- pragma solidity^0.4.0 (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#87-88) is not in mixedCase
Struct 'HackerGold.milestones_struct' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#260-263) is not in CapWords
Function 'HackerGold.HackerGold' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#273-296) is not in mixedCase
Variable 'HackerGold.BASE_PRICE' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#237-239) is not in mixedCase
Variable 'HackerGold.MID_PRICE' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#240-242) is not in mixedCase
Variable 'HackerGold.FIN_PRICE' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#242) is not in mixedCase
Variable 'HackerGold.SAFETY_LIMIT' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#245) is not in mixedCase
Variable 'HackerGold.DECIMAL_ZEROS' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#246-248) is not in mixedCase
Function 'DSTContract.DSTContract' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#517-526) is not in mixedCase
Parameter '_owner' of DSTContract.votingRightsOf (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1028) is not in mixedCase
Variable 'DSTContract.DECIMAL_ZEROS' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#422) is not in mixedCase
Variable 'DSTContract.PROPOSAL_LIFETIME' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#423-425) is not in mixedCase
Variable 'DSTContract.PROPOSAL_FUNDS_TH' (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#428) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
DSTContract.enumDeclaration (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#465-467) is never used in DSTContract
EventInfo.HACKATHON_5_WEEKS (/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol#1178) is never used in EventInfo
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/15/0x833882e76f4967b9b18f52d70640bfcc82aa91e9.sol analyzed (5 contracts), 115 result(s) found