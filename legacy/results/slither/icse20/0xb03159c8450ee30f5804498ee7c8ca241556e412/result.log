INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:62:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FED(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:78:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:79:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:80:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:81:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:90:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:98:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:99:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:100:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:101:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:102:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:111:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:112:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:120:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:121:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:129:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:130:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:139:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.sender != owner)throw;
                               ^---^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:84:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:106:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:115:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:124:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:133:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function FED(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:97:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function freeze(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:128:5: Warning: No visibility specified. Defaulting to "public". 
    function unfreeze(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:138:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawEther(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:144:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
FED (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#38-146) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#78-88)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#94-96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#131:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#131:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
FED.transfer (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#78-88) should be declared external
FED.approve (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#90-97) should be declared external
FED.transferFrom (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#98-111) should be declared external
FED.burn (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#111-120) should be declared external
FED.freeze (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#120-129) should be declared external
FED.unfreeze (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#129-140) should be declared external
FED.withdrawEther (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#143-146) should be declared external
FED.fallback (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol:
	- pragma solidity^0.4.8 (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'FED.FED' (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#64-77) is not in mixedCase
Parameter '_to' of FED.transfer (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#78) is not in mixedCase
Parameter '_value' of FED.transfer (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#78) is not in mixedCase
Parameter '_spender' of FED.approve (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#90-91) is not in mixedCase
Parameter '_value' of FED.approve (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#91) is not in mixedCase
Parameter '_from' of FED.transferFrom (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#98) is not in mixedCase
Parameter '_to' of FED.transferFrom (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#98) is not in mixedCase
Parameter '_value' of FED.transferFrom (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#98) is not in mixedCase
Parameter '_value' of FED.burn (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#111) is not in mixedCase
Parameter '_value' of FED.freeze (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#120) is not in mixedCase
Parameter '_value' of FED.unfreeze (/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol#129-130) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0xb03159c8450ee30f5804498ee7c8ca241556e412.sol analyzed (2 contracts), 40 result(s) found