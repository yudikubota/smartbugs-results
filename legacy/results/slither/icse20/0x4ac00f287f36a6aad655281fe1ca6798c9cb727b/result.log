INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:502:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BTTSToken(address owner, string symbol, string name, uint8 decimals, uint initialSupply, bool mintable, bool transferable) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:660:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:168:13: Warning: Invoking events without "emit" prefix is deprecated.
            Mint(self.owner, initialSupply, false);
            ^------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:169:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(address(0), self.owner, initialSupply);
            ^---------------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:204:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(self.owner, self.newOwner);
        ^---------------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:210:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(self.owner, newOwner);
        ^----------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:221:9: Warning: Invoking events without "emit" prefix is deprecated.
        MinterUpdated(self.minter, minter);
        ^--------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:232:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(tokenOwner, tokens, lockAccount);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:233:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), tokenOwner, tokens);
        ^--------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:240:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccountUnlocked(tokenOwner);
        ^-------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:247:13: Warning: Invoking events without "emit" prefix is deprecated.
            MinterUpdated(self.minter, address(0));
            ^------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:250:9: Warning: Invoking events without "emit" prefix is deprecated.
        MintingDisabled();
        ^---------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:256:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransfersEnabled();
        ^----------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:336:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, tokens);
        ^------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:342:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:351:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);
        ^------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:357:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:366:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedTransferSig, address(this), tokenOwner, to, tokens, fee, nonce);
               ^-----------------------------------------------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:371:72: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:384:76: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(tokenOwner != address(0) && tokenOwner == ecrecoverFromSig(keccak256(signingPrefix, hash), sig));
                                                                           ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:390:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, to, tokens);
        ^------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:393:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, feeAccount, fee);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:397:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedApproveSig, address(this), tokenOwner, spender, tokens, fee, nonce);
               ^---------------------------------------------------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:402:72: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:412:76: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(tokenOwner != address(0) && tokenOwner == ecrecoverFromSig(keccak256(signingPrefix, hash), sig));
                                                                           ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:417:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(tokenOwner, spender, tokens);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:420:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, feeAccount, fee);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:424:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedTransferFromSig, address(this), spender, from, to, tokens, fee, nonce);
               ^------------------------------------------------------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:429:66: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:444:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(spender != address(0) && spender == ecrecoverFromSig(keccak256(signingPrefix, hash), sig));
                                                                     ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:451:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);
        ^------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:455:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, feeAccount, fee);
        ^-----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:459:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedApproveAndCallSig, address(this), tokenOwner, spender, tokens, data, fee, nonce);
               ^----------------------------------------------------------------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:464:72: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:474:76: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(tokenOwner != address(0) && tokenOwner == ecrecoverFromSig(keccak256(signingPrefix, hash), sig));
                                                                           ^----------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:479:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(tokenOwner, spender, tokens);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:482:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, feeAccount, fee);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:672:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:677:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, _newOwner);
        ^------------------------------------^
/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:788:9: Warning: Invoking events without "emit" prefix is deprecated.
        BTTSTokenListing(msg.sender, bttsTokenAddress, symbol, name, decimals,
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BTTSLib.ecrecoverFromSig (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#284-301) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:
	Contract BTTSToken has payable functions:
	 - fallback (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#595-596)
	But does not have a function to withdraw the ether
Contract locking ether found in /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:
	Contract BTTSTokenFactory has payable functions:
	 - fallback (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
BTTSToken.BTTSToken.owner (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#512) shadows:
	- BTTSToken.owner (function @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#525-527)
BTTSToken.BTTSToken.symbol (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#512) shadows:
	- BTTSToken.symbol (function @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#542-545)
BTTSToken.BTTSToken.name (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#512-513) shadows:
	- BTTSToken.name (function @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#546-547)
BTTSToken.BTTSToken.decimals (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#513) shadows:
	- BTTSToken.decimals (function @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#547-550)
BTTSToken.BTTSToken.mintable (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#515) shadows:
	- BTTSToken.mintable (function @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#574-575)
BTTSToken.BTTSToken.transferable (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#515) shadows:
	- BTTSToken.transferable (function @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#575-576)
BTTSTokenFactory.verify.owner (local variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#745) shadows:
	- Owned.owner (state variable @ /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#677)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
BTTSLib.ecrecoverFromSig uses assembly (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#284-301)
	- /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#286-300
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#17-18) should be declared external
BTTSToken.totalSupply (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#601-604) should be declared external
BTTSToken.balanceOf (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#604-607) should be declared external
ERC20Interface.balanceOf (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#18-19) should be declared external
ERC20Interface.allowance (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#19-20) should be declared external
BTTSToken.allowance (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#607-611) should be declared external
ERC20Interface.transfer (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#20-21) should be declared external
BTTSToken.transfer (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#611-613) should be declared external
ERC20Interface.approve (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#21-22) should be declared external
BTTSToken.approve (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#613-614) should be declared external
ERC20Interface.transferFrom (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#22-24) should be declared external
BTTSToken.transferFrom (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#614-617) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#33-37) should be declared external
BTTSTokenInterface.approveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#58-60) should be declared external
BTTSToken.approveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#617-618) should be declared external
BTTSTokenInterface.signedTransferHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#63-64) should be declared external
BTTSToken.signedTransferHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#620-623) should be declared external
BTTSToken.signedTransferCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#623-626) should be declared external
BTTSTokenInterface.signedTransferCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#64-65) should be declared external
BTTSTokenInterface.signedTransfer (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#65-67) should be declared external
BTTSToken.signedTransfer (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#626-629) should be declared external
BTTSTokenInterface.signedApproveHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#67-68) should be declared external
BTTSToken.signedApproveHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#629-632) should be declared external
BTTSTokenInterface.signedApproveCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#68-69) should be declared external
BTTSToken.signedApproveCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#632-635) should be declared external
BTTSTokenInterface.signedApprove (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#69-71) should be declared external
BTTSToken.signedApprove (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#635-638) should be declared external
BTTSToken.signedTransferFromHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#638-641) should be declared external
BTTSTokenInterface.signedTransferFromHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#71-72) should be declared external
BTTSTokenInterface.signedTransferFromCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#72-73) should be declared external
BTTSToken.signedTransferFromCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#641-644) should be declared external
BTTSToken.signedTransferFrom (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#644-647) should be declared external
BTTSTokenInterface.signedTransferFrom (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#73-75) should be declared external
BTTSToken.signedApproveAndCallHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#647-652) should be declared external
BTTSTokenInterface.signedApproveAndCallHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#75-76) should be declared external
BTTSToken.signedApproveAndCallCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#652-660) should be declared external
BTTSTokenInterface.signedApproveAndCallCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#76-77) should be declared external
BTTSToken.signedApproveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#660-671) should be declared external
BTTSTokenInterface.signedApproveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#77-79) should be declared external
BTTSToken.mint (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#560-566) should be declared external
BTTSTokenInterface.mint (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#79-81) should be declared external
BTTSToken.unlockAccount (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#570-573) should be declared external
BTTSTokenInterface.unlockAccount (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#81-84) should be declared external
BTTSTokenInterface.disableMinting (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#84) should be declared external
BTTSToken.disableMinting (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#576-579) should be declared external
BTTSTokenInterface.enableTransfers (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#84) should be declared external
BTTSToken.enableTransfers (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#579-580) should be declared external
BTTSLib.init (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#159-177) should be declared external
BTTSLib.transferOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#202-206) should be declared external
BTTSLib.acceptOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#206-211) should be declared external
BTTSLib.transferOwnershipImmediately (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#211-218) should be declared external
BTTSLib.setMinter (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#223-226) should be declared external
BTTSLib.mint (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#227-240) should be declared external
BTTSLib.unlockAccount (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#240-247) should be declared external
BTTSLib.disableMinting (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#247-259) should be declared external
BTTSLib.enableTransfers (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#259-262) should be declared external
BTTSLib.transferAnyERC20Token (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#267-270) should be declared external
BTTSLib.getCheckResultMessage (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#305-331) should be declared external
BTTSLib.transfer (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#333-345) should be declared external
BTTSLib.approve (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#345-349) should be declared external
BTTSLib.transferFrom (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#349-358) should be declared external
BTTSLib.approveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#358-366) should be declared external
BTTSLib.signedTransferCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#370-384) should be declared external
BTTSLib.signedTransfer (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#384-399) should be declared external
BTTSLib.signedApproveCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#402-412) should be declared external
BTTSLib.signedApprove (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#412-426) should be declared external
BTTSLib.signedTransferFromCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#429-445) should be declared external
BTTSLib.signedTransferFrom (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#445-461) should be declared external
BTTSLib.signedApproveAndCallCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#464-475) should be declared external
BTTSLib.signedApproveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#475-500) should be declared external
BTTSToken.owner (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#525-527) should be declared external
BTTSToken.newOwner (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#527-528) should be declared external
BTTSToken.transferOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#528-531) should be declared external
BTTSToken.acceptOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#532-534) should be declared external
BTTSToken.transferOwnershipImmediately (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#534-539) should be declared external
BTTSToken.symbol (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#542-545) should be declared external
BTTSToken.name (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#546-547) should be declared external
BTTSToken.decimals (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#547-550) should be declared external
BTTSToken.minter (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#554-557) should be declared external
BTTSToken.setMinter (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#557-560) should be declared external
BTTSToken.accountLocked (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#566-569) should be declared external
BTTSToken.mintable (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#574-575) should be declared external
BTTSToken.transferable (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#575-576) should be declared external
BTTSToken.nextNonce (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#580-582) should be declared external
BTTSToken.transferAnyERC20Token (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#588-592) should be declared external
BTTSToken.fallback (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#595-596) should be declared external
Owned.transferOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#687-688) should be declared external
Owned.acceptOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#688-693) should be declared external
Owned.transferOwnershipImmediately (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#693-697) should be declared external
BTTSTokenFactory.verify (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#741-753) should be declared external
BTTSTokenFactory.deployBTTSTokenContract (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#793-808) should be declared external
BTTSTokenFactory.numberOfDeployedTokens (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#813-815) should be declared external
BTTSTokenFactory.transferAnyERC20Token (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol) should be declared external
BTTSTokenFactory.fallback (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol:
	- pragma solidity^0.4.18 (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Constant 'BTTSTokenInterface.bttsVersion' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#45) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signingPrefix' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#45-46) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedTransferSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#46-47) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedApproveSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#47-48) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedTransferFromSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#48-49) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedApproveAndCallSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#49-51) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '' of BTTSLib.getCheckResultMessage (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#305) is not in mixedCase
Parameter '' of BTTSLib.signedTransferHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#368) is not in mixedCase
Parameter '' of BTTSLib.signedApproveHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#399) is not in mixedCase
Parameter '' of BTTSLib.signedTransferFromHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#426) is not in mixedCase
Parameter '' of BTTSLib.signedApproveAndCallHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#461) is not in mixedCase
Constant 'BTTSLib.bttsVersion' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#137) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signingPrefix' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#137-139) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedTransferSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#139) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedApproveSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#140) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedTransferFromSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#140-142) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedApproveAndCallSig' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#142-144) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_data' of BTTSToken.approveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#617) is not in mixedCase
Parameter '_data' of BTTSToken.signedApproveAndCallHash (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#647) is not in mixedCase
Parameter '_data' of BTTSToken.signedApproveAndCallCheck (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#654) is not in mixedCase
Parameter '_data' of BTTSToken.signedApproveAndCall (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#664) is not in mixedCase
Function 'BTTSToken.BTTSToken' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#512-518) is not in mixedCase
Parameter '_newOwner' of BTTSToken.transferOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#529) is not in mixedCase
Parameter '_newOwner' of BTTSToken.transferOwnershipImmediately (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#536-538) is not in mixedCase
Parameter '_minter' of BTTSToken.setMinter (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#557-559) is not in mixedCase
Function 'Owned.Owned' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#684-685) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#687-688) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnershipImmediately (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#694) is not in mixedCase
Variable 'BTTSTokenFactory._verify' (/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol#710-711) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0x4ac00f287f36a6aad655281fe1ca6798c9cb727b.sol analyzed (7 contracts), 135 result(s) found