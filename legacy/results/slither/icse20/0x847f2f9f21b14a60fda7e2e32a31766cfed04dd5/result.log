INFO:Slither:Compilation warnings/errors on /unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:144:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PresalePool (address receiverAddr, uint contractCap, uint cap, uint fee) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:169:5: Warning: Use of the "var" keyword is deprecated.
    var c = whitelist[msg.sender];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:197:5: Warning: Use of the "var" keyword is deprecated.
    var c = whitelist[msg.sender];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:220:5: Warning: Use of the "var" keyword is deprecated.
    var c = whitelist[receiver];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:224:5: Warning: Use of the "var" keyword is deprecated.
    var d = distributionMap[tokenAddr];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:259:5: Warning: Use of the "var" keyword is deprecated.
    var c = whitelist[addr];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:306:5: Warning: Use of the "var" keyword is deprecated.
    var c = whitelist[addr];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:317:5: Warning: Use of the "var" keyword is deprecated.
    var c = whitelist[addr];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:318:5: Warning: Use of the "var" keyword is deprecated.
    var d = distributionMap[tokenAddr];
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:365:5: Warning: Use of the "var" keyword is deprecated.
    var d = distributionMap[tokenAddr];    
    ^---^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:168:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require (this.balance <= maxContractBalance);
             ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:179:5: Warning: Invoking events without "emit" prefix is deprecated.
    ContributorBalanceChanged(msg.sender, newBalance);
    ^-----------------------------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:188:5: Warning: Invoking events without "emit" prefix is deprecated.
    EthRefundReceived(msg.sender, msg.value);
    ^--------------------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:203:7: Warning: Invoking events without "emit" prefix is deprecated.
      ContributorBalanceChanged(msg.sender, 0);
      ^--------------------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:235:9: Warning: Invoking events without "emit" prefix is deprecated.
        EthRefunded(receiver,ethAmount);
        ^-----------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:247:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensWithdrawn(receiver,tokenAddr,tokenAmount);
        ^---------------------------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:285:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require (amount >= this.balance);
                       ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:297:42: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      remaining = maxContractBalance.sub(this.balance);
                                         ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:301:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    return (maxContractBalance,this.balance,remaining);
                               ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:311:53: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (cap.sub(c.balance) > maxContractBalance.sub(this.balance)) return (c.balance, cap, maxContractBalance.sub(this.balance));
                                                    ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:311:115: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (cap.sub(c.balance) > maxContractBalance.sub(this.balance)) return (c.balance, cap, maxContractBalance.sub(this.balance));
                                                                                                                  ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:334:5: Warning: Invoking events without "emit" prefix is deprecated.
    ReceiverAddressSet(addr);
    ^----------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:345:41: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (amountInWei == 0) amountInWei = this.balance;
                                        ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:346:63: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require (contributionMin <= amountInWei && amountInWei <= this.balance);
                                                              ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:347:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    finalBalance = this.balance;
                   ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:349:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (this.balance > 0) ethRefundAmount.push(this.balance);
        ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:349:48: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (this.balance > 0) ethRefundAmount.push(this.balance);
                                               ^----------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:351:5: Warning: Invoking events without "emit" prefix is deprecated.
    PoolSubmitted(receiverAddress, amountInWei);
    ^-----------------------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:379:5: Warning: Invoking events without "emit" prefix is deprecated.
    ERC223Received (from, value);
    ^--------------------------^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:348:58: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
    require (receiverAddress.call.value(amountInWei).gas(msg.gas.sub(5000))());
                                                         ^-----^
/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:378:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback (address from, uint value, bytes data) public {
                                                    ^--------^

INFO:Detectors:[91m
Reentrancy in PresalePool._withdraw (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#224-256):
	External calls:
	- require(bool)(d.token.transfer(receiver,tokenAmount)) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#254)
	External calls sending eth:
	- receiver.transfer(ethAmount) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#241)
	State variables written after the call(s):
	- distributionMap (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#255)
Reentrancy in PresalePool.submitPool (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#347-357):
	External calls:
	- require(bool)(receiverAddress.call.value(amountInWei).gas(msg.gas.sub(5000))()) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#355-356)
	State variables written after the call(s):
	- contractStage (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#356-357)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Reentrancy in PresalePool.enableTokenWithdrawals (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#367-382):
	External calls:
	- amount = d.token.balanceOf(this).sub(d.balanceRemaining) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#377-378)
	- require(bool)(d.token.transfer(owner,_applyPct(amount,feePct))) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#378-382)
	- amount = d.token.balanceOf(this).sub(d.balanceRemaining) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol)
	- d.balanceRemaining = d.token.balanceOf(this) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol)
	State variables written after the call(s):
	- distributionMap (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in PresalePool._ethDeposit (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#167-185):
	External calls:
	- require(bool)(! whitelistIsActive || whitelistContract.isPaidUntil(msg.sender) > now) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#168-170)
	State variables written after the call(s):
	- contributionCap (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#178-179)
	- nextCapTime (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#179)
	- whitelist (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#183-184)
Reentrancy in PresalePool.submitPool (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#347-357):
	External calls:
	- require(bool)(receiverAddress.call.value(amountInWei).gas(msg.gas.sub(5000))()) (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#355-356)
	State variables written after the call(s):
	- ethRefundAmount (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#356)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#355-356:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
PresalePool.fallback (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#163-166) should be declared external
PresalePool.withdraw (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#201-211) should be declared external
PresalePool.withdrawFor (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#215-218) should be declared external
PresalePool.modifyIndividualCap (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#264-269) should be declared external
PresalePool.modifyCap (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#272-276) should be declared external
PresalePool.modifyNextCap (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#281-286) should be declared external
PresalePool.modifyMaxContractBalance (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#290-295) should be declared external
PresalePool.toggleWhitelist (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#295-297) should be declared external
PresalePool.checkPoolBalance (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#304-307) should be declared external
PresalePool.checkContributorBalance (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#309-319) should be declared external
PresalePool.checkAvailableTokens (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#321-328) should be declared external
PresalePool.setReceiverAddress (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#338-339) should be declared external
PresalePool.submitPool (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#347-357) should be declared external
PresalePool.enableTokenWithdrawals (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#367-382) should be declared external
PresalePool.tokenFallback (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol:
	- pragma solidity^0.4.19 (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in PresalePool.submitPool (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#347-357):
	-require(bool)(receiverAddress.call.value(amountInWei).gas(msg.gas.sub(5000))()) /unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#355-356
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'PresalePool._toPct' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#134-138) is not in mixedCase
Function 'PresalePool._applyPct' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#142-144) is not in mixedCase
Function 'PresalePool.PresalePool' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#146-155) is not in mixedCase
Function 'PresalePool._ethDeposit' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#167-185) is not in mixedCase
Function 'PresalePool._ethRefund' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#187-193) is not in mixedCase
Function 'PresalePool._withdraw' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#224-256) is not in mixedCase
Constant 'PresalePool.contributionMin' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'PresalePool.maxGasPrice' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#67-68) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'PresalePool.whitelistContract' (/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol#68-71) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x847f2f9f21b14a60fda7e2e32a31766cfed04dd5.sol analyzed (4 contracts), 32 result(s) found