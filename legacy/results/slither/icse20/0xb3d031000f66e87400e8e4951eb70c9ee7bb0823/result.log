INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:36:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:51:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // \u68c0\u67e5\u8fd9\u53d1\u9001\u8005\u662f\u5426\u6709\u8db3\u591f\u591a\u7684\u4ee4\u724c
                                            ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:52:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // \u68c0\u67e5\u6ea2\u51fa
                                                      ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:77:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:78:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:79:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:89:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     
        ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:102:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TlzsToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:111:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // \u68c0\u67e5\u53d1\u9001\u8005\u662f\u5426\u6709\u8db3\u591f\u591a\u7684\u4ee4\u724c
                                            ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:112:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // \u68c0\u67e5\u6ea2\u51fa
                                                      ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:113:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // \u68c0\u67e5\u51bb\u7ed3\u72b6\u6001
                                       ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:122:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:123:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:124:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:125:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:55:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // \u4e8b\u4ef6\u3002\u901a\u77e5\u6240\u6709\u6b63\u5728\u76d1\u542c\u8fd9\u4e2a\u5408\u7ea6\u7684\u7528\u6237
        ^-------------------------------^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:83:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:116:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // \u4e8b\u4ef6\u901a\u77e5
        ^-------------------------------^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:129:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:135:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:4:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:18:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:59:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:76:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:102:5: Warning: No visibility specified. Defaulting to "public". 
    function TlzsToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:133:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#21-110) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#53-66)
TlzsToken (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#110-137) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#120-127)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
token.standard should be constant (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#22-24)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#10:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#54:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#121:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#122-123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#133:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#135-136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#13-18) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#18-20) should be declared external
token.transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#53-66) should be declared external
TlzsToken.transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#120-127) should be declared external
token.approveAndCall (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#75-79) should be declared external
token.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#80-106) should be declared external
TlzsToken.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#128-137) should be declared external
token.fallback (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#107-110) should be declared external
TlzsToken.freezeAccount (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#1-18) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#18-20) is not in CapWords
Contract 'token' (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#21-110) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#53) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#53) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#68) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#68) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#76) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#76) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#76) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#80) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#80) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#80-81) is not in mixedCase
Parameter '_to' of TlzsToken.transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#120-121) is not in mixedCase
Parameter '_value' of TlzsToken.transfer (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#121) is not in mixedCase
Parameter '_from' of TlzsToken.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#129) is not in mixedCase
Parameter '_to' of TlzsToken.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#129) is not in mixedCase
Parameter '_value' of TlzsToken.transferFrom (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#129-130) is not in mixedCase
Function 'TlzsToken.TlzsToken' (/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol#114-117) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/30/0xb3d031000f66e87400e8e4951eb70c9ee7bb0823.sol analyzed (4 contracts), 45 result(s) found