INFO:Slither:Compilation warnings/errors on /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:85:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:195:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:200:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:205:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:463:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:475:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:479:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:485:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:492:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:528:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:534:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:539:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:549:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:555:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:560:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:566:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:585:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:591:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:616:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:644:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:667:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:675:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:692:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:703:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:704:100: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[reciever].minCap && tokenAmountOf[reciever] == 0) throw;
                                                                                                   ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:715:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:719:92: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[addr].minCap && tokenAmountOf[addr] == 0) throw;
                                                                                           ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:785:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:817:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:843:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:858:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:912:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1021:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1077:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1084:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1182:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsaleExt(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:105:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:594:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:683:7: Warning: Invoking events without "emit" prefix is deprecated.
      Whitelisted(addr, status, minCap, maxCap);
      ^---------------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:685:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistItemChanged(addr, status, minCap, maxCap);
      ^------------------------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:796:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(startsAt);
    ^-----------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:828:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:997:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1007:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1024:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1142:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1150:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1225:5: Warning: Invoking events without "emit" prefix is deprecated.
    MaximumSellableTokensChanged(maximumSellableTokens);
    ^-------------------------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:85:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:146:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:152:3: Warning: No visibility specified. Defaulting to "public". 
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:159:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:164:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:245:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:254:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:305:3: Warning: No visibility specified. Defaulting to "public". 
  function distributeReservedTokens(uint reservedTokensDistributionBatch);
  ^----------------------------------------------------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:308:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:463:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:777:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:994:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1001:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1011:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1015:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1028:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1182:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsaleExt(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1202:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1202:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1202:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:11:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:17:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:24:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:29:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:35:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:39:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:43:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:47:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:146:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:152:3: Warning: Function state mutability can be restricted to pure
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:159:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:164:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:237:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:245:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:254:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:294:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:902:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:990:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:1209:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return (tokenAmountOf[addr].plus(tokenAmount)) > maxCap;
            ^-----------------------------------^

INFO:Detectors:[93m
Reentrancy in CrowdsaleExt.finalize (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#662-676):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#674)
	State variables written after the call(s):
	- finalized (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#675)
Reentrancy in CrowdsaleExt.investInternal (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#536-619):
	External calls:
	- getState() == State.Funding (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#545-558)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#563-565)
	- updateInheritedEarlyParticipantWhitelist(receiver,tokenAmount) (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#581-584)
	State variables written after the call(s):
	- tokenAmountOf (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#598-601)
	- tokensSold (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#605-607)
	- weiRaised (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#602-605)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#480-523):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#500-504)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#516)
	- isUpdatable (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#520)
	- isWhiteListed (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#520-523)
	- minimumFundingGoal (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#519-520)
	- multisigWallet (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#504)
	- startsAt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#510-513)
Reentrancy in CrowdsaleExt.investInternal (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#536-619):
	External calls:
	- getState() == State.Funding (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#545-558)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#563-565)
	- updateInheritedEarlyParticipantWhitelist(receiver,tokenAmount) (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#581-584)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#594-598)
	- investorCount (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#593)
Reentrancy in MintedTokenCappedCrowdsaleExt.setMaximumSellableTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol):
	External calls:
	- assert(bool)(! lastTierCntrct.finalized()) (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol)
	State variables written after the call(s):
	- maximumSellableTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleExt.getState (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#922-932) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#930-932)
	- block.timestamp < startsAt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#929-932)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#378-380)
CrowdsaleExt.joinedCrowdsalesLenMax should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#419-421)
CrowdsaleExt.ownerTestValue should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#448)
FinalizeAgent.reservedTokensAreDistributed should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#301-303)
FractionalERC20Ext.decimals should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#358)
FractionalERC20Ext.minCap should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#358-360)
MintableTokenExt.mintingFinished should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1088)
PricingStrategy.tier should be constant (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#243)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#209:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#211-212:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#214:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#506-507:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#509-510:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#519:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#545:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#554:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#558:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#570:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#577:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#581:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#588:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#610-611:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#613:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#631:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#667:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#691:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#695:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#708:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#720:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#721:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#729:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#741:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#812:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#848:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#874:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#891:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#936:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1061:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1116:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#62-63) should be declared external
StandardToken.balanceOf (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1042-1047) should be declared external
StandardToken.transfer (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1019-1025) should be declared external
ERC20Basic.transfer (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#63-64) should be declared external
Ownable.transferOwnership (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#105-111) should be declared external
SafeMathLibExt.times (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#152-159) should be declared external
SafeMathLibExt.divides (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#159-165) should be declared external
SafeMathLibExt.minus (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#165-173) should be declared external
SafeMathLibExt.plus (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#173-175) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#245-250) should be declared external
PricingStrategy.isSane (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#252-254) should be declared external
PricingStrategy.isPresalePurchase (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#262-265) should be declared external
PricingStrategy.updateRate (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#266-267) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#278-284) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#303-305) should be declared external
FinalizeAgent.isSane (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#312-314) should be declared external
FinalizeAgent.distributeReservedTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#314) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#326-327) should be declared external
StandardToken.allowance (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1066-1071) should be declared external
ERC20.allowance (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#334-340) should be declared external
ERC20.transferFrom (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#340-350) should be declared external
StandardToken.transferFrom (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1025-1042) should be declared external
ERC20.approve (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#350-354) should be declared external
StandardToken.approve (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1049-1066) should be declared external
CrowdsaleExt.buy (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#626-629) should be declared external
CrowdsaleExt.distributeReservedTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#629-638) should be declared external
CrowdsaleExt.areReservedTokensDistributed (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#638-643) should be declared external
CrowdsaleExt.canDistributeReservedTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#644-658) should be declared external
CrowdsaleExt.finalize (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#662-676) should be declared external
CrowdsaleExt.setFinalizeAgent (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#682-691) should be declared external
CrowdsaleExt.setEarlyParticipantWhitelistMultiple (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#704-718) should be declared external
CrowdsaleExt.updateEarlyParticipantWhitelist (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#727-750) should be declared external
CrowdsaleExt.whitelistedParticipantsLength (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#759-762) should be declared external
CrowdsaleExt.updateJoinedCrowdsalesMultiple (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#790-802) should be declared external
CrowdsaleExt.setStartsAt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#802-823) should be declared external
CrowdsaleExt.setEndsAt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#836-854) should be declared external
CrowdsaleExt.setMultisig (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#888-892) should be declared external
CrowdsaleExt.isFinalizerSane (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#896-897) should be declared external
CrowdsaleExt.isPricingSane (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#902-910) should be declared external
CrowdsaleExt.isCrowdsale (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#932-934) should be declared external
StandardToken.isToken (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1018-1019) should be declared external
MintableTokenExt.finalizeReservedAddress (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1116-1121) should be declared external
MintableTokenExt.areTokensDistributedForAddress (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1124-1125) should be declared external
MintableTokenExt.getReservedTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1126-1134) should be declared external
MintableTokenExt.getReservedPercentageUnit (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1134-1137) should be declared external
MintableTokenExt.getReservedPercentageDecimals (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1137-1141) should be declared external
MintableTokenExt.setReservedTokensListMultiple (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1141-1162) should be declared external
MintableTokenExt.mint (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1171-1185) should be declared external
MintableTokenExt.setMintAgent (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1187-1192) should be declared external
MintedTokenCappedCrowdsaleExt.setMaximumSellableTokens (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol) should be declared external
MintedTokenCappedCrowdsaleExt.updateRate (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#4-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#91-93) is not in mixedCase
Function 'CrowdsaleExt.CrowdsaleExt' (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#480-523) is not in mixedCase
Parameter '_name' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#482-484) is not in mixedCase
Parameter '_token' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#484-485) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#485-488) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#488-490) is not in mixedCase
Parameter '_start' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#490-491) is not in mixedCase
Parameter '_end' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#491) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#491-492) is not in mixedCase
Parameter '_isUpdatable' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#492-495) is not in mixedCase
Parameter '_isWhiteListed' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#495) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.setPricingStrategy (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#865) is not in mixedCase
Variable 'CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#378-380) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1044-1045) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1020) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1020) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1069) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1069) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1028) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1028) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1028) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1049) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1049-1051) is not in mixedCase
Function 'MintedTokenCappedCrowdsaleExt.MintedTokenCappedCrowdsaleExt' (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1212-1228) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsaleExt.MintedTokenCappedCrowdsaleExt (/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol#1218-1219) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x22622d0c254ad9b6046911a744b0bdf815aabe26.sol analyzed (13 contracts), 117 result(s) found