INFO:Slither:Compilation warnings/errors on /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:87:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:335:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:383:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < milestones.p1) throw;
                                 ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:384:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= milestones.p6) throw;
                                  ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:385:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:388:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (getTotalValue() + msg.value > SAFETY_LIMIT) throw; 
                                                        ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:396:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!wallet.send(msg.value)) throw;
                                     ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:599:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:614:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (etherPrice == 0) throw;
                             ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:627:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(retEther)) throw;
                                            ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:676:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress == 0x0) throw;
                                           ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:710:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != virtualExchangeAddress) throw;
                                                ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:807:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ableToIssueTokens) throw;
                               ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:810:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(this) > 0) throw;
                                 ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:813:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:817:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (requestValue > PROPOSAL_FUNDS_TH * percent) throw;
                                                        ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:856:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:860:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:867:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            requestValue     >  PROPOSAL_FUNDS_TH * percent) throw;
                                                             ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:907:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:910:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:913:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= proposals[id].votindEndTS) throw;
                                              ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:916:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].voted[msg.sender]) throw;
                                             ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:949:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:950:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].submitter != msg.sender) throw;
                                                   ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:953:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < proposals[id].votindEndTS) throw;
                                             ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:957:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:961:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].votesObjecting  > objectionThreshold) throw;
                                                                ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:998:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1021:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1026:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (eventInfo.getEventEnd() + 12 weeks)) throw;
                                                        ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1031:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            lastImpeachmentProposal.votindEndTS +  2 weeks > now) throw;
                                                                  ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1053:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.newExecutive == 0x0) throw;
                                                         ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1057:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1060:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.voted[msg.sender]) throw;
                                                       ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1063:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.votindEndTS + 2 weeks <= now) throw;
                                                                  ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1099:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress != 0x0) throw;
                                           ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1178:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1190:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1485216000) throw;
                              ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1193:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1202:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1485216000) throw;
                              ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1205:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1215:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1485216000) throw;
                              ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1218:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1232:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyBeforeEnd() { if (now  >=  eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1233:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterEnd()  { if (now  <   eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1235:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterTradingStart()  { if (now  < eventInfo.getTradingStart()) throw; _; }
                                                                                ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1237:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyExecutive()     { if (msg.sender != executive) throw; _; }
                                                                ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1239:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyIfAbleToIssueTokens()  { if (!ableToIssueTokens) throw; _; } 
                                                                  ^---^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:57:46: Warning: This declaration shadows an existing declaration.
    function totalSupply() constant returns (uint256 totalSupply){
                                             ^-----------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:57:5: The shadowed declaration is here:
    function totalSupply() constant returns (uint256 totalSupply){
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:110:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, to, value);
            ^-----------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:148:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(from, to, value);
            ^-----------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:193:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, value);
        ^----------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:353:18: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        balances[0x342e62732b76875da9305083ea8ae63125a4e667] = 16110893000;
                 ^----------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:639:9: Warning: Invoking events without "emit" prefix is deprecated.
        BuyForEtherTransaction(msg.sender, collectedEther, totalSupplyVar, etherPrice, tokens);
        ^------------------------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:654:10: Warning: Invoking events without "emit" prefix is deprecated.
         PriceHKGChange(qtyForOneHKG, preferedQtySold, totalSupplyVar);
         ^-----------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:688:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(this, virtualExchangeAddress, qtyToEmit);
        ^-----------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:691:9: Warning: Invoking events without "emit" prefix is deprecated.
        DstTokensIssued(hkgPrice, preferedQtySold, totalSupplyVar, qtyToEmit);
        ^-------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:728:7: Warning: Invoking events without "emit" prefix is deprecated.
      BuyForHKGTransaction(sender, preferedQtySold, totalSupplyVar, hkgPrice, tokensQty);
      ^--------------------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:753:10: Warning: Invoking events without "emit" prefix is deprecated.
         DstTokensIssued(qtyForOneEther, totalSupplyVar, totalSupplyVar, qtyToEmit);
         ^------------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:767:10: Warning: Invoking events without "emit" prefix is deprecated.
         NewEtherPrice(qtyForOneEther);
         ^---------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:779:9: Warning: Invoking events without "emit" prefix is deprecated.
        DisableTokenIssuance();
        ^--------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:793:9: Warning: Invoking events without "emit" prefix is deprecated.
        BurnedAllRemainedTokens();
        ^-----------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:820:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (requestValue > this.balance) 
                           ^----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:821:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            requestValue = this.balance;    
                           ^----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:825:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:825:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:833:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:877:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:877:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:887:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:928:10: Warning: Invoking events without "emit" prefix is deprecated.
         ObjectedVote(id, msg.sender, votes);         
         ^---------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:975:12: Warning: Invoking events without "emit" prefix is deprecated.
           EtherRedeemAccepted(proposals[id].submitter, proposals[id].value);                              
           ^---------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1002:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        bool success = msg.sender.send(this.balance);        
                                       ^----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1041:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentProposed(msg.sender, urlDetails, now + 2 weeks, newExecutive);
        ^----------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1070:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentSupport(msg.sender, votingRights[msg.sender]);
        ^------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1079:13: Warning: Invoking events without "emit" prefix is deprecated.
            ImpeachmentAccepted(executive);
            ^----------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1108:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1193:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1205:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1218:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance);
    ^-------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:29:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success);
    ^----------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 totalSupply){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:87:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:131:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:167:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:184:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:210:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:239:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventStart() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:246:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventEnd() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function getVotingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:263:5: Warning: No visibility specified. Defaulting to "public". 
    function getTradingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:270:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:335:5: Warning: No visibility specified. Defaulting to "public". 
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:364:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:381:5: Warning: No visibility specified. Defaulting to "public". 
    function createHKG(address holder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:404:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:450:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:461:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:470:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalValue() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:599:5: Warning: No visibility specified. Defaulting to "public". 
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:610:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:651:6: Warning: No visibility specified. Defaulting to "public". 
     function setHKGPrice(uint qtyForOneHKG) onlyExecutive  {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:668:5: Warning: No visibility specified. Defaulting to "public". 
    function issuePreferedTokens(uint qtyForOneHKG, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:706:5: Warning: No visibility specified. Defaulting to "public". 
    function buyForHackerGold(uint hkgValue) onlyBeforeEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:743:5: Warning: No visibility specified. Defaulting to "public". 
    function issueTokens(uint qtyForOneEther, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:762:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrice(uint qtyForOneEther) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:776:5: Warning: No visibility specified. Defaulting to "public". 
    function disableTokenIssuance() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:787:5: Warning: No visibility specified. Defaulting to "public". 
    function burnRemainToken() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:803:5: Warning: No visibility specified. Defaulting to "public". 
    function submitEtherProposal(uint requestValue, string url) onlyAfterEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:848:5: Warning: No visibility specified. Defaulting to "public". 
    function submitHKGProposal(uint requestValue, string url) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:902:6: Warning: No visibility specified. Defaulting to "public". 
     function objectProposal(bytes32 id){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:904:9: Warning: Unused local variable.
        Proposal memory proposal = proposals[id];
        ^----------------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:932:6: Warning: No visibility specified. Defaulting to "public". 
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:947:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemProposalFunds(bytes32 id) onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:972:12: Warning: Unused local variable.
           bool success = proposals[id].submitter.send(proposals[id].value); 
           ^----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:993:5: Warning: No visibility specified. Defaulting to "public". 
    function getAllTheFunds() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1002:9: Warning: Unused local variable.
        bool success = msg.sender.send(this.balance);        
        ^----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1017:6: Warning: No visibility specified. Defaulting to "public". 
     function submitImpeachmentProposal(string urlDetails, address newExecutive){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1050:5: Warning: No visibility specified. Defaulting to "public". 
    function supportImpeachment(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1090:5: Warning: No visibility specified. Defaulting to "public". 
    function votingRightsOf(address _owner) constant returns (uint256 result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1094:5: Warning: No visibility specified. Defaulting to "public". 
    function getPreferedQtySold() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1098:5: Warning: No visibility specified. Defaulting to "public". 
    function setVirtualExchange(address virtualExchangeAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1103:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGOwned() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1107:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherValue() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1111:5: Warning: No visibility specified. Defaulting to "public". 
    function getExecutive() constant returns (address result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1115:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1119:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1123:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTName() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1127:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTNameBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1131:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbol() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1135:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbolBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1139:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() constant returns (address result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1143:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1147:5: Warning: No visibility specified. Defaulting to "public". 
    function getCollectedEther() constant returns (uint results) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1151:5: Warning: No visibility specified. Defaulting to "public". 
    function getCounterProposals() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1155:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalIdByIndex(uint i) constant returns (bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1159:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalObjectionByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1163:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalValueByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1167:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentUrlDetails() constant returns (string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1172:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentVotesSupporting() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1176:5: Warning: No visibility specified. Defaulting to "public". 
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1187:5: Warning: No visibility specified. Defaulting to "public". 
    function setVoteRight(address voter, uint ammount){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1199:5: Warning: No visibility specified. Defaulting to "public". 
    function setBalance(address owner, uint ammount){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1211:5: Warning: No visibility specified. Defaulting to "public". 
    function setInternalInfo(address fixExecutive, uint fixTotalSupply, uint256 fixPreferedQtySold, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:932:6: Warning: Function state mutability can be restricted to view
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1128:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(name);
               ^-----------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1136:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(symbol);
               ^-------------^
/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:1176:5: Warning: Function state mutability can be restricted to pure
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in DSTContract.redeemProposalFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#974-1011):
	External calls:
	- hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#995-996)
	External calls sending eth:
	- success = proposals[id].submitter.send(proposals[id].value) (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1000-1002)
	State variables written after the call(s):
	- proposals (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1010-1011)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
DSTContract.objectProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#932-961) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.objectProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#932-961) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#974-1011) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.objectProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#932-961) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#974-1011) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.supportImpeachment (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1076-1123) uses a dangerous strict equality:
	- lastImpeachmentProposal.newExecutive == 0x0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#869-920):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#897-898)
	- requestValue = getHKGOwned() (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#898)
	State variables written after the call(s):
	- counterProposals (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#913)
	- timeOfLastProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#914-915)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
DSTContract.redeemProposalFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#974-1011) does not use the value returned by external calls:
	-hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#995-996)
DSTContract.getAllTheFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1023-1035) does not use the value returned by external calls:
	-hackerGold.transfer(msg.sender,getHKGOwned()) (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1034-1035)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
TokenInterface.totalSupply.totalSupply (local variable @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#58-61) shadows:
	- TokenInterface.totalSupply (function @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#57-62)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#869-920):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#897-898)
	- requestValue = getHKGOwned() (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#898)
	State variables written after the call(s):
	- listProposals (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#912-913)
	- proposals (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#910-912)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSTContract.convert uses assembly (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1212-1219)
	- /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1218-1219
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DSTContract.DECIMAL_ZEROS should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#524-525)
DSTContract.PROPOSAL_FUNDS_TH should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#529)
DSTContract.PROPOSAL_LIFETIME should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#527)
DSTContract.decimals should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#553-554)
EventInfo.eventStart should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#239)
HackerGold.BASE_PRICE should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#311-312)
HackerGold.DECIMAL_ZEROS should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#321-323)
HackerGold.FIN_PRICE should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#315-316)
HackerGold.MID_PRICE should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#312-313)
HackerGold.SAFETY_LIMIT should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#316-318)
HackerGold.decimals should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#305-306)
HackerGold.name should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#302-304)
HackerGold.symbol should be constant (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#307-309)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:
	- Version used: ['^0.4.0', '^0.4.2', '^0.4.6']
	- /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1 declares pragma solidity^0.4.0
	- /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#69-70 declares pragma solidity^0.4.2
	- /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#229-230 declares pragma solidity^0.4.6
	- /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#288 declares pragma solidity^0.4.0
	- /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#487 declares pragma solidity^0.4.6
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#396:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#399-400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#402-403:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#412:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#635:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#653-654:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#700:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#737:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#828:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#831-832:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#833:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#842:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#848-849:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#880:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#884:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#895:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#902-904:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#942:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#943:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#946-947:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#949:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#975:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#978:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#983-984:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#985:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#988:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1029:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1050:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1057:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1062:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1083-1084:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1088-1089:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1091:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1098:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1143:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1217:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1225-1226:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1232:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1235-1236:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1239:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1249:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1257:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1260:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1264:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1268-1269:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.approve (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#189-204) should be declared external
TokenInterface.approve (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#42-46) should be declared external
StandardToken.allowance (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#221-229) should be declared external
TokenInterface.allowance (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#55-57) should be declared external
TokenInterface.totalSupply (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#57-62) should be declared external
EventInfo.getEventStart (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#246-252) should be declared external
EventInfo.getEventEnd (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#255-260) should be declared external
EventInfo.getVotingStart (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#263-268) should be declared external
EventInfo.getTradingStart (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#271-282) should be declared external
EventInfo.getNow (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#283-287) should be declared external
HackerGold.fallback (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#376) should be declared external
HackerGold.getTotalSupply (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#468-470) should be declared external
HackerGold.getNow (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#480-482) should be declared external
DSTContract.fallback (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#630-667) should be declared external
DSTContract.setHKGPrice (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#670-674) should be declared external
DSTContract.issuePreferedTokens (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#684-715) should be declared external
DSTContract.buyForHackerGold (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#728-753) should be declared external
DSTContract.issueTokens (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#763-784) should be declared external
DSTContract.setEtherPrice (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#789-799) should be declared external
DSTContract.disableTokenIssuance (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#803-804) should be declared external
DSTContract.burnRemainToken (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#809-815) should be declared external
DSTContract.submitEtherProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#821-860) should be declared external
DSTContract.submitHKGProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#869-920) should be declared external
DSTContract.objectProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#932-961) should be declared external
DSTContract.redeemProposalFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#974-1011) should be declared external
DSTContract.getAllTheFunds (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1023-1035) should be declared external
DSTContract.submitImpeachmentProposal (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1041-1072) should be declared external
DSTContract.supportImpeachment (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1076-1123) should be declared external
DSTContract.votingRightsOf (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1128-1134) should be declared external
DSTContract.getPreferedQtySold (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1135-1139) should be declared external
DSTContract.setVirtualExchange (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1139-1144) should be declared external
DSTContract.getEtherValue (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1148-1152) should be declared external
DSTContract.getExecutive (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1152-1155) should be declared external
DSTContract.getHKGPrice (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1156-1159) should be declared external
DSTContract.getEtherPrice (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1159-1163) should be declared external
DSTContract.getDSTName (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1163-1164) should be declared external
DSTContract.getDSTNameBytes (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1165-1167) should be declared external
DSTContract.getDSTSymbol (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1168-1172) should be declared external
DSTContract.getDSTSymbolBytes (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1172-1174) should be declared external
DSTContract.getAddress (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1176-1177) should be declared external
DSTContract.getTotalSupply (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1178-1182) should be declared external
DSTContract.getCollectedEther (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1183-1187) should be declared external
DSTContract.getCounterProposals (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1187-1192) should be declared external
DSTContract.getProposalIdByIndex (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1192-1195) should be declared external
DSTContract.getProposalObjectionByIndex (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1195-1201) should be declared external
DSTContract.getProposalValueByIndex (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1201-1204) should be declared external
DSTContract.getCurrentImpeachmentUrlDetails (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1205-1210) should be declared external
DSTContract.getCurrentImpeachmentVotesSupporting (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1210-1212) should be declared external
DSTContract.setVoteRight (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1221-1232) should be declared external
DSTContract.setBalance (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1233-1239) should be declared external
DSTContract.setInternalInfo (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1243-1253) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol:
	- pragma solidity^0.4.0 (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1): it allows old versions
	- pragma solidity^0.4.2 (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#69-70): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#229-230): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#288): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#487): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#92-93) is not in mixedCase
Struct 'HackerGold.milestones_struct' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#331-334) is not in CapWords
Function 'HackerGold.HackerGold' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#344-372) is not in mixedCase
Variable 'HackerGold.BASE_PRICE' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#311-312) is not in mixedCase
Variable 'HackerGold.MID_PRICE' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#312-313) is not in mixedCase
Variable 'HackerGold.FIN_PRICE' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#315-316) is not in mixedCase
Variable 'HackerGold.SAFETY_LIMIT' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#316-318) is not in mixedCase
Variable 'HackerGold.DECIMAL_ZEROS' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#321-323) is not in mixedCase
Function 'DSTContract.DSTContract' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#619-628) is not in mixedCase
Parameter '_owner' of DSTContract.votingRightsOf (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#1131) is not in mixedCase
Variable 'DSTContract.DECIMAL_ZEROS' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#524-525) is not in mixedCase
Variable 'DSTContract.PROPOSAL_LIFETIME' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#527) is not in mixedCase
Variable 'DSTContract.PROPOSAL_FUNDS_TH' (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#529) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
EventInfo.HACKATHON_5_WEEKS (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#235-237) is never used in EventInfo
DSTContract.enumDeclaration (/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol#571-572) is never used in DSTContract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/16/0xded97837303f375c7568f55360bd3b951b8195ab.sol analyzed (5 contracts), 127 result(s) found