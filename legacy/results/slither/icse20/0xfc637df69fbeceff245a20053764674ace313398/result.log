INFO:Slither:Compilation warnings/errors on /unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:
[91m/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:33:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
 ... pragma solidity >=0.4.1 <=0.4.20; ... 
     ^-------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:942:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1058:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1061:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1079:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1137:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1232:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ScriptCallable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1280:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function RandomExample() payable
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1493:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:226:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.
        return x * (2 ** y);
                    ^----^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:982:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:982:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1014:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1017:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1032:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1094:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1094:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1094:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1094:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1094:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1112:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1112:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1323:9: Warning: Invoking events without "emit" prefix is deprecated.
        Bet(msg.sender, gameIndex, msg.value);
        ^-----------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1342:9: Warning: Invoking events without "emit" prefix is deprecated.
        Bet(msg.sender, gameIndex, msg.value);
        ^-----------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1361:34: Warning: "sha3" has been deprecated in favour of "keccak256"
        uint randomNumber = uint(sha3(_result)) % totalJackpotEven;
                                 ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1361:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint randomNumber = uint(sha3(_result)) % totalJackpotEven;
                                 ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1361:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        uint randomNumber = uint(sha3(_result)) % totalJackpotEven;
                                 ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1370:17: Warning: Invoking events without "emit" prefix is deprecated.
                Win(player, gameIndex, betsEven[player], totalJackpotEven);
                ^--------------------------------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1383:34: Warning: "sha3" has been deprecated in favour of "keccak256"
        uint randomNumber = uint(sha3(_result)) % totalJackpotOdd;
                                 ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1383:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uint randomNumber = uint(sha3(_result)) % totalJackpotOdd;
                                 ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1383:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        uint randomNumber = uint(sha3(_result)) % totalJackpotOdd;
                                 ^-----------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1392:17: Warning: Invoking events without "emit" prefix is deprecated.
                Win(player, gameIndex, betsOdd[player], totalJackpotOdd);
                ^------------------------------------------------------^
/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol:1478:13: Warning: Invoking events without "emit" prefix is deprecated.
            ProofFailed(gameIndex);
            ^--------------------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/14/0xfc637df69fbeceff245a20053764674ace313398.sol analyzed (0 contracts), 0 result(s) found