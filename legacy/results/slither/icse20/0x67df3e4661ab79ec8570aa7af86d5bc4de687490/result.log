INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:770:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:886:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:889:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:907:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:965:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1104:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Dice() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1112:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isStopped) throw;
                       ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1117:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (owner != msg.sender) throw;
                                 ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1124:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        ) throw;//Cannot cancel
          ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1142:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newOwner == address(0x0)) throw;
                                      ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1172:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(this.balance - profit < getBetWaitEndEther()) throw;
                                                         ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1204:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1246:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (owner != msg.sender) throw;
                                     ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1327:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1332:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(bets[betid].playerAddressA == address(0x0)) throw;
                                                       ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1333:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(bets[betid].playerAddressB == address(0x0)) throw;
                                                       ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1334:60: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(bets[betid].betState != BET_STATE_WAITORACLIZE) throw;
                                                           ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1405:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1501:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(start >= bets.length) throw;      
                                 ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1502:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(length == 0) throw;  
                        ^---^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:810:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:810:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:842:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:845:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:860:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:922:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:922:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:922:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:922:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:922:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:940:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:940:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1172:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if(this.balance - profit < getBetWaitEndEther()) throw;
           ^----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1181:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance - getBetWaitEndEther());
                       ^----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1221:9: Warning: Invoking events without "emit" prefix is deprecated.
        LOG_SET_SEND_ERROR_VALUE(player,value);
        ^------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1337:9: Warning: Invoking events without "emit" prefix is deprecated.
        LOG_ORACLIZE_CALLBACK(betid,_queryId,_result,_proof);
        ^--------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1345:38: Warning: "sha3" has been deprecated in favour of "keccak256"
            uint randomNumber = uint(sha3(_result)) % maxRange; // this is an efficient way to get the uint out in the [0, maxRange] range
                                     ^-----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1345:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint randomNumber = uint(sha3(_result)) % maxRange; // this is an efficient way to get the uint out in the [0, maxRange] range
                                     ^-----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1345:38: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            uint randomNumber = uint(sha3(_result)) % maxRange; // this is an efficient way to get the uint out in the [0, maxRange] range
                                     ^-----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1377:21: Warning: Invoking events without "emit" prefix is deprecated.
                    LOG_SEND_ERROR(betid,win,winAmount);
                    ^---------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1384:21: Warning: Invoking events without "emit" prefix is deprecated.
                    LOG_SEND_ERROR(betid,lose,1);                    
                    ^--------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1489:13: Warning: Invoking events without "emit" prefix is deprecated.
            LOG_SEND_ERROR(betid,receiver,cancelAmount);            
            ^-----------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:54:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:90:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:129:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:129:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:129:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:129:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1104:5: Warning: No visibility specified. Defaulting to "public". 
    function Dice() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1358:13: Warning: Unused local variable.
            bool senderror = false;
            ^------------^
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:129:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:540:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:560:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:578:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:605:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:640:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:658:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:675:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:717:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:765:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:904:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix, uint n_random_bytes) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:960:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1296:5: Warning: Function state mutability can be restricted to view
    function getBetPriceID(uint sendvalue)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:1548:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return oraclize_getPrice("random", oraclizeCallbackGasLimit);
               ^---------------------------------------------------^

INFO:Detectors:[91m
Reentrancy in Dice.doBet (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1273-1336):
	External calls:
	- oraclizeFee = getOraclizePrice() (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1286-1287)
	- oraclizeQueryID = oraclize_newRandomDSQuery(0,2,oraclizeCallbackGasLimit) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1304-1307)
	External calls sending eth:
	- oraclizeQueryID = oraclize_newRandomDSQuery(0,2,oraclizeCallbackGasLimit) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1304-1307)
	State variables written after the call(s):
	- bets (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1313-1315)
	- waitPairBetIDs (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1319-1323)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#550-553) is declared view but contains assembly code
Dice.getOraclizePrice (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol) is declared view but changes state variables:
	- usingOraclize.oraclize
	- usingOraclize.oraclize_network_name
	- usingOraclize.OAR
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#76-85):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#80-85)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#84-85)
	State variables written after the call(s):
	- oraclize (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#84-85)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in Dice.Dice (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1141-1147):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1142-1143)
	State variables written after the call(s):
	- bets (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1146)
	- owner (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1146)
Reentrancy in Dice.doBet (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1273-1336):
	External calls:
	- oraclizeFee = getOraclizePrice() (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1286-1287)
	External calls sending eth:
	- cancelBet(waitpairbetid,false,BET_STATE_CANCEL_BY_ORACLIZE_ERROR_FEE) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1299-1301)
	State variables written after the call(s):
	- address2SendErrorValue (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1299-1301)
Reentrancy in Dice.doBet (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1273-1336):
	External calls:
	- oraclizeFee = getOraclizePrice() (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1286-1287)
	- oraclizeQueryID = oraclize_newRandomDSQuery(0,2,oraclizeCallbackGasLimit) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1304-1307)
	External calls sending eth:
	- oraclizeQueryID = oraclize_newRandomDSQuery(0,2,oraclizeCallbackGasLimit) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1304-1307)
	State variables written after the call(s):
	- oraclizeQueryID2BetID (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1312)
	- oraclize_network_name (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1304-1307)
	- oraclize_randomDS_args (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1304-1307)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#784-836):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#795-798)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#803-804)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#803-804)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#803-804)
	- oraclize_randomDS_args (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#832-834)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#550-553)
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#552-553
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#784-836)
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#798-801
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#801-802
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#805-833
usingOraclize.verifySig uses assembly (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#845-864)
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#856-860
usingOraclize.copyBytes uses assembly (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#986-1004)
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#998-1002
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1013-1037)
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1027-1037
usingOraclize.ecrecovery uses assembly (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1040-1075)
	- /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1054-1071
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#39)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#789:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#832-834:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#861-864:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#863-864:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#927:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#936-937:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#959-961:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#989:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#909:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#916:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1352:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1356:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1357:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1357:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1373-1375:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1185:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1214-1216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1250:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1273:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1445:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1156:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1168:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#39-40) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#40-41) should be declared external
OraclizeI.query2 (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#41-42) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#42-43) should be declared external
OraclizeI.queryN (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#43-44) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#44-45) should be declared external
OraclizeI.getPrice (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#45-46) should be declared external
OraclizeI.getPrice (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#46-48) should be declared external
OraclizeI.useCoupon (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#48-49) should be declared external
OraclizeI.setProofType (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#49-50) should be declared external
OraclizeI.setConfig (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#50) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#51) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#51-54) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#56-57) should be declared external
usingOraclize.__callback (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#129-132) should be declared external
Dice.stopContract (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1172-1177) should be declared external
Dice.resumeContract (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1177-1181) should be declared external
Dice.changeOwnerAddress (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1181-1188) should be declared external
Dice.setBetFee (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1190-1192) should be declared external
Dice.setOraclizeCallbackGasLimit (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1193-1200) should be declared external
Dice.setOraclizeCallbackGasPrice (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1201-1205) should be declared external
Dice.getProfitToAddress (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1209-1217) should be declared external
Dice.getProfit (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1220-1226) should be declared external
Dice.clearWaitPairBets (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1226-1242) should be declared external
Dice.setBetPrices (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1242-1259) should be declared external
Dice.setSendErrorValue (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1259-1264) should be declared external
Dice.fallback (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1265-1266) should be declared external
Dice.cancelBetByPlayer (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1436-1445) should be declared external
Dice.getBets (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1548-1551) should be declared external
Dice.getBetsLength (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol:
	- pragma solidity^0.4.11 (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#40-41) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#42-43) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#44-45) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#51-54) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#57-1075) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#91-129) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#129-132) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#132-136) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#136-137) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#139-141) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#141-145) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#145-150) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#150-155) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#155-160) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#160-165) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#165-170) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#170-175) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#175-180) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#180-186) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#186-192) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#192-197) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#198-204) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#204-211) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#211-216) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#216-220) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#221-226) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#226-233) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#233-238) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#239-244) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#244-251) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#251-258) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#258-264) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#264-271) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#271-279) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#279-287) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#288-295) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#295-303) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#303-312) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#312-321) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#321-329) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#330-338) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#338-348) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#348-354) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#355-360) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#360-366) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#366-372) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#372-380) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#380-384) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#384-389) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#389-396) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#396-401) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#402-407) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#407-413) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#413-420) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#420-426) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#426-433) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#433-440) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#440-449) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#449-456) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#456-464) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#464-472) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#472-481) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#481-489) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#489-498) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#498-507) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#507-519) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#520-530) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#530-531) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#531-536) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#536-541) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#541-546) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#546-550) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#553-554) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#578) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#578) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#593) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#593-594) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#616) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#616) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#616) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#617) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#617) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#641) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#641) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#641-642) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#642) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#645) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#645) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#645-646) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#649-650) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#650) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#653-654) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#659) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#659) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#779-781) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#780) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#781-783) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#784-836) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#784-785) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#785-786) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#786) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#836-842) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#864-899) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#916-924) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#916) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#916-918) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#918) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#925) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#930-985) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#930-931) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1013-1037) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#58-59) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#59-60) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#60-61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#61-62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#62-63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#63-64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#64-65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#66-67) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#67-68) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#68-69) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#69-70) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#70-72) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#72-75) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#75-76) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#777-779) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#842-843) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#844) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#899-916) is not in mixedCase
Event 'Dice.LOG_ORACLIZE_CALLBACK' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1125-1128) is not in CapWords
Event 'Dice.LOG_SEND_ERROR' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1128-1131) is not in CapWords
Event 'Dice.LOG_SET_SEND_ERROR_VALUE' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1131-1135) is not in CapWords
Function 'Dice.__callback' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1348-1431) is not in mixedCase
Parameter '_queryId' of Dice.__callback (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1348) is not in mixedCase
Parameter '_result' of Dice.__callback (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1348) is not in mixedCase
Parameter '_proof' of Dice.__callback (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1349) is not in mixedCase
Function 'Dice.Dice' (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#1141-1147) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#58-59) is never used in Dice
usingOraclize.week (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#59-60) is never used in Dice
usingOraclize.month (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#60-61) is never used in Dice
usingOraclize.proofType_NONE (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#61-62) is never used in Dice
usingOraclize.proofType_TLSNotary (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#62-63) is never used in Dice
usingOraclize.proofType_Android (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#63-64) is never used in Dice
usingOraclize.proofType_Native (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#65-66) is never used in Dice
usingOraclize.proofStorage_IPFS (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#66-67) is never used in Dice
usingOraclize.networkID_mainnet (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#68-69) is never used in Dice
usingOraclize.networkID_testnet (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#69-70) is never used in Dice
usingOraclize.networkID_morden (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#70-72) is never used in Dice
usingOraclize.networkID_consensys (/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol#72-75) is never used in Dice
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/15/0x67df3e4661ab79ec8570aa7af86d5bc4de687490.sol analyzed (4 contracts), 210 result(s) found