INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:86:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:273:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:321:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < milestones.p1) throw;
                                 ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:322:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= milestones.p6) throw;
                                  ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:323:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:326:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (getTotalValue() + msg.value > SAFETY_LIMIT) throw; 
                                                        ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:334:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!wallet.send(msg.value)) throw;
                                     ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:594:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:609:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (etherPrice == 0) throw;
                             ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:622:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(retEther)) throw;
                                            ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:671:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress == 0x0) throw;
                                           ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:705:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != virtualExchangeAddress) throw;
                                                ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:802:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ableToIssueTokens) throw;
                               ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:805:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(this) > 0) throw;
                                 ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:808:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:812:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (requestValue > PROPOSAL_FUNDS_TH * percent) throw;
                                                        ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:851:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:855:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:862:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            requestValue     >  PROPOSAL_FUNDS_TH * percent) throw;
                                                             ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:902:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:905:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:908:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= proposals[id].votindEndTS) throw;
                                              ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:911:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].voted[msg.sender]) throw;
                                             ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:944:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:945:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].submitter != msg.sender) throw;
                                                   ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:948:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < proposals[id].votindEndTS) throw;
                                             ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:952:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:956:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].votesObjecting  > objectionThreshold) throw;
                                                                ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:993:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1016:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1021:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (eventInfo.getEventEnd() + 12 weeks)) throw;
                                                        ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1026:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            lastImpeachmentProposal.votindEndTS +  2 weeks > now) throw;
                                                                  ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1048:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.newExecutive == 0x0) throw;
                                                         ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1052:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1055:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.voted[msg.sender]) throw;
                                                       ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1058:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.votindEndTS + 2 weeks <= now) throw;
                                                                  ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1094:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress != 0x0) throw;
                                           ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1173:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1185:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1484179200) throw;
                              ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1188:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1197:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1484179200) throw;
                              ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1200:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1210:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1484179200) throw;
                              ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1213:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1227:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyBeforeEnd() { if (now  >=  eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1228:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterEnd()  { if (now  <   eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1230:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterTradingStart()  { if (now  < eventInfo.getTradingStart()) throw; _; }
                                                                                ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1232:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyExecutive()     { if (msg.sender != executive) throw; _; }
                                                                ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1234:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyIfAbleToIssueTokens()  { if (!ableToIssueTokens) throw; _; } 
                                                                  ^---^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:57:46: Warning: This declaration shadows an existing declaration.
    function totalSupply() constant returns (uint256 totalSupply){
                                             ^-----------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:57:5: The shadowed declaration is here:
    function totalSupply() constant returns (uint256 totalSupply){
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:109:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, to, value);
            ^-----------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:147:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(from, to, value);
            ^-----------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:192:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, value);
        ^----------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:291:18: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        balances[0x342e62732b76875da9305083ea8ae63125a4e667] = 16110893000;
                 ^----------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:634:9: Warning: Invoking events without "emit" prefix is deprecated.
        BuyForEtherTransaction(msg.sender, collectedEther, totalSupplyVar, etherPrice, tokens);
        ^------------------------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:649:10: Warning: Invoking events without "emit" prefix is deprecated.
         PriceHKGChange(qtyForOneHKG, preferedQtySold, totalSupplyVar);
         ^-----------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:683:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(this, virtualExchangeAddress, qtyToEmit);
        ^-----------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:686:9: Warning: Invoking events without "emit" prefix is deprecated.
        DstTokensIssued(hkgPrice, preferedQtySold, totalSupplyVar, qtyToEmit);
        ^-------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:723:7: Warning: Invoking events without "emit" prefix is deprecated.
      BuyForHKGTransaction(sender, preferedQtySold, totalSupplyVar, hkgPrice, tokensQty);
      ^--------------------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:748:10: Warning: Invoking events without "emit" prefix is deprecated.
         DstTokensIssued(qtyForOneEther, totalSupplyVar, totalSupplyVar, qtyToEmit);
         ^------------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:762:10: Warning: Invoking events without "emit" prefix is deprecated.
         NewEtherPrice(qtyForOneEther);
         ^---------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:774:9: Warning: Invoking events without "emit" prefix is deprecated.
        DisableTokenIssuance();
        ^--------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:788:9: Warning: Invoking events without "emit" prefix is deprecated.
        BurnedAllRemainedTokens();
        ^-----------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:815:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (requestValue > this.balance) 
                           ^----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:816:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            requestValue = this.balance;    
                           ^----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:820:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:820:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:828:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:872:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:872:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:882:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:923:10: Warning: Invoking events without "emit" prefix is deprecated.
         ObjectedVote(id, msg.sender, votes);         
         ^---------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:970:12: Warning: Invoking events without "emit" prefix is deprecated.
           EtherRedeemAccepted(proposals[id].submitter, proposals[id].value);                              
           ^---------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:997:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        bool success = msg.sender.send(this.balance);        
                                       ^----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1036:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentProposed(msg.sender, urlDetails, now + 2 weeks, newExecutive);
        ^----------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1065:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentSupport(msg.sender, votingRights[msg.sender]);
        ^------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1074:13: Warning: Invoking events without "emit" prefix is deprecated.
            ImpeachmentAccepted(executive);
            ^----------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1103:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1188:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1200:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1213:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance);
    ^-------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:29:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success);
    ^----------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 totalSupply){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:130:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:166:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:183:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:209:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:273:5: Warning: No visibility specified. Defaulting to "public". 
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:319:5: Warning: No visibility specified. Defaulting to "public". 
    function createHKG(address holder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:342:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:388:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:399:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:408:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalValue() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:434:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventStart() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:441:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventEnd() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:450:5: Warning: No visibility specified. Defaulting to "public". 
    function getVotingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:458:5: Warning: No visibility specified. Defaulting to "public". 
    function getTradingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:465:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:594:5: Warning: No visibility specified. Defaulting to "public". 
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:605:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:646:6: Warning: No visibility specified. Defaulting to "public". 
     function setHKGPrice(uint qtyForOneHKG) onlyExecutive  {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:663:5: Warning: No visibility specified. Defaulting to "public". 
    function issuePreferedTokens(uint qtyForOneHKG, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:701:5: Warning: No visibility specified. Defaulting to "public". 
    function buyForHackerGold(uint hkgValue) onlyBeforeEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:738:5: Warning: No visibility specified. Defaulting to "public". 
    function issueTokens(uint qtyForOneEther, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:757:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrice(uint qtyForOneEther) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:771:5: Warning: No visibility specified. Defaulting to "public". 
    function disableTokenIssuance() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:782:5: Warning: No visibility specified. Defaulting to "public". 
    function burnRemainToken() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:798:5: Warning: No visibility specified. Defaulting to "public". 
    function submitEtherProposal(uint requestValue, string url) onlyAfterEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:843:5: Warning: No visibility specified. Defaulting to "public". 
    function submitHKGProposal(uint requestValue, string url) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:897:6: Warning: No visibility specified. Defaulting to "public". 
     function objectProposal(bytes32 id){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:899:9: Warning: Unused local variable.
        Proposal memory proposal = proposals[id];
        ^----------------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:927:6: Warning: No visibility specified. Defaulting to "public". 
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:942:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemProposalFunds(bytes32 id) onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:967:12: Warning: Unused local variable.
           bool success = proposals[id].submitter.send(proposals[id].value); 
           ^----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:988:5: Warning: No visibility specified. Defaulting to "public". 
    function getAllTheFunds() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:997:9: Warning: Unused local variable.
        bool success = msg.sender.send(this.balance);        
        ^----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1012:6: Warning: No visibility specified. Defaulting to "public". 
     function submitImpeachmentProposal(string urlDetails, address newExecutive){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1045:5: Warning: No visibility specified. Defaulting to "public". 
    function supportImpeachment(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1085:5: Warning: No visibility specified. Defaulting to "public". 
    function votingRightsOf(address _owner) constant returns (uint256 result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1089:5: Warning: No visibility specified. Defaulting to "public". 
    function getPreferedQtySold() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1093:5: Warning: No visibility specified. Defaulting to "public". 
    function setVirtualExchange(address virtualExchangeAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1098:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGOwned() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1102:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherValue() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1106:5: Warning: No visibility specified. Defaulting to "public". 
    function getExecutive() constant returns (address result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1110:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1114:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1118:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTName() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1122:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTNameBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1126:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbol() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1130:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbolBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1134:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() constant returns (address result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1138:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1142:5: Warning: No visibility specified. Defaulting to "public". 
    function getCollectedEther() constant returns (uint results) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1146:5: Warning: No visibility specified. Defaulting to "public". 
    function getCounterProposals() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1150:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalIdByIndex(uint i) constant returns (bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1154:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalObjectionByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1158:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalValueByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1162:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentUrlDetails() constant returns (string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1167:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentVotesSupporting() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1171:5: Warning: No visibility specified. Defaulting to "public". 
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1182:5: Warning: No visibility specified. Defaulting to "public". 
    function setVoteRight(address voter, uint ammount){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1194:5: Warning: No visibility specified. Defaulting to "public". 
    function setBalance(address owner, uint ammount){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1206:5: Warning: No visibility specified. Defaulting to "public". 
    function setInternalInfo(address fixExecutive, uint fixTotalSupply, uint256 fixPreferedQtySold, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:927:6: Warning: Function state mutability can be restricted to view
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1123:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(name);
               ^-----------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1131:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(symbol);
               ^-------------^
/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:1171:5: Warning: Function state mutability can be restricted to pure
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in DSTContract.redeemProposalFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#968-1006):
	External calls:
	- hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#990-991)
	External calls sending eth:
	- success = proposals[id].submitter.send(proposals[id].value) (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#994-997)
	State variables written after the call(s):
	- proposals (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1005-1006)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
DSTContract.objectProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#927-956) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.objectProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#927-956) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#968-1006) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.objectProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#927-956) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#968-1006) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.supportImpeachment (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1071-1118) uses a dangerous strict equality:
	- lastImpeachmentProposal.newExecutive == 0x0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#864-915):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#892-893)
	- requestValue = getHKGOwned() (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#892-893)
	State variables written after the call(s):
	- counterProposals (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#908)
	- timeOfLastProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#909-910)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
DSTContract.redeemProposalFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#968-1006) does not use the value returned by external calls:
	-hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#990-991)
DSTContract.getAllTheFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1018-1030) does not use the value returned by external calls:
	-hackerGold.transfer(msg.sender,getHKGOwned()) (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1027-1030)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
TokenInterface.totalSupply.totalSupply (local variable @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#58-61) shadows:
	- TokenInterface.totalSupply (function @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#57-62)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#864-915):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#892-893)
	- requestValue = getHKGOwned() (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#892-893)
	State variables written after the call(s):
	- listProposals (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#907-908)
	- proposals (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#905-906)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSTContract.convert uses assembly (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1207-1214)
	- /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1213-1214
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DSTContract.DECIMAL_ZEROS should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#519-520)
DSTContract.PROPOSAL_FUNDS_TH should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#523-524)
DSTContract.PROPOSAL_LIFETIME should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#522)
DSTContract.decimals should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#547-549)
EventInfo.eventStart should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#441-442)
HackerGold.BASE_PRICE should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#245-247)
HackerGold.DECIMAL_ZEROS should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#255-256)
HackerGold.FIN_PRICE should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#250-251)
HackerGold.MID_PRICE should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#248-250)
HackerGold.SAFETY_LIMIT should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#253)
HackerGold.decimals should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#241-242)
HackerGold.name should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#238-239)
HackerGold.symbol should be constant (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#243-244)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#331-332:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#333-334:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#334:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#340:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#346:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#630:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#648:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#695:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#732:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#823:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#826:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#828:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#837:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#843:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#875:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#879:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#890:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#897-898:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#937:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#938:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#941:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#944:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#970:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#973:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#978:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#980:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#983:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1024:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1045:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1051-1052:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1057:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1077-1078:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1083:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1086:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1093:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1212:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1219-1220:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1227:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1230:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1243:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1244:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1252:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1254:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1255:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1262-1263:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
TokenInterface.approve (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#42-46) should be declared external
StandardToken.approve (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#188-203) should be declared external
TokenInterface.allowance (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#55-57) should be declared external
StandardToken.allowance (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#220-223) should be declared external
TokenInterface.totalSupply (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#57-62) should be declared external
HackerGold.fallback (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#313) should be declared external
HackerGold.getTotalSupply (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#404-407) should be declared external
HackerGold.getNow (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#418-424) should be declared external
EventInfo.getEventStart (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#450-455) should be declared external
EventInfo.getEventEnd (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#456-459) should be declared external
EventInfo.getVotingStart (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#465-473) should be declared external
EventInfo.getTradingStart (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#477-478) should be declared external
EventInfo.getNow (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#481-482) should be declared external
DSTContract.fallback (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#624-662) should be declared external
DSTContract.setHKGPrice (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#665-669) should be declared external
DSTContract.issuePreferedTokens (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#679-710) should be declared external
DSTContract.buyForHackerGold (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#722-748) should be declared external
DSTContract.issueTokens (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#758-779) should be declared external
DSTContract.setEtherPrice (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#784-793) should be declared external
DSTContract.disableTokenIssuance (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#798-799) should be declared external
DSTContract.burnRemainToken (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#804-809) should be declared external
DSTContract.submitEtherProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#816-855) should be declared external
DSTContract.submitHKGProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#864-915) should be declared external
DSTContract.objectProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#927-956) should be declared external
DSTContract.redeemProposalFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#968-1006) should be declared external
DSTContract.getAllTheFunds (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1018-1030) should be declared external
DSTContract.submitImpeachmentProposal (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1036-1067) should be declared external
DSTContract.supportImpeachment (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1071-1118) should be declared external
DSTContract.votingRightsOf (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1123-1128) should be declared external
DSTContract.getPreferedQtySold (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1130-1132) should be declared external
DSTContract.setVirtualExchange (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1134-1139) should be declared external
DSTContract.getEtherValue (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1143-1147) should be declared external
DSTContract.getExecutive (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1147-1150) should be declared external
DSTContract.getHKGPrice (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1151-1154) should be declared external
DSTContract.getEtherPrice (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1154-1158) should be declared external
DSTContract.getDSTName (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1158-1159) should be declared external
DSTContract.getDSTNameBytes (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1159-1162) should be declared external
DSTContract.getDSTSymbol (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1162-1167) should be declared external
DSTContract.getDSTSymbolBytes (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1167-1168) should be declared external
DSTContract.getAddress (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1170-1172) should be declared external
DSTContract.getTotalSupply (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1172-1177) should be declared external
DSTContract.getCollectedEther (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1178-1182) should be declared external
DSTContract.getCounterProposals (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1182-1185) should be declared external
DSTContract.getProposalIdByIndex (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1187-1190) should be declared external
DSTContract.getProposalObjectionByIndex (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1190-1196) should be declared external
DSTContract.getProposalValueByIndex (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1196-1199) should be declared external
DSTContract.getCurrentImpeachmentUrlDetails (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1200-1205) should be declared external
DSTContract.getCurrentImpeachmentVotesSupporting (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1205-1207) should be declared external
DSTContract.setVoteRight (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1216-1227) should be declared external
DSTContract.setBalance (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1228-1234) should be declared external
DSTContract.setInternalInfo (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1238-1248) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol:
	- pragma solidity^0.4.0 (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#91-92) is not in mixedCase
Struct 'HackerGold.milestones_struct' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#268-271) is not in CapWords
Function 'HackerGold.HackerGold' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#281-309) is not in mixedCase
Variable 'HackerGold.BASE_PRICE' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#245-247) is not in mixedCase
Variable 'HackerGold.MID_PRICE' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#248-250) is not in mixedCase
Variable 'HackerGold.FIN_PRICE' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#250-251) is not in mixedCase
Variable 'HackerGold.SAFETY_LIMIT' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#253) is not in mixedCase
Variable 'HackerGold.DECIMAL_ZEROS' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#255-256) is not in mixedCase
Function 'DSTContract.DSTContract' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#614-623) is not in mixedCase
Parameter '_owner' of DSTContract.votingRightsOf (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#1124-1126) is not in mixedCase
Variable 'DSTContract.DECIMAL_ZEROS' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#519-520) is not in mixedCase
Variable 'DSTContract.PROPOSAL_LIFETIME' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#522) is not in mixedCase
Variable 'DSTContract.PROPOSAL_FUNDS_TH' (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#523-524) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
EventInfo.HACKATHON_5_WEEKS (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#439-440) is never used in EventInfo
DSTContract.enumDeclaration (/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol#566-567) is never used in DSTContract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/8/0x9b0f6a5a667cb92af0cd15dbe90e764e32f69e77.sol analyzed (5 contracts), 126 result(s) found