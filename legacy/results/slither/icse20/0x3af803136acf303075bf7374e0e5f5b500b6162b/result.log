INFO:Slither:Compilation warnings/errors on /unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:38:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned(){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:196:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance >= revenue);
		        ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:204:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance > sellPrice);
		        ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:205:48: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(tokenBalanceOf[msg.sender] * sellPrice <= this.balance) {
		                                             ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:208:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
			sell(this.balance / sellPrice);
			     ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:244:3: Warning: Invoking events without "emit" prefix is deprecated.
		orderToTransfer(msg.sender, _from, _to, _value, "Order to transfer tokens from allowed account");
		^----------------------------------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:264:4: Warning: Invoking events without "emit" prefix is deprecated.
			minGoalReached(icoMin, "Minimal goal of ICO is reached!");
			^-------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:272:4: Warning: Invoking events without "emit" prefix is deprecated.
			preIcoEnded(preIcoLimit, "Token amount for preICO sold!");
			^-------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:317:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value);
		^--------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:333:4: Warning: Invoking events without "emit" prefix is deprecated.
			priceUpdated(oldPrice, currentTokenPrice, "Token price updated!");
			^---------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:410:4: Warning: Invoking events without "emit" prefix is deprecated.
			FrozenFunds(msg.sender, account, "Account set frozen!");
			^-----------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:412:4: Warning: Invoking events without "emit" prefix is deprecated.
			FrozenFunds(msg.sender, account, "Account set free for use!");
			^-----------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:427:3: Warning: Invoking events without "emit" prefix is deprecated.
		tokenCreated(msg.sender, amount, "Additional tokens created!");
		^------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:442:3: Warning: Invoking events without "emit" prefix is deprecated.
		tokenDestroyed(msg.sender, amount, "An amount of tokens destroyed!");
		^------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:451:3: Warning: Invoking events without "emit" prefix is deprecated.
		ownerChanged(msg.sender, oldOwner, newOwner);
		^------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:458:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance > 0);
                ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:459:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		withdraw(this.balance);
		         ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:465:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		uint256 contractbalance = this.balance;
		                          ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:468:3: Warning: Invoking events without "emit" prefix is deprecated.
		withdrawed(sender, summeInWei, "wei withdrawed");
		^----------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:476:3: Warning: Invoking events without "emit" prefix is deprecated.
		deposited(msg.sender, msg.value, "wei deposited");
		^-----------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:492:4: Warning: Invoking events without "emit" prefix is deprecated.
			icoStatusUpdated(msg.sender, "Coin offering was stopped!");
			^--------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:494:4: Warning: Invoking events without "emit" prefix is deprecated.
			icoStatusUpdated(msg.sender, "Coin offering is running!");
			^-------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:506:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance >= revenue);
		        ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:519:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		require(this.balance <= revenue);
		        ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:521:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		msg.sender.transfer(this.balance); 
		                    ^----------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:8:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalAmount);
	^------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:11:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance);
	^--------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:14:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint256 _value) returns (bool success);
	^--------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:17:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
	^---------------------------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:22:2: Warning: No visibility specified. Defaulting to "public". 
	function approve(address _spender, uint256 _value) returns (bool success);
	^------------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:25:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining);
	^----------------------------------------------------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:38:2: Warning: No visibility specified. Defaulting to "public". 
	function owned(){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:49:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner);
	^-------------------------------------------^
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:123:2: Warning: No visibility specified. Defaulting to "public". 
	function STARTMETADOLLAR() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:143:2: Warning: No visibility specified. Defaulting to "public". 
	function () payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:151:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalAmount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:156:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:161:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:167:2: Warning: No visibility specified. Defaulting to "public". 
	function calculateTheEndPrice(uint256 howManyTokenToBuy) constant returns (uint256 summarizedPriceInWeis) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:177:2: Warning: No visibility specified. Defaulting to "public". 
	function checkFrozenAccounts(address account) constant returns (bool accountIsFrozen) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:189:2: Warning: No visibility specified. Defaulting to "public". 
	function sell(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:201:2: Warning: No visibility specified. Defaulting to "public". 
	function sellMaximumPossibleAmountOfTokens() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:213:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:232:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from,	address _to,	uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:252:2: Warning: No visibility specified. Defaulting to "public". 
	function approve(address _spender, uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:339:2: Warning: No visibility specified. Defaulting to "public". 
	function setPreICOPrice(uint256 priceForPreIcoInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:348:2: Warning: No visibility specified. Defaulting to "public". 
	function setICOPrice(uint256 priceForIcoInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:358:2: Warning: No visibility specified. Defaulting to "public". 
	function setPrices(uint256 priceForPreIcoInWei, uint256 priceForIcoInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:368:2: Warning: No visibility specified. Defaulting to "public". 
	function setMtdAmount(uint256 mtdAmountInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:377:2: Warning: No visibility specified. Defaulting to "public". 
	function setEthAmount(uint256 ethAmountInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:387:2: Warning: No visibility specified. Defaulting to "public". 
	function setAmounts(uint256 mtdAmountInWei, uint256 ethAmountInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:397:2: Warning: No visibility specified. Defaulting to "public". 
	function setSellPrice(uint256 priceInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:405:2: Warning: No visibility specified. Defaulting to "public". 
	function freezeAccount(address account, bool freeze) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:418:2: Warning: No visibility specified. Defaulting to "public". 
	function mintToken(uint256 amount) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:432:2: Warning: No visibility specified. Defaulting to "public". 
	function destroyToken(uint256 amount) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:447:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:457:2: Warning: No visibility specified. Defaulting to "public". 
	function collect() isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:464:2: Warning: No visibility specified. Defaulting to "public". 
	function withdraw(uint256 summeInWei) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:473:2: Warning: No visibility specified. Defaulting to "public". 
	function deposit() payable isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:481:2: Warning: No visibility specified. Defaulting to "public". 
	function allowIcoExit(bool exitAllowed) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:488:2: Warning: No visibility specified. Defaulting to "public". 
	function stopThisIco(bool icoIsStopped) isOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:499:2: Warning: No visibility specified. Defaulting to "public". 
	function exitThisIcoForHalfOfTokenPrice() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:512:2: Warning: No visibility specified. Defaulting to "public". 
	function getAllMyTokensForAllEtherOnContract() {
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
METADOLLAR._transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#306-332) uses a dangerous strict equality:
	- tokenBalanceOf[_to] == 0
	- tokenBalanceOf[_from] == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
METADOLLAR.icoMin should be constant (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#60-61)
METADOLLAR.preIcoLimit should be constant (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#61-62)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
METADOLLAR.totalSupply (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#155-157) should be declared external
ERC20Interface.totalSupply (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#8-10) should be declared external
METADOLLAR.balanceOf (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#160-161) should be declared external
ERC20Interface.balanceOf (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#11-13) should be declared external
ERC20Interface.transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#14-16) should be declared external
METADOLLAR.transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#218-228) should be declared external
METADOLLAR.transferFrom (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#237-252) should be declared external
ERC20Interface.transferFrom (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#17-19) should be declared external
METADOLLAR.approve (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#260-268) should be declared external
ERC20Interface.approve (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#22-24) should be declared external
METADOLLAR.allowance (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#165-167) should be declared external
ERC20Interface.allowance (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#25-27) should be declared external
METADOLLAR.transferOwnership (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#462-468) should be declared external
owned.transferOwnership (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#51) should be declared external
METADOLLAR.STARTMETADOLLAR (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#126-150) should be declared external
METADOLLAR.fallback (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#150-155) should be declared external
METADOLLAR.calculateTheEndPrice (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#169-177) should be declared external
METADOLLAR.checkFrozenAccounts (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#181-188) should be declared external
METADOLLAR.buy (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#189-191) should be declared external
METADOLLAR.sellMaximumPossibleAmountOfTokens (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#205-215) should be declared external
METADOLLAR.setPreICOPrice (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#348-355) should be declared external
METADOLLAR.setICOPrice (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#357-361) should be declared external
METADOLLAR.setPrices (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#367-375) should be declared external
METADOLLAR.setMtdAmount (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#378-385) should be declared external
METADOLLAR.setEthAmount (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#387-391) should be declared external
METADOLLAR.setAmounts (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#397-404) should be declared external
METADOLLAR.setSellPrice (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#407-410) should be declared external
METADOLLAR.freezeAccount (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#418-423) should be declared external
METADOLLAR.mintToken (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#425-441) should be declared external
METADOLLAR.destroyToken (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#442-457) should be declared external
METADOLLAR.collect (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#472-475) should be declared external
METADOLLAR.deposit (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#487-492) should be declared external
METADOLLAR.allowIcoExit (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#494-499) should be declared external
METADOLLAR.stopThisIco (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#502-508) should be declared external
METADOLLAR.exitThisIcoForHalfOfTokenPrice (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#508-521) should be declared external
METADOLLAR.getAllMyTokensForAllEtherOnContract (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol:
	- pragma solidity^0.4.16 (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#35-56) is not in CapWords
Event 'owned.ownerChanged' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#51-54) is not in CapWords
Constant 'owned.supervisor' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#36-39) is not in UPPER_CASE_WITH_UNDERSCORES
Event 'METADOLLAR.minGoalReached' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#98-99) is not in CapWords
Event 'METADOLLAR.preIcoEnded' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#101-102) is not in CapWords
Event 'METADOLLAR.priceUpdated' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#104-105) is not in CapWords
Event 'METADOLLAR.withdrawed' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#107-108) is not in CapWords
Event 'METADOLLAR.deposited' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#110-111) is not in CapWords
Event 'METADOLLAR.orderToTransfer' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#113-114) is not in CapWords
Event 'METADOLLAR.tokenCreated' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#116-117) is not in CapWords
Event 'METADOLLAR.tokenDestroyed' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#119-120) is not in CapWords
Event 'METADOLLAR.icoStatusUpdated' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#123-125) is not in CapWords
Parameter '_owner' of METADOLLAR.balanceOf (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#160-161) is not in mixedCase
Parameter '_to' of METADOLLAR.transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#218) is not in mixedCase
Parameter '_value' of METADOLLAR.transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#218-219) is not in mixedCase
Parameter '_from' of METADOLLAR.transferFrom (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#237-238) is not in mixedCase
Parameter '_to' of METADOLLAR.transferFrom (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#238) is not in mixedCase
Parameter '_value' of METADOLLAR.transferFrom (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#238-239) is not in mixedCase
Parameter '_spender' of METADOLLAR.approve (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#260) is not in mixedCase
Parameter '_value' of METADOLLAR.approve (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#260-261) is not in mixedCase
Parameter '_owner' of METADOLLAR.allowance (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#165) is not in mixedCase
Parameter '_spender' of METADOLLAR.allowance (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#165-166) is not in mixedCase
Function 'METADOLLAR.STARTMETADOLLAR' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#126-150) is not in mixedCase
Function 'METADOLLAR._transfer' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#306-332) is not in mixedCase
Parameter '_from' of METADOLLAR._transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#306-307) is not in mixedCase
Parameter '_to' of METADOLLAR._transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#307) is not in mixedCase
Parameter '_value' of METADOLLAR._transfer (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#307) is not in mixedCase
Variable 'METADOLLAR._totalSupply' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#59-60) is not in mixedCase
Variable 'METADOLLAR.ICOprice' (/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol#66-67) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/34/0x3af803136acf303075bf7374e0e5f5b500b6162b.sol analyzed (3 contracts), 68 result(s) found