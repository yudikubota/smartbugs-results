INFO:Slither:Compilation warnings/errors on /unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:35:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:113:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:237:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
 function MON(address _benef,uint256 _start,uint256 _sumMul,uint256 _period) public{
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:85:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:121:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:139:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:181:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:182:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(address(0),_to,_amount);
    ^------------------------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:192:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:266:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
     retVal = retVal.sub(this.balance);
                         ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:282:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
     if(this.balance <msg.value){
        ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:286:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        amountOfEthBeforeBuy = this.balance - msg.value;
                               ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:316:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
         if(currS.stageTime>_n &&  this.balance < stageMaxEthAmount){
                                   ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:323:18: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
             if( this.balance >=stageMaxEthAmount){
                 ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:332:54: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                if(stageIndex<5 && stageMaxEthAmount>this.balance){
                                                     ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:336:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                    amountToMint = this.balance*(currS.stagePrice);
                                   ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:338:44: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                    b.amountOfEth =uint128(this.balance);
                                           ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:344:38: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                    amountToReturn = this.balance;
                                     ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:355:6: Warning: Invoking events without "emit" prefix is deprecated.
     BuyStatus(status);
     ^---------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:360:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
     return this.balance;
            ^----------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:369:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(_from,address(0),_amount);
      ^--------------------------------^
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:2:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:8:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:15:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol:20:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
MON._now should be constant (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#223-224)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
SafeMath.mul (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#2-8) should be declared external
SafeMath.div (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#8-15) should be declared external
SafeMath.sub (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#15-20) should be declared external
SafeMath.add (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#20-28) should be declared external
BasicToken.balanceOf (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#95-103) should be declared external
ERC20Basic.balanceOf (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#55-56) should be declared external
ERC20Basic.transfer (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#56-57) should be declared external
BasicToken.transfer (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#83-91) should be declared external
StandardToken.allowance (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#156-160) should be declared external
ERC20.allowance (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#61-62) should be declared external
ERC20.transferFrom (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#62-63) should be declared external
StandardToken.transferFrom (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#113-127) should be declared external
StandardToken.approve (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#132-145) should be declared external
ERC20.approve (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#63-64) should be declared external
MintableToken.finishMinting (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#200-207) should be declared external
MON.fallback (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#278-368) should be declared external
MON.GetBalance (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#368-372) should be declared external
MON.GetStats (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#383-412) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#36-41) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#97-101) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#83) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#83) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#156) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#156-157) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#113-115) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#115) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#115) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#132-133) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#133) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#181-182) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#182) is not in mixedCase
Function 'MON.MON' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#246-266) is not in mixedCase
Parameter '_benef' of MON.MON (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#246-248) is not in mixedCase
Parameter '_start' of MON.MON (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#248) is not in mixedCase
Parameter '_sumMul' of MON.MON (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#248-249) is not in mixedCase
Parameter '_period' of MON.MON (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#249) is not in mixedCase
Function 'MON.GetMaxStageEthAmount' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#266-278) is not in mixedCase
Function 'MON.GetBalance' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#368-372) is not in mixedCase
Parameter '_from' of MON.burn (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#374-375) is not in mixedCase
Parameter '_amount' of MON.burn (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#375) is not in mixedCase
Function 'MON.GetStats' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#383-412) is not in mixedCase
Parameter '_to' of MON.mintCoins (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#412) is not in mixedCase
Parameter '_amount' of MON.mintCoins (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#412-413) is not in mixedCase
Function 'MON.GetNow' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol) is not in mixedCase
Variable 'MON._now' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#223-224) is not in mixedCase
Constant 'MON.maxTokenSupply' (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#372-373) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
MON._now (/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol#223-224) is never used in MON
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/9/0xb49e984a83d7a638e7f2889fc8328952ba951abe.sol analyzed (8 contracts), 48 result(s) found