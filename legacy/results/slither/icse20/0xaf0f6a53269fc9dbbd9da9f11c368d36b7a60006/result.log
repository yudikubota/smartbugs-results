INFO:Slither:Compilation warnings/errors on /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:47:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Etheropt(uint expiration_, string underlying_, uint margin_, uint realityID_, bytes32 factHash_, address ethAddr_, int[] strikes_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:109:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value>0) throw;
                     ^---^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:131:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:3:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Etheropt {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:207:54: Warning: This declaration shadows an existing declaration.
  function getMoneyness(int strike, uint settlement, uint margin) constant returns(int) {
                                                     ^---------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:13:3: The shadowed declaration is here:
  uint public margin;
  ^----------------^

/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:79:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(msg.sender, msg.value, accounts[accountIDs[msg.sender]].capital);
    ^----------------------------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:86:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(amount)();
        ^-----------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:87:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdraw(msg.sender, amount, accounts[accountIDs[msg.sender]].capital);
        ^--------------------------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:129:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewMarketMaker(msg.sender, server);
        ^--------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:176:21: Warning: "sha3" has been deprecated in favour of "keccak256"
      if (ecrecover(sha3(factHash, value), v, r, s) == ethAddr) {
                    ^-------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:176:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      if (ecrecover(sha3(factHash, value), v, r, s) == ethAddr) {
                    ^-------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:196:13: Warning: Return value of low-level calls not used.
            accounts[accountID].user.call.value(amountToSend)();
            ^-------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:197:13: Warning: Invoking events without "emit" prefix is deprecated.
            Expire(msg.sender, accounts[accountID].user);
            ^------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:232:77: Warning: "sha3" has been deprecated in favour of "keccak256"
 ... sha3(optionID, price, size, orderID, blockExpires) ... 
     ^------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:232:77: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... sha3(optionID, price, size, orderID, blockExpires) ... 
     ^------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:232:186: Warning: "sha3" has been deprecated in favour of "keccak256"
 ... sha3(optionID, price, size, orderID, blockExpires) ... 
     ^------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:232:186: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... sha3(optionID, price, size, orderID, blockExpires) ... 
     ^------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:240:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(optionID, price, size, orderID, blockExpires);
                   ^--------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:255:7: Warning: Invoking events without "emit" prefix is deprecated.
      OrderMatch(msg.sender, matchSize, addr, size, optionID, price);
      ^------------------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:257:7: Warning: Invoking events without "emit" prefix is deprecated.
      OrderMatchFailure(msg.sender, matchSize, addr, size, optionID, price);
      ^-------------------------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function Etheropt(uint expiration_, string underlying_, uint margin_, uint realityID_, bytes32 factHash_, address ethAddr_, int[] strikes_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:62:3: Warning: No visibility specified. Defaulting to "public". 
  function getAccountID(address user) constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:66:3: Warning: No visibility specified. Defaulting to "public". 
  function getAccount(uint accountID) constant returns(address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:70:3: Warning: No visibility specified. Defaulting to "public". 
  function addFunds() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:72:55: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
      accounts[accountIDs[msg.sender]].capital += int(msg.value);
                                                      ^-------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:76:42: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
      accounts[accountID].capital += int(msg.value);
                                         ^-------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:79:25: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    Deposit(msg.sender, msg.value, accounts[accountIDs[msg.sender]].capital);
                        ^-------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:82:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawFunds(uint amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:92:3: Warning: No visibility specified. Defaulting to "public". 
  function getFunds(address user, bool onlyAvailable) constant returns(int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:104:3: Warning: No visibility specified. Defaulting to "public". 
  function getFundsAndAvailable(address user) constant returns(int, int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:108:3: Warning: No visibility specified. Defaulting to "public". 
  function marketMaker(string server) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:109:9: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
    if (msg.value>0) throw;
        ^-------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:136:3: Warning: No visibility specified. Defaulting to "public". 
  function getMarketMakers() constant returns(string, string, string, string, string, string) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:144:3: Warning: No visibility specified. Defaulting to "public". 
  function getMarketMakerFunds() constant returns(int, int, int, int, int, int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:152:3: Warning: No visibility specified. Defaulting to "public". 
  function getOptionChain() constant returns (uint, string, uint, uint, bytes32, address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:156:3: Warning: No visibility specified. Defaulting to "public". 
  function getMarket(address user) constant returns(uint[], int[], int[], int[]) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:174:3: Warning: No visibility specified. Defaulting to "public". 
  function expire(uint accountID, uint8 v, bytes32 r, bytes32 s, bytes32 value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:207:3: Warning: No visibility specified. Defaulting to "public". 
  function getMoneyness(int strike, uint settlement, uint margin) constant returns(int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:231:3: Warning: No visibility specified. Defaulting to "public". 
  function orderMatchTest(uint optionID, uint price, int size, uint orderID, uint blockExpires, address addr, address sender, uint value, int matchSize) constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:238:3: Warning: No visibility specified. Defaulting to "public". 
  function orderMatch(uint optionID, uint price, int size, uint orderID, uint blockExpires, address addr, uint8 v, bytes32 r, bytes32 s, int matchSize) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:261:3: Warning: No visibility specified. Defaulting to "public". 
  function getMaxLossAfterTrade(address user, uint optionID, int positionChange, int cashChange) constant returns(int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:311:3: Warning: No visibility specified. Defaulting to "public". 
  function min(uint a, uint b) constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:207:3: Warning: Function state mutability can be restricted to pure
  function getMoneyness(int strike, uint settlement, uint margin) constant returns(int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:274:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        pnl += moneySumAtSettlement(user, optionID, positionChange, settlement);
               ^--------------------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:291:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        pnl += moneySumAtSettlement(user, optionID, positionChange, settlement);
               ^--------------------------------------------------------------^
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:300:3: Warning: Function state mutability can be restricted to view
  function moneySumAtSettlement(address user, uint optionID, int positionChange, uint settlement) internal returns(int) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol:311:3: Warning: Function state mutability can be restricted to pure
  function min(uint a, uint b) constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Etheropt.getMoneyness.margin (local variable @ /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#212-213) shadows:
	- Etheropt.margin (state variable @ /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#13-14)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#111-112:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#137:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#181-210:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#232-240:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Etheropt.getAccountID (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#63-66) should be declared external
Etheropt.getAccount (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#67-72) should be declared external
Etheropt.withdrawFunds (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#84-93) should be declared external
Etheropt.getFundsAndAvailable (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#105-110) should be declared external
Etheropt.marketMaker (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#111-137) should be declared external
Etheropt.getMarketMakers (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#137-146) should be declared external
Etheropt.getMarketMakerFunds (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#146-153) should be declared external
Etheropt.getOptionChain (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#153-158) should be declared external
Etheropt.getMarket (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#158-176) should be declared external
Etheropt.expire (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#176-211) should be declared external
Etheropt.orderMatchTest (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#232-240) should be declared external
Etheropt.orderMatch (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#240-265) should be declared external
Etheropt.min (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in Etheropt.withdrawFunds (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#84-93):
	-msg.sender.call.value(amount)() /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#87-88
Low level call in Etheropt.expire (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#176-211):
	-accounts[accountID].user.call.value(amountToSend)() /unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#201-207
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Etheropt.Etheropt' (/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol#47-62) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xaf0f6a53269fc9dbbd9da9f11c368d36b7a60006.sol analyzed (1 contracts), 21 result(s) found