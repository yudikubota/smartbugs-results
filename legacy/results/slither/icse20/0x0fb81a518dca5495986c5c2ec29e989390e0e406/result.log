INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:31:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:47:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:53:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:80:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:85:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:300:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:310:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:314:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:320:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:327:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:338:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:357:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:364:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:372:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:390:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:396:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:439:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:440:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:448:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:449:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:457:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:458:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:496:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:517:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:565:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:582:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:597:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:609:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:618:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:622:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:679:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:769:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:801:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:836:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:930:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:937:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:955:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:11:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMathLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:30:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:767:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:399:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:431:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:438:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:438:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:527:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:539:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:549:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:569:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:621:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:809:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:822:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:839:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:858:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
      ^-----------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:878:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
      ^-----------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:916:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:924:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:13:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:19:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:58:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:116:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:156:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:169:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:170:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:173:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:174:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:300:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:337:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:512:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:525:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:536:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:547:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:562:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:577:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:664:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:703:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:806:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:813:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:826:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:830:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:843:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:853:3: Warning: No visibility specified. Defaulting to "public". 
  function addApproval(address _spender, uint _addedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:867:3: Warning: No visibility specified. Defaulting to "public". 
  function subApproval(address _spender, uint _subtractedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:955:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:962:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:962:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:962:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:962:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:108:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:116:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:144:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:30:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:669:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:751:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:755:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:759:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:763:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol:767:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#511-526):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#522-525)
	State variables written after the call(s):
	- finalized (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#525)
Reentrancy in Crowdsale.investInternal (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#359-411):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#367-381)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#381-384)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#400-403)
	- weiRaised (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#399)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMathLib.assert (function @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#30-41) shadows built-in symbol "assert"
SafeMath.assert (function @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#797-801) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#309-348):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#326-330)
	State variables written after the call(s):
	- endsAt (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#342-344)
	- minimumFundingGoal (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#347-348)
	- multisigWallet (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#330-331)
	- startsAt (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#336-337)
Reentrancy in Crowdsale.investInternal (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#359-411):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#367-381)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#381-384)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#390-395)
	- investorCount (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#389)
	- tokenAmountOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#396-398)
Reentrancy in Crowdsale.preallocate (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#426-445):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#428-431)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#437-438)
	- tokenAmountOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#439-440)
	- tokensSold (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#437)
	- weiRaised (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#435-437)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#661-693) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#678-693)
	- block.timestamp < startsAt (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#677-693)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#214-216)
FractionalERC20.decimals should be constant (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#198)
MintableToken.mintingFinished should be constant (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#924-927)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#39-41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#87-89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#332-334:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#335:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#342:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#345:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#351:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#368-370:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#381:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#386:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#406:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#408-409:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#450:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#451-453:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#458:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#463:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#471:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#474:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#536:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#589:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#604:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#619:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#629:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#641-642:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#647-648:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#699:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#800:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#865:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#823:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#962-963:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#967:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#13-19) should be declared external
SafeMathLib.minus (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#19-24) should be declared external
SafeMathLib.plus (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#24-30) should be declared external
Ownable.transferOwnership (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#59-70) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#112-114) should be declared external
PricingStrategy.isSane (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#121-124) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#131-138) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#149-151) should be declared external
FinalizeAgent.isSane (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#156-165) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#168-169) should be declared external
StandardToken.balanceOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#848-852) should be declared external
ERC20.balanceOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#172-173) should be declared external
StandardToken.allowance (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#868-874) should be declared external
ERC20.allowance (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#173-174) should be declared external
StandardToken.transfer (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#826-833) should be declared external
ERC20.transfer (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#174-175) should be declared external
StandardToken.transferFrom (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#833-848) should be declared external
ERC20.transferFrom (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#175-176) should be declared external
ERC20.approve (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#176-181) should be declared external
StandardToken.approve (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#853-868) should be declared external
Crowdsale.fallback (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#348-351) should be declared external
Crowdsale.preallocate (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#426-445) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#481-490) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#490-494) should be declared external
Crowdsale.buy (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#500-504) should be declared external
Crowdsale.finalize (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#511-526) should be declared external
Crowdsale.setFinalizeAgent (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#531-537) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#539-547) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#553-559) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#565-575) should be declared external
Crowdsale.setEndsAt (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#587-590) should be declared external
Crowdsale.setMultisig (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#616-620) should be declared external
Crowdsale.loadRefund (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#628-633) should be declared external
Crowdsale.refund (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#635-649) should be declared external
Crowdsale.isFinalizerSane (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#654-655) should be declared external
Crowdsale.isPricingSane (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#656-658) should be declared external
Crowdsale.setOwnerTestValue (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#694-696) should be declared external
Crowdsale.isCrowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#697) should be declared external
StandardToken.addApproval (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#878-894) should be declared external
StandardToken.subApproval (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#900-914) should be declared external
MintableToken.mint (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#945-955) should be declared external
MintableToken.setMintAgent (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#955-961) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#49-52) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#309-348) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#309-310) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#310-314) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#314-317) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#317) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#317-319) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#319-320) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#553-555) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#593-596) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#214-216) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#850) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#869-871) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#871) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#826) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#826) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#833-834) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#834) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#834) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#853) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#853) is not in mixedCase
Parameter '_spender' of StandardToken.addApproval (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#878) is not in mixedCase
Parameter '_addedValue' of StandardToken.addApproval (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#878-879) is not in mixedCase
Parameter '_spender' of StandardToken.subApproval (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#901) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.subApproval (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol#901-903) is not in mixedCase
Function 'MintedEthCappedCrowdsale.MintedEthCappedCrowdsale' (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol) is not in mixedCase
Parameter '_weiCap' of MintedEthCappedCrowdsale.MintedEthCappedCrowdsale (/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0x0fb81a518dca5495986c5c2ec29e989390e0e406.sol analyzed (12 contracts), 112 result(s) found