INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:50:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:106:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:161:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:183:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:242:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function NIMFAToken(
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:251:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_teamETHAddress == address(0x0)) throw;
		                                     ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:252:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_teamNIMFAAddress == address(0x0)) throw;
		                                       ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:253:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_creditFundNIMFAAddress == address(0x0)) throw;
		                                             ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:254:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_reserveNIMFAAddress == address(0x0)) throw;
		                                          ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:256:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_preSaleEndBlock <= block.number) throw;
		                                      ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:258:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_preSaleEndBlock <= _preSaleStartBlock) throw;
		                                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:279:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (preSaleHasEnded && saleHasEnded) throw;
		                                     ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:281:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		    if (block.number < preSaleStartBlock) throw;
		                                          ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:282:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		    if (block.number > preSaleEndBlock) throw;
		                                        ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:284:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < saleStartBlock) throw;
		                                   ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:285:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number > saleEndBlock) throw;
		                                 ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:290:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (0 == msg.value) throw;
		                    ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:296:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (100000 ether < amountOfNIMFA) throw;
		                                  ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:317:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (preSaleHasEnded) throw;
		                     ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:320:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:328:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!preSaleHasEnded) throw;
		                      ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:330:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (saleHasEnded) throw;
		                  ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:333:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:357:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:362:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:367:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:375:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:384:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:392:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != executor) throw;
		                            ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:399:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!allowTransfer) throw;
		                    ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:406:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!allowTransfer) throw;
		                    ^---^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:48:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:119:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:169:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:186:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:312:3: Warning: Invoking events without "emit" prefix is deprecated.
		CreatedNIMFA(msg.sender, amountOfNIMFA);
		^-------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:336:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		uint256 EtherAmount = this.balance;
		                      ^----------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:350:3: Warning: Invoking events without "emit" prefix is deprecated.
		CreatedNIMFA(creditFundNIMFAAddress, creditFund);
		^----------------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:351:3: Warning: Invoking events without "emit" prefix is deprecated.
		CreatedNIMFA(reserveNIMFAAddress, reserveNIMFA);
		^---------------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:352:9: Warning: Invoking events without "emit" prefix is deprecated.
        CreatedNIMFA(teamNIMFAAddress, teamNIMFA);
        ^---------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:68:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:69:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value);
  ^----------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:81:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:82:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value);
  ^----------------------------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:83:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value);
  ^--------------------------------------------^
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:116:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:127:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:160:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:177:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:195:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:242:2: Warning: No visibility specified. Defaulting to "public". 
	function NIMFAToken(
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:315:2: Warning: No visibility specified. Defaulting to "public". 
	function endPreSale() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:326:2: Warning: No visibility specified. Defaulting to "public". 
	function endSale() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:356:2: Warning: No visibility specified. Defaulting to "public". 
	function changeTeamETHAddress(address _newAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:361:2: Warning: No visibility specified. Defaulting to "public". 
	function changeTeamNIMFAAddress(address _newAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:366:2: Warning: No visibility specified. Defaulting to "public". 
	function changeCreditFundNIMFAAddress(address _newAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:374:2: Warning: No visibility specified. Defaulting to "public". 
	function changeAllowTransfer() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:383:2: Warning: No visibility specified. Defaulting to "public". 
	function changeSaleStartBlock(uint256 _saleStartBlock) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:391:2: Warning: No visibility specified. Defaulting to "public". 
	function changeSaleEndBlock(uint256 _saleEndBlock) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:397:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint _value) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:404:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from, address _to, uint _value) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:32:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:36:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:40:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:44:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:48:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ERC20Basic (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#68-77) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#70)
ERC20 (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#81-94) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#83-84)
	-approve (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#84-87)
BasicToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#99-145) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#117-124)
StandardToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#155-212) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#163-174)
	-approve (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#180-192)
NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#215-410) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol)
	-transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#49-56) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
NIMFAToken.version should be constant (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#225-227)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#56:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#190:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#256:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#257:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#258:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#261:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#265:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#267-268:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#287-289:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#290:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#292:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#293:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#294:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#298:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#304:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#335:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#337:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#340:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#342:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#342-345:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#372-373:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#383:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#391:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#397:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#404:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#408:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BasicToken.balanceOf (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#133-145) should be declared external
ERC20Basic.balanceOf (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#69-70) should be declared external
ERC20.allowance (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#82-83) should be declared external
StandardToken.allowance (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#202-212) should be declared external
StandardToken.approve (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#180-192) should be declared external
ERC20.approve (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#84-87) should be declared external
NIMFAToken.endPreSale (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#330-339) should be declared external
NIMFAToken.endSale (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#339-367) should be declared external
NIMFAToken.changeTeamETHAddress (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#367-375) should be declared external
NIMFAToken.changeTeamNIMFAAddress (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#375-384) should be declared external
NIMFAToken.changeCreditFundNIMFAAddress (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#384-392) should be declared external
NIMFAToken.changeAllowTransfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#393-398) should be declared external
NIMFAToken.changeSaleStartBlock (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#398-405) should be declared external
NIMFAToken.changeSaleEndBlock (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#405-410) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol:
	- pragma solidity^0.4.11 (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#133-138) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#118) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#118) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#202) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#202-207) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#163) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#163) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#163) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#180-181) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#181) is not in mixedCase
Parameter '_to' of NIMFAToken.transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol) is not in mixedCase
Parameter '_value' of NIMFAToken.transfer (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol) is not in mixedCase
Parameter '_from' of NIMFAToken.transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol) is not in mixedCase
Parameter '_to' of NIMFAToken.transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol) is not in mixedCase
Parameter '_value' of NIMFAToken.transferFrom (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol) is not in mixedCase
Function 'NIMFAToken.NIMFAToken' (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#251-283) is not in mixedCase
Parameter '_teamETHAddress' of NIMFAToken.NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#252) is not in mixedCase
Parameter '_teamNIMFAAddress' of NIMFAToken.NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#252-253) is not in mixedCase
Parameter '_creditFundNIMFAAddress' of NIMFAToken.NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#253) is not in mixedCase
Parameter '_reserveNIMFAAddress' of NIMFAToken.NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#254) is not in mixedCase
Parameter '_preSaleStartBlock' of NIMFAToken.NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#254-255) is not in mixedCase
Parameter '_preSaleEndBlock' of NIMFAToken.NIMFAToken (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#255) is not in mixedCase
Parameter '_newAddress' of NIMFAToken.changeTeamETHAddress (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#368-371) is not in mixedCase
Parameter '_newAddress' of NIMFAToken.changeTeamNIMFAAddress (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#377) is not in mixedCase
Parameter '_newAddress' of NIMFAToken.changeCreditFundNIMFAAddress (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#385) is not in mixedCase
Parameter '_saleStartBlock' of NIMFAToken.changeSaleStartBlock (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#399-401) is not in mixedCase
Parameter '_saleEndBlock' of NIMFAToken.changeSaleEndBlock (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#406) is not in mixedCase
Variable 'NIMFAToken.ETHContributed' (/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol#237) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/4/0xe26517a9967299453d3f1b48aa005e6127e67210.sol analyzed (6 contracts), 79 result(s) found