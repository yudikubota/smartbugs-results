INFO:Slither:Compilation warnings/errors on /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:56:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:105:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:127:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:133:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:160:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:165:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:398:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:408:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:412:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:418:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:425:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:436:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:455:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:462:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:470:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:488:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:494:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:537:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:538:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:546:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:547:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:555:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:556:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:594:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:615:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:663:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:680:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:695:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:707:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:719:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:723:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:780:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:878:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:964:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiMaximumLimit, uint _weiCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:970:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:975:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:979:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:993:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1005:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Funding) throw;
                                    ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1007:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw; // No empty buys
                       ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1017:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1028:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1052:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1056:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(address(crowdsale) == 0) throw;
                                ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1066:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1079:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1106:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1111:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1132:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Refunding) throw;
                                      ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1135:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(balances[investor] == 0) throw;
                                ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1138:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!(investor.call.value(amount)())) throw;
                                         ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1169:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:13:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:54:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:104:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:497:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:529:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:536:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:536:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:625:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:637:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:647:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:667:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:722:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:854:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:864:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:881:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1031:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(investor, msg.value, customerId);
    ^---------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1069:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensBoughts(tokensBought);
    ^-------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1123:5: Warning: Invoking events without "emit" prefix is deprecated.
    Distributed(investor, amount);
    ^---------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1139:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refunded(investor, amount);
    ^------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:87:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:93:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:98:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:127:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:138:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:202:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:248:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:267:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:268:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:270:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:271:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:272:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:398:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:435:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:610:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:623:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:634:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:645:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:660:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:675:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:765:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:804:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:851:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:858:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:868:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:872:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:885:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:964:3: Warning: No visibility specified. Defaulting to "public". 
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiMaximumLimit, uint _weiCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1094:3: Warning: No visibility specified. Defaulting to "public". 
  function claimAll() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1102:3: Warning: No visibility specified. Defaulting to "public". 
  function claim(uint amount) stopInEmergency {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1129:3: Warning: No visibility specified. Defaulting to "public". 
  function refund() stopInEmergency {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1149:34: Warning: Statement has no effect.
    if(!crowdsale.isCrowdsale()) true;
                                 ^--^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1168:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:38:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:42:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:46:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:50:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:54:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:104:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:194:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:202:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:236:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:770:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:847:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1078:8: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    if(getState() != State.Distributing) {
       ^--------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1081:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return safeMul(balances[investor], tokensBought) / weiRaisedTotal;
           ^---------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1088:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return safeSub(getClaimAmount(investor), claimed[investor]);
           ^--------------------------------------------------^
/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:1155:3: Warning: Function state mutability can be restricted to view
  function getState() public returns(State) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1088-1115):
	External calls:
	- crowdsale.invest.value(weiRaisedTotal)(address(this)) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1102-1105)
	- tokensBought = getToken().balanceOf(address(this)) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1109-1110)
	External calls sending eth:
	- crowdsale.invest.value(weiRaisedTotal)(address(this)) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1102-1105)
	State variables written after the call(s):
	- tokensBought (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1109-1110)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1088-1115) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1088-1115) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.getState (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol) uses a dangerous strict equality:
	- tokensBought == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#613-625):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#624-625)
	State variables written after the call(s):
	- finalized (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#625)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#458-511):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#466-480)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#482-486)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#503)
	- weiRaised (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#501-503)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
PreICOProxyBuyer.claim (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1145-1171) does not use the value returned by external calls:
	-getToken().transfer(investor,amount) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1168-1171)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#55-62) shadows built-in symbol "assert"
SafeMathLib.assert (function @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#110) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#415-449):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#429-433)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#443-444)
	- minimumFundingGoal (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#446-449)
	- multisigWallet (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#433)
	- startsAt (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#442)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#458-511):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#466-480)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#482-486)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#494-497)
	- investorCount (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#491-493)
	- tokenAmountOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#497-501)
Reentrancy in Crowdsale.preallocate (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#526-545):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#529-533)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#537-538)
	- tokenAmountOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#538-543)
	- tokensSold (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#536-537)
	- weiRaised (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#535-536)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#765-797) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#787-797)
	- block.timestamp < startsAt (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#780-797)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#315-317)
ERC20.totalSupply should be constant (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#271)
FractionalERC20.decimals should be constant (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#298)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#62:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#140:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#174:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#436:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#441-442:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#443:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#446:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#451:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#473:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#480:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#487:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#506:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#509:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#553:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#554:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#561:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#564:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#572:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#577:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#620:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#637:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#688:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#704:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#720:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#730:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#744:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#750:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#804:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#905-906:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1016:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1020:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1022:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1038:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1051:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1053-1055:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1066:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1077:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1096-1098:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1101-1102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1126-1127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1149:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1156:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#89-96) should be declared external
SafeMathLib.minus (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#98-101) should be declared external
SafeMathLib.plus (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#101-110) should be declared external
Ownable.transferOwnership (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#148-151) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#200-202) should be declared external
PricingStrategy.isSane (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#210-211) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#221-223) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#243-245) should be declared external
FinalizeAgent.isSane (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#253-255) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#255-261) should be declared external
StandardToken.balanceOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#894-897) should be declared external
ERC20.balanceOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#271-272) should be declared external
ERC20.allowance (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#272-273) should be declared external
StandardToken.allowance (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#909-915) should be declared external
StandardToken.transfer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#874-878) should be declared external
ERC20.transfer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#273-274) should be declared external
StandardToken.transferFrom (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#878-894) should be declared external
ERC20.transferFrom (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#274-279) should be declared external
ERC20.approve (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#279-283) should be declared external
StandardToken.approve (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#897-909) should be declared external
Crowdsale.fallback (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#449-451) should be declared external
Crowdsale.preallocate (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#526-545) should be declared external
Crowdsale.buyWithSignedAddress (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#585-589) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#590-597) should be declared external
Crowdsale.buy (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#606-608) should be declared external
Crowdsale.finalize (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#613-625) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#632-637) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#641-646) should be declared external
Crowdsale.setRequireSignedAddress (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#653-662) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#671-675) should be declared external
Crowdsale.setEndsAt (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#687-689) should be declared external
Crowdsale.setMultisig (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#717-721) should be declared external
Crowdsale.loadRefund (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#729-734) should be declared external
Crowdsale.refund (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#741-750) should be declared external
Crowdsale.isFinalizerSane (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#756-758) should be declared external
Crowdsale.isPricingSane (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#758-760) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#797-798) should be declared external
Crowdsale.isCrowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#799) should be declared external
StandardToken.isToken (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#872-874) should be declared external
PreICOProxyBuyer.investWithId (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1081-1085) should be declared external
PreICOProxyBuyer.investWithoutId (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1085-1087) should be declared external
PreICOProxyBuyer.buyForEverybody (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1088-1115) should be declared external
PreICOProxyBuyer.claimAll (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1139-1143) should be declared external
PreICOProxyBuyer.refund (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol) should be declared external
PreICOProxyBuyer.setCrowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol) should be declared external
PreICOProxyBuyer.fallback (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in PreICOProxyBuyer.refund (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol):
	-! (investor.call.value(amount)()) /unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#135-138) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#415-449) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#417) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#418-421) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#421-423) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#423-424) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#424) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#424-425) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#654) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#696-699) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#315-317) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#894) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#911) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#911-912) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#874-875) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#875) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#878) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#878-880) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#880) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#897-898) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#898) is not in mixedCase
Function 'PreICOProxyBuyer.PreICOProxyBuyer' (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1009-1029) is not in mixedCase
Parameter '_owner' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1011) is not in mixedCase
Parameter '_freezeEndsAt' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1011-1013) is not in mixedCase
Parameter '_weiMinimumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1013) is not in mixedCase
Parameter '_weiMaximumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1013) is not in mixedCase
Parameter '_weiCap' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol#1013) is not in mixedCase
Parameter '_crowdsale' of PreICOProxyBuyer.setCrowdsale (/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x37dad2f4f477b085c5e91a10d6a5eab6dab6a445.sol analyzed (11 contracts), 137 result(s) found