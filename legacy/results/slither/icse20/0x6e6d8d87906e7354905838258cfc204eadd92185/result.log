INFO:Slither:Compilation warnings/errors on /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:13:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:53:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyToken(uint256 initialSupply,string tokenName,uint8 decimalUnits,string tokenSymbol,address centralMinter) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:71:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (frozenAccount[msg.sender]) throw;
                                           ^---^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:73:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;
                                            ^---^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:75:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;
                                                      ^---^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:121:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (balanceOf[this] < amount) throw;
                                          ^---^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:135:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (balanceOf[msg.sender] < amount ) throw;
                                                 ^---^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:79:52: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        if(_to.balance<minBalanceForAccounts)      _to.send(sell((minBalanceForAccounts-_to.balance)/sellPrice));
                                                   ^-----------------------------------------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:85:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:95:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(0, owner, mintedAmount);
            ^------------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:97:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(owner, target, mintedAmount);
            ^-----------------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:105:13: Warning: Invoking events without "emit" prefix is deprecated.
            FrozenFunds(target, freeze);
            ^-------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:127:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, msg.sender, amount);
            ^--------------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:143:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            msg.sender.send(revenue);
            ^----------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:145:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);
            ^--------------------------------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function MyToken(uint256 initialSupply,string tokenName,uint8 decimalUnits,string tokenSymbol,address centralMinter) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:89:9: Warning: No visibility specified. Defaulting to "public". 
        function mintToken(address target, uint256 mintedAmount) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:101:9: Warning: No visibility specified. Defaulting to "public". 
        function freezeAccount(address target, bool freeze) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:109:9: Warning: No visibility specified. Defaulting to "public". 
        function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:117:9: Warning: No visibility specified. Defaulting to "public". 
        function buy() returns (uint amount){
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:119:22: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
            amount = msg.value / buyPrice;
                     ^-------^
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:133:9: Warning: No visibility specified. Defaulting to "public". 
        function sell(uint amount) returns (uint revenue){
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol:151:9: Warning: No visibility specified. Defaulting to "public". 
        function setMinBalance(uint minimumBalanceInFinney) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
MyToken (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#27-157) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#71-91)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
MyToken.standard should be constant (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#29-33)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#15:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#75:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#77:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#77:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#141-143:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#19-27) should be declared external
MyToken.transfer (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#71-91) should be declared external
MyToken.mintToken (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#91-103) should be declared external
MyToken.freezeAccount (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#103-111) should be declared external
MyToken.setPrices (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#111-121) should be declared external
MyToken.buy (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#121-137) should be declared external
MyToken.setMinBalance (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#156-157) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#1-27) is not in CapWords
Function 'MyToken.MyToken' (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#53-71) is not in mixedCase
Parameter '_to' of MyToken.transfer (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#71) is not in mixedCase
Parameter '_value' of MyToken.transfer (/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol#71-73) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x6e6d8d87906e7354905838258cfc204eadd92185.sol analyzed (2 contracts), 19 result(s) found