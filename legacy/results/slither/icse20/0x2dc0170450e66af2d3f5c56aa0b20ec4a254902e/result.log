INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:10:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:52:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:53:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:79:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:80:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:81:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:91:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:108:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyAdvancedToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:121:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:122:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:123:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:132:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:133:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:134:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:135:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:161:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:188:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(getClaimStatus() == false) throw;                // checks if party can make a claim
                                      ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:189:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:193:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:56:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:85:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:126:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:139:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:146:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:147:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:152:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:164:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:195:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:19:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:60:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:63:9: Warning: Unused local variable.
        tokenRecipient spender = tokenRecipient(_spender);
        ^--------------------^
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:78:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:108:5: Warning: No visibility specified. Defaulting to "public". 
    function MyAdvancedToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:120:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:131:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:143:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:150:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:159:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:169:5: Warning: No visibility specified. Defaulting to "public". 
    function setClaim(uint256 _claim)  onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:173:5: Warning: No visibility specified. Defaulting to "public". 
    function claimAmount() returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:177:5: Warning: No visibility specified. Defaulting to "public". 
    function setClaimStatus(bool _status) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:181:5: Warning: No visibility specified. Defaulting to "public". 
    function getClaimStatus() returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:187:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:173:5: Warning: Function state mutability can be restricted to view
    function claimAmount() returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:181:5: Warning: Function state mutability can be restricted to view
    function getClaimStatus() returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
MyAdvancedToken.totalSupply (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#102) shadows:
	- token.totalSupply (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#27-29)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
token (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#22-98) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#52-59)
MyAdvancedToken (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#98-198) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#121-131)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
token.standard should be constant (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#23-24)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#11:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#53:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#54:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#95:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#124:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#124:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#133:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#137:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#163:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#190:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#191:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#195:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#14-19) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#19-21) should be declared external
MyAdvancedToken.transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#121-131) should be declared external
token.transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#52-59) should be declared external
token.approveAndCall (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#68-78) should be declared external
MyAdvancedToken.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#132-145) should be declared external
token.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#78-89) should be declared external
token.fallback (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#95-98) should be declared external
MyAdvancedToken.mintToken (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#145-153) should be declared external
MyAdvancedToken.freezeAccount (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#155-160) should be declared external
MyAdvancedToken.setPrices (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#160-161) should be declared external
MyAdvancedToken.buy (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#161-173) should be declared external
MyAdvancedToken.setClaim (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#177-178) should be declared external
MyAdvancedToken.claimAmount (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#181-182) should be declared external
MyAdvancedToken.setClaimStatus (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#184-188) should be declared external
MyAdvancedToken.sell (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#189-198) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol:
	- pragma solidity^0.4.6 (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#2-19) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#19-21) is not in CapWords
Contract 'token' (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#22-98) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#52) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#52) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#61-62) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#62) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#69) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#69-70) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#70) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#79) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#79) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#79) is not in mixedCase
Parameter '_to' of MyAdvancedToken.transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#121-122) is not in mixedCase
Parameter '_value' of MyAdvancedToken.transfer (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#122) is not in mixedCase
Parameter '_from' of MyAdvancedToken.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#132) is not in mixedCase
Parameter '_to' of MyAdvancedToken.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#132) is not in mixedCase
Parameter '_value' of MyAdvancedToken.transferFrom (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#132-133) is not in mixedCase
Function 'MyAdvancedToken.MyAdvancedToken' (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#111-121) is not in mixedCase
Parameter '_claim' of MyAdvancedToken.setClaim (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#177) is not in mixedCase
Parameter '_status' of MyAdvancedToken.setClaimStatus (/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol#185) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0x2dc0170450e66af2d3f5c56aa0b20ec4a254902e.sol analyzed (4 contracts), 60 result(s) found