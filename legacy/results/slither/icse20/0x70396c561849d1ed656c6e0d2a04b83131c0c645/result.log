INFO:Slither:Compilation warnings/errors on /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:47:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:84:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:100:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:106:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:133:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:138:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:353:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:363:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:367:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:373:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:380:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:391:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:410:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:417:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:425:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:444:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:450:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:494:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:495:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:503:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:504:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:512:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:513:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:551:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:572:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:620:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:637:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:652:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:664:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:676:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:680:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:737:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:829:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:915:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiMaximumLimit, uint _weiCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:921:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:926:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:930:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:944:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:956:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Funding) throw;
                                    ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:958:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw; // No empty buys
                       ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:968:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:979:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1003:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1007:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(address(crowdsale) == 0) throw;
                                ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1017:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1030:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1057:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1062:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1083:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != State.Refunding) throw;
                                      ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1086:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(balances[investor] == 0) throw;
                                ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1092:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!(investor.call.value(amount)())) throw;
                                         ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1123:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:4:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:45:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:83:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:453:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:486:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:493:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:493:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:582:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:594:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:604:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:624:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:679:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:805:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:815:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:832:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:982:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(investor, msg.value, customerId);
    ^---------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1020:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensBoughts(tokensBought);
    ^-------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1074:5: Warning: Invoking events without "emit" prefix is deprecated.
    Distributed(investor, amount);
    ^---------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1093:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refunded(investor, amount);
    ^------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:66:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:77:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:100:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:111:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:169:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:209:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:222:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:223:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:225:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:226:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:227:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:353:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:390:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:567:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:580:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:591:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:602:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:617:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:632:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:722:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:761:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:802:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:809:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:819:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:823:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:836:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:915:3: Warning: No visibility specified. Defaulting to "public". 
  function PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiMaximumLimit, uint _weiCap) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1045:3: Warning: No visibility specified. Defaulting to "public". 
  function claimAll() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1053:3: Warning: No visibility specified. Defaulting to "public". 
  function claim(uint amount) stopInEmergency {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1080:3: Warning: No visibility specified. Defaulting to "public". 
  function refund() stopInEmergency {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1103:34: Warning: Statement has no effect.
    if(!crowdsale.isCrowdsale()) true;
                                 ^--^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1122:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:29:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:33:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:37:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:41:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:45:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:83:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:161:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:169:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:197:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:727:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:798:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1029:8: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    if(getState() != State.Distributing) {
       ^--------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1032:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return safeMul(balances[investor], tokensBought) / weiRaisedTotal;
           ^---------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1039:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return safeSub(getClaimAmount(investor), claimed[investor]);
           ^--------------------------------------------------^
/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:1109:3: Warning: Function state mutability can be restricted to view
  function getState() public returns(State) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in PreICOProxyBuyer.buyForEverybody (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1039-1065):
	External calls:
	- crowdsale.invest.value(weiRaisedTotal)(address(this)) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1052-1054)
	- tokensBought = getToken().balanceOf(address(this)) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1056-1060)
	External calls sending eth:
	- crowdsale.invest.value(weiRaisedTotal)(address(this)) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1052-1054)
	State variables written after the call(s):
	- tokensBought (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1056-1060)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
PreICOProxyBuyer.buyForEverybody (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1039-1065) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.buyForEverybody (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1039-1065) uses a dangerous strict equality:
	- tokensBought == 0
PreICOProxyBuyer.getState (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol) uses a dangerous strict equality:
	- tokensBought == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#567-582):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#580-581)
	State variables written after the call(s):
	- finalized (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#582)
Reentrancy in Crowdsale.investInternal (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#413-466):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#421-434)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#435-439)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#458-460)
	- weiRaised (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#457-458)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
PreICOProxyBuyer.claim (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1091-1113) does not use the value returned by external calls:
	-getToken().transfer(investor,amount) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1110-1111)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#46-57) shadows built-in symbol "assert"
SafeMathLib.assert (function @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#92-95) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#366-401):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#383-384)
	State variables written after the call(s):
	- endsAt (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#397-398)
	- minimumFundingGoal (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#401)
	- multisigWallet (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#384-388)
	- startsAt (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#395)
Reentrancy in Crowdsale.investInternal (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#413-466):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#421-434)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#435-439)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#447-450)
	- investorCount (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#444-447)
	- tokenAmountOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#452-453)
Reentrancy in Crowdsale.preallocate (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#481-502):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#486-489)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#493-494)
	- tokenAmountOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#495-496)
	- tokensSold (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#492-493)
	- weiRaised (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#492)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#721-752) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#738-752)
	- block.timestamp < startsAt (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#736-752)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#269-271)
ERC20.totalSupply should be constant (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#225-226)
FractionalERC20.decimals should be constant (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#252-253)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#55:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#95:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#112:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#144-145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#388:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#391:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#397:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#404:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#424-425:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#434:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#442:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#463:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#464:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#509:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#509:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#517-518:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#521:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#529:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#530:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#574-576:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#593:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#644:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#661:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#675-676:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#686:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#700:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#707:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#759:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#854:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#966:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#967:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#971:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#985:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1001:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1001-1002:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1015:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1028:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1045:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1050:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1061-1062:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1072-1073:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1093:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1099:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#67-73) should be declared external
SafeMathLib.minus (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#74-79) should be declared external
SafeMathLib.plus (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#79-88) should be declared external
Ownable.transferOwnership (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#113-124) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#167-169) should be declared external
PricingStrategy.isSane (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#174-177) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#189-193) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#203-205) should be declared external
FinalizeAgent.isSane (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#218-221) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#222-223) should be declared external
StandardToken.balanceOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#845-847) should be declared external
ERC20.balanceOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#226) should be declared external
ERC20.allowance (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#227-228) should be declared external
StandardToken.allowance (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#859-865) should be declared external
StandardToken.transfer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#825-828) should be declared external
ERC20.transfer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#228-229) should be declared external
ERC20.transferFrom (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#229-233) should be declared external
StandardToken.transferFrom (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#828-845) should be declared external
ERC20.approve (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#234-236) should be declared external
StandardToken.approve (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#847-859) should be declared external
Crowdsale.fallback (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#404) should be declared external
Crowdsale.preallocate (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#481-502) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#538-545) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#547-554) should be declared external
Crowdsale.buy (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#557-563) should be declared external
Crowdsale.finalize (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#567-582) should be declared external
Crowdsale.setFinalizeAgent (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#588-593) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#597-602) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#610-617) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#623-630) should be declared external
Crowdsale.setEndsAt (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#644-645) should be declared external
Crowdsale.setMultisig (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#672-677) should be declared external
Crowdsale.loadRefund (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#684-687) should be declared external
Crowdsale.refund (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#694-707) should be declared external
Crowdsale.isFinalizerSane (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#712-714) should be declared external
Crowdsale.isPricingSane (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#715-717) should be declared external
Crowdsale.setOwnerTestValue (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#754-755) should be declared external
Crowdsale.isCrowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#755-756) should be declared external
StandardToken.isToken (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#821-824) should be declared external
PreICOProxyBuyer.investWithId (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1029-1032) should be declared external
PreICOProxyBuyer.investWithoutId (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1032-1038) should be declared external
PreICOProxyBuyer.buyForEverybody (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1039-1065) should be declared external
PreICOProxyBuyer.claimAll (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1089-1090) should be declared external
PreICOProxyBuyer.refund (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1116-1125) should be declared external
PreICOProxyBuyer.setCrowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol) should be declared external
PreICOProxyBuyer.fallback (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in PreICOProxyBuyer.refund (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#1116-1125):
	-! (investor.call.value(amount)()) /unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#105-111) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#366-401) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#367-368) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#370-372) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#372-373) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#374-376) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#376) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#376-378) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#610-611) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#651-652) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#269-271) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#845) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#859-860) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#860) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#825) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#825) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#828-829) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#829) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#829) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#847-848) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#848) is not in mixedCase
Function 'PreICOProxyBuyer.PreICOProxyBuyer' (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#958-978) is not in mixedCase
Parameter '_owner' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#958-960) is not in mixedCase
Parameter '_freezeEndsAt' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#960) is not in mixedCase
Parameter '_weiMinimumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#960-962) is not in mixedCase
Parameter '_weiMaximumLimit' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#962) is not in mixedCase
Parameter '_weiCap' of PreICOProxyBuyer.PreICOProxyBuyer (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol#963-964) is not in mixedCase
Parameter '_crowdsale' of PreICOProxyBuyer.setCrowdsale (/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/9/0x70396c561849d1ed656c6e0d2a04b83131c0c645.sol analyzed (11 contracts), 137 result(s) found