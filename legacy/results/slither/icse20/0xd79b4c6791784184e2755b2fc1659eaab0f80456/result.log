INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:23:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function HonestDice() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract HonestDice {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:139:3: Warning: This declaration shadows an existing declaration.
		uint betsLocked = block.number;
		^-------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:14:2: The shadowed declaration is here:
	uint betsLocked;
	^-------------^

/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:144:3: Warning: This declaration shadows an existing declaration.
		uint betsLocked = 0;
		^-------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:14:2: The shadowed declaration is here:
	uint betsLocked;
	^-------------^

/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:59:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Roll r = rolls[_user];
		^----^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:66:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Roll r = rolls[msg.sender];
		^----^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:74:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Roll r = rolls[msg.sender];
		^----^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:93:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Roll r = rolls[msg.sender];
		^----^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:105:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Roll r = rolls[msg.sender];
		^----^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:115:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Roll r = rolls[msg.sender];
		^----^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:30:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			msg.sender.send(msg.value); // Refund
			^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:34:3: Warning: Invoking events without "emit" prefix is deprecated.
		Bet(msg.sender, block.number, msg.value, chance);
		^----------------------------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:51:15: Warning: "sha3" has been deprecated in favour of "keccak256"
		return uint(sha3(input));
		            ^---------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:51:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return uint(sha3(input));
		            ^---------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:51:15: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
		return uint(sha3(input));
		            ^---------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:68:7: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:68:7: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:68:7: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:69:20: Warning: "sha3" has been deprecated in favour of "keccak256"
		return hashTo256(sha3(secret, r.serverSeed));
		                 ^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:69:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return hashTo256(sha3(secret, r.serverSeed));
		                 ^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:76:7: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:76:7: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:76:7: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:77:17: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (hashTo256(sha3(secret, r.serverSeed)) < r.chance) { // Winner
		              ^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:77:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (hashTo256(sha3(secret, r.serverSeed)) < r.chance) { // Winner
		              ^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:89:10: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		return this.balance * maxPayout / 100;
		       ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:95:7: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:95:7: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:95:7: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
		if (sha3(secret) != r.secretHash) return;
		    ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:96:17: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (hashTo256(sha3(secret, r.serverSeed)) < r.chance) { // Winner
		              ^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:96:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (hashTo256(sha3(secret, r.serverSeed)) < r.chance) { // Winner
		              ^------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:97:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			msg.sender.send(calcWinnings(r.value, r.chance) - seedCost);
			^---------------------------------------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:98:4: Warning: Invoking events without "emit" prefix is deprecated.
			Won(msg.sender, r.value, r.chance);
			^--------------------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:116:3: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
		msg.sender.send(r.value);
		^----------------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:125:10: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		return this.balance;
		       ^----------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:150:3: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
		owner.send(amount);
		^----------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:23:2: Warning: No visibility specified. Defaulting to "public". 
	function HonestDice() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:28:2: Warning: No visibility specified. Defaulting to "public". 
	function roll(uint chance, bytes32 secretHash) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:29:37: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
		if (chance < 1 || chance > 255 || msg.value < minimumBet || calcWinnings(msg.value, chance) > getMaxPayout() || betsLocked != 0) { 
		                                  ^-------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:29:76: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
		if (chance < 1 || chance > 255 || msg.value < minimumBet || calcWinnings(msg.value, chance) > getMaxPayout() || betsLocked != 0) { 
		                                                                         ^-------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:30:20: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
			msg.sender.send(msg.value); // Refund
			                ^-------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:33:28: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
		rolls[msg.sender] = Roll(msg.value, chance, block.number, secretHash, 0);
		                         ^-------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:34:33: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
		Bet(msg.sender, block.number, msg.value, chance);
		                              ^-------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:37:2: Warning: No visibility specified. Defaulting to "public". 
	function serverSeed(address user, bytes32 seed) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:44:2: Warning: No visibility specified. Defaulting to "public". 
	function hashTo256(bytes32 hash) constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:49:2: Warning: No visibility specified. Defaulting to "public". 
	function hash(bytes32 input) constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:54:2: Warning: No visibility specified. Defaulting to "public". 
	function isReady() constant returns (bool _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:58:2: Warning: No visibility specified. Defaulting to "public". 
	function isReadyFor(address _user) constant returns (bool _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:64:2: Warning: No visibility specified. Defaulting to "public". 
	function getResult(bytes32 secret) constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:72:2: Warning: No visibility specified. Defaulting to "public". 
	function didWin(bytes32 secret) constant returns (bool _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:83:2: Warning: No visibility specified. Defaulting to "public". 
	function calcWinnings(uint256 value, uint chance) constant returns (uint256 _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:88:2: Warning: No visibility specified. Defaulting to "public". 
	function getMaxPayout() constant returns (uint256 _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:92:2: Warning: No visibility specified. Defaulting to "public". 
	function claim(bytes32 secret) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:104:2: Warning: No visibility specified. Defaulting to "public". 
	function canClaimTimeout() constant returns (bool _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:112:2: Warning: No visibility specified. Defaulting to "public". 
	function claimTimeout() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:120:2: Warning: No visibility specified. Defaulting to "public". 
	function getMinimumBet() constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:124:2: Warning: No visibility specified. Defaulting to "public". 
	function getBankroll() constant returns (uint256 _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:128:2: Warning: No visibility specified. Defaulting to "public". 
	function getBetsLocked() constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:132:2: Warning: No visibility specified. Defaulting to "public". 
	function setFeed(address newFeed) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:137:2: Warning: No visibility specified. Defaulting to "public". 
	function lockBetsForWithdraw() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:139:3: Warning: Unused local variable.
		uint betsLocked = block.number;
		^-------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:142:2: Warning: No visibility specified. Defaulting to "public". 
	function unlockBets() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:144:3: Warning: Unused local variable.
		uint betsLocked = 0;
		^-------------^
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function withdraw(uint amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:44:2: Warning: Function state mutability can be restricted to pure
	function hashTo256(bytes32 hash) constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:49:2: Warning: Function state mutability can be restricted to pure
	function hash(bytes32 input) constant returns (uint _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:83:2: Warning: Function state mutability can be restricted to pure
	function calcWinnings(uint256 value, uint chance) constant returns (uint256 _r) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:137:2: Warning: Function state mutability can be restricted to view
	function lockBetsForWithdraw() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol:142:2: Warning: Function state mutability can be restricted to view
	function unlockBets() {
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
HonestDice.betsLocked (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#14-15) is never initialized. It is used in:
	- roll (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#28-37)
	- getBetsLocked (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#133-137)
	- withdraw (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#150-152)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[92m
HonestDice.hashTo256.hash (local variable @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#45) shadows:
	- HonestDice.hash (function @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#49-54)
HonestDice.lockBetsForWithdraw.betsLocked (local variable @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#147-148) shadows:
	- HonestDice.betsLocked (state variable @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#14-15)
HonestDice.unlockBets.betsLocked (local variable @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#149-150) shadows:
	- HonestDice.betsLocked (state variable @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#14-15)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
HonestDice.betsLocked should be constant (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#14-15)
HonestDice.minimumBet should be constant (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#17-18)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#54:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#69-72:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#72:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#77-78:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#78-83:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#96-97:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#97-105:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
HonestDice.roll (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#28-37) should be declared external
HonestDice.serverSeed (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#37-44) should be declared external
HonestDice.hash (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#49-54) should be declared external
HonestDice.isReady (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#55-58) should be declared external
HonestDice.getResult (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#64-73) should be declared external
HonestDice.didWin (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#73-83) should be declared external
HonestDice.claim (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#94-106) should be declared external
HonestDice.claimTimeout (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#114-124) should be declared external
HonestDice.getMinimumBet (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#124-128) should be declared external
HonestDice.getBankroll (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#128-133) should be declared external
HonestDice.getBetsLocked (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#133-137) should be declared external
HonestDice.setFeed (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#138-142) should be declared external
HonestDice.lockBetsForWithdraw (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#143-148) should be declared external
HonestDice.unlockBets (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#148-150) should be declared external
HonestDice.withdraw (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#150-152) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'HonestDice.HonestDice' (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#23-28) is not in mixedCase
Parameter '_user' of HonestDice.isReadyFor (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#59-60) is not in mixedCase
Constant 'HonestDice.maxPayout' (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#18) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'HonestDice.seedCost' (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#19) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'HonestDice.timeout' (/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol#21-23) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0xd79b4c6791784184e2755b2fc1659eaab0f80456.sol analyzed (1 contracts), 32 result(s) found