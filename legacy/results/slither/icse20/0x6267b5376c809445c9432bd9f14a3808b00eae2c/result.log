INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:101:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:151:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:156:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:161:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:390:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:400:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:404:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:410:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:417:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:430:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:450:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:457:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:496:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:513:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:534:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:551:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:555:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:572:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:587:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:599:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:611:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:615:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:683:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:778:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maxInvestment) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:822:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                   ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:823:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:835:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:836:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:848:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track participants for thank you email
                          ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:849:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:867:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (bytes1(sha3(customerId)) != checksum) throw;
                                              ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1041:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1169:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1176:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1206:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap, uint _maxInvestment) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1250:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CargoXCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap, uint _maxInvestment) MintedEthCappedCrowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _weiCap, _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:499:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:559:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:614:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:668:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:810:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:821:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(addr);
                   ^----------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:821:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
    bytes32 hash = sha256(addr);
                   ^----------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:867:16: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:867:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:867:16: Warning: The provided argument of type uint128 is not implicitly convertible to expected type bytes memory.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:903:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, requireWhitelistedAddress, signerAddress, whitelisterAddress);
    ^-----------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:915:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, requireWhitelistedAddress, signerAddress, whitelisterAddress);
    ^-----------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:925:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, requireWhitelistedAddress, signerAddress, whitelisterAddress);
    ^-----------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1005:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1049:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1067:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1155:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1163:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1275:5: Warning: Invoking events without "emit" prefix is deprecated.
    WeiCapChanged(weiCap);
    ^-------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1284:5: Warning: Invoking events without "emit" prefix is deprecated.
    MinimumFundingGoalChanged(minimumFundingGoal);
    ^-------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1293:5: Warning: Invoking events without "emit" prefix is deprecated.
    MaximalInvestmentChanged(maximalInvestment);
    ^-----------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1302:5: Warning: Invoking events without "emit" prefix is deprecated.
    MaximalInvestmentTimeTresholdChanged(_maximalInvestmentTimeTreshold);
    ^------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1312:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(startsAt);
    ^-----------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:34:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:48:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:59:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:60:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:61:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:101:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:119:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:201:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:210:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:250:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:256:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:261:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:390:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:429:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:529:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:548:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:567:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:657:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:666:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:707:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:778:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maxInvestment) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:901:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:912:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:922:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireWhitelistedAddress(bool value, address _whitelistAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1002:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1014:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1040:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1058:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1077:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1206:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap, uint _maxInvestment) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1213:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1213:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1213:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1213:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1250:3: Warning: No visibility specified. Defaulting to "public". 
  function CargoXCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap, uint _maxInvestment) MintedEthCappedCrowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal, _weiCap, _maxInvestment) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1273:3: Warning: No visibility specified. Defaulting to "public". 
  function setWeiCap(uint _weiCap) onlyOwner inState(State.PreFunding) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1282:3: Warning: No visibility specified. Defaulting to "public". 
  function setMinimumFundingGoal(uint _minimumFundingGoal) onlyOwner inState(State.PreFunding) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1291:3: Warning: No visibility specified. Defaulting to "public". 
  function setMaximalInvestment(uint _maxInvestment) onlyOwner inState(State.PreFunding) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1300:3: Warning: No visibility specified. Defaulting to "public". 
  function setMaximalInvestmentTimeTreshold(uint _maximalInvestmentTimeTreshold) onlyOwner inState(State.PreFunding) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1309:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner inState(State.PreFunding) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:22:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:193:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:201:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:210:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:250:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:256:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:261:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:673:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:961:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:967:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:974:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:979:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:1105:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#529-542):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#541)
	State variables written after the call(s):
	- finalized (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#542)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#453-521):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#462-474)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#476-480)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#498-499)
	- weiRaised (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#496)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#453-521):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#462-474)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#476-480)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#499-506)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#501-505)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#403-442):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#421-423)
	State variables written after the call(s):
	- endsAt (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#436-437)
	- maximalInvestment (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#440-442)
	- minimumFundingGoal (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#440)
	- multisigWallet (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#423-426)
	- startsAt (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#434)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#453-521):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#462-474)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#476-480)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#487-490)
	- investorCount (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#486)
	- tokenAmountOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#495)
Reentrancy in Crowdsale.preallocate (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#816-836):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#821-822)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#828-830)
	- tokenAmountOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#830-832)
	- tokensSold (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#828)
	- weiRaised (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#824-828)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#653-682) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#667-682)
	- block.timestamp < startsAt (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#666-682)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#308-310)
FractionalERC20.decimals should be constant (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#86-89)
MintableToken.mintingFinished should be constant (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1174-1175)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:
	- Version used: ['^0.4.11', '^0.4.14', '^0.4.6', '^0.4.8']
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1 declares pragma solidity^0.4.11
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#11-14 declares pragma solidity^0.4.6
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#78-80 declares pragma solidity^0.4.8
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#142 declares pragma solidity^0.4.6
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#193-194 declares pragma solidity^0.4.6
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#243 declares pragma solidity^0.4.6
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#760-761 declares pragma solidity^0.4.8
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1138-1139 declares pragma solidity^0.4.14
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1159 declares pragma solidity^0.4.6
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1225-1226 declares pragma solidity^0.4.8
	- /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1273 declares pragma solidity^0.4.8
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#161:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#427:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#430:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#436:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#439:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#444:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#463:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#474:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#533:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#558-559:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#577:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#579:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#594:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#609:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#619:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#633:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#640:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#703:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#848:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#849:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#862:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#865:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#875:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#879:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#903-904:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#903-904:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1213:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1214:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
FinalizeAgent.isFinalizeAgent (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#22-26) should be declared external
FinalizeAgent.isSane (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#31-33) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#37-38) should be declared external
BasicToken.balanceOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1043-1046) should be declared external
ERC20Basic.balanceOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#47-48) should be declared external
ERC20Basic.transfer (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#48-49) should be declared external
BasicToken.transfer (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1035-1038) should be declared external
StandardToken.allowance (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1123-1128) should be declared external
ERC20.allowance (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#59-60) should be declared external
ERC20.transferFrom (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#60-61) should be declared external
StandardToken.transferFrom (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1063-1075) should be declared external
StandardToken.approve (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1086-1105) should be declared external
ERC20.approve (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#61-62) should be declared external
Ownable.transferOwnership (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#122-129) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#199-201) should be declared external
PricingStrategy.isSane (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#207-210) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#218-219) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#231-233) should be declared external
SafeMathLib.times (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#261-272) should be declared external
SafeMathLib.minus (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#272) should be declared external
SafeMathLib.plus (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#272-274) should be declared external
CrowdsaleBase.fallback (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#444) should be declared external
Crowdsale.fallback (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#920-922) should be declared external
CrowdsaleBase.finalize (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#529-542) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#548-559) should be declared external
CrowdsaleBase.setEndsAt (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#571-580) should be declared external
CrowdsaleBase.setMultisig (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#606-610) should be declared external
CrowdsaleBase.loadRefund (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#615-621) should be declared external
CrowdsaleBase.refund (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#628-640) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#646-648) should be declared external
CrowdsaleBase.isPricingSane (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#649-651) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#689-693) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#697-700) should be declared external
CrowdsaleBase.isCrowdsale (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#701) should be declared external
Crowdsale.preallocate (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#816-836) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#889-898) should be declared external
Crowdsale.buyWithCustomerIdWithChecksum (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#901-907) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#909-912) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#924-931) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#934-944) should be declared external
Crowdsale.setRequireWhitelistedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#948-963) should be declared external
Crowdsale.addToWhitelist (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#967-970) should be declared external
Crowdsale.removeFromWhitelist (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#970-979) should be declared external
Crowdsale.isWhitelistedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#979-986) should be declared external
StandardTokenExt.isToken (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1149-1150) should be declared external
MintableToken.mint (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1189-1206) should be declared external
MintableToken.setMintAgent (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1206-1207) should be declared external
CargoXCrowdsale.setWeiCap (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1312-1314) should be declared external
CargoXCrowdsale.setMinimumFundingGoal (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) should be declared external
CargoXCrowdsale.setMaximalInvestment (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) should be declared external
CargoXCrowdsale.setMaximalInvestmentTimeTreshold (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) should be declared external
CargoXCrowdsale.setStartsAt (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol:
	- pragma solidity^0.4.11 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#11-14): it allows old versions
	- pragma solidity^0.4.8 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#78-80): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#142): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#193-194): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#243): it allows old versions
	- pragma solidity^0.4.8 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#760-761): it allows old versions
	- pragma solidity^0.4.14 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1138-1139): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1159): it allows old versions
	- pragma solidity^0.4.8 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1225-1226): it allows old versions
	- pragma solidity^0.4.8 (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1273): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#107-109) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#403-442) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#407) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#407-410) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#410-413) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#413-415) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#415) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#415-416) is not in mixedCase
Parameter '_maxInvestment' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#416-417) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#583-586) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#308-310) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#792-799) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#937) is not in mixedCase
Parameter '_whitelistAddress' of Crowdsale.setRequireWhitelistedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#954) is not in mixedCase
Parameter '_addresses' of Crowdsale.addToWhitelist (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#967) is not in mixedCase
Parameter '_addresses' of Crowdsale.removeFromWhitelist (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#970-971) is not in mixedCase
Parameter '_address' of Crowdsale.isWhitelistedAddress (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#979) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1043) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1035) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1035-1036) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1126) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1126) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1063) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1063-1064) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1064) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1086) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1086) is not in mixedCase
Function 'MintedEthCappedCrowdsale.MintedEthCappedCrowdsale' (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1240-1250) is not in mixedCase
Parameter '_weiCap' of MintedEthCappedCrowdsale.MintedEthCappedCrowdsale (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1246) is not in mixedCase
Function 'CargoXCrowdsale.CargoXCrowdsale' (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1283-1292) is not in mixedCase
Parameter '_weiCap' of CargoXCrowdsale.setWeiCap (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol#1312-1314) is not in mixedCase
Parameter '_minimumFundingGoal' of CargoXCrowdsale.setMinimumFundingGoal (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) is not in mixedCase
Parameter '_maxInvestment' of CargoXCrowdsale.setMaximalInvestment (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) is not in mixedCase
Parameter '_maximalInvestmentTimeTreshold' of CargoXCrowdsale.setMaximalInvestmentTimeTreshold (/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x6267b5376c809445c9432bd9f14a3808b00eae2c.sol analyzed (17 contracts), 127 result(s) found