INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:74:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:218:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:802:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function WINCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:939:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function WaWlletTokenCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) WINCrowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:92:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:323:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:383:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:438:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:492:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:628:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:662:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:678:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:704:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:725:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:762:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:770:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:834:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:894:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:917:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:929:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^

INFO:Detectors:[93m
Reentrancy in WINCrowdsale.bitcoinInvest (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#880-927):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#885-903)
	- getState() == State.Funding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#891-903)
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#904-905)
	State variables written after the call(s):
	- weiRaised (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#916-917)
Reentrancy in CrowdsaleBase.doFinalize (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#345-358):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#356-357)
	State variables written after the call(s):
	- finalized (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#357-358)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#274-340):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#279-291)
	- getState() == State.Funding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#288-291)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#297-303)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#317-319)
	- weiRaised (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#315-317)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#274-340):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#279-291)
	- getState() == State.Funding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#288-291)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#297-303)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#319-320)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#319-320)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#222-263):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#238-241)
	State variables written after the call(s):
	- endsAt (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#253-254)
	- minimumFundingGoal (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#262-263)
	- multisigWallet (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#243-244)
	- startsAt (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#249)
Reentrancy in WINCrowdsale.bitcoinInvest (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#880-927):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#885-903)
	- getState() == State.Funding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#891-903)
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#904-905)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#912-913)
	- investorCount (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#907)
	- tokenAmountOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#914-916)
	- tokensSold (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#917)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#274-340):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#279-291)
	- getState() == State.Funding (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#288-291)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#297-303)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#310-312)
	- investorCount (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#308-310)
	- tokenAmountOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#314-315)
Reentrancy in WINCrowdsale.preallocate (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#845-862):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#848)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#855-856)
	- tokenAmountOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#856-857)
	- tokensSold (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#852-855)
	- weiRaised (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#852)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#475-497) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#486-497)
	- block.timestamp < startsAt (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#482-497)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#136-138)
FractionalERC20.decimals should be constant (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#582-584)
MintableToken.mintingFinished should be constant (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#765-766)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
FinalizeAgent.isFinalizeAgent (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#47-51) should be declared external
FinalizeAgent.isSane (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#58) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#63-67) should be declared external
Ownable.transferOwnership (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#91-102) should be declared external
CrowdsaleBase.fallback (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#265-266) should be declared external
WaWlletTokenCrowdsale.fallback (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol) should be declared external
CrowdsaleBase.doFinalize (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#345-358) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#366-372) should be declared external
CrowdsaleBase.setEndsAt (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#389-398) should be declared external
CrowdsaleBase.setMultisig (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#422-430) should be declared external
CrowdsaleBase.loadRefund (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#435-439) should be declared external
CrowdsaleBase.refund (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#445-457) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#466-469) should be declared external
CrowdsaleBase.isPricingSane (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#470-472) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#502-505) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#513-521) should be declared external
CrowdsaleBase.isCrowdsale (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#521-524) should be declared external
BasicToken.totalSupply (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#629-634) should be declared external
ERC20Basic.totalSupply (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#555) should be declared external
ERC20Basic.balanceOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#555-558) should be declared external
BasicToken.balanceOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#656-659) should be declared external
ERC20Basic.transfer (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#560-566) should be declared external
BasicToken.transfer (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#637-651) should be declared external
StandardToken.allowance (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#703-704) should be declared external
ERC20.allowance (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#571-573) should be declared external
ERC20.transferFrom (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#573-575) should be declared external
StandardToken.transferFrom (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#669-676) should be declared external
StandardToken.approve (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#693-696) should be declared external
ERC20.approve (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#575-580) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#585-589) should be declared external
PricingStrategy.isSane (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#593-594) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#597-599) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#621-625) should be declared external
StandardToken.increaseApproval (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#716-723) should be declared external
StandardToken.decreaseApproval (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#745-757) should be declared external
StandardTokenExt.isToken (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#760-761) should be declared external
MintableToken.mint (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#781-795) should be declared external
MintableToken.setMintAgent (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#795-799) should be declared external
WINCrowdsale.preallocate (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#845-862) should be declared external
WINCrowdsale.bitcoinInvest (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#880-927) should be declared external
WINCrowdsale.setRequireCustomerId (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#939-944) should be declared external
WINCrowdsale.setRequireSignedAddress (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#946-954) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol:
	- pragma solidity^0.4.18 (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#79-80) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#222-263) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#224) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#224-226) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#226-227) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#227) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#227-228) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#228-231) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#404) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#136-138) is not in mixedCase
Parameter '' of PricingStrategy.isSane (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#593) is not in mixedCase
Parameter '' of PricingStrategy.isPresalePurchase (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#597) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#656-657) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#637) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#637-638) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#703) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#703) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#670) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#670) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#670) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#693) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#693-695) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#718) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#718) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#745-746) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#746) is not in mixedCase
Function 'WINCrowdsale.WINCrowdsale' (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#817-823) is not in mixedCase
Parameter '_signerAddress' of WINCrowdsale.setRequireSignedAddress (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#946) is not in mixedCase
Parameter '' of WaWlletTokenCrowdsale.isBreakingCap (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol) is not in mixedCase
Parameter '_scope_0' of WaWlletTokenCrowdsale.isBreakingCap (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol) is not in mixedCase
Parameter '_scope_1' of WaWlletTokenCrowdsale.isBreakingCap (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol) is not in mixedCase
Function 'WaWlletTokenCrowdsale.WaWlletTokenCrowdsale' (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#958-971) is not in mixedCase
Parameter '_maximumSellableTokens' of WaWlletTokenCrowdsale.WaWlletTokenCrowdsale (/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol#963-966) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0x235dcf36b309ea22d00903c28534e0e34a42e90b.sol analyzed (15 contracts), 86 result(s) found