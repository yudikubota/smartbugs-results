INFO:Slither:Compilation warnings/errors on /unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:25:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:43:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:148:5: Warning: Functions in interfaces should be declared external.
    function getPlayersBattleStats(address player) public constant returns (
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:266:3: Warning: Functions in interfaces should be declared external.
  function totalSupply() public constant returns (uint);
  ^----------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:267:3: Warning: Functions in interfaces should be declared external.
  function balanceOf(address tokenOwner) public constant returns (uint balance);
  ^----------------------------------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:268:3: Warning: Functions in interfaces should be declared external.
  function allowance(address tokenOwner, address spender) public constant returns (uint remaining);
  ^-----------------------------------------------------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:269:3: Warning: Functions in interfaces should be declared external.
  function transfer(address to, uint tokens) public returns (bool success);
  ^-----------------------------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:270:3: Warning: Functions in interfaces should be declared external.
  function approve(address spender, uint tokens) public returns (bool success);
  ^---------------------------------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:271:3: Warning: Functions in interfaces should be declared external.
  function transferFrom(address from, address to, uint tokens) public returns (bool success);
  ^-----------------------------------------------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:384:5: Warning: Invoking events without "emit" prefix is deprecated.
    UnitBought(_player, _cardId, iAmount);
    ^-----------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:431:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpgradeCardBought(_player, _upgradeId);
    ^------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:451:5: Warning: Different number of components on the left hand side (7) than on the right hand side (6).
    (,,,,upgradeClass, unitId, upgradeValue) = rare.getRarePLATInfo(_rareId);
    ^----------------------------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:485:5: Warning: Invoking events without "emit" prefix is deprecated.
    BuyRareCard(_player, previousOwner, _rareId, ethCost);
    ^---------------------------------------------------^
/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:540:5: Warning: Invoking events without "emit" prefix is deprecated.
    UnitSold(msg.sender, _unitId, _amount);
    ^------------------------------------^

INFO:Detectors:[93m
Reentrancy in BitGuildTrade.sellCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#502-555):
	External calls:
	- require(bool)(cards.getGameStarted()) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#503)
	- existing = cards.getOwnedCount(msg.sender,_unitId) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#503-505)
	- (schemaUnitId,coinCost,None,sellable) = schema.getBattleCardInfo(_unitId,existing,_amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#512-513)
	- ethCost = SafeMath.mul(schema.unitBattlePLATCost(_unitId),_amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#513)
	- (schemaUnitId,coinProduction,coinCost,None,sellable) = schema.getCardInfo(_unitId,existing,_amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#515-519)
	- ethCost = SafeMath.mul(schema.unitPLATCost(_unitId),_amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#519-520)
	- coinChange = SafeMath.add(cards.balanceOfUnclaimed(msg.sender),SafeMath.div(SafeMath.mul(coinCost,70),100)) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#525-527)
	- coinChange = cards.balanceOfUnclaimed(msg.sender) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#527-530)
	- cards.setLastJadeSaveTime(msg.sender) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#530-531)
	- cards.setRoughSupply(coinChange) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#531)
	- cards.setJadeCoin(msg.sender,coinChange,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#531-534)
	- decreaseCoin = cards.getUnitsInProduction(msg.sender,_unitId,_amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#535-537)
	- cards.reducePlayersJadeProduction(msg.sender,decreaseCoin) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#537-538)
	- cards.setUintCoinProduction(msg.sender,_unitId,decreaseCoin,false) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#540-544)
	- cards.setCoinBalance(msg.sender,SafeMath.div(SafeMath.mul(ethCost,70),100),1,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#545-547)
	- cards.setOwnedCount(msg.sender,_unitId,_amount,false) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#547-550)
	- cards.setUintsOwnerCount(msg.sender,_amount,false) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#550-551)
	State variables written after the call(s):
	- unitsOwnedOfPLAT (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#552-554)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ethCost in BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#351) is a local variable never initialiazed
coinProduction in BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#350-351) is a local variable never initialiazed
coinCost in BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#351) is a local variable never initialiazed
coinProduction in BitGuildTrade.sellCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#508) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
BitGuildTrade.kill (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#298-302) does not use the value returned by external calls:
	-tokenContract.transferFrom(this,msg.sender,tokenContract.balanceOf(this)) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#299)
BitGuildTrade.withdrawEtherFromTrade (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#558-561) does not use the value returned by external calls:
	-tokenContract.transfer(msg.sender,amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol)
BitGuildTrade.withdrawToken (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol) does not use the value returned by external calls:
	-tokenContract.transfer(msg.sender,amount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#337-396):
	External calls:
	- require(bool)(cards.getGameStarted()) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#340-342)
	- existing = cards.getOwnedCount(_player,_cardId) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#343-346)
	- require(bool)(existing < schema.getMaxCAP()) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#346-347)
	- SafeMath.add(existing,_amount) > schema.getMaxCAP() (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#348-350)
	- iAmount = SafeMath.sub(schema.getMaxCAP(),existing) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#349)
	- coinProduction = schema.unitCoinProduction(_cardId) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#352)
	- coinCost = schema.getCostForCards(_cardId,existing,iAmount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#353-355)
	- ethCost = SafeMath.mul(schema.unitPLATCost(_cardId),iAmount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#355-356)
	- coinCost = schema.getCostForBattleCards(_cardId,existing,iAmount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#358-361)
	- ethCost = SafeMath.mul(schema.unitBattlePLATCost(_cardId),iAmount) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#361-362)
	- require(bool)(SafeMath.add(cards.coinBalanceOf(_player,1),_platValue) >= ethCost) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#363-365)
	- require(bool)(cards.balanceOf(_player) >= coinCost) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#365)
	- cards.updatePlayersCoinByPurchase(_player,coinCost) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#368-369)
	- cards.setCoinBalance(_player,SafeMath.sub(ethCost,_platValue),1,false) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#369-370)
	- cards.setCoinBalance(_player,SafeMath.sub(_platValue,ethCost),1,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#373-374)
	- cards.setTotalEtherPool(uint256(SafeMath.div(ethCost,4)),1,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#374-377)
	- cards.setCoinBalance(owner,devFund,1,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#378-380)
	- cards.increasePlayersJadeProduction(_player,cards.getUnitsProduction(_player,_cardId,iAmount)) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#381-382)
	- cards.setUintCoinProduction(_player,_cardId,cards.getUnitsProduction(_player,_cardId,iAmount),true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#382-387)
	- cards.AddPlayers(_player) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#388)
	- cards.setUintsOwnerCount(_player,iAmount,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#388-389)
	- cards.setOwnedCount(_player,_cardId,iAmount,true) (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#390-391)
	State variables written after the call(s):
	- unitsOwnedOfPLAT (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#391-394)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#41-50) should be declared external
CardsInterface.getPlayersBattleStats (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#151-157) should be declared external
BitGuildTokenInterface.totalSupply (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#269-270) should be declared external
BitGuildTokenInterface.balanceOf (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#270-271) should be declared external
BitGuildTokenInterface.allowance (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#271-273) should be declared external
BitGuildTokenInterface.transfer (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#273-274) should be declared external
BitGuildTokenInterface.approve (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#274-276) should be declared external
BitGuildTokenInterface.transferFrom (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#276-278) should be declared external
BitGuildTrade.kill (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#298-302) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol:
	- pragma solidity^0.4.18 (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#25-30) is not in mixedCase
Function 'CardsInterface.AddPlayers' (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#127) is not in mixedCase
Parameter '_address' of BitGuildHelper.setCardsAddress (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#201) is not in mixedCase
Parameter '_address' of BitGuildHelper.setConfigAddress (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#206-209) is not in mixedCase
Parameter '_address' of BitGuildHelper.setRareAddress (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#210) is not in mixedCase
Parameter '_tokenContract' of BitGuildTrade.setBitGuildToken (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#295) is not in mixedCase
Function 'BitGuildTrade._getExtraParam' (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#305-317) is not in mixedCase
Parameter '_extraData' of BitGuildTrade._getExtraParam (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#306) is not in mixedCase
Parameter '_player' of BitGuildTrade.receiveApproval (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#319) is not in mixedCase
Parameter '_value' of BitGuildTrade.receiveApproval (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#319) is not in mixedCase
Parameter '_tokenContractAddr' of BitGuildTrade.receiveApproval (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#319-321) is not in mixedCase
Parameter '_extraData' of BitGuildTrade.receiveApproval (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#321-322) is not in mixedCase
Parameter '_player' of BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#337-338) is not in mixedCase
Parameter '_platValue' of BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#338) is not in mixedCase
Parameter '_cardId' of BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#338) is not in mixedCase
Parameter '_amount' of BitGuildTrade.buyPLATCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#338) is not in mixedCase
Parameter '_player' of BitGuildTrade.buyUpgradeCard (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#399) is not in mixedCase
Parameter '_platValue' of BitGuildTrade.buyUpgradeCard (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#399) is not in mixedCase
Parameter '_upgradeId' of BitGuildTrade.buyUpgradeCard (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#399) is not in mixedCase
Parameter '_player' of BitGuildTrade.buyRareItem (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#442-443) is not in mixedCase
Parameter '_platValue' of BitGuildTrade.buyRareItem (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#443) is not in mixedCase
Parameter '_rareId' of BitGuildTrade.buyRareItem (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#443-444) is not in mixedCase
Parameter '_unitId' of BitGuildTrade.sellCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#502) is not in mixedCase
Parameter '_amount' of BitGuildTrade.sellCards (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol#502) is not in mixedCase
Parameter '_address' of BitGuildTrade.getCanSellUnit (/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/14/0x35e7bbb36227d43dda6caa301c0294e35477d597.sol analyzed (8 contracts), 44 result(s) found