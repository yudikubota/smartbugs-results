INFO:Slither:Compilation warnings/errors on /unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:41:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:436:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EligmaMintingContract() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:280:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance != 0);
                ^----------^
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:283:34: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        multisigAddress.transfer(this.balance);
                                 ^----------^
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:319:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance != 0);
                ^----------^
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:322:34: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        multisigAddress.transfer(this.balance);
                                 ^----------^
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:207:45: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function calculateEthToToken(uint _eth, uint _blockNumber) constant public returns(uint) {
                                            ^---------------^
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:221:47: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function calculateTokenToEth(uint _token, uint _blockNumber) constant public returns(uint) {
                                              ^---------------^
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:5:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:10:5: Warning: Function state mutability can be restricted to pure
    function safeSub(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol:15:5: Warning: Function state mutability can be restricted to pure
    function safeMul(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Crowdsale.crowdsaleEndedBlock (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#144) is never initialized. It is used in:
	- checkCrowdsaleState (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#178-207)
	- claimEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#291-303)
	- batchReturnEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#303-325)
	- withdrawRemainingBalanceForManualRecovery (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#325-334)
Crowdsale.minCap (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#150-151) is never initialized. It is used in:
	- withdrawEth (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#287-291)
	- claimEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#291-303)
	- batchReturnEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#303-325)
Crowdsale.maxCap (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#151-153) is never initialized. It is used in:
	- checkCrowdsaleState (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#178-207)
	- processTransaction (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#242-281)
ERC20Token.mintingContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#363-366) is never initialized. It is used in:
	- mint (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#414-420)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Crowdsale.checkCrowdsaleState (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#178-207) uses a dangerous strict equality:
	- tokensIssued == maxCap && crowdsaleState != state.crowdsaleEnded
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.fallback (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#165-178):
	External calls:
	- require(bool)(KycContractInterface(kycAddress).isAddressVerified(msg.sender)) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#169-171)
	State variables written after the call(s):
	- crowdsaleState (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#172)
Reentrancy in Crowdsale.processTransaction (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#242-281):
	External calls:
	- MintingContractInterface(mintingContractAddress).doCrowdsaleMinting(_contributor,tokensToGive,contributionAmount) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#270-275)
	State variables written after the call(s):
	- contributorList (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#275-276)
	- tokensIssued (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#276)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Crowdsale.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#281-287) does not use the value returned by external calls:
	-ERC20TokenInterface(_tokenAddress).transfer(_to,_amount) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#286-287)
ERC20Token.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#432-438) does not use the value returned by external calls:
	-ERC20TokenInterface(_tokenAddress).transfer(_to,_amount) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#436-437)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Crowdsale.batchReturnEthIfFailed has external calls inside a loop:
	- ! currentParticipantAddress.send(contribution) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#319-322)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.fallback (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#165-178):
	External calls:
	- require(bool)(KycContractInterface(kycAddress).isAddressVerified(msg.sender)) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#169-171)
	- processTransaction(msg.sender,msg.value) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#176-177)
	External calls sending eth:
	- processTransaction(msg.sender,msg.value) (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#176-177)
	State variables written after the call(s):
	- contributorIndexes (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#176-177)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.blocksInADay should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#155-156)
Crowdsale.crowdsaleEndedBlock should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#144)
Crowdsale.maxCap should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#151-153)
Crowdsale.minCap should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#150-151)
Crowdsale.mintingContractAddress should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#136-137)
Crowdsale.startPhaseLength should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#137-139)
Crowdsale.startPhaseMaximumcontribution should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#142)
Crowdsale.startPhaseMinimumContribution should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#139-140)
Crowdsale.tokenTotalSupply should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#153-154)
ERC20Token.decimals should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#362-363)
ERC20Token.mintingContractAddress should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#363-366)
ERC20Token.name should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#360-362)
ERC20Token.standard should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#360)
ERC20Token.symbol should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#362)
MintingContractInterface.crowdsaleContractAddress should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#86-88)
MintingContractInterface.tokenContractAddress should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#88)
MintingContractInterface.tokenTotalSupply should be constant (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#88)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Token.totalSupply (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#372-373) should be declared external
ERC20TokenInterface.totalSupply (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#24-25) should be declared external
ERC20Token.transfer (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#378-385) should be declared external
ERC20TokenInterface.transfer (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#26-27) should be declared external
ERC20TokenInterface.transferFrom (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#27-28) should be declared external
ERC20Token.transferFrom (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#396-408) should be declared external
ERC20Token.allowance (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#409-413) should be declared external
ERC20TokenInterface.allowance (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#29-31) should be declared external
tokenRecipientInterface.receiveApproval (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#35-38) should be declared external
Owned.transferOwnership (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#50-56) should be declared external
Owned.acceptOwnership (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#56-62) should be declared external
MintableTokenInterface.mint (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#68-72) should be declared external
KycContractInterface.isAddressVerified (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#82-84) should be declared external
MintingContractInterface.doPresaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#90-91) should be declared external
MintingContractInterface.doCrowdsaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#91-93) should be declared external
MintingContractInterface.doTeamMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#93-94) should be declared external
MintingContractInterface.setTokenContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#94-95) should be declared external
MintingContractInterface.setCrowdsaleContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#95-99) should be declared external
MintingContractInterface.killContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#99-101) should be declared external
Lockable.lockUntil (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#115-122) should be declared external
Crowdsale.fallback (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#165-178) should be declared external
Crowdsale.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#281-287) should be declared external
Crowdsale.withdrawEth (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#287-291) should be declared external
Crowdsale.claimEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#291-303) should be declared external
Crowdsale.batchReturnEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#303-325) should be declared external
Crowdsale.withdrawRemainingBalanceForManualRecovery (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#325-334) should be declared external
Crowdsale.setMultisigAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#335-341) should be declared external
Crowdsale.setToken (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#341-346) should be declared external
Crowdsale.setKycAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#346-349) should be declared external
Crowdsale.investorCount (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#349-353) should be declared external
Crowdsale.setCrowdsaleStartBlock (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#355-357) should be declared external
ERC20Token.approveAndCall (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#391-396) should be declared external
ERC20Token.mint (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#414-420) should be declared external
ERC20Token.burn (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#420-432) should be declared external
ERC20Token.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#432-438) should be declared external
ERC20Token.killContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#440) should be declared external
EligmaMintingContract.doPresaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#446-453) should be declared external
EligmaMintingContract.doCrowdsaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#453-460) should be declared external
EligmaMintingContract.doTeamMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#460-471) should be declared external
EligmaMintingContract.setTokenContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol) should be declared external
EligmaMintingContract.setCrowdsaleContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol) should be declared external
EligmaMintingContract.killContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Contract 'tokenRecipientInterface' (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#34-38) is not in CapWords
Function 'Owned.Owned' (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#42-46) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#51) is not in mixedCase
Parameter '_untilBlock' of Lockable.lockFromSelf (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#110) is not in mixedCase
Parameter '_reason' of Lockable.lockFromSelf (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#110-111) is not in mixedCase
Parameter '_untilBlock' of Lockable.lockUntil (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#116) is not in mixedCase
Parameter '_reason' of Lockable.lockUntil (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#116-117) is not in mixedCase
Parameter '_stateChanged' of Crowdsale.refundTransaction (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#207) is not in mixedCase
Parameter '_eth' of Crowdsale.calculateEthToToken (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#211) is not in mixedCase
Parameter '_token' of Crowdsale.calculateTokenToEth (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#225) is not in mixedCase
Parameter '_contributor' of Crowdsale.processTransaction (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#242) is not in mixedCase
Parameter '_amount' of Crowdsale.processTransaction (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#242-243) is not in mixedCase
Parameter '_tokenAddress' of Crowdsale.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#283) is not in mixedCase
Parameter '_to' of Crowdsale.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#283) is not in mixedCase
Parameter '_amount' of Crowdsale.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#283-286) is not in mixedCase
Parameter '_numberOfReturns' of Crowdsale.batchReturnEthIfFailed (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#303) is not in mixedCase
Parameter '_newAddress' of Crowdsale.setMultisigAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#337) is not in mixedCase
Parameter '_newAddress' of Crowdsale.setToken (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#341) is not in mixedCase
Parameter '_newAddress' of Crowdsale.setKycAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#346) is not in mixedCase
Parameter '_block' of Crowdsale.setCrowdsaleStartBlock (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#356) is not in mixedCase
Enum 'Crowdsale.state' (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#125-128) is not in CapWords
Parameter '_owner' of ERC20Token.balanceOf (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#373-374) is not in mixedCase
Parameter '_to' of ERC20Token.transfer (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#378) is not in mixedCase
Parameter '_value' of ERC20Token.transfer (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#378) is not in mixedCase
Parameter '_from' of ERC20Token.transferFrom (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#396-397) is not in mixedCase
Parameter '_to' of ERC20Token.transferFrom (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#397-398) is not in mixedCase
Parameter '_value' of ERC20Token.transferFrom (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#399-400) is not in mixedCase
Parameter '_spender' of ERC20Token.approve (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#385) is not in mixedCase
Parameter '_value' of ERC20Token.approve (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#385) is not in mixedCase
Parameter '_owner' of ERC20Token.allowance (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#409) is not in mixedCase
Parameter '_spender' of ERC20Token.allowance (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#409-412) is not in mixedCase
Parameter '_spender' of ERC20Token.approveAndCall (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#391) is not in mixedCase
Parameter '_value' of ERC20Token.approveAndCall (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#391) is not in mixedCase
Parameter '_extraData' of ERC20Token.approveAndCall (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#391-392) is not in mixedCase
Parameter '_to' of ERC20Token.mint (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#414) is not in mixedCase
Parameter '_amount' of ERC20Token.mint (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#414) is not in mixedCase
Parameter '_amount' of ERC20Token.burn (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#421-423) is not in mixedCase
Parameter '_tokenAddress' of ERC20Token.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#434) is not in mixedCase
Parameter '_to' of ERC20Token.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#434) is not in mixedCase
Parameter '_amount' of ERC20Token.salvageTokensFromContract (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#434-436) is not in mixedCase
Function 'EligmaMintingContract.EligmaMintingContract' (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#443-446) is not in mixedCase
Parameter '_destination' of EligmaMintingContract.doPresaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#447) is not in mixedCase
Parameter '_tokensAmount' of EligmaMintingContract.doPresaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#447-448) is not in mixedCase
Parameter '_destination' of EligmaMintingContract.doCrowdsaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#453-454) is not in mixedCase
Parameter '_tokensAmount' of EligmaMintingContract.doCrowdsaleMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#454) is not in mixedCase
Parameter '_destination' of EligmaMintingContract.doTeamMinting (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#460) is not in mixedCase
Parameter '_newAddress' of EligmaMintingContract.setTokenContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol) is not in mixedCase
Parameter '_newAddress' of EligmaMintingContract.setCrowdsaleContractAddress (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Crowdsale.blocksInADay (/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol#155-156) is never used in Crowdsale
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/6/0xb72fc3f647c9bb4fda13ea2a1ba9b779eb786770.sol analyzed (12 contracts), 103 result(s) found