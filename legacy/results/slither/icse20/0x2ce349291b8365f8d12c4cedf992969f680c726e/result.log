INFO:Slither:Compilation warnings/errors on /unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:
[91m/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.8;
^--------------------^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:10:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:52:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:53:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:79:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:80:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:81:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:91:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:109:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CJXToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:122:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:123:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:124:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:56:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:85:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:127:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:134:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:135:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol:140:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/24/0x2ce349291b8365f8d12c4cedf992969f680c726e.sol analyzed (0 contracts), 0 result(s) found