INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol:
/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol:475:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return uint64(keccak256(block.timestamp, keccak256(block.difficulty, msg.sender, privateKey)));
                                                     ^-------------------------------------------------^
/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol:475:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return uint64(keccak256(block.timestamp, keccak256(block.difficulty, msg.sender, privateKey)));
                          ^-----------------------------------------------------------------------------^
/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol:477:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return uint64(keccak256(block.timestamp, keccak256(block.difficulty, msg.sender, citizenSeed[msg.sender])));
                                                 ^--------------------------------------------------------------^
/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol:477:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return uint64(keccak256(block.timestamp, keccak256(block.difficulty, msg.sender, citizenSeed[msg.sender])));
                      ^------------------------------------------------------------------------------------------^

INFO:Detectors:[93m
Helper.stringToBytes32 (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#151-166) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
_history in DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#339) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367-413):
	External calls:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#379)
	- DAAContract.pushGameRefIncome(_sender,1,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#380)
	- DAAContract.payOut(_sender,0,_win_value,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#383-385)
	External calls sending eth:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#379)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#388-389)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#388-389)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#388-389)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#388-389)
	- totalPayout (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#386-387)
Reentrancy in DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367-413):
	External calls:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#379)
	- DAAContract.pushGameRefIncome(_sender,1,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#380)
	- citizenContract.addGameEthSpendLose(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#390)
	External calls sending eth:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#379)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#391-392)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#391-392)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#391-392)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#391-392)
Reentrancy in DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367-413):
	External calls:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#395-396)
	- DAAContract.pushGameRefIncome(_sender,1,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#396)
	- DAAContract.payOut(_sender,0,_win_value,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#399-402)
	External calls sending eth:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#395-396)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#405-407)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#405-407)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#405-407)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#405-407)
	- totalPayout (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#403-405)
Reentrancy in DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367-413):
	External calls:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#395-396)
	- DAAContract.pushGameRefIncome(_sender,1,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#396)
	- citizenContract.addGameEthSpendLose(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#408-409)
	External calls sending eth:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#395-396)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#409-412)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#409-412)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#409-412)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#409-412)
Reentrancy in DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367-413):
	External calls:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#379)
	- DAAContract.pushGameRefIncome(_sender,1,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#380)
	- DAAContract.payOut(_sender,0,_win_value,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#383-385)
	- citizenContract.addGameEthSpendLose(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#390)
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#395-396)
	- DAAContract.pushGameRefIncome(_sender,1,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#396)
	- DAAContract.payOut(_sender,0,_win_value,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#399-402)
	- citizenContract.addGameEthSpendLose(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#408-409)
	External calls sending eth:
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#379)
	- DAAContract.pushDividend.value(_value)() (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#395-396)
	State variables written after the call(s):
	- mostTotalSpender (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#412-413)
	- mostTotalSpenderId (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#412-413)
Reentrancy in DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414-461):
	External calls:
	- DAAContract.citizenUseDeposit(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#418-419)
	State variables written after the call(s):
	- citizenSpendToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#425)
	- citizenSpendToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#438-439)
Reentrancy in DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414-461):
	External calls:
	- DAAContract.citizenUseDeposit(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#418-419)
	- citizenContract.addGameTokenSpend(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#426-427)
	- DAAContract.pushGameRefIncome(_sender,0,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#427-428)
	- DAAContract.payOut(_sender,1,_win_value,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#432-433)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#433-434)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#433-434)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#433-434)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#433-434)
Reentrancy in DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414-461):
	External calls:
	- DAAContract.citizenUseDeposit(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#418-419)
	- citizenContract.addGameTokenSpend(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#426-427)
	- DAAContract.pushGameRefIncome(_sender,0,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#427-428)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#435-436)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#435-436)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#435-436)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#435-436)
Reentrancy in DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414-461):
	External calls:
	- DAAContract.citizenUseDeposit(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#418-419)
	- citizenContract.addGameTokenSpend(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#440)
	- DAAContract.pushGameRefIncome(_sender,0,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#440-442)
	- DAAContract.payOut(_sender,1,_win_value,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#449)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#450-453)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#450-453)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#450-453)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#450-453)
Reentrancy in DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414-461):
	External calls:
	- DAAContract.citizenUseDeposit(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#418-419)
	- citizenContract.addGameTokenSpend(_sender,_value) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#440)
	- DAAContract.pushGameRefIncome(_sender,0,_valueForRef) (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#440-442)
	State variables written after the call(s):
	- gameHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#457-459)
	- isHighRollerHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#457-459)
	- isRareWinsHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#457-459)
	- myHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#457-459)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Helper.stringToBytes32 uses assembly (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#151-166)
	- /unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#164-166
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DiceGame.decimals should be constant (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#229-230)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Helper.stringToUint (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#167-175) should be declared external
Helper.validUsername (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#175-189) should be declared external
Helper.getRandom (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#190-202) should be declared external
DiceGame.setSeed (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#288-292) should be declared external
DiceGame.getMyHistoryLength (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#292-296) should be declared external
DiceGame.getGameHistoryLength (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#296-300) should be declared external
DiceGame.getIsHighRollerHistoryLength (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#300-303) should be declared external
DiceGame.getIsRareWinsHistoryLength (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#304) should be declared external
DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367-413) should be declared external
DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414-461) should be declared external
DiceGame.updateHIGHROLLER (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#461-465) should be declared external
DiceGame.updateHIGHROLLERTOKEN (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#465-471) should be declared external
DiceGame.updateMinEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#472-475) should be declared external
DiceGame.updateMaxEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#475-477) should be declared external
DiceGame.updateMinToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#477) should be declared external
DiceGame.updateMaxToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#479-481) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol:
	- pragma solidity>=0.4.22<0.6.0 (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_username' of Helper.validUsername (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#176) is not in mixedCase
Parameter '_seed' of Helper.getRandom (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#194-195) is not in mixedCase
Parameter '_range' of Helper.getRandom (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#195) is not in mixedCase
Parameter '_contract' of DiceGame. (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#274) is not in mixedCase
Parameter '_key' of DiceGame. (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#274) is not in mixedCase
Parameter '_key' of DiceGame.setSeed (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#288) is not in mixedCase
Parameter '_sender' of DiceGame.getMyHistoryLength (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#292-293) is not in mixedCase
Parameter '_citizen' of DiceGame.sortMostSpend (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#305) is not in mixedCase
Parameter '_sender' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#334) is not in mixedCase
Parameter '_prediction' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#334-335) is not in mixedCase
Parameter '_prediction_type' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#335) is not in mixedCase
Parameter '_result' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#335-336) is not in mixedCase
Parameter '_isWin' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#336) is not in mixedCase
Parameter '_amount' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#336-337) is not in mixedCase
Parameter '_payout' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#337) is not in mixedCase
Parameter '_unit' of DiceGame.addToHistory (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#337) is not in mixedCase
Parameter '_method' of DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367) is not in mixedCase
Parameter '_prediction' of DiceGame.betByEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#367) is not in mixedCase
Parameter '_method' of DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414) is not in mixedCase
Parameter '_prediction' of DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#414) is not in mixedCase
Parameter '_value' of DiceGame.betByToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#415) is not in mixedCase
Parameter '_value' of DiceGame.updateHIGHROLLER (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#461-462) is not in mixedCase
Parameter '_value' of DiceGame.updateHIGHROLLERTOKEN (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#466) is not in mixedCase
Parameter '_value' of DiceGame.updateMinEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#473-474) is not in mixedCase
Parameter '_value' of DiceGame.updateMaxEth (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#475) is not in mixedCase
Parameter '_value' of DiceGame.updateMinToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#477) is not in mixedCase
Parameter '_value' of DiceGame.updateMaxToken (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol) is not in mixedCase
Variable 'DiceGame.HIGHROLLER' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#233-235) is not in mixedCase
Variable 'DiceGame.HIGHROLLERTOKEN' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#236-237) is not in mixedCase
Variable 'DiceGame.MIN' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#238-239) is not in mixedCase
Variable 'DiceGame.MAX' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#239-240) is not in mixedCase
Variable 'DiceGame.MIN_TOKEN' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#240-241) is not in mixedCase
Variable 'DiceGame.MAX_TOKEN' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#241-242) is not in mixedCase
Variable 'DiceGame.DAAContract' (/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol#272) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0xdc7db6153bbb0d9c2e3e33bb4f13cfb8cc9e4f00.sol analyzed (5 contracts), 65 result(s) found