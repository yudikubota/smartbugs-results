INFO:Slither:Compilation warnings/errors on /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1142:13: Warning: Return value of low-level calls not used.
            recipient.call(abi.encodeWithSignature("tokenFallback(address,uint256,bytes)", sender, amount, data));
            ^---------------------------------------------------------------------------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1182:1: Warning: Base constructor arguments given twice.
contract ExternStateToken is SelfDestructible, Proxyable, TokenFallbackCaller {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:184:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:837:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1381:1: Warning: Base constructor arguments given twice.
contract Synth is ExternStateToken {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:184:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:837:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1737:1: Warning: Base constructor arguments given twice.
contract FeePool is Proxyable, SelfDestructible {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:837:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:184:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1748:50: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant public MAX_TRANSFER_FEE_RATE = SafeDecimalMath.unit() / 10;
                                                 ^-------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1754:50: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant public MAX_EXCHANGE_FEE_RATE = SafeDecimalMath.unit() / 10;
                                                 ^-------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1796:36: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant TWENTY_PERCENT = (20 * SafeDecimalMath.unit()) / 100;
                                   ^---------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1797:41: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant TWENTY_FIVE_PERCENT = (25 * SafeDecimalMath.unit()) / 100;
                                        ^---------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1798:36: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant THIRTY_PERCENT = (30 * SafeDecimalMath.unit()) / 100;
                                   ^---------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1799:36: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant FOURTY_PERCENT = (40 * SafeDecimalMath.unit()) / 100;
                                   ^---------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1800:35: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant FIFTY_PERCENT = (50 * SafeDecimalMath.unit()) / 100;
                                  ^---------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:1801:42: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant SEVENTY_FIVE_PERCENT = (75 * SafeDecimalMath.unit()) / 100;
                                         ^---------------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:2784:40: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant MAX_ISSUANCE_RATIO = SafeDecimalMath.unit();
                                       ^--------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:3472:1: Warning: Base constructor arguments given twice.
contract Synthetix is ExternStateToken {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:184:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:837:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:3485:38: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint constant SYNTHETIX_SUPPLY = 1e8 * SafeDecimalMath.unit();
                                     ^--------------------------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:4323:1: Warning: Base constructor arguments given twice.
contract Depot is SelfDestructible, Pausable {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:184:9: First constructor call is here: 
        Owned(_owner)
        ^-----------^
/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:294:9: Second constructor call is here: 
        Owned(_owner)
        ^-----------^

/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:4852:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function tokenFallback(address from, uint amount, bytes data)
                                                      ^--------^

INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol:
	Contract Proxy has payable functions:
	 - fallback (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#772-819)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in FeePool.claimFees (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2016-2031):
	External calls:
	- availableFees = feesAvailable(messageSender,XDR) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2017-2019)
	State variables written after the call(s):
	- lastFeeWithdrawal (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2023-2025)
	- recentFeePeriods (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2025)
Reentrancy in FeePool.closeCurrentFeePeriod (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1946-2011):
	External calls:
	- recentFeePeriods[0].startingDebtIndex = synthetix.synthetixState().debtLedgerLength() (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2006-2008)
	State variables written after the call(s):
	- nextFeePeriodId (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2009)
	- recentFeePeriods (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2008)
Reentrancy in Synthetix.issueMaxSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4092-4100):
	External calls:
	- maxIssuable = remainingIssuableSynths(messageSender,currencyKey) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4095-4096)
	- issueSynths(currencyKey,maxIssuable) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4096-4099)
	State variables written after the call(s):
	- messageSender (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4096-4099)
Reentrancy in Synthetix.issueSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4071-4084):
	External calls:
	- require(bool,string)(amount <= remainingIssuableSynths(messageSender,currencyKey),Amount too large) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4076-4080)
	- _addToDebtRegister(currencyKey,amount) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4083)
	State variables written after the call(s):
	- messageSender (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4083)
Reentrancy in Synthetix.removeSynth (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3629-3661):
	External calls:
	- require(bool,string)(synths[currencyKey].totalSupply() == 0,Synth supply exists) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3632-3635)
	State variables written after the call(s):
	- synths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3660)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
empty in Synthetix.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3787) is a local variable never initialiazed
empty in Synth.transferFromSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1610) is a local variable never initialiazed
empty in Synthetix.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3818) is a local variable never initialiazed
empty in Synth.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1532) is a local variable never initialiazed
empty in Synth.transferSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1572-1574) is a local variable never initialiazed
empty in Synth.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1488) is a local variable never initialiazed
result in FeePool.feesByPeriod (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2275-2278) is a local variable never initialiazed
empty in Synth.triggerTokenFallbackIfNeeded (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1691-1692) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
Synth.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1475-1489) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1484-1485)
Synth.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1493-1510) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1505-1508)
Synth.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1514-1533) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1530-1532)
Synth.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1537-1559) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1557-1558)
Synth.transferSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1563-1575) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1571)
Synth.transferSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1579-1592) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(messageSender,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1589-1590)
Synth.transferFromSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1595-1614) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1608-1610)
Synth.transferFromSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1617-1636) does not use the value returned by external calls:
	-synthetix.synthInitiatedFeePayment(from,currencyKey,fee) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1632-1633)
SynthetixEscrow.withdrawSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2643-2644) does not use the value returned by external calls:
	-synthetix.transfer(synthetix,quantity) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2644)
SynthetixEscrow.vest (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2757-2780) does not use the value returned by external calls:
	-synthetix.transfer(msg.sender,total) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2775-2777)
Depot.exchangeEtherForSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4627-4791) does not use the value returned by external calls:
	-synth.transfer(msg.sender,remainingToFulfill) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4711-4712)
	-synth.transfer(msg.sender,deposit.amount) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4766)
Depot.exchangeEtherForSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4806-4819) does not use the value returned by external calls:
	-synthetix.transfer(msg.sender,synthetixToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4817)
Depot.exchangeSynthsForSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4844-4861) does not use the value returned by external calls:
	-synth.transferFrom(msg.sender,fundsWallet,synthAmount) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4858-4859)
	-synthetix.transfer(msg.sender,synthetixToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4860)
Depot.withdrawSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4891-4901) does not use the value returned by external calls:
	-synthetix.transfer(owner,amount) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4893)
Depot.withdrawMyDepositedSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4917-4964) does not use the value returned by external calls:
	-synth.transfer(msg.sender,synthsToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4958-4962)
Depot.depositSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4971-4976) does not use the value returned by external calls:
	-synth.transferFrom(msg.sender,this,amount) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4972-4973)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ExternStateToken.allowance.owner (local variable @ /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1270) shadows:
	- Owned.owner (state variable @ /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#99-101)
ExternStateToken.emitApproval.owner (local variable @ /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1375-1377) shadows:
	- Owned.owner (state variable @ /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#99-101)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Synthetix.totalIssuedSynths has external calls inside a loop:
	- require(bool,string)(! exchangeRates.rateIsStale(availableSynths[i].currencyKey()),Rate is stale) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3760-3762)
Synthetix.totalIssuedSynths has external calls inside a loop:
	- synthValue = availableSynths[i].totalSupply().multiplyDecimalRound(exchangeRates.rateForCurrency(availableSynths[i].currencyKey())).divideDecimalRound(currencyRate) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3768-3773)
Depot.exchangeEtherForSynths has external calls inside a loop:
	- ! deposit.user.send(ethToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4689-4699)
Depot.exchangeEtherForSynths has external calls inside a loop:
	- fundsWallet.transfer(ethToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4691-4693)
Depot.exchangeEtherForSynths has external calls inside a loop:
	- synth.transfer(msg.sender,remainingToFulfill) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4711-4712)
Depot.exchangeEtherForSynths has external calls inside a loop:
	- ! deposit.user.send(ethToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4749-4758)
Depot.exchangeEtherForSynths has external calls inside a loop:
	- fundsWallet.transfer(ethToSend) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4751-4753)
Depot.exchangeEtherForSynths has external calls inside a loop:
	- synth.transfer(msg.sender,deposit.amount) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4766)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in SynthetixState._addToDebtRegister (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2989-3067):
	External calls:
	- xdrValue = synthetix.effectiveValue(sUSD,amount,XDR) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3000-3004)
	State variables written after the call(s):
	- importedXDRAmount (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3016-3017)
Reentrancy in SynthetixState._addToDebtRegister (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2989-3067):
	External calls:
	- xdrValue = synthetix.effectiveValue(sUSD,amount,XDR) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3000-3004)
	- existingDebt = synthetix.debtBalanceOf(account,XDR) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3036-3038)
	State variables written after the call(s):
	- debtLedger (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3061-3066)
	- debtLedger (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3066-3067)
	- issuanceData (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3050-3052)
	- issuanceData (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3052-3053)
	- totalIssuerCount (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3049)
Reentrancy in Synthetix.addSynth (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3616-3626):
	External calls:
	- currencyKey = synth.currencyKey() (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3618-3620)
	State variables written after the call(s):
	- availableSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3625-3626)
	- synths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3626)
Reentrancy in SynthetixEscrow.appendVestingEntry (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2683-2735):
	External calls:
	- require(bool,string)(totalVestedBalance <= synthetix.balanceOf(this),Must be enough balance in the contract to provide for the vesting entry) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2700-2708)
	State variables written after the call(s):
	- totalVestedAccountBalance (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2718-2720)
	- totalVestedAccountBalance (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2729-2732)
	- vestingSchedules (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2732-2733)
Reentrancy in Synth.burn (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1673-1680):
	External calls:
	- tokenState.setBalanceOf(account,tokenState.balanceOf(account).sub(amount)) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1677-1678)
	State variables written after the call(s):
	- totalSupply (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1678-1679)
Reentrancy in Synth.constructor (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1436-1457):
	External calls:
	- require(bool,string)(_synthetix.synths(_currencyKey) == Synth(0),Currency key is already in use) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1454-1455)
	State variables written after the call(s):
	- currencyKey (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1457)
	- feePool (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1455-1456)
	- synthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1456-1457)
Reentrancy in FeePool.feePaid (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1938-1944):
	External calls:
	- xdrAmount = synthetix.effectiveValue(currencyKey,amount,XDR) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1940-1942)
	State variables written after the call(s):
	- recentFeePeriods (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1943-1944)
Reentrancy in Synth.issue (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1660-1672):
	External calls:
	- tokenState.setBalanceOf(account,tokenState.balanceOf(account).add(amount)) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1665)
	State variables written after the call(s):
	- totalSupply (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1666-1669)
Reentrancy in Synthetix.removeSynth (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3629-3661):
	External calls:
	- require(bool,string)(synths[currencyKey].totalSupply() == 0,Synth supply exists) (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3632-3635)
	State variables written after the call(s):
	- availableSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3642-3643)
	- availableSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3650-3653)
	- availableSynths (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3657)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Proxy._emit uses assembly (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#736-772)
	- /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#745-772
Proxy.fallback uses assembly (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#772-819)
	- /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#773-790
	- /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#801-819
TokenFallbackCaller.callTokenFallbackIfNeeded uses assembly (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1136-1187)
	- /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1165-1170
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ExternStateToken.allowance (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1270-1273) should be declared external
ExternStateToken.balanceOf (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1274-1277) should be declared external
ExternStateToken.approve (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1348-1360) should be declared external
Synth.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1475-1489) should be declared external
Synth.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1493-1510) should be declared external
Synth.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1514-1533) should be declared external
Synth.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1537-1559) should be declared external
Synth.transferSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1563-1575) should be declared external
Synth.transferSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1579-1592) should be declared external
Synth.transferFromSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1595-1614) should be declared external
Synth.transferFromSenderPaysFee (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1617-1636) should be declared external
SynthetixEscrow.balanceOf (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2568-2572) should be declared external
ExchangeRates.rateForCurrency (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3361-3365) should be declared external
ExchangeRates.ratesForCurrencies (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3367-3375) should be declared external
ExchangeRates.lastRateUpdateTimeForCurrency (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3376-3381) should be declared external
ExchangeRates.lastRateUpdateTimesForCurrencies (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3382-3389) should be declared external
Synthetix.availableSynthCount (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3779-3783) should be declared external
Synthetix.transfer (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3785-3787) should be declared external
Synthetix.transferFrom (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3813-3818) should be declared external
Synthetix.collateralisationRatio (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4213-4217) should be declared external
Depot.exchangeEtherForSynthsAtRate (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4794-4805) should be declared external
Depot.exchangeEtherForSynthetixAtRate (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4832-4843) should be declared external
Depot.exchangeSynthsForSynthetixAtRate (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4870-4882) should be declared external
Depot.synthsReceivedForEther (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in TokenFallbackCaller.callTokenFallbackIfNeeded (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1136-1187):
	-recipient.call(abi.encodeWithSignature(tokenFallback(address,uint256,bytes),sender,amount,data)) /unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1180-1182
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_owner' of Owned. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#104-105) is not in mixedCase
Parameter '_owner' of Owned.nominateNewOwner (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#118) is not in mixedCase
Parameter '_owner' of SelfDestructible. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#189) is not in mixedCase
Parameter '_beneficiary' of SelfDestructible.setSelfDestructBeneficiary (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#202-203) is not in mixedCase
Parameter '_paused' of Pausable.setPaused (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#316-317) is not in mixedCase
Function 'SafeDecimalMath._multiplyDecimalRound' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#521-528) is not in mixedCase
Function 'SafeDecimalMath._divideDecimalRound' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#604-616) is not in mixedCase
Constant 'SafeDecimalMath.highPrecisionDecimals' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#453-456) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_target' of Proxy.setTarget (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#731) is not in mixedCase
Function 'Proxy._emit' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#736-772) is not in mixedCase
Parameter '_proxy' of Proxyable. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#877) is not in mixedCase
Parameter '_proxy' of Proxyable.setProxy (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#885) is not in mixedCase
Modifier 'Proxyable.optionalProxy_onlyOwner' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#905-910) is not in mixedCase
Parameter '_associatedContract' of State. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#962-963) is not in mixedCase
Parameter '_associatedContract' of State.setAssociatedContract (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#975) is not in mixedCase
Parameter '_tokenState' of ExternStateToken. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1252) is not in mixedCase
Parameter '_name' of ExternStateToken. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1252) is not in mixedCase
Parameter '_symbol' of ExternStateToken. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1252) is not in mixedCase
Parameter '_totalSupply' of ExternStateToken. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1252-1253) is not in mixedCase
Parameter '_decimals' of ExternStateToken. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1253-1255) is not in mixedCase
Parameter '_tokenState' of ExternStateToken.setTokenState (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1284-1288) is not in mixedCase
Function 'ExternStateToken._internalTransfer' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1291-1323) is not in mixedCase
Function 'ExternStateToken._transfer_byProxy' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1329-1331) is not in mixedCase
Function 'ExternStateToken._transferFrom_byProxy' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1336-1343) is not in mixedCase
Function 'Synth._internalTransfer' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1639-1660) is not in mixedCase
Parameter '_proxy' of Synth. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1437-1438) is not in mixedCase
Parameter '_synthetix' of Synth. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1439) is not in mixedCase
Parameter '_feePool' of Synth. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1439-1440) is not in mixedCase
Parameter '_owner' of Synth. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1442) is not in mixedCase
Parameter '_currencyKey' of Synth. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1442) is not in mixedCase
Parameter '_synthetix' of Synth.setSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1460-1461) is not in mixedCase
Parameter '_feePool' of Synth.setFeePool (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1466) is not in mixedCase
Parameter '_synthetix' of FeePool. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1849) is not in mixedCase
Parameter '_feeAuthority' of FeePool. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1849-1851) is not in mixedCase
Parameter '_transferFeeRate' of FeePool. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1851) is not in mixedCase
Parameter '_exchangeFeeRate' of FeePool. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1851) is not in mixedCase
Parameter '_exchangeFeeRate' of FeePool.setExchangeFeeRate (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1892-1893) is not in mixedCase
Parameter '_transferFeeRate' of FeePool.setTransferFeeRate (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1910) is not in mixedCase
Parameter '_feeAuthority' of FeePool.setFeeAuthority (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1922) is not in mixedCase
Parameter '_feePeriodDuration' of FeePool.setFeePeriodDuration (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1926) is not in mixedCase
Parameter '_synthetix' of FeePool.setSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1934) is not in mixedCase
Function 'FeePool._recordFeePayment' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2033-2068) is not in mixedCase
Function 'FeePool._payFees' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2072-2118) is not in mixedCase
Parameter '_synthetix' of SynthetixEscrow. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2549-2551) is not in mixedCase
Parameter '_synthetix' of SynthetixEscrow.setSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2555) is not in mixedCase
Parameter '_issuanceRatio' of SynthetixState.setIssuanceRatio (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2951) is not in mixedCase
Function 'SynthetixState._addToDebtRegister' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#2989-3067) is not in mixedCase
Parameter '_oracle' of ExchangeRates. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3139) is not in mixedCase
Parameter '_currencyKeys' of ExchangeRates. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3140) is not in mixedCase
Parameter '_newRates' of ExchangeRates. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3140) is not in mixedCase
Parameter '_oracle' of ExchangeRates.setOracle (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3341) is not in mixedCase
Parameter '_time' of ExchangeRates.setRateStalePeriod (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3351) is not in mixedCase
Parameter '_synthetixState' of Synthetix. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3601-3603) is not in mixedCase
Parameter '_exchangeRates' of Synthetix. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3603-3605) is not in mixedCase
Parameter '_feePool' of Synthetix. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3605) is not in mixedCase
Parameter '_escrow' of Synthetix.setEscrow (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3663) is not in mixedCase
Parameter '_exchangeRates' of Synthetix.setExchangeRates (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3670) is not in mixedCase
Parameter '_synthetixState' of Synthetix.setSynthetixState (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3692) is not in mixedCase
Function 'Synthetix._internalExchange' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3950-4004) is not in mixedCase
Function 'Synthetix._addToDebtRegister' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4015-4065) is not in mixedCase
Function 'Synthetix._removeFromDebtRegister' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4125-4167) is not in mixedCase
Struct 'Depot.synthDeposit' (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4475-4478) is not in CapWords
Parameter '_fundsWallet' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4552-4553) is not in mixedCase
Parameter '_synthetix' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4553) is not in mixedCase
Parameter '_synth' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4555) is not in mixedCase
Parameter '_feePool' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4555-4557) is not in mixedCase
Parameter '_oracle' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4557-4558) is not in mixedCase
Parameter '_usdToEthPrice' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4558) is not in mixedCase
Parameter '_usdToSnxPrice' of Depot. (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4558-4559) is not in mixedCase
Parameter '_fundsWallet' of Depot.setFundsWallet (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4572) is not in mixedCase
Parameter '_oracle' of Depot.setOracle (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4577) is not in mixedCase
Parameter '_synth' of Depot.setSynth (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4582) is not in mixedCase
Parameter '_synthetix' of Depot.setSynthetix (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4586-4587) is not in mixedCase
Parameter '_time' of Depot.setPriceStalePeriod (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4591) is not in mixedCase
Parameter '_amount' of Depot.setMinimumDepositAmount (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#4596-4597) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Synth.DECIMALS (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#1434-1435) is never used in Synth
Synthetix.SYNTHETIX_SUPPLY (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3584-3585) is never used in Synthetix
Synthetix.TOKEN_NAME (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3586-3589) is never used in Synthetix
Synthetix.TOKEN_SYMBOL (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3589-3590) is never used in Synthetix
Synthetix.DECIMALS (/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol#3590) is never used in Synthetix
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0x172e09691dfbbc035e37c73b62095caa16ee2388.sol analyzed (20 contracts), 154 result(s) found