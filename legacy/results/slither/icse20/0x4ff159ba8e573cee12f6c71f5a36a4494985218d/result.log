INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:33:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:38:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:66:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:81:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:82:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:107:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:108:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:109:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:119:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:139:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ViacashToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^------------------------------------------------------------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:142:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:143:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:144:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:153:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen
                                  ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:154:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:155:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:156:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:183:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:190:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:194:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:85:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:113:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:147:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:160:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:167:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:168:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:173:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:186:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:196:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:48:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:106:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:118:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function ViacashToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^------------------------------------------------------------------------------------^
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:164:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:171:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:176:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:181:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:189:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#51-128) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#81-89)
ViacashToken (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#128-205) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#142-153)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
ViacashToken.tokenName should be constant (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#139-140)
ViacashToken.tokenSymbol should be constant (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#140-141)
token.standard should be constant (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#53-54)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#42:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#109-110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#144:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#146:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#155:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#156:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#157:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#185:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#192:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#196:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#42-48) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#48-51) should be declared external
ViacashToken.transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#142-153) should be declared external
token.transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#81-89) should be declared external
token.approveAndCall (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#97-106) should be declared external
ViacashToken.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#153-167) should be declared external
token.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#107-119) should be declared external
token.fallback (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#123-128) should be declared external
ViacashToken.mintToken (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#167-176) should be declared external
ViacashToken.freezeAccount (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#176-181) should be declared external
ViacashToken.setPrices (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#181-183) should be declared external
ViacashToken.buy (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#183-191) should be declared external
ViacashToken.sell (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#191-205) should be declared external
Ownable.transferOwnership (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#231-233) should be declared external
Crowdsale.fallback (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#277-278) should be declared external
Crowdsale.getBalance (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#278-279) should be declared external
Crowdsale.updateRate (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#306) should be declared external
Crowdsale.forwardFunds (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol) should be declared external
Crowdsale.transferBackTo (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol:
	- pragma solidity^0.4.11 (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#31-48) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#48-51) is not in CapWords
Contract 'token' (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#51-128) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#81) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#81) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#91) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#91-92) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#98) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#98) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#98-99) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#107) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#107) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#107) is not in mixedCase
Parameter '_to' of ViacashToken.transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#143) is not in mixedCase
Parameter '_value' of ViacashToken.transfer (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#143) is not in mixedCase
Parameter '_from' of ViacashToken.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#153-154) is not in mixedCase
Parameter '_to' of ViacashToken.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#154) is not in mixedCase
Parameter '_value' of ViacashToken.transferFrom (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#154) is not in mixedCase
Function 'ViacashToken.ViacashToken' (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#141-142) is not in mixedCase
Constant 'ViacashToken.initialSupply' (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#137-138) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ViacashToken.decimalUnits' (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#139) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_walletAddress' of Crowdsale. (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#271-272) is not in mixedCase
Parameter 'new_rate' of Crowdsale.updateRate (/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol#306) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/13/0x4ff159ba8e573cee12f6c71f5a36a4494985218d.sol analyzed (7 contracts), 63 result(s) found