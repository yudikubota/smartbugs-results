INFO:Slither:Compilation warnings/errors on /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:37:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:66:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function bitbeb(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:82:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:83:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:84:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:85:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:94:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:102:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:103:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:104:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:105:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:106:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:115:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:116:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:124:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:125:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:133:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:134:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:143:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:35:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:88:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:110:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:119:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:128:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:137:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function bitbeb(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:81:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:92:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:101:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:123:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:132:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:142:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:148:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:35:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
bitbeb (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#42-150) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#82-92)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#35-42) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#99-100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#104-105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#135-136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
bitbeb.transfer (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#82-92) should be declared external
bitbeb.approve (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#94-101) should be declared external
bitbeb.transferFrom (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#102-115) should be declared external
bitbeb.burn (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#115-124) should be declared external
bitbeb.freeze (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#124-133) should be declared external
bitbeb.unfreeze (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#133-147) should be declared external
bitbeb.withdrawEther (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#148-150) should be declared external
bitbeb.fallback (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#5-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'bitbeb' (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#42-150) is not in CapWords
Parameter '_to' of bitbeb.transfer (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#82) is not in mixedCase
Parameter '_value' of bitbeb.transfer (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#82) is not in mixedCase
Parameter '_spender' of bitbeb.approve (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#94-95) is not in mixedCase
Parameter '_value' of bitbeb.approve (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#95) is not in mixedCase
Parameter '_from' of bitbeb.transferFrom (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#102) is not in mixedCase
Parameter '_to' of bitbeb.transferFrom (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#102) is not in mixedCase
Parameter '_value' of bitbeb.transferFrom (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#102) is not in mixedCase
Parameter '_value' of bitbeb.burn (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#115) is not in mixedCase
Parameter '_value' of bitbeb.freeze (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#124) is not in mixedCase
Parameter '_value' of bitbeb.unfreeze (/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol#133-134) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x6798cc8ad079a7e663536f83ee26d63aabe03da9.sol analyzed (2 contracts), 40 result(s) found