INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:47:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != walletAddress) throw;
                                       ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:53:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (transferStop == true) throw;
                                ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:66:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (!(msg.data.length == size + 4)) throw;
                                         ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:70:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Token( uint initial_balance, address wallet, uint256 crowdsaleTime) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:111:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (to == walletAddress) throw; // Reject transfers to wallet (wallet cannot interact with token contract)
                             ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:113:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:116:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:129:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (to == walletAddress) throw; // Reject transfers to wallet (wallet cannot interact with token contract)
                             ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:133:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:137:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:140:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:167:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((value!=0) && (_approvals[msg.sender][spender] !=0)) throw;
                                                             ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:204:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToMultiply(currentSwapRate(), etherAmount)) throw;
                                                             ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:207:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(_balances[newTokenHolder],tokensAmount )) throw;
                                                                ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:208:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(_supply,tokensAmount)) throw;
                                             ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:210:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_supply + tokensAmount) > tokenCap) throw;
                                                 ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:221:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCap <= _supply) throw;
                                 ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:222:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToSub(tokenCap,_supply)) throw;
                                         ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:225:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(_balances[beneficiary], tokensAmount )) throw;
                                                              ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:226:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(_supply,tokensAmount)) throw;
                                             ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:309:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function multiowned(address[] _owners, uint _required) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:327:9: Warning: Use of the "var" keyword is deprecated.
        var pending = m_pending[_operation];
        ^---------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:391:9: Warning: Use of the "var" keyword is deprecated.
        var pending = m_pending[_operation];
        ^---------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:410:9: Warning: Use of the "var" keyword is deprecated.
        var pending = m_pending[_operation];
        ^---------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:497:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function daylimit(uint _limit) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:575:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (msg.value < 20 ether) throw;
                                      ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:581:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:586:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    	if (amountRaised + msg.value > MAX_ETH) throw;
    	                                        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:591:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToMultiply(tokenCtr.currentSwapRate(), msg.value)) throw;
                                                                    ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:593:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!safeToAdd(tokenCtr.totalSupply(),tokensAmount)) throw;
                                                            ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:594:74: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCtr.totalSupply() + tokensAmount > tokenCtr.tokenCap()) throw;
                                                                         ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:600:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!tokenSwap) throw;
                        ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:646:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newTokenContractAddr == address(0x0)) throw;
                                                  ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:648:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCtr != address(0x0)) throw;
                                      ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:663:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToAdd(amountRaised, msg.value)) throw;
                                                 ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:692:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Wallet(address[] _owners, uint _required, uint _daylimit)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:699:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenSwap) throw;
                       ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:702:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCtr.transferStop() == false) throw;
                                              ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:725:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == address(tokenCtr)) throw;
                                      ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:750:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:121:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer( msg.sender, to, value );
    ^-------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:146:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer( from, to, value );
    ^-------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:170:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval( msg.sender, spender, value );
    ^------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:215:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenMint(newTokenHolder, tokensAmount);
        ^-------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:231:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenMint(beneficiary, tokensAmount);
        ^----------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:240:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenSwapOver();
        ^-------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:246:5: Warning: Invoking events without "emit" prefix is deprecated.
    EmergencyStopActivated();
    ^----------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:331:13: Warning: Invoking events without "emit" prefix is deprecated.
            Revoke(msg.sender, _operation);
            ^----------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:336:69: Warning: "sha3" has been deprecated in favour of "keccak256"
    function changeOwner(address _from, address _to) onlymanyowners(sha3(msg.data)) external {
                                                                    ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:345:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerChanged(_from, _to);
        ^----------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:348:54: Warning: "sha3" has been deprecated in favour of "keccak256"
    function addOwner(address _owner) onlymanyowners(sha3(msg.data)) external {
                                                     ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:359:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerAdded(_owner);
        ^----------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:362:57: Warning: "sha3" has been deprecated in favour of "keccak256"
    function removeOwner(address _owner) onlymanyowners(sha3(msg.data)) external {
                                                        ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:371:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerRemoved(_owner);
        ^------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:374:66: Warning: "sha3" has been deprecated in favour of "keccak256"
    function changeRequirement(uint _newRequired) onlymanyowners(sha3(msg.data)) external {
                                                                 ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:378:9: Warning: Invoking events without "emit" prefix is deprecated.
        RequirementChanged(_newRequired);
        ^------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:424:13: Warning: Invoking events without "emit" prefix is deprecated.
            Confirmation(msg.sender, _operation);
            ^----------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:502:59: Warning: "sha3" has been deprecated in favour of "keccak256"
    function setDailyLimit(uint _newLimit) onlymanyowners(sha3(msg.data)) external {
                                                          ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:506:47: Warning: "sha3" has been deprecated in favour of "keccak256"
    function resetSpentToday() onlymanyowners(sha3(msg.data)) external {
                                              ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:661:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(msg.sender, msg.value);
        ^----------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:697:47: Warning: "sha3" has been deprecated in favour of "keccak256"
    function kill(address _to) onlymanyowners(sha3(msg.data)) external {
                                              ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:703:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(_to);
        ^----------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:707:41: Warning: "sha3" has been deprecated in favour of "keccak256"
    function stopToken() onlymanyowners(sha3(msg.data)) external {
                                        ^------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:729:13: Warning: Invoking events without "emit" prefix is deprecated.
            SingleTransact(msg.sender, _value, _to, _data);
            ^--------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:736:14: Warning: "sha3" has been deprecated in favour of "keccak256"
        _r = sha3(msg.data, block.number);
             ^--------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:736:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        _r = sha3(msg.data, block.number);
             ^--------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:741:13: Warning: Invoking events without "emit" prefix is deprecated.
            ConfirmationNeeded(_r, msg.sender, _value, _to, _data);
            ^----------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:751:13: Warning: Invoking events without "emit" prefix is deprecated.
            MultiTransact(msg.sender, _h, m_txs[_h].value, m_txs[_h].to, m_txs[_h].data);
            ^--------------------------------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint);
    ^---------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint);
    ^------------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:17:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint);
    ^-------------------------------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value) returns (bool ok);
    ^----------------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:20:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint value) returns (bool ok);
    ^----------------------------------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:21:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint value) returns (bool ok);
    ^--------------------------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:70:3: Warning: No visibility specified. Defaulting to "public". 
  function Token( uint initial_balance, address wallet, uint256 crowdsaleTime) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:78:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() constant returns (uint supply) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:82:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf( address who ) constant returns (uint value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:86:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint _allowance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:106:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer( address to, uint value)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:125:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom( address from, address to, uint value)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:150:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:176:3: Warning: No visibility specified. Defaulting to "public". 
  function currentSwapRate() constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:244:3: Warning: No visibility specified. Defaulting to "public". 
  function stopToken() onlyFromWallet {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:309:5: Warning: No visibility specified. Defaulting to "public". 
    function multiowned(address[] _owners, uint _required) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:386:5: Warning: No visibility specified. Defaulting to "public". 
    function isOwner(address _addr) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:390:5: Warning: No visibility specified. Defaulting to "public". 
    function hasConfirmed(bytes32 _operation, address _owner) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:497:5: Warning: No visibility specified. Defaulting to "public". 
    function daylimit(uint _limit) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:561:5: Warning: No visibility specified. Defaulting to "public". 
    function confirm(bytes32 _h) returns (bool);
    ^------------------------------------------^
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:637:5: Warning: No visibility specified. Defaulting to "public". 
    function startTokenSwap() onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:641:5: Warning: No visibility specified. Defaulting to "public". 
    function stopTokenSwap() onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:645:5: Warning: No visibility specified. Defaulting to "public". 
    function setTokenContract(address newTokenContractAddr) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:653:5: Warning: No visibility specified. Defaulting to "public". 
    function buyTokens(address _beneficiary)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:667:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawReserve(address _beneficiary) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:692:5: Warning: No visibility specified. Defaulting to "public". 
    function Wallet(address[] _owners, uint _required, uint _daylimit)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:712:5: Warning: No visibility specified. Defaulting to "public". 
    function()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:747:5: Warning: No visibility specified. Defaulting to "public". 
    function confirm(bytes32 _h) onlymanyowners(_h) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:91:3: Warning: Function state mutability can be restricted to pure
  function safeToAdd(uint a, uint b) private constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:96:3: Warning: Function state mutability can be restricted to pure
  function safeToMultiply(uint _a, uint _b) private constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:101:3: Warning: Function state mutability can be restricted to pure
  function safeToSub(uint a, uint b) private constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:386:5: Warning: Function state mutability can be restricted to view
    function isOwner(address _addr) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:627:5: Warning: Function state mutability can be restricted to pure
    function safeToAdd(uint a, uint b) private constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:632:5: Warning: Function state mutability can be restricted to pure
    function safeToMultiply(uint _a, uint _b) private constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in Wallet.confirm (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#769-770):
	External calls:
	- ! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol)
	State variables written after the call(s):
	- m_txs (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol)
Reentrancy in Wallet.execute (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#735-760):
	External calls:
	- ! _to.call.value(_value)(_data) (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#749)
	- ! confirm(_r) && m_txs[_r].to == 0 (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#751-760)
	State variables written after the call(s):
	- m_txs (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#751-752)
	- m_txs (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#752-753)
	- m_txs (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#755-757)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[92m
Reentrancy in tokenswap.areConditionsSatisfied (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#619-646):
	External calls:
	- tokenCtr.creationTime() + SWAP_LENGTH < now (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#627-631)
	- tokenCtr.disableTokenSwapLock() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#628-630)
	State variables written after the call(s):
	- tokenSwap (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#631)
Reentrancy in tokenswap.areConditionsSatisfied (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#619-646):
	External calls:
	- tokenCtr.creationTime() + SWAP_LENGTH < now (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#627-631)
	- tokenCtr.disableTokenSwapLock() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#628-630)
	- tokenCtr.disableTokenSwapLock() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#633)
	State variables written after the call(s):
	- tokenSwap (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#634-637)
Reentrancy in tokenswap.areConditionsSatisfied (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#619-646):
	External calls:
	- tokenCtr.creationTime() + SWAP_LENGTH < now (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#627-631)
	- tokenCtr.disableTokenSwapLock() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#628-630)
	- tokenCtr.disableTokenSwapLock() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#633)
	- tokenCtr.totalSupply() == tokenCtr.tokenCap() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#641-646)
	- tokenCtr.disableTokenSwapLock() (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#645)
	State variables written after the call(s):
	- tokenSwap (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#645)
Reentrancy in tokenswap.buyTokens (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#676-690):
	External calls:
	- tokenCtr.mintTokens(_beneficiary,msg.value) (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#683-685)
	State variables written after the call(s):
	- amountRaised (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#690)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.tokenCap should be constant (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#32-34)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#112:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#119-120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#121-122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#131-132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#143:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#174:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#210:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#215:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#218:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#220:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#226-227:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#228-229:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#235:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#51:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#60:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#669:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#675:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#690:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#599-600:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#605:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#607:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#609:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#613:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#615:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#619:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#745:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#750-751:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#719:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#721:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#721:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20.totalSupply (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#15-16) should be declared external
Token.totalSupply (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#80-83) should be declared external
ERC20.balanceOf (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#16-17) should be declared external
Token.balanceOf (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#83-86) should be declared external
ERC20.allowance (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#17-19) should be declared external
Token.allowance (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#86-91) should be declared external
Token.transfer (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#109-129) should be declared external
ERC20.transfer (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#19-20) should be declared external
Token.transferFrom (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#129-154) should be declared external
ERC20.transferFrom (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#20-21) should be declared external
Token.approve (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#154-176) should be declared external
ERC20.approve (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#21-23) should be declared external
Token.stopToken (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#254-255) should be declared external
multiowned.hasConfirmed (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#399-411) should be declared external
tokenswap.startTokenSwap (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#662-663) should be declared external
tokenswap.stopTokenSwap (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#663-667) should be declared external
tokenswap.setTokenContract (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#667-676) should be declared external
tokenswap.withdrawReserve (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#691-696) should be declared external
Wallet.fallback (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#723-724) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol:
	- pragma solidity^0.4.11 (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Wallet.execute (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#735-760):
	-! _to.call.value(_value)(_data) /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#749
Low level call in Wallet.confirm (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#769-770):
	-! m_txs[_h].to.call.value(m_txs[_h].value)(m_txs[_h].data) /unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Token.Token' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#70-79) is not in mixedCase
Parameter 'initial_balance' of Token.Token (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#71) is not in mixedCase
Parameter '_a' of Token.safeToMultiply (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#97-98) is not in mixedCase
Parameter '_b' of Token.safeToMultiply (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#99-100) is not in mixedCase
Variable 'Token._balances' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#38-39) is not in mixedCase
Variable 'Token._approvals' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#39-42) is not in mixedCase
Variable 'Token._supply' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#42) is not in mixedCase
Contract 'multiowned' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#279-496) is not in CapWords
Parameter '_owners' of multiowned.multiowned (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#316-317) is not in mixedCase
Parameter '_required' of multiowned.multiowned (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#317-318) is not in mixedCase
Parameter '_operation' of multiowned.revoke (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#329) is not in mixedCase
Parameter '_from' of multiowned.changeOwner (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#344-345) is not in mixedCase
Parameter '_to' of multiowned.changeOwner (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#345) is not in mixedCase
Parameter '_owner' of multiowned.addOwner (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#358) is not in mixedCase
Parameter '_owner' of multiowned.removeOwner (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#370) is not in mixedCase
Parameter '_newRequired' of multiowned.changeRequirement (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#383) is not in mixedCase
Parameter '_addr' of multiowned.isOwner (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#397) is not in mixedCase
Parameter '_operation' of multiowned.hasConfirmed (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#399-402) is not in mixedCase
Parameter '_owner' of multiowned.hasConfirmed (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#402) is not in mixedCase
Parameter '_operation' of multiowned.confirmAndCheck (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#412-413) is not in mixedCase
Variable 'multiowned.m_required' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#481) is not in mixedCase
Variable 'multiowned.m_numOwners' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#482) is not in mixedCase
Variable 'multiowned.m_owners' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#482) is not in mixedCase
Constant 'multiowned.c_maxOwners' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#483) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'multiowned.m_ownerIndex' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#488-489) is not in mixedCase
Variable 'multiowned.m_pending' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#490-491) is not in mixedCase
Variable 'multiowned.m_pendingIndex' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#492-496) is not in mixedCase
Contract 'daylimit' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#501-551) is not in CapWords
Parameter '_limit' of daylimit.daylimit (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#507-508) is not in mixedCase
Parameter '_newLimit' of daylimit.setDailyLimit (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#514) is not in mixedCase
Parameter '_value' of daylimit.underLimit (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#524-525) is not in mixedCase
Variable 'daylimit.m_dailyLimit' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#551) is not in mixedCase
Variable 'daylimit.m_spentToday' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#551) is not in mixedCase
Variable 'daylimit.m_lastDay' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#551) is not in mixedCase
Contract 'multisig' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#552-574) is not in CapWords
Contract 'tokenswap' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#574-696) is not in CapWords
Parameter '_a' of tokenswap.safeToMultiply (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#657-658) is not in mixedCase
Parameter '_b' of tokenswap.safeToMultiply (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#658) is not in mixedCase
Parameter '_beneficiary' of tokenswap.buyTokens (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#676-677) is not in mixedCase
Parameter '_beneficiary' of tokenswap.withdrawReserve (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#691-692) is not in mixedCase
Parameter '_to' of Wallet.execute (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#736) is not in mixedCase
Parameter '_value' of Wallet.execute (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#736) is not in mixedCase
Parameter '_data' of Wallet.execute (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#736-737) is not in mixedCase
Parameter '_h' of Wallet.confirm (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#769) is not in mixedCase
Function 'Wallet.Wallet' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#709-717) is not in mixedCase
Parameter '_to' of Wallet.kill (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol#717) is not in mixedCase
Variable 'Wallet.m_txs' (/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x88fcfbc22c6d3dbaa25af478c578978339bde77a.sol analyzed (7 contracts), 111 result(s) found