INFO:Slither:Compilation warnings/errors on /unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:13:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Manageable(address _manager) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:86:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Versionable (string _name, string _version, uint256 _identifier) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:115:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:377:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SwissCryptoExchangeToken (address initialShareholderAddress, uint256 initialAmount, address _manager)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:468:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function BaseCompany(string _name,  ... identifier) Manageable(_manager) {}
  ^-------------------------------------------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:547:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SwissCryptoExchangeCompany(address _manager) public BaseCompany("SwissCryptoExchangeCompany", "1.0.1", 101, _manager) {}
  ^-------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:59:5: Warning: Invoking events without "emit" prefix is deprecated.
    ActivatedContract(now);
    ^--------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:70:5: Warning: Invoking events without "emit" prefix is deprecated.
    DeactivatedContract(now);
    ^----------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:135:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:242:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpgradedContract(contractIdentifier, oldContractAddress, newContractAddress);
    ^--------------------------------------------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:278:5: Warning: Invoking events without "emit" prefix is deprecated.
    RollbackedContract(contractIdentifier, fromContractAddress, toContractAddress);
    ^----------------------------------------------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:418:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:434:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:448:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_companyAddress, _amount);
    ^----------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:449:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0x0, _companyAddress, _amount);
    ^-------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:686:7: Warning: Invoking events without "emit" prefix is deprecated.
      SaleEnded(now);
      ^------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:698:5: Warning: Invoking events without "emit" prefix is deprecated.
    ProcessedInvestment(investor, weiAmount, shares);
    ^----------------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:717:5: Warning: Invoking events without "emit" prefix is deprecated.
    SaleCompleted(currentSale.beneficiary, currentSale.weiRaised, currentSale.sharesSold);
    ^-----------------------------------------------------------------------------------^
/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:748:5: Warning: Invoking events without "emit" prefix is deprecated.
    SaleAborted(now);
    ^--------------^

INFO:Detectors:[91m
Reentrancy in SwissCryptoExchangeCompany.abortSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol):
	External calls:
	- require(bool)(token().transferFrom(investor,company,currentSale.sharesSold)) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol)
	- require(bool)(token().transferFrom(company,shareholder,currentSale.sharesCap)) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol)
	External calls sending eth:
	- investor.transfer(currentSale.weiRaised) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol)
	State variables written after the call(s):
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Reentrancy in ContractManagementSystem.upgradeContract (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#210-251):
	External calls:
	- require(bool)(! Activatable(newContractAddress).active()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#221-222)
	- require(bool)(contractIdentifier == Versionable(newContractAddress).identifier()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#224-225)
	- require(bool)(Activatable(oldContractAddress).active()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#236-238)
	- swapContractsStates(contractIdentifier,newContractAddress,oldContractAddress) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#239-242)
	State variables written after the call(s):
	- activeContracts (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#239-242)
	- managedContracts (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#242-246)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in SwissCryptoExchangeCompany.initializeNewSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#637-668):
	External calls:
	- require(bool)(token().balanceOf(msg.sender) >= sharesCap) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#647-651)
	State variables written after the call(s):
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#651-653)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#654-656)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#656-657)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#657-658)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#658-659)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#659-660)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#660-661)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#661-662)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#662)
	- currentSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#662-664)
Reentrancy in SwissCryptoExchangeToken.mint (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#449-468):
	External calls:
	- _companyAddress = ContractManagementSystem(manager).getActiveContractAddress(COMPANY_CONTRACT_ID) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#459-462)
	State variables written after the call(s):
	- balances (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#464-466)
	- totalSupply (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#462-464)
Reentrancy in ContractManagementSystem.rollbackContract (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#257-287):
	External calls:
	- require(bool)(contractIdentifier == Versionable(toContractAddress).identifier()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#268)
	- require(bool)(! Activatable(toContractAddress).active() && existsManagedContract(contractIdentifier,toContractAddress)) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#269-272)
	- swapContractsStates(contractIdentifier,toContractAddress,fromContractAddress) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#278-283)
	State variables written after the call(s):
	- migrationLocks (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#284)
Reentrancy in ContractManagementSystem.swapContractsStates (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#295-314):
	External calls:
	- Activatable(oldContractAddress).deactivate() (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#303-305)
	- Activatable(newContractAddress).activate() (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#307-309)
	State variables written after the call(s):
	- activeContracts (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#310-314)
Reentrancy in ContractManagementSystem.upgradeContract (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#210-251):
	External calls:
	- require(bool)(! Activatable(newContractAddress).active()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#221-222)
	- require(bool)(contractIdentifier == Versionable(newContractAddress).identifier()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#224-225)
	- require(bool)(Activatable(oldContractAddress).active()) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#236-238)
	- swapContractsStates(contractIdentifier,newContractAddress,oldContractAddress) (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#239-242)
	State variables written after the call(s):
	- migrationLocks (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#246-247)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Activatable.activate (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#55-65) should be declared external
Activatable.deactivate (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#66-76) should be declared external
Ownable.transferOwnership (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#135-144) should be declared external
ContractManagementSystem.getActiveContractAddress (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#170-186) should be declared external
ContractManagementSystem.upgradeContract (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#210-251) should be declared external
ContractManagementSystem.rollbackContract (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#257-287) should be declared external
SwissCryptoExchangeToken.balanceOf (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#413-416) should be declared external
ERC20Basic.balanceOf (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#357-358) should be declared external
ERC20Basic.transfer (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#358) should be declared external
SwissCryptoExchangeToken.transfer (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#423-430) should be declared external
SwissCryptoExchangeToken.transferFrom (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#441-446) should be declared external
SwissCryptoExchangeToken.mint (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#449-468) should be declared external
SwissCryptoExchangeCompany.fallback (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#622-632) should be declared external
SwissCryptoExchangeCompany.initializeNewSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#637-668) should be declared external
SwissCryptoExchangeCompany.finalizeSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#735-750) should be declared external
SwissCryptoExchangeCompany.abortSale (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol:
	- pragma solidity^0.4.18 (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Manageable.Manageable' (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#13-19) is not in mixedCase
Parameter '_manager' of Manageable.Manageable (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#13-14) is not in mixedCase
Function 'Versionable.Versionable' (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#87-101) is not in mixedCase
Parameter '_name' of Versionable.Versionable (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#87) is not in mixedCase
Parameter '_version' of Versionable.Versionable (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#87) is not in mixedCase
Parameter '_identifier' of Versionable.Versionable (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#87) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#121-124) is not in mixedCase
Parameter '_owner' of SwissCryptoExchangeToken.balanceOf (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#413-415) is not in mixedCase
Parameter '_to' of SwissCryptoExchangeToken.transfer (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#423) is not in mixedCase
Parameter '_value' of SwissCryptoExchangeToken.transfer (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#423) is not in mixedCase
Function 'SwissCryptoExchangeToken.SwissCryptoExchangeToken' (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#386-400) is not in mixedCase
Parameter '_from' of SwissCryptoExchangeToken.transferFrom (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#441) is not in mixedCase
Parameter '_to' of SwissCryptoExchangeToken.transferFrom (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#441) is not in mixedCase
Parameter '_value' of SwissCryptoExchangeToken.transferFrom (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#441) is not in mixedCase
Parameter '_amount' of SwissCryptoExchangeToken.mint (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#450) is not in mixedCase
Function 'BaseCompany.BaseCompany' (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#477-483) is not in mixedCase
Parameter '_addr' of BaseCompany.isShareholder (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#520) is not in mixedCase
Parameter '_addr' of BaseCompany.isMajorityShareholder (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#527) is not in mixedCase
Function 'SwissCryptoExchangeCompany.SwissCryptoExchangeCompany' (/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol#568-574) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/44/0x7270c5554b75734b3cd2a781205b84a350bc2334.sol analyzed (10 contracts), 43 result(s) found