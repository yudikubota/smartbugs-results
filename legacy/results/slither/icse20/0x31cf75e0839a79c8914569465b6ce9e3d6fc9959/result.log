INFO:Slither:Compilation warnings/errors on /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:5:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract CardMintingFacilitator {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:6:36: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x08584271Df3D0249C2C06AC1bC1237A1Dd30cb9a'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    CardConfig schema = CardConfig(0x08584271df3d0249c2c06ac1bc1237a1dd30cb9a); 
                                   ^----------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:7:49: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x677aA1dc08B9429c595efD4425b2D218cC22fD6E'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    EtherGenCore storageContract = EtherGenCore(0x677aa1dc08b9429c595efd4425b2d218cc22fd6e);
                                                ^----------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:13:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:13:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:22:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:22:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:33:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:33:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:37:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:37:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:43:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:43:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:53:33: Warning: "sha3" has been deprecated in favour of "keccak256"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:53:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:55:37: Warning: "sha3" has been deprecated in favour of "keccak256"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:55:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:72:37: Warning: "sha3" has been deprecated in favour of "keccak256"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:72:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:92:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:92:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:99:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:99:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:117:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:117:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:129:33: Warning: "sha3" has been deprecated in favour of "keccak256"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:129:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:375:91: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xD9861D9a6111bfBB9235a71151f654D0Fe7Ed954'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    TransferRestrictionVerifier transferRestrictionVerifier = TransferRestrictionVerifier(0xd9861d9a6111bfbb9235a71151f654d0fe7ed954); 
                                                                                          ^----------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:404:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, newOwner, castCardId); // Emit Event
        ^----------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:417:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(currentOwner, newOwner, castCardId); // Emit Event
        ^------------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:425:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, approved, castCardId); // Emit Event
        ^----------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:794:63: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xC3D2736b3E4f0f78457D75b3b5f0191a14e8BD57'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    MappedMarketplace marketplaceContract = MappedMarketplace(0xc3d2736b3e4f0f78457d75b3b5f0191a14e8bd57);
                                                              ^----------------------------------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:969:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:13:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:22:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:33:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:37:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:43:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:53:38: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                     ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:55:42: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                         ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:72:42: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                         ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:92:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:99:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:117:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:129:38: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                     ^-------------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:563:29: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getCostForRace(uint8 race) public constant returns (uint8 cost) {
                            ^--------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:579:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getSpellAbilityCost(uint8 spell) public constant returns (uint24 cost) {
                                 ^---------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:624:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getRaceMutationCost(Race race, uint8 mutation) public constant returns (uint24 cost) {
                                 ^-------^
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:529:5: Warning: Function state mutability can be restricted to pure
    function getType(uint32 randomSeed) public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:537:5: Warning: Function state mutability can be restricted to pure
    function getRace(uint32 randomSeed) public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:541:5: Warning: Function state mutability can be restricted to pure
    function getTrait(uint32 randomSeed) public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:563:5: Warning: Function state mutability can be restricted to pure
    function getCostForRace(uint8 race) public constant returns (uint8 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:567:5: Warning: Function state mutability can be restricted to pure
    function getCostForTrait(uint8 trait) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:579:5: Warning: Function state mutability can be restricted to pure
    function getSpellAbilityCost(uint8 spell) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:588:5: Warning: Function state mutability can be restricted to pure
    function getNeutralMutationCost(uint8 mutation) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:624:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutationCost(Race race, uint8 mutation) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:631:5: Warning: Function state mutability can be restricted to pure
    function getCostForHealth(uint8 health) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:635:5: Warning: Function state mutability can be restricted to pure
    function getHealthForCost(uint32 cost) public constant returns (uint32 health) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:643:5: Warning: Function state mutability can be restricted to pure
    function getCostForAttack(uint8 attack) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:647:5: Warning: Function state mutability can be restricted to pure
    function getAttackForCost(uint32 cost) public constant returns (uint32 attack) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:666:5: Warning: Function state mutability can be restricted to pure
    function getSpell(uint32 randomSeed) public constant returns (Spells spell) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:678:5: Warning: Function state mutability can be restricted to pure
    function getMutation(uint32 randomSeed) public constant returns (Mutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:688:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:697:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:706:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:715:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:724:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:733:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:742:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:751:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:760:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:769:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:778:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:787:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol:872:5: Warning: Function state mutability can be restricted to pure
    function getCurrentPrice(uint128 startPrice, uint128 endPrice, uint24 priceChangeDuration, uint64 secondsSinceListing) public constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
MappedMarketplace.isWhitelisted (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#962-969) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
ERC721 (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#261-287) has incorrect ERC20 function interface(s):
	-approve (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#267-268)
	-transfer (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#268-270)
	-transferFrom (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#270-271)
EtherGenCore (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#372-530) has incorrect ERC20 function interface(s):
	-approve (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#428-434)
	-transfer (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#403-412)
	-transferFrom (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#413-428)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
CardMintingFacilitator.generateRandomCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#10-30) uses a dangerous strict equality:
	- cardDetails[0] == uint8(CardConfig.Type.Monster)
	- randomSeed % 200 == 13
CardMintingFacilitator.generateRandomCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#10-30) uses a dangerous strict equality:
	- cardDetails[0] == uint8(CardConfig.Type.Monster)
	- randomSeed % 200 == 13
CardMintingFacilitator.generateRandomMonster (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#30-113) uses a dangerous strict equality:
	- bool(randomSeed % 3 == 0)
	- cardDetails[6] == 0
	- cardDetails[6] > 0 && cardDetails[7] == 0 && cardDetails[6] != newMutation
	- cardDetails[6] > 0 && cardDetails[7] > 0 && cardDetails[8] == 0 && cardDetails[6] != newMutation && cardDetails[7] != newMutation
	- cardDetails[9] == 0
	- cardDetails[9] > 0 && cardDetails[10] == 0 && cardDetails[9] != newMutation
	- cardDetails[9] > 0 && cardDetails[10] > 0 && cardDetails[11] == 0 && cardDetails[9] != newMutation && cardDetails[10] != newMutation
CardMintingFacilitator.generateRandomCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#10-30) uses a dangerous strict equality:
	- cardDetails[0] == uint8(CardConfig.Type.Monster)
	- randomSeed % 200 == 13
CardMintingFacilitator.generateRandomMonster (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#30-113) uses a dangerous strict equality:
	- bool(randomSeed % 3 == 0)
	- cardDetails[6] == 0
	- cardDetails[6] > 0 && cardDetails[7] == 0 && cardDetails[6] != newMutation
	- cardDetails[6] > 0 && cardDetails[7] > 0 && cardDetails[8] == 0 && cardDetails[6] != newMutation && cardDetails[7] != newMutation
	- cardDetails[9] == 0
	- cardDetails[9] > 0 && cardDetails[10] == 0 && cardDetails[9] != newMutation
	- cardDetails[9] > 0 && cardDetails[10] > 0 && cardDetails[11] == 0 && cardDetails[9] != newMutation && cardDetails[10] != newMutation
CardMintingFacilitator.generateRandomSpell (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#113-154) uses a dangerous strict equality:
	- cardDetails[9] == 0
	- cardDetails[9] > 0 && cardDetails[10] == 0 && cardDetails[9] != newAbility
	- cardDetails[9] > 0 && cardDetails[10] > 0 && cardDetails[11] == 0 && cardDetails[9] != newAbility && cardDetails[10] != newAbility
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in NewUserBonusDistributor.awardReferalBonus (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#230-255):
	External calls:
	- newCard = generateRandomCard(uint32(storageContract.totalSupply() * now)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#234-237)
	State variables written after the call(s):
	- referals (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#240-241)
	- referals (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#242-249)
Reentrancy in NewUserBonusDistributor.claimFreeFirstCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#207-220):
	External calls:
	- newCard = generateRandomCard(uint32(msg.sender)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#211-212)
	State variables written after the call(s):
	- claimedAddresses (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#215-216)
Reentrancy in MappedMarketplace.purchaseCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#872-889):
	External calls:
	- seller = storageContract.ownerOf(cardId) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#877)
	State variables written after the call(s):
	- listedCardIds (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#878)
	- listings (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#878)
Reentrancy in MappedMarketplace.removeListing (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#904-906):
	External calls:
	- require(bool)(storageContract.ownerOf(cardId) == msg.sender || (now - listings[cardId].listTime) > removalDuration) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#904-906)
	State variables written after the call(s):
	- listedCardIds (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#906)
	- listings (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#906)
Reentrancy in EtherGenCore.transfer (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#403-412):
	External calls:
	- require(bool)(transferRestrictionVerifier.isAvailableForTransfer(castCardId)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#408-409)
	State variables written after the call(s):
	- cardIdMapping (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#410-411)
	- cardIdMapping (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#411)
	- playersCollections (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#410-411)
	- playersCollections (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#411)
Reentrancy in EtherGenCore.transferFrom (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#413-428):
	External calls:
	- require(bool)(transferRestrictionVerifier.isAvailableForTransfer(castCardId)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#422-424)
	State variables written after the call(s):
	- cardIdMapping (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#424-425)
	- cardIdMapping (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#425)
	- playersCollections (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#424-425)
	- playersCollections (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#425)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
totalCost in CardMintingFacilitator.generateRandomSpell (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#117) is a local variable never initialiazed
totalCost in CardMintingFacilitator.generateRandomMonster (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#33) is a local variable never initialiazed
card in EtherGenCore.mintCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#470-471) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
MappedMarketplace.getListings has external calls inside a loop:
	- cardDetails[i] = storageContract.getCard(listing.cardId) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#932)
MappedMarketplace.getListings has external calls inside a loop:
	- cardOwners[i] = storageContract.ownerOf(listing.cardId) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#932-934)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in NewUserBonusDistributor.claimFreeFirstCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#207-220):
	External calls:
	- newCard = generateRandomCard(uint32(msg.sender)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#211-212)
	- storageContract.mintCard(msg.sender,newCard) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#217-219)
	State variables written after the call(s):
	- referals (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#219-220)
Reentrancy in MappedMarketplace.listCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#851-869):
	External calls:
	- require(bool)(storageContract.ownerOf(cardId) == msg.sender) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#855)
	- require(bool)(storageContract.isCardTradeable(cardId)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#855)
	- require(bool)(transferRestrictionVerifier.isAvailableForTransfer(cardId)) (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#855-857)
	State variables written after the call(s):
	- listedCardIds (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#867-869)
	- listings (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#865-866)
	- listings (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#867-869)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
MappedMarketplace.isWhitelisted uses assembly (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#962-969)
	- /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#964-967
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#13-14:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#22-23:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#33-34:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#37-38:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#43-45:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#53-54:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#55-57:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#74:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#93:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#100:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#119:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#131-132:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
EtherGenCore.totalSupply (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#388-391) should be declared external
ERC721.totalSupply (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#262-263) should be declared external
ERC721.balanceOf (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#263-264) should be declared external
EtherGenCore.balanceOf (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#396-398) should be declared external
PlayersCollectionStorage.getPlayersCollection (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#323-350) should be declared external
PlayersCollectionStorage.getCard (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#350-366) should be declared external
CardConfig.getType (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#542-548) should be declared external
CardConfig.getRace (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#549-551) should be declared external
CardConfig.getTrait (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#551-553) should be declared external
CardConfig.getCostForRace (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#577-583) should be declared external
CardConfig.getCostForTrait (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#583-585) should be declared external
CardConfig.getSpellAbility (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#585-595) should be declared external
CardConfig.getNeutralMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#596-600) should be declared external
CardConfig.getMutationForRace (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#603-643) should be declared external
CardConfig.getCostForHealth (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#649-658) should be declared external
CardConfig.getHealthForCost (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#658-659) should be declared external
CardConfig.getCostForAttack (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#660-661) should be declared external
CardConfig.getAttackForCost (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#661-662) should be declared external
SpellAbilities.getSpell (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#675-678) should be declared external
SharedNeutralMutations.getMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#695-698) should be declared external
DragonMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#703-707) should be declared external
SpiderlingMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#713-716) should be declared external
VampireMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#724-727) should be declared external
DemonMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#733-738) should be declared external
HumanoidMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#742-747) should be declared external
BeastMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#751-756) should be declared external
UndeadMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#760-765) should be declared external
SerpentMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#769-774) should be declared external
MechMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#778-784) should be declared external
GolemMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#787-792) should be declared external
ElementalMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#794-797) should be declared external
ParasiteMutations.getRaceMutation (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#806-808) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Constant 'CardConfig.numRaces' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#537-538) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CardConfig.numTraits' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#541-542) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SpellAbilities.numSpells' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#675) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SharedNeutralMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#694) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DragonMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#703) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SpiderlingMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#712-713) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'VampireMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#722) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DemonMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#731) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'HumanoidMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#740-742) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BeastMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#749-751) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'UndeadMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#758-760) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SerpentMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#767-769) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'MechMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#777-778) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GolemMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#787) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ElementalMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#794) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ParasiteMutations.numMutations' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#806) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'MappedMarketplace.removalDuration' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#828-829) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'MappedMarketplace.marketCut' (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#832-833) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC721 (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#261-287) does not mark important ERC20 parameters as 'indexed':
	-Transfer (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#272-275) does not index parameter 'from'
	-Transfer (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#272-275) does not index parameter 'to'
	-Approval (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#275) does not index parameter 'owner'
	-Approval (/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol#275) does not index parameter 'approved'
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unindexed-erc20-event-parameters[0m
INFO:Slither:/unique_contracts/0x31cf75e0839a79c8914569465b6ce9e3d6fc9959.sol analyzed (22 contracts), 83 result(s) found