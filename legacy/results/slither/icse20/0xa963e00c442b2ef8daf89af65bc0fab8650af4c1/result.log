INFO:Slither:Compilation warnings/errors on /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:85:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:195:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:200:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:205:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:463:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:475:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:479:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:485:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:492:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:507:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:525:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:531:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:536:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:546:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:552:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:556:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:561:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:565:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:584:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:590:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:619:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:647:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:670:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:678:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:695:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:706:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:707:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[msg.sender].minCap) throw;
                                                                     ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:718:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:722:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[addr].minCap) throw;
                                                               ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:777:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:809:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:835:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:850:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:904:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1013:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1069:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1076:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1174:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsaleExt(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:105:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:597:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:686:7: Warning: Invoking events without "emit" prefix is deprecated.
      Whitelisted(addr, status, minCap, maxCap);
      ^---------------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:688:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistItemChanged(addr, status, minCap, maxCap);
      ^------------------------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:788:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(startsAt);
    ^-----------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:820:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:989:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:999:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1016:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1134:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1142:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1217:5: Warning: Invoking events without "emit" prefix is deprecated.
    MaximumSellableTokensChanged(maximumSellableTokens);
    ^-------------------------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:85:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:146:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:152:3: Warning: No visibility specified. Defaulting to "public". 
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:159:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:164:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:245:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:254:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:305:3: Warning: No visibility specified. Defaulting to "public". 
  function distributeReservedTokens(uint reservedTokensDistributionBatch);
  ^----------------------------------------------------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:308:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:463:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:506:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:769:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:986:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:993:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1003:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1007:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1020:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1174:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsaleExt(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1194:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1194:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1194:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:11:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:17:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:24:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:29:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:35:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:39:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:43:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:47:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:146:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:152:3: Warning: Function state mutability can be restricted to pure
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:159:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:164:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:237:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:245:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:254:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:294:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:894:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:982:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:1201:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return (tokenAmountOf[addr].plus(tokenAmount)) > maxCap;
            ^-----------------------------------^

INFO:Detectors:[93m
Reentrancy in CrowdsaleExt.finalize (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#665-679):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#677-678)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#678-679)
Reentrancy in CrowdsaleExt.investInternal (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#533-622):
	External calls:
	- getState() == State.Funding (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#542-554)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#559-562)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#603-604)
	- weiRaised (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#601-603)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#480-520):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#500-504)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#514-515)
	- isUpdatable (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#520)
	- isWhiteListed (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#520)
	- minimumFundingGoal (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#517-519)
	- multisigWallet (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#504)
	- startsAt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#513)
Reentrancy in CrowdsaleExt.investInternal (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#533-622):
	External calls:
	- getState() == State.Funding (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#542-554)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#559-562)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#593-597)
	- investorCount (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#592-593)
	- tokenAmountOf (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#597-601)
Reentrancy in MintedTokenCappedCrowdsaleExt.setMaximumSellableTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol):
	External calls:
	- assert(bool)(! lastTierCntrct.finalized()) (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol)
	State variables written after the call(s):
	- maximumSellableTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleExt.getState (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#913-924) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#922-924)
	- block.timestamp < startsAt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#921-924)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#378-380)
CrowdsaleExt.joinedCrowdsalesLenMax should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#419-421)
CrowdsaleExt.ownerTestValue should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#448)
FinalizeAgent.reservedTokensAreDistributed should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#301-303)
FractionalERC20Ext.decimals should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#358)
FractionalERC20Ext.minCap should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#358-360)
MintableTokenExt.mintingFinished should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1077-1080)
PricingStrategy.tier should be constant (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#243)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#209:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#211-212:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#214:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#506-507:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#512-513:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#514:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#517:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#523:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#542:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#551:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#554:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#564:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#575:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#578:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#583:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#587:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#610:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#616:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#634:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#670-671:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#694:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#697:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#712:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#724:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#725:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#734:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#741:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#804:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#840:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#866:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#882-883:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#928:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1053:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1107-1108:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#62-63) should be declared external
StandardToken.balanceOf (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1034-1039) should be declared external
StandardToken.transfer (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1011-1016) should be declared external
ERC20Basic.transfer (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#63-64) should be declared external
Ownable.transferOwnership (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#105-111) should be declared external
SafeMathLibExt.times (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#152-159) should be declared external
SafeMathLibExt.divides (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#159-165) should be declared external
SafeMathLibExt.minus (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#165-173) should be declared external
SafeMathLibExt.plus (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#173-175) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#245-250) should be declared external
PricingStrategy.isSane (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#252-254) should be declared external
PricingStrategy.isPresalePurchase (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#262-265) should be declared external
PricingStrategy.updateRate (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#266-267) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#278-284) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#303-305) should be declared external
FinalizeAgent.isSane (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#312-314) should be declared external
FinalizeAgent.distributeReservedTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#314) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#326-327) should be declared external
ERC20.allowance (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#334-340) should be declared external
StandardToken.allowance (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1058-1062) should be declared external
ERC20.transferFrom (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#340-350) should be declared external
StandardToken.transferFrom (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1016-1034) should be declared external
StandardToken.approve (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1039-1058) should be declared external
ERC20.approve (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#350-354) should be declared external
CrowdsaleExt.fallback (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#522-523) should be declared external
CrowdsaleExt.buy (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#630-632) should be declared external
CrowdsaleExt.distributeReservedTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#632-641) should be declared external
CrowdsaleExt.areReservedTokensDistributed (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#641-646) should be declared external
CrowdsaleExt.canDistributeReservedTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#647-661) should be declared external
CrowdsaleExt.finalize (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#665-679) should be declared external
CrowdsaleExt.setFinalizeAgent (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#685-694) should be declared external
CrowdsaleExt.setEarlyParticipantWhitelistMultiple (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#707-722) should be declared external
CrowdsaleExt.updateEarlyParticipantWhitelist (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#733-751) should be declared external
CrowdsaleExt.whitelistedParticipantsLength (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#751-754) should be declared external
CrowdsaleExt.updateJoinedCrowdsalesMultiple (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#782-794) should be declared external
CrowdsaleExt.setStartsAt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#794-815) should be declared external
CrowdsaleExt.setEndsAt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#828-846) should be declared external
CrowdsaleExt.setMultisig (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#880-884) should be declared external
CrowdsaleExt.isFinalizerSane (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#888-889) should be declared external
CrowdsaleExt.isPricingSane (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#893-902) should be declared external
CrowdsaleExt.isCrowdsale (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#924-926) should be declared external
StandardToken.isToken (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1010-1011) should be declared external
MintableTokenExt.finalizeReservedAddress (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1108-1113) should be declared external
MintableTokenExt.areTokensDistributedForAddress (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1116-1117) should be declared external
MintableTokenExt.getReservedTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1117-1125) should be declared external
MintableTokenExt.getReservedPercentageUnit (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1126-1129) should be declared external
MintableTokenExt.getReservedPercentageDecimals (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1129-1133) should be declared external
MintableTokenExt.setReservedTokensListMultiple (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1133-1154) should be declared external
MintableTokenExt.mint (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1163-1177) should be declared external
MintableTokenExt.setMintAgent (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1179-1184) should be declared external
MintedTokenCappedCrowdsaleExt.setMaximumSellableTokens (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol) should be declared external
MintedTokenCappedCrowdsaleExt.updateRate (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#4-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#91-93) is not in mixedCase
Function 'CrowdsaleExt.CrowdsaleExt' (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#480-520) is not in mixedCase
Parameter '_name' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#482-484) is not in mixedCase
Parameter '_token' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#484-485) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#485-488) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#488-490) is not in mixedCase
Parameter '_start' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#490-491) is not in mixedCase
Parameter '_end' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#491) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#491-492) is not in mixedCase
Parameter '_isUpdatable' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#492-495) is not in mixedCase
Parameter '_isWhiteListed' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#495) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.setPricingStrategy (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#856-857) is not in mixedCase
Variable 'CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#378-380) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1034-1037) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1011-1012) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1012) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1061) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1061) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1019-1020) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1020) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1020) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1041) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1041) is not in mixedCase
Function 'MintedTokenCappedCrowdsaleExt.MintedTokenCappedCrowdsaleExt' (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1203-1220) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsaleExt.MintedTokenCappedCrowdsaleExt (/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol#1210-1211) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xa963e00c442b2ef8daf89af65bc0fab8650af4c1.sol analyzed (13 contracts), 120 result(s) found