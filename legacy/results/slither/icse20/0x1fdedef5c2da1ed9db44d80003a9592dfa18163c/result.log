INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:23:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:99:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Syndicate() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:370:4: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
   function Hedgely() public {
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:41:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:204:7: Warning: Invoking events without "emit" prefix is deprecated.
      ProfitShare(currentSyndicateValue, numberSyndicateMembers, totalOwnedShares , profitPerShare);
      ^-------------------------------------------------------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:399:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
       _seed = uint64(keccak256(keccak256(block.blockhash(block.number), _seed), now));
                                ^---------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:399:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
       _seed = uint64(keccak256(keccak256(block.blockhash(block.number), _seed), now));
                      ^-------------------------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:463:6: Warning: Invoking events without "emit" prefix is deprecated.
     StartSession(sessionNumber, sessionBlockSize, marketOptions , startingBlock);
     ^--------------------------------------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:497:7: Warning: Invoking events without "emit" prefix is deprecated.
      Invest(msg.sender, optionNumber, amount, marketOptions, block.number);
      ^-------------------------------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:548:11: Warning: Invoking events without "emit" prefix is deprecated.
          Winning(players[j], winnings, sessionNumber, numberWinner,block.number); // we can pick this up on gui
          ^---------------------------------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:554:7: Warning: Invoking events without "emit" prefix is deprecated.
      EndSession(msg.sender, sessionNumber, numberWinner, marketOptions , block.number);
      ^-------------------------------------------------------------------------------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:589:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(amount<=this.balance);
                        ^----------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:591:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            amount=this.balance;
                   ^----------^
/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:399:43: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
       _seed = uint64(keccak256(keccak256(block.blockhash(block.number), _seed), now));
                                          ^-------------^

INFO:Detectors:[91m
Hedgely.precision (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#342-343) shadows:
	- Syndicate.precision (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#68)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[92m
Hedgely.minimumStake should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#347-349)
Hedgely.precision should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#342-343)
Syndicate.buyInSharePrice should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#61-62)
Syndicate.minimumBuyIn should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#61)
Syndicate.playersShareAllocation should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#59)
Syndicate.precision should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#68)
Syndicate.totalSyndicateShares should be constant (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#58)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#412-413:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#39-51) should be declared external
Syndicate.claimProfit (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#109-118) should be declared external
Syndicate.claimPlayerProfit (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#119-128) should be declared external
Syndicate.claimPlayerWinnings (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#129-138) should be declared external
Syndicate.buyIntoSyndicate (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#246-264) should be declared external
Syndicate.memberShareCount (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#265-268) should be declared external
Syndicate.memberProfitShare (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#269-271) should be declared external
Syndicate.allocateShares (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#271-281) should be declared external
Syndicate.setShareCycleSessionSize (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#283-284) should be declared external
Syndicate.setMaxCyclePlayersConsidered (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#284-286) should be declared external
Syndicate.playerStatus (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#288-306) should be declared external
Hedgely.getMarketOptions (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#391-397) should be declared external
Hedgely.getPlayerPortfolio (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#398-400) should be declared external
Hedgely.numberOfInvestors (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#403-406) should be declared external
Hedgely.invest (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#478-523) should be declared external
Hedgely.setSessionBlockSize (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#609-614) should be declared external
Hedgely.withdraw (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#614-626) should be declared external
Hedgely.kill (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#626-629) should be declared external
Hedgely.fallback (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#629-631) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol:
	- pragma solidity^0.4.19 (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#23-28) is not in mixedCase
Struct 'Syndicate.somePlayer' (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#77-82) is not in CapWords
Struct 'Syndicate.member' (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#89-90) is not in CapWords
Function 'Syndicate.Syndicate' (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#101-108) is not in mixedCase
Parameter '_playerAddress' of Syndicate.allocateWinnings (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#141) is not in mixedCase
Parameter '_memberAddress' of Syndicate.addMember (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#242) is not in mixedCase
Parameter '_playerAddress' of Syndicate.playerStatus (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#288) is not in mixedCase
Function 'Hedgely.Hedgely' (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#385-390) is not in mixedCase
Variable 'Hedgely._seed' (/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol#408) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0x1fdedef5c2da1ed9db44d80003a9592dfa18163c.sol analyzed (4 contracts), 32 result(s) found