INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol:
/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol:90:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Authorization()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol:211:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function XPAAssets(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol:78:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(block.number, msg.sender, salt);
                       ^---------------------------------------^

INFO:Detectors:[93m
SafeMath.safeMul (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#59-68) uses a dangerous strict equality:
	- require(bool)((x == 0) || (z / x == y))
	- require(bool)((x == 0) || (z / x == y))
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in XPAAssets.executeOffset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#425-477):
	External calls:
	- fromXPAAsset = safeDiv(safeMul(xpaAmount_,getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#428-430)
	- burnXPA = safeDiv(safeMul(safeAdd(userToAmount,fee),1000000000000000000),getPrice(xpaAssetToken)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#437-439)
	State variables written after the call(s):
	- toAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#440-441)
Reentrancy in XPAAssets.executeOffset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#425-477):
	External calls:
	- fromXPAAsset = safeDiv(safeMul(xpaAmount_,getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#428-430)
	- burnXPAAsset = safeDiv(safeMul(safeSub(xpaAmount_,fee),getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#460-461)
	State variables written after the call(s):
	- toAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#461-462)
Reentrancy in XPAAssets.migrate (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#687-717):
	External calls:
	- newXPAAssets == address(0) && XPAAssets(newContract_).transferXPAAssetAndProfit(xpaAsset,profit) && Token(XPA).transfer(newContract_,Token(XPA).balanceOf(this)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#693-717)
	State variables written after the call(s):
	- newXPAAssets (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#708-710)
Reentrancy in XPAAssets.offset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#370-425):
	External calls:
	- remainingXPA = executeOffset(user_,userFromAmount,token_,offsetFeeRate) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#380-382)
	- require(bool)(Token(XPA).transfer(fundAccount,safeDiv(safeMul(safeSub(userFromAmount,remainingXPA),1000000000000000000),safeAdd(1000000000000000000,offsetFeeRate)))) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#383-386)
	State variables written after the call(s):
	- fromAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#386-387)
Reentrancy in XPAAssets.offset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#370-425):
	External calls:
	- user_ != user && block.timestamp > (forceOffsetBooks[user_] + 28800) && getMortgageRate(user_) >= getClosingLine() (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#387-425)
	State variables written after the call(s):
	- forceOffsetBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#389)
Reentrancy in XPAAssets.offset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#370-425):
	External calls:
	- user_ != user && block.timestamp > (forceOffsetBooks[user_] + 28800) && getMortgageRate(user_) >= getClosingLine() (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#387-425)
	- remainingXPA = executeOffset(user_,remainingXPA,xpaAsset[i],0) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#412-414)
	State variables written after the call(s):
	- fromAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#419-420)
	- toAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#412-414)
Reentrancy in XPAAssets.withdraw (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#282-305):
	External calls:
	- token_ != XPA && amount_ > 0 && amount_ <= safeDiv(safeMul(safeDiv(safeMul(getUsableXPA(user),getPrice(token_)),1000000000000000000),getHighestMortgageRate()),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#285-305)
	State variables written after the call(s):
	- toAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#288-292)
Reentrancy in XPAAssets.withdrawXPA (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#306-324):
	External calls:
	- amount_ >= 100000000000000000000 && amount_ <= getUsableXPA(user) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#314-324)
	State variables written after the call(s):
	- fromAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#320-322)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
XPAAssets.withdraw (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#282-305) does not use the value returned by external calls:
	-XPAAssetToken(token_).create(user,safeSub(amount_,withdrawFee)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#300-302)
	-XPAAssetToken(token_).create(this,withdrawFee) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#302-303)
XPAAssets.migrate (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#687-717) does not use the value returned by external calls:
	-XPAAssets(newContract_).transferUnPaidFundAccount(xpaAsset[i],unPaidFundAccount[xpaAsset[i]]) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#713-717)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
XPAAssets.migrate has external calls inside a loop:
	- XPAAssets(newContract_).transferUnPaidFundAccount(xpaAsset[i],unPaidFundAccount[xpaAsset[i]]) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#713-717)
XPAAssets.migrateAmountBooks has external calls inside a loop:
	- toAmountBooks[user_][xpaAsset[i]] = safeAdd(toAmountBooks[user_][xpaAsset[i]],XPAAssets(oldXPAAssets).getLoanAmount(user_,xpaAsset[i])) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in XPAAssets.burnFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#630-639):
	External calls:
	- FundAccount(fundAccount).burn(token_,amount_) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#634-639)
	State variables written after the call(s):
	- unPaidFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#638-639)
Reentrancy in XPAAssets.createToken (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#243-262):
	External calls:
	- newAsset = TokenFactory(tokenFactory).createToken(symbol_,name_,defaultExchangeRate_) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#252-258)
	State variables written after the call(s):
	- xpaAsset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#261-262)
Reentrancy in XPAAssets.executeOffset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#425-477):
	External calls:
	- fromXPAAsset = safeDiv(safeMul(xpaAmount_,getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#428-430)
	- burnXPA = safeDiv(safeMul(safeAdd(userToAmount,fee),1000000000000000000),getPrice(xpaAssetToken)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#437-439)
	- profit = safeAdd(profit,safeDiv(safeMul(fee,1000000000000000000),getPrice(xpaAssetToken))) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#441-444)
	State variables written after the call(s):
	- unPaidFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#447-449)
Reentrancy in XPAAssets.executeOffset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#425-477):
	External calls:
	- fromXPAAsset = safeDiv(safeMul(xpaAmount_,getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#428-430)
	State variables written after the call(s):
	- profit (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#457-459)
Reentrancy in XPAAssets.executeOffset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#425-477):
	External calls:
	- fromXPAAsset = safeDiv(safeMul(xpaAmount_,getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#428-430)
	- burnXPAAsset = safeDiv(safeMul(safeSub(xpaAmount_,fee),getPrice(xpaAssetToken)),1000000000000000000) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#460-461)
	State variables written after the call(s):
	- unPaidFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#467-473)
Reentrancy in XPAAssets.migrate (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#687-717):
	External calls:
	- newXPAAssets == address(0) && XPAAssets(newContract_).transferXPAAssetAndProfit(xpaAsset,profit) && Token(XPA).transfer(newContract_,Token(XPA).balanceOf(this)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#693-717)
	State variables written after the call(s):
	- forceOff (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#704)
	- powerStatus (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#707)
Reentrancy in XPAAssets.migrateAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol):
	External calls:
	- fromAmountBooks[user_] = safeAdd(fromAmountBooks[user_],XPAAssets(oldXPAAssets).getFromAmountBooks(user_)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol)
	- forceOffsetBooks[user_] = XPAAssets(oldXPAAssets).getForceOffsetBooks(user_) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol)
	State variables written after the call(s):
	- forceOffsetBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol)
Reentrancy in XPAAssets.mortgage (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#262-282):
	External calls:
	- amount_ = Token(XPA).allowance(msg.sender,this) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#265-269)
	- amount_ >= 100000000000000000000 && Token(XPA).transferFrom(msg.sender,this,amount_) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#270-282)
	State variables written after the call(s):
	- fromAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#276-279)
Reentrancy in XPAAssets.offset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#370-425):
	External calls:
	- user_ != user && block.timestamp > (forceOffsetBooks[user_] + 28800) && getMortgageRate(user_) >= getClosingLine() (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#387-425)
	State variables written after the call(s):
	- profit (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#404-405)
Reentrancy in XPAAssets.repayment (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#354-368):
	External calls:
	- XPAAssetToken(token_).burnFrom(user,amount_) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#361-368)
	State variables written after the call(s):
	- toAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#363-366)
Reentrancy in XPAAssets.transferProfit (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#640-656):
	External calls:
	- XPA != token_ && Token(token_).balanceOf(this) >= amount_ (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#643-646)
	- require(bool)(Token(token_).transfer(bank,amount_)) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#645-646)
	- XPA == token_ && Token(XPA).balanceOf(this) >= amount_ (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#646-656)
	State variables written after the call(s):
	- profit (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#650-652)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
XPAAssets.offset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#370-425) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > initCanOffsetTime) (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#373-374)
	- user_ != user && block.timestamp > (forceOffsetBooks[user_] + 28800) && getMortgageRate(user_) >= getClosingLine() (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#387-425)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
XPAAssets.maxForceOffsetAmount should be constant (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#184-185)
XPAAssets.minForceOffsetAmount should be constant (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#185-186)
XPAAssets.version should be constant (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#175)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Authorization.powerSwitch (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#118-129) should be declared external
Authorization.transferOwnership (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#131-136) should be declared external
Authorization.assignOperator (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#136-145) should be declared external
Authorization.assignBank (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#146-152) should be declared external
Authorization.assignAgent (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#152-158) should be declared external
XPAAssets.setFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#237-243) should be declared external
XPAAssets.createToken (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#243-262) should be declared external
XPAAssets.mortgage (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#262-282) should be declared external
XPAAssets.withdraw (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#282-305) should be declared external
XPAAssets.withdrawXPA (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#306-324) should be declared external
XPAAssets.repayment (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#354-368) should be declared external
XPAAssets.offset (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#370-425) should be declared external
XPAAssets.getRemainingAmount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#618-629) should be declared external
XPAAssets.burnFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#630-639) should be declared external
XPAAssets.transferProfit (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#640-656) should be declared external
XPAAssets.setFeeRate (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#657-687) should be declared external
XPAAssets.migrate (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#687-717) should be declared external
XPAAssets.transferXPAAssetAndProfit (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#717-720) should be declared external
XPAAssets.transferUnPaidFundAccount (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#720-737) should be declared external
XPAAssets.migratingAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#737-742) should be declared external
XPAAssets.migrateAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol) should be declared external
XPAAssets.getFromAmountBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol) should be declared external
XPAAssets.getForceOffsetBooks (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol:
	- pragma solidity^0.4.21 (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter 'Token_' of FundAccount.burn (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#28) is not in mixedCase
Parameter 'Amount_' of FundAccount.burn (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#28) is not in mixedCase
Parameter 'N' of SafeMath.random (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#78) is not in mixedCase
Function 'Authorization.Authorization' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#94-102) is not in mixedCase
Event 'XPAAssets.eMortgage' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#187) is not in CapWords
Event 'XPAAssets.eWithdraw' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#187-189) is not in CapWords
Event 'XPAAssets.eRepayment' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#189-192) is not in CapWords
Event 'XPAAssets.eOffset' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#192) is not in CapWords
Event 'XPAAssets.eExecuteOffset' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#193) is not in CapWords
Event 'XPAAssets.eMigrate' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#193-194) is not in CapWords
Event 'XPAAssets.eMigrateAmount' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#194) is not in CapWords
Function 'XPAAssets.XPAAssets' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#220-237) is not in mixedCase
Parameter 'XPAAddr' of XPAAssets.XPAAssets (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#224) is not in mixedCase
Variable 'XPAAssets.XPA' (/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol#176-177) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/15/0xd0f7d665996b745b2399a127d5d84dacd42d251f.sol analyzed (8 contracts), 64 result(s) found