INFO:Slither:Compilation warnings/errors on /unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:31:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function daleCoin() {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:26:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(administrators[keccak256(_customerAddress)]);
                               ^-------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:26:32: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        require(administrators[keccak256(_customerAddress)]);
                               ^-------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:32:32: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x07D9e49Ea402194bf48A8276dAfB16E4eD633317'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
         token = StandardToken(0x07d9e49ea402194bf48a8276dafb16e4ed633317);
                               ^----------------------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:31:6: Warning: No visibility specified. Defaulting to "public". 
     function daleCoin() {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function userTokenBalance(address _userAddress) constant returns(uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
StandardToken.transfer (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#5-7) should be declared external
StandardToken.transferFrom (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#7-9) should be declared external
StandardToken.balanceOf (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#9-11) should be declared external
StandardToken.approve (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#11-13) should be declared external
StandardToken.allowance (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#13-17) should be declared external
daleCoin.setStakingRequirement (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#36-43) should be declared external
daleCoin.setMessagingRequirement (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#43-51) should be declared external
daleCoin.validateUser (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#56-64) should be declared external
daleCoin.validateUserForMessaging (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#64-71) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol:
	- pragma solidity^0.4.0 (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'daleCoin' (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#17-71) is not in CapWords
Parameter '_amountOfTokens' of daleCoin.setStakingRequirement (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#37-38) is not in mixedCase
Parameter '_amountOfTokens' of daleCoin.setMessagingRequirement (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#44-45) is not in mixedCase
Parameter '_userAddress' of daleCoin.userTokenBalance (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#51-52) is not in mixedCase
Parameter '_userAddress' of daleCoin.validateUser (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#57) is not in mixedCase
Parameter '_userAddress' of daleCoin.validateUserForMessaging (/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol#65) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/22/0x46d0d49c586b8cea2fc90f5c4c34ec2ad099687d.sol analyzed (2 contracts), 16 result(s) found