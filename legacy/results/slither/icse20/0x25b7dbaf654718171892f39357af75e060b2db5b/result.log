INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:42:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (cardIndex >= totalCards) throw;
		                             ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:61:8: Warning: Use of the "var" keyword is deprecated.
		var (suit, number) = cardDescription(self);
		     ^--^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:61:14: Warning: Use of the "var" keyword is deprecated.
		var (suit, number) = cardDescription(self);
		           ^----^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:83:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (blockHash == 0x0) throw;
		                      ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:181:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!tick(self)) throw; // Forces tick, commitment to play actually happened past block
                       ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:186:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self.state != GameState.Waiting) throw;
                                         ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:187:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (decision != GameState.Hit && decision != GameState.Stand) throw;
                                                                  ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:222:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self.closed) throw; // cannot re-close
                     ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:223:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self.state != GameState.Finished) throw; // not closable
                                          ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:228:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!self.player.send(self.payout)) throw;
                                          ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:334:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isOwner[msg.sender]) throw;
                              ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:339:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != x) throw;
                         ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:344:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != games[gameID].player) throw;
                                            ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:350:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (blockActions[block.number] > maxBlockActions) throw;
                                                      ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:354:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Blockjack(address _admin_contract, address _logs_contract) { // only(DEV) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:368:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!allowsNewGames) throw;
                         ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:369:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value < minBet) throw;
                            ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:370:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value > maxBet) throw;
                            ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:377:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (!openedGame.tick()) throw;
	                        ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:378:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (!openedGame.closed) throw; // cannot start game with on-going game
	                        ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:393:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!game.tick()) throw;
                      ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:401:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value != game.bet) throw;
                               ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:402:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!game.tick()) throw;
                      ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:405:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (totalPlayer < 9 || totalPlayer > 11) throw;
                                             ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:406:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (game.bet > maxBet) throw;
                           ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:416:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!game.tick()) throw;
                      ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:423:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (openedGame.closed) throw;
                           ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:424:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!openedGame.tick()) throw;
                            ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:524:83: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (initialBankroll > currentBankroll - 5 ether && bankrollLockedUntil > now) throw;
                                                                                  ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:529:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!DEV.send(currentBankroll - initialBankroll)) throw;
                                                        ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:540:76: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!ADMIN_CONTRACT.call.value(currentBankroll - initialBankroll)()) throw;
                                                                           ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:547:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (profitsLockedUntil > now) throw;
                                  ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:548:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (currentBankroll <= initialBankroll) throw; // there are no profits
                                            ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:551:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!ADMIN_CONTRACT.call.value(profit)()) throw;
                                              ^---^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library ArrayLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:257:52: Warning: This declaration shadows an existing declaration.
  function bestSum(uint8[] possibleSums)  returns (uint8 bestSum) {
                                                   ^-----------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:257:3: The shadowed declaration is here:
  function bestSum(uint8[] possibleSums)  returns (uint8 bestSum) {
  ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:375:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      GameLib.Game openedGame = games[currentGameId];
      ^---------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:391:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[gameID];
    ^---------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:399:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[gameID];
    ^---------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:414:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[gameID];
    ^---------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:422:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game openedGame = games[gameID];
    ^---------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:429:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game openedGame = games[gameID];
    ^---------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:449:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[i];
    ^---------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:84:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return uint(uint256(keccak256(blockHash, player, gameID, n)) % m);
		                    ^-------------------------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:532:5: Warning: "suicide" has been deprecated in favour of "selfdestruct"
    suicide(DX); // send rest to dx
    ^---------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:542:5: Warning: "suicide" has been deprecated in favour of "selfdestruct"
    suicide(DX); // send rest to dx
    ^---------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:3:2: Warning: No visibility specified. Defaulting to "public". 
	function insertInPlace(uint8[] storage self, uint8 n) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:34:2: Warning: No visibility specified. Defaulting to "public". 
	function init(Deck storage self, uint256 gameID)  {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:40:2: Warning: No visibility specified. Defaulting to "public". 
	function getCard(Deck storage self, uint256 blockNumber)  returns (uint8)  {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:54:2: Warning: No visibility specified. Defaulting to "public". 
	function cardDescription(uint8 self) constant returns (Suit, uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:58:2: Warning: No visibility specified. Defaulting to "public". 
	function cardEmojified(uint8 self) constant returns (uint8, string) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:70:2: Warning: No visibility specified. Defaulting to "public". 
	function cardFacevalue(uint8 self) constant returns (uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:74:2: Warning: No visibility specified. Defaulting to "public". 
	function blackjackValue(uint8 self) constant returns (uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:79:2: Warning: No visibility specified. Defaulting to "public". 
	function getRandomNumber(uint b, address player, uint256 gameID, uint n, uint m) constant returns (uint) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:82:23: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
		bytes32 blockHash = block.blockhash(b);
		                    ^-------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:117:3: Warning: No visibility specified. Defaulting to "public". 
  function init(Game storage self, uint256 gameID) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function tick(Game storage self)  returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:153:3: Warning: No visibility specified. Defaulting to "public". 
  function needsTick(Game storage self) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:160:3: Warning: No visibility specified. Defaulting to "public". 
  function checkGameResult(Game storage self)  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function checkGameContinues(Game storage self)  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:185:3: Warning: No visibility specified. Defaulting to "public". 
  function playerDecision(Game storage self, GameState decision)  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:213:3: Warning: No visibility specified. Defaulting to "public". 
  function endGame(Game storage self, GameResult result) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:240:3: Warning: No visibility specified. Defaulting to "public". 
  function countHand(uint8[] memory hand)  returns (uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:257:3: Warning: No visibility specified. Defaulting to "public". 
  function bestSum(uint8[] possibleSums)  returns (uint8 bestSum) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:267:3: Warning: No visibility specified. Defaulting to "public". 
  function appendArray(uint8[] memory array, uint8 n)  returns (uint8[] memory) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:276:3: Warning: No visibility specified. Defaulting to "public". 
  function compareHands(uint8 a, uint8 b)  returns (ComparaisonResult) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:298:3: Warning: No visibility specified. Defaulting to "public". 
  function recordLog(uint256 gameID, address player, uint gameResult, uint256 payout, uint8 playerHand, uint8 houseHand);
  ^---------------------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:299:3: Warning: No visibility specified. Defaulting to "public". 
  function tickRequiredLog(uint256 gameID, address player, uint256 actionBlock);
  ^----------------------------------------------------------------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:354:3: Warning: No visibility specified. Defaulting to "public". 
  function Blockjack(address _admin_contract, address _logs_contract) { // only(DEV) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:363:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:367:3: Warning: No visibility specified. Defaulting to "public". 
  function startGame() blockActionProtected payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:390:3: Warning: No visibility specified. Defaulting to "public". 
  function hit(uint256 gameID) onlyPlayer(gameID) blockActionProtected {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:398:3: Warning: No visibility specified. Defaulting to "public". 
  function doubleDown(uint256 gameID) onlyPlayer(gameID) blockActionProtected payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:413:3: Warning: No visibility specified. Defaulting to "public". 
  function stand(uint256 gameID) onlyPlayer(gameID) blockActionProtected {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:421:3: Warning: No visibility specified. Defaulting to "public". 
  function gameTick(uint256 gameID) blockActionProtected {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:448:3: Warning: No visibility specified. Defaulting to "public". 
  function gameState(uint i) constant returns (uint8[], uint8[], uint8, uint8, uint256, uint256, uint8, uint8, bool, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:474:3: Warning: No visibility specified. Defaulting to "public". 
  function changeDev(address newDev) only(DEV) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:480:3: Warning: No visibility specified. Defaulting to "public". 
  function changeDX(address newDX) only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:486:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAdminContract(address _new_admin_contract) only(ADMIN_CONTRACT) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:492:3: Warning: No visibility specified. Defaulting to "public". 
  function setSettings(uint256 _min, uint256 _max, uint256 _maxBlockActions) only(ADMIN_CONTRACT) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:498:3: Warning: No visibility specified. Defaulting to "public". 
  function registerOwner(address _new_watcher) only(ADMIN_CONTRACT) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:502:3: Warning: No visibility specified. Defaulting to "public". 
  function removeOwner(address _old_watcher) only(ADMIN_CONTRACT) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:506:3: Warning: No visibility specified. Defaulting to "public". 
  function stopBlockjack() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:510:3: Warning: No visibility specified. Defaulting to "public". 
  function startBlockjack() only(ADMIN_CONTRACT) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:514:3: Warning: No visibility specified. Defaulting to "public". 
  function addBankroll() only(DX) payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:519:3: Warning: No visibility specified. Defaulting to "public". 
  function remainingBankroll() constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:523:3: Warning: No visibility specified. Defaulting to "public". 
  function removeBankroll() only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:536:3: Warning: No visibility specified. Defaulting to "public". 
  function migrateBlockjack() only(ADMIN_CONTRACT) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:546:3: Warning: No visibility specified. Defaulting to "public". 
  function shareProfits() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:70:2: Warning: Function state mutability can be restricted to pure
	function cardFacevalue(uint8 self) constant returns (uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:232:3: Warning: Function state mutability can be restricted to pure
  function payoutForResult(GameResult result, uint256 bet) private returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:267:3: Warning: Function state mutability can be restricted to pure
  function appendArray(uint8[] memory array, uint8 n)  returns (uint8[] memory) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:276:3: Warning: Function state mutability can be restricted to pure
  function compareHands(uint8 a, uint8 b)  returns (ComparaisonResult) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:454:6: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
	    GameLib.countHand(game.houseCards),
	    ^--------------------------------^
/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:455:6: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
	    GameLib.countHand(game.playerCards),
	    ^---------------------------------^

INFO:Detectors:[91m
Reentrancy in Blockjack.shareProfits (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol):
	External calls:
	- ! ADMIN_CONTRACT.call.value(profit)() (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol)
	State variables written after the call(s):
	- currentBankroll (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol)
	- profitsLockedUntil (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Reentrancy in Blockjack.startGame (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#376-402):
	External calls:
	- recordEndedGame(currentGameId) (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#394-395)
	State variables written after the call(s):
	- currentGame (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#399-401)
	- games (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#398)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
emojiSuit in DeckLib.cardEmojified (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#61-62) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
GameLib.bestSum.bestSum (local variable @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#267) shadows:
	- GameLib.bestSum (function @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#262-273)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Blockjack.shareProfits (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol):
	External calls:
	- ! ADMIN_CONTRACT.call.value(profit)() (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol)
	State variables written after the call(s):
	- bankrollLockedUntil (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Blockjack.BANKROLL_LOCK_PERIOD should be constant (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#339-343)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#43:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#84:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#89-90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#186-187:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#193:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#195:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#232:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#233:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#377:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#378:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#378:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#391:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#393:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#406:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#416:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#417:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#421:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#422:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#430:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#437:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#438:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#543:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#548:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#548:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#556-557:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#354:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#355:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#357:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#363-364:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ArrayLib.insertInPlace (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#3-20) should be declared external
DeckLib.init (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#34-40) should be declared external
DeckLib.getCard (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#40-54) should be declared external
DeckLib.cardEmojified (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#58-71) should be declared external
DeckLib.blackjackValue (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#75-79) should be declared external
GameLib.init (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#121-134) should be declared external
AbstractBlockjackLogs.recordLog (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#307-312) should be declared external
AbstractBlockjackLogs.tickRequiredLog (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#312-314) should be declared external
Blockjack.fallback (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#375-376) should be declared external
Blockjack.hit (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#402-409) should be declared external
Blockjack.doubleDown (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#409-425) should be declared external
Blockjack.stand (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#425-433) should be declared external
Blockjack.gameTick (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#433-442) should be declared external
Blockjack.gameState (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#466-487) should be declared external
Blockjack.changeDev (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#492-495) should be declared external
Blockjack.changeDX (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#496-502) should be declared external
Blockjack.changeAdminContract (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#502-510) should be declared external
Blockjack.setSettings (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#510-519) should be declared external
Blockjack.registerOwner (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#519-520) should be declared external
Blockjack.removeOwner (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#520-524) should be declared external
Blockjack.startBlockjack (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#528-529) should be declared external
Blockjack.addBankroll (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#529-536) should be declared external
Blockjack.remainingBankroll (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#536-540) should be declared external
Blockjack.removeBankroll (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#540-550) should be declared external
Blockjack.migrateBlockjack (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#550-557) should be declared external
Blockjack.shareProfits (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in Blockjack.migrateBlockjack (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#550-557):
	-! ADMIN_CONTRACT.call.value(currentBankroll - initialBankroll)() /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#555-557
Low level call in Blockjack.shareProfits (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol):
	-! ADMIN_CONTRACT.call.value(profit)() /unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Constant 'DeckLib.cardsPerSuit' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#24-25) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DeckLib.suits' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#25-26) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DeckLib.totalCards' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#26-29) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GameLib.houseLimit' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#95-96) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GameLib.target' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#96) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Blockjack.Blockjack' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#365-375) is not in mixedCase
Parameter '_admin_contract' of Blockjack.Blockjack (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#367) is not in mixedCase
Parameter '_logs_contract' of Blockjack.Blockjack (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#367-368) is not in mixedCase
Parameter '_new_admin_contract' of Blockjack.changeAdminContract (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#502) is not in mixedCase
Parameter '_min' of Blockjack.setSettings (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#511) is not in mixedCase
Parameter '_max' of Blockjack.setSettings (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#511-514) is not in mixedCase
Parameter '_maxBlockActions' of Blockjack.setSettings (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#514) is not in mixedCase
Parameter '_new_watcher' of Blockjack.registerOwner (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#519-520) is not in mixedCase
Parameter '_old_watcher' of Blockjack.removeOwner (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#523) is not in mixedCase
Variable 'Blockjack.DX' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#329-331) is not in mixedCase
Variable 'Blockjack.DEV' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#331-335) is not in mixedCase
Variable 'Blockjack.ADMIN_CONTRACT' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#335-338) is not in mixedCase
Variable 'Blockjack.BANKROLL_LOCK_PERIOD' (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#339-343) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
DeckLib.suits (/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol#25-26) is never used in DeckLib
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/3/0x25b7dbaf654718171892f39357af75e060b2db5b.sol analyzed (5 contracts), 87 result(s) found