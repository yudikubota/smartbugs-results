INFO:Slither:Compilation warnings/errors on /unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:21:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:66:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function HasNoEther() public payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:39:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:80:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    assert(owner.send(this.balance));
                      ^----------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:130:5: Warning: Invoking events without "emit" prefix is deprecated.
    ContractRegistered(managerKey, "", _manager);
    ^------------------------------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:142:5: Warning: Invoking events without "emit" prefix is deprecated.
    ContractRegistered(claimerKey, "", _claimer);
    ^------------------------------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:157:5: Warning: Invoking events without "emit" prefix is deprecated.
    ContractRegistered(managerKey, "", _manager);
    ^------------------------------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:158:5: Warning: Invoking events without "emit" prefix is deprecated.
    ContractRegistered(claimerKey, "", _claimer);
    ^------------------------------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:173:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    stores[keccak256(_appNickname)] = _store;
           ^---------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:173:12: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.
    stores[keccak256(_appNickname)] = _store;
           ^---------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:174:5: Warning: Invoking events without "emit" prefix is deprecated.
    ContractRegistered(storeKey, _appNickname, _store);
    ^------------------------------------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:188:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return stores[keccak256(_appNickname)];
                  ^---------------------^
/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:188:19: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    return stores[keccak256(_appNickname)];
                  ^---------------------^

INFO:Detectors:[92m
Pausable.paused should be constant (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#94-95)
TweedentityRegistry.claimerKey should be constant (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#115-117)
TweedentityRegistry.managerKey should be constant (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#113-115)
TweedentityRegistry.storeKey should be constant (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#117-122)
TweedentityRegistry.version should be constant (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#106-109)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#37-45) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#21-26) is not in mixedCase
Function 'HasNoEther.HasNoEther' (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#67-71) is not in mixedCase
Parameter '_manager' of TweedentityRegistry.setManager (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#130) is not in mixedCase
Parameter '_claimer' of TweedentityRegistry.setClaimer (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#142) is not in mixedCase
Parameter '_manager' of TweedentityRegistry.setManagerAndClaimer (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#155) is not in mixedCase
Parameter '_claimer' of TweedentityRegistry.setManagerAndClaimer (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#156) is not in mixedCase
Parameter '_appNickname' of TweedentityRegistry.setAStore (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#171-173) is not in mixedCase
Parameter '_store' of TweedentityRegistry.setAStore (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#173) is not in mixedCase
Parameter '_appNickname' of TweedentityRegistry.getStore (/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol#195-196) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x0a66d93d08ff6c2720267936d48655452745652c.sol analyzed (4 contracts), 12 result(s) found