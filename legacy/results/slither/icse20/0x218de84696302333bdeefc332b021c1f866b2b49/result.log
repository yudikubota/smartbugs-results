INFO:Slither:Compilation warnings/errors on /unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:258:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SafeMath() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:306:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MultiOwnable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:454:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ManagedToken(address _listener, address[] _owners) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:627:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Fund(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:879:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BasePoll(address _tokenAddress, address _fundAddress, uint256 _startTime, uint256 _endTime, bool _checkTransfersAfterEnd) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1010:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function RefundPoll(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1065:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TapPoll(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1131:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PollManagedFund(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:329:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetOwners(_owners);
        ^----------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:375:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:386:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:396:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:467:9: Warning: Invoking events without "emit" prefix is deprecated.
        AllowTransfersChanged(_allowTransfers);
        ^------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:513:9: Warning: Invoking events without "emit" prefix is deprecated.
        Issue(_to, _value);
        ^----------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:514:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), _to, _value);
        ^-------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:528:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, address(0), _value);
        ^---------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:529:9: Warning: Invoking events without "emit" prefix is deprecated.
        Destroy(_from, _value);
        ^--------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:544:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
        ^-----------------------------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:565:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
        ^-----------------------------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:575:9: Warning: Invoking events without "emit" prefix is deprecated.
        IssuanceFinished();
        ^----------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:715:9: Warning: Invoking events without "emit" prefix is deprecated.
        RefundContributor(msg.sender, refundAmount, now);
        ^----------------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:730:9: Warning: Invoking events without "emit" prefix is deprecated.
        RefundContributor(contributorAddress, refundAmount, now);
        ^------------------------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:763:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdraw(amount, now);
        ^-------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:774:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdraw(amount, now);
        ^-------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:790:9: Warning: Invoking events without "emit" prefix is deprecated.
        RefundEnabled(msg.sender);
        ^-----------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:808:9: Warning: Invoking events without "emit" prefix is deprecated.
        RefundHolder(msg.sender, refundAmount, tokenBalance, now);
        ^-------------------------------------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1194:9: Warning: Invoking events without "emit" prefix is deprecated.
        TapPollCreated();
        ^--------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1203:9: Warning: Invoking events without "emit" prefix is deprecated.
        TapPollFinished(agree, _tap);
        ^--------------------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1243:9: Warning: Invoking events without "emit" prefix is deprecated.
        RefundPollCreated();
        ^-----------------^
/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:1264:9: Warning: Invoking events without "emit" prefix is deprecated.
        RefundPollFinished(agree);
        ^-----------------------^

INFO:Detectors:[91m
Fund.firstWithdraw (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#784-787) sends eth to arbitrary user
	Dangerous calls:
	- teamWallet.transfer(amount) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#786)
Fund.withdraw (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#787-794) sends eth to arbitrary user
	Dangerous calls:
	- teamWallet.transfer(amount) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#790-794)
Fund.refundTokenHolder (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#822-846) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(refundAmount) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#839-841)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) uses a dangerous strict equality:
	- require(bool)(address(refundPoll) == address(0))
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) uses a dangerous strict equality:
	- require(bool)(address(refundPoll) == address(0))
PollManagedFund.createTapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1214-1231) uses a dangerous strict equality:
	- require(bool)(tapPoll == address(0))
	- require(bool)(getDay(now) == 10)
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) uses a dangerous strict equality:
	- require(bool)(address(refundPoll) == address(0))
PollManagedFund.createTapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1214-1231) uses a dangerous strict equality:
	- require(bool)(tapPoll == address(0))
	- require(bool)(getDay(now) == 10)
DateTime.getDaysInMonth (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#47-62) uses a dangerous strict equality:
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) uses a dangerous strict equality:
	- require(bool)(address(refundPoll) == address(0))
PollManagedFund.createTapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1214-1231) uses a dangerous strict equality:
	- require(bool)(tapPoll == address(0))
	- require(bool)(getDay(now) == 10)
DateTime.getDaysInMonth (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#47-62) uses a dangerous strict equality:
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol) uses a dangerous strict equality:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized())
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) uses a dangerous strict equality:
	- require(bool)(address(refundPoll) == address(0))
PollManagedFund.createTapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1214-1231) uses a dangerous strict equality:
	- require(bool)(tapPoll == address(0))
	- require(bool)(getDay(now) == 10)
DateTime.getDaysInMonth (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#47-62) uses a dangerous strict equality:
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol) uses a dangerous strict equality:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized())
PollManagedFund.onTapPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1231-1242) uses a dangerous strict equality:
	- require(bool)(msg.sender == address(tapPoll) && tapPoll.finalized())
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) uses a dangerous strict equality:
	- require(bool)(address(refundPoll) == address(0))
PollManagedFund.createTapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1214-1231) uses a dangerous strict equality:
	- require(bool)(tapPoll == address(0))
	- require(bool)(getDay(now) == 10)
DateTime.getDaysInMonth (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#47-62) uses a dangerous strict equality:
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
	- month == 4 || month == 6 || month == 9 || month == 11
PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol) uses a dangerous strict equality:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized())
PollManagedFund.onTapPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1231-1242) uses a dangerous strict equality:
	- require(bool)(msg.sender == address(tapPoll) && tapPoll.finalized())
SafeMath.safeMul (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#268-277) uses a dangerous strict equality:
	- assert(bool)(a == 0 || c / a == b)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol):
	External calls:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	- startTime = refundPoll.startTime() (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	State variables written after the call(s):
	- secondRefundPollDate (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
Reentrancy in PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol):
	External calls:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	- enableRefund() (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	- startTime = refundPoll.startTime() (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	State variables written after the call(s):
	- refundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
Reentrancy in PollManagedFund.onTapPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1231-1242):
	External calls:
	- require(bool)(msg.sender == address(tapPoll) && tapPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1233-1236)
	- updateMinVotedTokens(tapPoll.getVotedTokensPerc()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1237-1239)
	State variables written after the call(s):
	- tapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1242)
Reentrancy in BasePoll.vote (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#922-943):
	External calls:
	- voiceWeight = token.balanceOf(msg.sender) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#925-926)
	- maxVoiceWeight = safeDiv(token.totalSupply(),MAX_TOKENS_WEIGHT_DENOM) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#927-929)
	State variables written after the call(s):
	- votesByAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#938-940)
	- votesByAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#941)
	- votesByAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#941-942)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
i in PollManagedFund.checkRefundPollDate (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1249) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in Fund.onCrowdsaleEnd (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#705-713):
	External calls:
	- firstWithdrawAmount = crowdsale.getSoftCap() (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#711)
	State variables written after the call(s):
	- crowdsaleEndDate (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#713)
	- lastWithdrawTime (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#712)
	- tap (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#713)
Reentrancy in PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol):
	External calls:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	- startTime = refundPoll.startTime() (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	State variables written after the call(s):
	- isWithdrawEnabled (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
Reentrancy in PollManagedFund.onRefundPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol):
	External calls:
	- require(bool)(msg.sender == address(refundPoll) && refundPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	State variables written after the call(s):
	- isWithdrawEnabled (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
	- secondRefundPollDate (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol)
Reentrancy in PollManagedFund.onTapPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1231-1242):
	External calls:
	- require(bool)(msg.sender == address(tapPoll) && tapPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1233-1236)
	State variables written after the call(s):
	- tap (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1236-1237)
Reentrancy in PollManagedFund.onTapPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1231-1242):
	External calls:
	- require(bool)(msg.sender == address(tapPoll) && tapPoll.finalized()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1233-1236)
	- updateMinVotedTokens(tapPoll.getVotedTokensPerc()) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1237-1239)
	State variables written after the call(s):
	- minVotedTokensPerc (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1237-1239)
Reentrancy in BasePoll.vote (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#922-943):
	External calls:
	- voiceWeight = token.balanceOf(msg.sender) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#925-926)
	- maxVoiceWeight = safeDiv(token.totalSupply(),MAX_TOKENS_WEIGHT_DENOM) (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#927-929)
	State variables written after the call(s):
	- noCounter (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#938)
	- totalVoted (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#942-943)
	- yesCounter (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#933)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
IERC20Token.decimals should be constant (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#352)
IERC20Token.name should be constant (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#351)
IERC20Token.symbol should be constant (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#351-352)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DateTime.toTimestamp (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#160-164) should be declared external
DateTime.toTimestamp (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#164-168) should be declared external
MultiOwnable.setOwners (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#325-329) should be declared external
MultiOwnable.getOwners (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#346-349) should be declared external
ERC20Token.balanceOf (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#400-405) should be declared external
IERC20Token.balanceOf (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#352-353) should be declared external
IERC20Token.approve (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#356-362) should be declared external
ERC20Token.approve (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#407-413) should be declared external
IERC20Token.allowance (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#362-365) should be declared external
ERC20Token.allowance (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#414-418) should be declared external
ManagedToken.setListener (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#485-492) should be declared external
ManagedToken.increaseApproval (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#553-558) should be declared external
ManagedToken.decreaseApproval (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#573-593) should be declared external
ManagedToken.finishIssuance (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#596-601) should be declared external
Fund.setCrowdsaleAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#678-681) should be declared external
Fund.setTokenAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#681-687) should be declared external
Fund.setLockedTokenAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#687-691) should be declared external
Fund.getCurrentTapAmount (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#767-772) should be declared external
Fund.firstWithdraw (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#784-787) should be declared external
Fund.withdraw (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#787-794) should be declared external
Fund.refundTokenHolder (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#822-846) should be declared external
BasePoll.vote (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#922-943) should be declared external
BasePoll.revokeVote (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#946-963) should be declared external
BasePoll.onTokenTransfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#968-1007) should be declared external
BasePoll.tryToFinalize (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1010-1018) should be declared external
RefundPoll.tryToFinalize (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1061-1070) should be declared external
BasePoll.isNowApproved (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1018-1020) should be declared external
PollManagedFund.createTapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1214-1231) should be declared external
PollManagedFund.createRefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1254-1273) should be declared external
PollManagedFund.forceRefund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol:
	- pragma solidity^0.4.21 (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Struct 'DateTime._DateTime' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#10-20) is not in CapWords
Function 'SafeMath.SafeMath' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#267-268) is not in mixedCase
Function 'MultiOwnable.MultiOwnable' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#319-321) is not in mixedCase
Parameter '_owners' of MultiOwnable.setOwners (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#325-326) is not in mixedCase
Function 'MultiOwnable._setOwners' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#329-346) is not in mixedCase
Parameter '_owners' of MultiOwnable._setOwners (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#332) is not in mixedCase
Parameter '_owner' of ERC20Token.balanceOf (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#401) is not in mixedCase
Parameter '_to' of ERC20Token.transfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#379) is not in mixedCase
Parameter '_value' of ERC20Token.transfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#379) is not in mixedCase
Parameter '_from' of ERC20Token.transferFrom (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#385-386) is not in mixedCase
Parameter '_to' of ERC20Token.transferFrom (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#386) is not in mixedCase
Parameter '_value' of ERC20Token.transferFrom (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#386) is not in mixedCase
Parameter '_spender' of ERC20Token.approve (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#408-409) is not in mixedCase
Parameter '_value' of ERC20Token.approve (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#409) is not in mixedCase
Parameter '_owner' of ERC20Token.allowance (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#414-415) is not in mixedCase
Parameter '_spender' of ERC20Token.allowance (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#415) is not in mixedCase
Parameter '_to' of ManagedToken.transfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#492-493) is not in mixedCase
Parameter '_value' of ManagedToken.transfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#493) is not in mixedCase
Parameter '_from' of ManagedToken.transferFrom (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#506) is not in mixedCase
Parameter '_to' of ManagedToken.transferFrom (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#506-507) is not in mixedCase
Parameter '_value' of ManagedToken.transferFrom (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#507) is not in mixedCase
Function 'ManagedToken.ManagedToken' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#466-472) is not in mixedCase
Parameter '_listener' of ManagedToken.ManagedToken (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#466-467) is not in mixedCase
Parameter '_owners' of ManagedToken.ManagedToken (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#467) is not in mixedCase
Parameter '_allowTransfers' of ManagedToken.setAllowTransfers (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#477-478) is not in mixedCase
Parameter '_listener' of ManagedToken.setListener (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#487-488) is not in mixedCase
Parameter '_to' of ManagedToken.issue (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#521-523) is not in mixedCase
Parameter '_value' of ManagedToken.issue (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#523) is not in mixedCase
Parameter '_from' of ManagedToken.destroy (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#536) is not in mixedCase
Parameter '_value' of ManagedToken.destroy (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#536) is not in mixedCase
Parameter '_spender' of ManagedToken.increaseApproval (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#553-554) is not in mixedCase
Parameter '_addedValue' of ManagedToken.increaseApproval (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#554) is not in mixedCase
Parameter '_spender' of ManagedToken.decreaseApproval (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#573-574) is not in mixedCase
Parameter '_subtractedValue' of ManagedToken.decreaseApproval (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#574-575) is not in mixedCase
Function 'Fund.Fund' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#644-670) is not in mixedCase
Parameter '_teamWallet' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#645-646) is not in mixedCase
Parameter '_mainSaleTokenWallet' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#648-649) is not in mixedCase
Parameter '_foundationTokenWallet' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#649-650) is not in mixedCase
Parameter '_teamTokenWallet' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#653) is not in mixedCase
Parameter '_marketingTokenWallet' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#654) is not in mixedCase
Parameter '_advisorTokenWallet' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#654-658) is not in mixedCase
Parameter '_refundManager' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#658) is not in mixedCase
Parameter '_owners' of Fund.Fund (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#660) is not in mixedCase
Parameter '_crowdsaleAddress' of Fund.setCrowdsaleAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#678-679) is not in mixedCase
Parameter '_tokenAddress' of Fund.setTokenAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#681-684) is not in mixedCase
Parameter '_lockedTokenAddress' of Fund.setLockedTokenAddress (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#688) is not in mixedCase
Parameter '_tap' of Fund.decTap (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#760-761) is not in mixedCase
Function 'BasePoll.BasePoll' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#900-919) is not in mixedCase
Parameter '_tokenAddress' of BasePoll.BasePoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#900) is not in mixedCase
Parameter '_fundAddress' of BasePoll.BasePoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#900-902) is not in mixedCase
Parameter '_startTime' of BasePoll.BasePoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#902-903) is not in mixedCase
Parameter '_endTime' of BasePoll.BasePoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#903) is not in mixedCase
Parameter '_checkTransfersAfterEnd' of BasePoll.BasePoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#903) is not in mixedCase
Function 'RefundPoll.RefundPoll' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1046-1061) is not in mixedCase
Parameter '_holdEndTime' of RefundPoll.RefundPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1054-1056) is not in mixedCase
Function 'TapPoll.TapPoll' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1101-1112) is not in mixedCase
Parameter '_tap' of TapPoll.TapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1101) is not in mixedCase
Parameter '_minTokensPerc' of TapPoll.TapPoll (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1107) is not in mixedCase
Parameter '_from' of PollManagedFund.onTokenTransfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1191) is not in mixedCase
Parameter '' of PollManagedFund.onTokenTransfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1191-1192) is not in mixedCase
Parameter '_value' of PollManagedFund.onTokenTransfer (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1192) is not in mixedCase
Function 'PollManagedFund.PollManagedFund' (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1163-1176) is not in mixedCase
Parameter '_minVotedTokensPerc' of PollManagedFund.updateMinVotedTokens (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1208) is not in mixedCase
Parameter '_tap' of PollManagedFund.onTapPollFinish (/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol#1232) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/29/0x218de84696302333bdeefc332b021c1f866b2b49.sol analyzed (15 contracts), 116 result(s) found