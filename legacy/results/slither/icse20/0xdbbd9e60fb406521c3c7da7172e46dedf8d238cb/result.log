INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:142:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Minewar() public
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:202:53: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint256 balance = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                    ^----------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:203:54: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        administrator.send(SafeMath.div(SafeMath.mul(this.balance, 5), 100));
                                                     ^----------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:203:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        administrator.send(SafeMath.div(SafeMath.mul(this.balance, 5), 100));
        ^------------------------------------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:207:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                rankList[idx].send(SafeMath.div(SafeMath.mul(balance,profit[idx]),100));
                ^---------------------------------------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:220:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        sponsor.send(getCurrentPrice(sponsorLevel));
        ^-----------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:334:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        sponsor.send(devFee(getBoosterPrice(idx)));
        ^----------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:336:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            beneficiary.send(SafeMath.div(SafeMath.mul(getBoosterPrice(idx), 55), 100));
            ^-------------------------------------------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:388:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            o.owner.send(balance);
            ^-------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:408:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        sponsor.send(fee);
        ^---------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:409:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        administrator.send(fee);
        ^---------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:413:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(SafeMath.div(price, 2));
        ^-------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:422:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            o.owner.send(balance);
            ^-------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:493:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        sponsor.send(fee);
        ^---------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:497:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        o.owner.send(SafeMath.div(price, 2));
        ^----------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:548:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:554:53: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint256 balance = SafeMath.div(SafeMath.mul(this.balance, 90), 100);
                                                    ^----------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:555:54: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        administrator.send(SafeMath.div(SafeMath.mul(this.balance, 5), 100));
                                                     ^----------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:555:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        administrator.send(SafeMath.div(SafeMath.mul(this.balance, 5), 100));
        ^------------------------------------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:559:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                rankList[idx].send(SafeMath.div(SafeMath.mul(balance,profit[idx]),100));
                ^---------------------------------------------------------------------^
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:441:5: Warning: Function state mutability can be restricted to view
    function getLowestUnitPriceIdxFromBuy() public returns(uint256 lowestIdx)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:525:5: Warning: Function state mutability can be restricted to view
    function getHighestUnitPriceIdxFromSell() public returns(uint256 highestIdx)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:542:5: Warning: Function state mutability can be restricted to pure
    function devFee(uint256 amount) public view returns(uint256)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:642:5: Warning: Function state mutability can be restricted to view
    function inRankList(address addr) internal returns(bool)
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Minewar.hasBooster (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#373-379) uses a dangerous strict equality:
	- boostData[revert_i].owner == addr
Minewar.hasBooster (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#373-379) uses a dangerous strict equality:
	- boostData[revert_i].owner == addr
Minewar.isCurrentRound (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#127-130) uses a dangerous strict equality:
	- require(bool)(players[msg.sender].roundNumber == roundNumber)
	- require(bool)(players[msg.sender].roundNumber == roundNumber)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Minewar.lottery has external calls inside a loop:
	- rankList[idx].send(SafeMath.div(SafeMath.mul(balance,profit[idx]),100)) (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#214-217)
Minewar.upgrade has external calls inside a loop:
	- rankList[idx].send(SafeMath.div(SafeMath.mul(balance,profit[idx]),100)) (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#574)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Minewar.BASE_PRICE should be constant (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#62-63)
Minewar.CRTSTAL_MINING_PERIOD should be constant (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#59-60)
Minewar.HALF_TIME should be constant (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#60-61)
Minewar.MINIMUM_LIMIT_SELL should be constant (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#65)
Minewar.RANK_LIST_LIMIT should be constant (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#63-65)
Minewar.ROUND_TIME should be constant (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#61-62)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Minewar.fallback (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#168-169) should be declared external
Minewar.startGame (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#169-177) should be declared external
Minewar.lottery (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#203-219) should be declared external
Minewar.getRankList (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#219-221) should be declared external
Minewar.becomeSponsor (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#222-228) should be declared external
Minewar.getFreeMiner (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#236-264) should be declared external
Minewar.buyMiner (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#265-300) should be declared external
Minewar.getPlayerData (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#300-318) should be declared external
Minewar.buyBooster (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#334-352) should be declared external
Minewar.getBoosterData (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#352-364) should be declared external
Minewar.buyCrystalDemand (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#383-404) should be declared external
Minewar.sellCrystal (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#404-426) should be declared external
Minewar.withdrawBuyDemand (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#426-441) should be declared external
Minewar.getBuyDemand (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#441-450) should be declared external
Minewar.sellCrystalDemand (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#466-493) should be declared external
Minewar.buyCrystal (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#493-511) should be declared external
Minewar.withdrawSellDemand (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#511-527) should be declared external
Minewar.getSellDemand (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#527-539) should be declared external
Minewar.getBalance (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#559-562) should be declared external
Minewar.upgrade (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#562-577) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol:
	- pragma solidity^0.4.2 (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Minewar.Minewar' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#147-167) is not in mixedCase
Variable 'Minewar.CRTSTAL_MINING_PERIOD' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#59-60) is not in mixedCase
Variable 'Minewar.HALF_TIME' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#60-61) is not in mixedCase
Variable 'Minewar.ROUND_TIME' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#61-62) is not in mixedCase
Variable 'Minewar.BASE_PRICE' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#62-63) is not in mixedCase
Variable 'Minewar.RANK_LIST_LIMIT' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#63-65) is not in mixedCase
Variable 'Minewar.MINIMUM_LIMIT_SELL' (/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol#65) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/4/0xdbbd9e60fb406521c3c7da7172e46dedf8d238cb.sol analyzed (2 contracts), 33 result(s) found