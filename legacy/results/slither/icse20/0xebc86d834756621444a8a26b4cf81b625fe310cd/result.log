INFO:Slither:Compilation warnings/errors on /unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:49:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:162:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherPower() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:192:9: Warning: Use of the "var" keyword is deprecated.
        var _allowance = allowed[_from][msg.sender];
        ^------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:177:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:200:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:212:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:232:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(msg.sender, reward);
        ^----------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:248:43: Warning: Using "years" as a unit denomination is deprecated.
        if((_now.sub(stakeStartTime)).div(1 years) == 0) {
                                          ^-----^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:250:50: Warning: Using "years" as a unit denomination is deprecated.
        } else if((_now.sub(stakeStartTime)).div(1 years) == 1){
                                                 ^-----^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:263:43: Warning: Using "years" as a unit denomination is deprecated.
        if((_now.sub(stakeStartTime)).div(1 years) == 0) {
                                          ^-----^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:265:50: Warning: Using "years" as a unit denomination is deprecated.
        } else if((_now.sub(stakeStartTime)).div(1 years) == 1){
                                                 ^-----^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:301:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:318:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _recipients[j], _values[j]);
            ^----------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:87:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint256);
    ^---------------------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool);
    ^----------------------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:98:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256);
    ^----------------------------------------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool);
    ^----------------------------------------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool);
    ^--------------------------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function mint() returns (bool);
    ^-----------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function coinAge() constant returns (uint256);
    ^--------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:115:5: Warning: No visibility specified. Defaulting to "public". 
    function annualInterest() constant returns (uint256);
    ^---------------------------------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:162:5: Warning: No visibility specified. Defaulting to "public". 
    function EtherPower() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:173:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:185:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:189:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3 * 32) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:208:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:216:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:220:5: Warning: No visibility specified. Defaulting to "public". 
    function mint() canPoSMint returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:237:5: Warning: No visibility specified. Defaulting to "public". 
    function getBlockNumber() returns (uint blockNumber) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:241:5: Warning: No visibility specified. Defaulting to "public". 
    function coinAge() constant returns (uint myCoinAge) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:245:5: Warning: No visibility specified. Defaulting to "public". 
    function annualInterest() constant returns(uint interest) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:285:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerSetStakeStartTime(uint timestamp) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:290:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerBurnToken(uint _value) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:305:5: Warning: No visibility specified. Defaulting to "public". 
    function batchTransfer(address[] _recipients, uint[] _values) onlyOwner returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:10:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:16:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:21:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:26:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:237:5: Warning: Function state mutability can be restricted to view
    function getBlockNumber() returns (uint blockNumber) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:242:21: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        myCoinAge = getCoinAge(msg.sender,now);
                    ^------------------------^
/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:272:5: Warning: Function state mutability can be restricted to view
    function getCoinAge(address _address, uint _now) internal returns (uint _coinAge) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
EtherPower.annualInterest (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#250-261) uses a dangerous strict equality:
	- (_now.sub(stakeStartTime)).div(220752000) == 0
	- (_now.sub(stakeStartTime)).div(220752000) == 1
EtherPower.annualInterest (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#250-261) uses a dangerous strict equality:
	- (_now.sub(stakeStartTime)).div(220752000) == 0
	- (_now.sub(stakeStartTime)).div(220752000) == 1
EtherPower.getProofOfStakeReward (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#261-276) uses a dangerous strict equality:
	- (_now.sub(stakeStartTime)).div(220752000) == 0
	- (_now.sub(stakeStartTime)).div(220752000) == 1
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
EtherPower.totalSupply (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#139-140) shadows:
	- ERC20Basic.totalSupply (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#84-87)
EtherPower.stakeStartTime (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#131) shadows:
	- PoSTokenStandard.stakeStartTime (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#113-114)
EtherPower.stakeMinAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#131-132) shadows:
	- PoSTokenStandard.stakeMinAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#114)
EtherPower.stakeMaxAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#134-135) shadows:
	- PoSTokenStandard.stakeMaxAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#114-115)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#84-87)
EtherPower.decimals should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#128-129)
EtherPower.maxMintProofOfStake should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#136-139)
EtherPower.name should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#127-128)
EtherPower.stakeMaxAge should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#134-135)
EtherPower.stakeMinAge should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#131-132)
EtherPower.symbol should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#128)
PoSTokenStandard.stakeMaxAge should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#114-115)
PoSTokenStandard.stakeMinAge should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#114)
PoSTokenStandard.stakeStartTime should be constant (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#113-114)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#68-77) should be declared external
ERC20Basic.balanceOf (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#88-89) should be declared external
EtherPower.balanceOf (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#189-192) should be declared external
EtherPower.transfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#175-189) should be declared external
ERC20Basic.transfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#89-94) should be declared external
ERC20.allowance (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#99-100) should be declared external
EtherPower.allowance (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#221-224) should be declared external
EtherPower.transferFrom (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#192-212) should be declared external
ERC20.transferFrom (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#100-101) should be declared external
ERC20.approve (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#101-106) should be declared external
EtherPower.approve (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#212-221) should be declared external
PoSTokenStandard.coinAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#116) should be declared external
EtherPower.coinAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#248-249) should be declared external
PoSTokenStandard.annualInterest (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#120) should be declared external
EtherPower.annualInterest (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#250-261) should be declared external
EtherPower.getBlockNumber (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#243-247) should be declared external
EtherPower.ownerSetStakeStartTime (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#293-295) should be declared external
EtherPower.ownerBurnToken (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#297-309) should be declared external
EtherPower.batchTransfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#312-327) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol:
	- pragma solidity^0.4.14 (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#50-55) is not in mixedCase
Struct 'EtherPower.transferInStruct' (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#144-145) is not in CapWords
Parameter '_owner' of EtherPower.balanceOf (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#189) is not in mixedCase
Parameter '_to' of EtherPower.transfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#175-176) is not in mixedCase
Parameter '_value' of EtherPower.transfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#176) is not in mixedCase
Parameter '_owner' of EtherPower.allowance (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#221-222) is not in mixedCase
Parameter '_spender' of EtherPower.allowance (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#222) is not in mixedCase
Parameter '_from' of EtherPower.transferFrom (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#194) is not in mixedCase
Parameter '_to' of EtherPower.transferFrom (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#194) is not in mixedCase
Parameter '_value' of EtherPower.transferFrom (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#194) is not in mixedCase
Parameter '_spender' of EtherPower.approve (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#212-213) is not in mixedCase
Parameter '_value' of EtherPower.approve (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#213) is not in mixedCase
Function 'EtherPower.EtherPower' (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#167-175) is not in mixedCase
Parameter '_address' of EtherPower.getProofOfStakeReward (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#262-263) is not in mixedCase
Parameter '_address' of EtherPower.getCoinAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#276-278) is not in mixedCase
Parameter '_now' of EtherPower.getCoinAge (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#278) is not in mixedCase
Parameter '_value' of EtherPower.ownerBurnToken (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#297) is not in mixedCase
Parameter '_recipients' of EtherPower.batchTransfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#312-314) is not in mixedCase
Parameter '_values' of EtherPower.batchTransfer (/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol#314) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/7/0xebc86d834756621444a8a26b4cf81b625fe310cd.sol analyzed (6 contracts), 46 result(s) found