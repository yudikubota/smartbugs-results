INFO:Detectors:[93m
Reentrancy in INTPOS.startMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#68-78):
	External calls:
	- require(bool)(tokenContract.balanceOf(msg.sender) >= interest) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#69-70)
	- mintingAmount[msg.sender] = tokenContract.balanceOf(msg.sender) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#74-77)
	State variables written after the call(s):
	- mintingStart (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#77-78)
Reentrancy in INTPOS.stopMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#78-89):
	External calls:
	- require(bool)(tokenContract.balanceOf(msg.sender) >= mintingAmount[msg.sender]) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#81-84)
	State variables written after the call(s):
	- isMinting (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#84)
Reentrancy in INTPOS.stopMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#78-89):
	External calls:
	- require(bool)(tokenContract.balanceOf(msg.sender) >= mintingAmount[msg.sender]) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#81-84)
	- tokenContract.transfer(msg.sender,getMintingReward(msg.sender)) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#85-89)
	State variables written after the call(s):
	- mintingAmount (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#89)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
INTPOS.stopContract (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#57-62) does not use the value returned by external calls:
	-tokenContract.transfer(msg.sender,tokenContract.balanceOf(address(this))) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#57-58)
INTPOS.stopMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#78-89) does not use the value returned by external calls:
	-tokenContract.transfer(msg.sender,getMintingReward(msg.sender)) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#85-89)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in INTPOS.startMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#68-78):
	External calls:
	- require(bool)(tokenContract.balanceOf(msg.sender) >= interest) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#69-70)
	State variables written after the call(s):
	- isMinting (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#73)
Reentrancy in INTPOS.startMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#68-78):
	External calls:
	- require(bool)(tokenContract.balanceOf(msg.sender) >= interest) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#69-70)
	- mintingAmount[msg.sender] = tokenContract.balanceOf(msg.sender) (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#74-77)
	State variables written after the call(s):
	- mintingAmount (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#74-77)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
INTPOS.interest should be constant (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#24-26)
INTPOS.interestEpoch should be constant (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#22)
INTPOS.mintingAvailable should be constant (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#20)
INTPOS.totalMintedAmount should be constant (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#19-20)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
INTPOS.transferOwnership (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#48-52) should be declared external
INTPOS.destroyOwnership (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#53-57) should be declared external
INTPOS.stopContract (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#57-62) should be declared external
INTPOS.lockContract (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#62-68) should be declared external
INTPOS.startMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#68-78) should be declared external
INTPOS.stopMint (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#78-89) should be declared external
INTPOS.ceil (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#101-106) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_tokenContract' of INTPOS. (/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol#28-29) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/28/0x5cda2019d03e0af7ec28114327707872fd16f412.sol analyzed (3 contracts), 16 result(s) found