INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:19:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:493:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PublicResolver(ENS ensAddr) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:432:5: Warning: Functions in interfaces should be declared external.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) public;
    ^--------------------------------------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:433:5: Warning: Functions in interfaces should be declared external.
    function setResolver(bytes32 node, address resolver) public;
    ^----------------------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:434:5: Warning: Functions in interfaces should be declared external.
    function setOwner(bytes32 node, address owner) public;
    ^----------------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:435:5: Warning: Functions in interfaces should be declared external.
    function setTTL(bytes32 node, uint64 ttl) public;
    ^-----------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:436:5: Warning: Functions in interfaces should be declared external.
    function owner(bytes32 node) public view returns (address);
    ^---------------------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:437:5: Warning: Functions in interfaces should be declared external.
    function resolver(bytes32 node) public view returns (address);
    ^------------------------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:438:5: Warning: Functions in interfaces should be declared external.
    function ttl(bytes32 node) public view returns (uint64);
    ^------------------------------------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:505:9: Warning: Invoking events without "emit" prefix is deprecated.
        AddrChanged(node, addr);
        ^---------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:518:9: Warning: Invoking events without "emit" prefix is deprecated.
        ContentChanged(node, hash);
        ^------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:529:9: Warning: Invoking events without "emit" prefix is deprecated.
        MultihashChanged(node, hash);
        ^--------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:540:9: Warning: Invoking events without "emit" prefix is deprecated.
        NameChanged(node, name);
        ^---------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:556:9: Warning: Invoking events without "emit" prefix is deprecated.
        ABIChanged(node, contentType);
        ^---------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:567:9: Warning: Invoking events without "emit" prefix is deprecated.
        PubkeyChanged(node, x, y);
        ^-----------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:579:9: Warning: Invoking events without "emit" prefix is deprecated.
        TextChanged(node, key, key);
        ^-------------------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:818:17: Warning: Using contract member "call" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).call" instead.
        require(liability.call(abi.encodePacked(bytes4(0x82fbaa25), _ask))); // liability.ask(...)
                ^------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:821:17: Warning: Using contract member "call" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).call" instead.
        require(liability.call(abi.encodePacked(bytes4(0x66193359), _bid))); // liability.bid(...)
                ^------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:863:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 subnode = keccak256(abi.encodePacked(lighthouseNode, keccak256(_name)));
                                                                     ^--------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:863:70: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.
        bytes32 subnode = keccak256(abi.encodePacked(lighthouseNode, keccak256(_name)));
                                                                     ^--------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:872:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ens.setSubnodeOwner(lighthouseNode, keccak256(_name), this);
                                            ^--------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:872:45: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.
        ens.setSubnodeOwner(lighthouseNode, keccak256(_name), this);
                                            ^--------------^
/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol:760:5: Warning: Function state mutability can be restricted to pure
    function winnerFromGas(uint256 _gas) public view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
LightContract.fallback (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#361-364) uses delegatecall to a input-controlled function id
	require(bool)(lib.delegatecall(msg.data)) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#363-364)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#controlled-delegatecall[0m
INFO:Detectors:[91m
LighthouseAPI.balances (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#367-368) is never initialized. It is used in:
	- quotaOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#380-383)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Reentrancy in LiabilityFactory.createLiability (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#826-868):
	External calls:
	- require(bool)(liability.call(abi.encodePacked(bytes4(0x82fbaa25),_ask))) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#835-836)
	- usedHashGuard(liability.askHash()) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#837)
	- require(bool)(liability.call(abi.encodePacked(bytes4(0x66193359),_bid))) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#838-839)
	- usedHashGuard(liability.bidHash()) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#839-841)
	State variables written after the call(s):
	- usedHash (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#839-841)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
LiabilityFactory.createLiability uses tx.origin for authorization:
	- require(bool)(xrt.transferFrom(liability.promisor(),tx.origin,liability.lighthouseFee())) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#842-848)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-usage-of-txorigin[0m
INFO:Detectors:[92m
ENS.setSubnodeOwner.owner (local variable @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#443) shadows:
	- ENS.owner (function @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#450-451)
ENS.setResolver.resolver (local variable @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#445-446) shadows:
	- ENS.resolver (function @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#451-452)
ENS.setOwner.owner (local variable @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#448) shadows:
	- ENS.owner (function @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#450-451)
ENS.setTTL.ttl (local variable @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#449) shadows:
	- ENS.ttl (function @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#452-453)
PublicResolver.setAddr.addr (local variable @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#516) shadows:
	- PublicResolver.addr (function @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#670-673)
PublicResolver.setName.name (local variable @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#552-553) shadows:
	- PublicResolver.name (function @ /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#645-647)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in LiabilityFactory.createLiability (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#826-868):
	External calls:
	- require(bool)(liability.call(abi.encodePacked(bytes4(0x82fbaa25),_ask))) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#835-836)
	- usedHashGuard(liability.askHash()) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#837)
	- require(bool)(liability.call(abi.encodePacked(bytes4(0x66193359),_bid))) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#838-839)
	- usedHashGuard(liability.bidHash()) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#839-841)
	- require(bool)(xrt.transferFrom(liability.promisor(),tx.origin,liability.lighthouseFee())) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#842-848)
	- token = liability.token() (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#849-850)
	- require(bool)(token.transferFrom(liability.promisee(),liability,liability.cost())) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#850-852)
	- address(liability.validator()) != 0 && liability.validatorFee() > 0 (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#855-863)
	- require(bool)(xrt.transferFrom(liability.promisee(),liability,liability.validatorFee())) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#858-863)
	State variables written after the call(s):
	- gasUtilizing (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#868)
	- totalGasUtilizing (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#867)
Reentrancy in LiabilityFactory.createLighthouse (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#881-897):
	External calls:
	- require(bool)(ens.resolver(subnode) == 0) (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#893-894)
	State variables written after the call(s):
	- isLighthouse (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
LighthouseAPI.keepaliveBlock should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#375-377)
LighthouseAPI.marker should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#378-379)
LighthouseAPI.quota should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#380)
RobotLiabilityAPI.askHash should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#414-417)
RobotLiabilityAPI.bidHash should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#417-419)
RobotLiabilityAPI.cost should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#412-413)
RobotLiabilityAPI.isConfirmed should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#420)
RobotLiabilityAPI.isFinalized should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#420-422)
RobotLiabilityAPI.lighthouseFee should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#413)
RobotLiabilityAPI.model should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#406-407)
RobotLiabilityAPI.objective should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#407-409)
RobotLiabilityAPI.promisee should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#419-420)
RobotLiabilityAPI.promisor should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#419)
RobotLiabilityAPI.result should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#409)
RobotLiabilityAPI.validator should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#420)
RobotLiabilityAPI.validatorFee should be constant (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#413-414)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#35-45) should be declared external
BasicToken.totalSupply (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#131-133) should be declared external
ERC20Basic.totalSupply (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#96-97) should be declared external
BasicToken.balanceOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#159-161) should be declared external
ERC20Basic.balanceOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#97-98) should be declared external
ERC20Basic.transfer (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#98-102) should be declared external
BasicToken.transfer (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#137-148) should be declared external
StandardToken.allowance (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#213-216) should be declared external
ERC20.allowance (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#107-108) should be declared external
StandardToken.transferFrom (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#177-189) should be declared external
ERC20.transferFrom (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#108-109) should be declared external
ERC20.approve (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#109-113) should be declared external
StandardToken.approve (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#202-205) should be declared external
StandardToken.increaseApproval (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#224-232) should be declared external
StandardToken.decreaseApproval (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#243-255) should be declared external
MintableToken.mint (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#281-295) should be declared external
MintableToken.finishMinting (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#300-304) should be declared external
BurnableToken.burn (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#313-315) should be declared external
LightContract.fallback (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#361-364) should be declared external
LighthouseAPI.quotaOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#380-383) should be declared external
ENS.setSubnodeOwner (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#438-443) should be declared external
ENS.setResolver (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#443-446) should be declared external
ENS.setOwner (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#448-449) should be declared external
ENS.setTTL (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#449-450) should be declared external
ENS.owner (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#450-451) should be declared external
ENS.resolver (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#451-452) should be declared external
ENS.ttl (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#452-453) should be declared external
PublicResolver.setAddr (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#514-518) should be declared external
PublicResolver.setContent (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#529-534) should be declared external
PublicResolver.setMultihash (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#540-546) should be declared external
PublicResolver.setName (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#552-555) should be declared external
PublicResolver.setABI (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#563-572) should be declared external
PublicResolver.setPubkey (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#578-585) should be declared external
PublicResolver.setText (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#593-598) should be declared external
PublicResolver.text (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#604-606) should be declared external
PublicResolver.pubkey (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#611-613) should be declared external
PublicResolver.ABI (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#625-638) should be declared external
PublicResolver.name (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#645-647) should be declared external
PublicResolver.content (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#659-662) should be declared external
PublicResolver.multihash (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#665-667) should be declared external
PublicResolver.addr (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#670-673) should be declared external
PublicResolver.supportsInterface (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#684-709) should be declared external
LiabilityFactory.setENS (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#753-760) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in LightContract.fallback (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#361-364):
	-require(bool)(lib.delegatecall(msg.data)) /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#363-364
Low level call in LiabilityFactory.createLiability (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#826-868):
	-require(bool)(liability.call(abi.encodePacked(bytes4(0x82fbaa25),_ask))) /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#835-836
	-require(bool)(liability.call(abi.encodePacked(bytes4(0x66193359),_bid))) /unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#838-839
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#19-24) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#159) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#139) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#139) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#215) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#215) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#177) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#177-179) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#179) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#203) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#203) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#225-227) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#228-229) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#243) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#243) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#284) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#284) is not in mixedCase
Parameter '_value' of BurnableToken.burn (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#313) is not in mixedCase
Function 'BurnableToken._burn' (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#315-330) is not in mixedCase
Parameter '_who' of BurnableToken._burn (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#316) is not in mixedCase
Parameter '_value' of BurnableToken._burn (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#316) is not in mixedCase
Parameter '_library' of LightContract. (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#358-360) is not in mixedCase
Parameter '_member' of LighthouseAPI.quotaOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#381) is not in mixedCase
Parameter '_minimalFreeze' of Lighthouse. (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#390-392) is not in mixedCase
Parameter '_timeoutBlocks' of Lighthouse. (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#392-393) is not in mixedCase
Function 'PublicResolver.PublicResolver' (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#509-510) is not in mixedCase
Function 'PublicResolver.ABI' (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#625-638) is not in mixedCase
Modifier 'PublicResolver.only_owner' (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#502-504) is not in mixedCase
Parameter '_robot_liability_lib' of LiabilityFactory. (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#713) is not in mixedCase
Parameter '_lighthouse_lib' of LiabilityFactory. (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#714) is not in mixedCase
Parameter '_xrt' of LiabilityFactory. (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#715) is not in mixedCase
Parameter '_ens' of LiabilityFactory.setENS (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#753) is not in mixedCase
Parameter '_gas' of LiabilityFactory.winnerFromGas (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#785-786) is not in mixedCase
Parameter '_hash' of LiabilityFactory.usedHashGuard (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#819) is not in mixedCase
Parameter '_ask' of LiabilityFactory.createLiability (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#826-827) is not in mixedCase
Parameter '_bid' of LiabilityFactory.createLiability (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#827) is not in mixedCase
Parameter '_minimalFreeze' of LiabilityFactory.createLighthouse (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#881-882) is not in mixedCase
Parameter '_timeoutBlocks' of LiabilityFactory.createLighthouse (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#883) is not in mixedCase
Parameter '_name' of LiabilityFactory.createLighthouse (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#884-885) is not in mixedCase
Parameter '_gas' of LiabilityFactory.liabilityFinalized (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol) is not in mixedCase
Constant 'LiabilityFactory.lighthouseNode' (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#742-748) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
LighthouseAPI.indexOf (/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol#367) is never used in Lighthouse
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/4/0x532975d56cf18f597480e2521246b273ad9ae348.sol analyzed (17 contracts), 100 result(s) found