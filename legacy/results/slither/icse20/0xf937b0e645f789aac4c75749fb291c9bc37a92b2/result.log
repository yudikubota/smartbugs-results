INFO:Slither:Compilation warnings/errors on /unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:78:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            index = sha256(x, caller);
                    ^---------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:79:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            operator = sha256(x)^bytes32(receiver);
                       ^-------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:79:24: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            operator = sha256(x)^bytes32(receiver);
                       ^-------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:80:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            check = x^sha256(receiver);
                      ^--------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:80:23: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            check = x^sha256(receiver);
                      ^--------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:82:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            index = keccak256(x, caller);
                    ^------------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:83:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            operator = keccak256(x)^bytes32(receiver);
                       ^----------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:83:24: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            operator = keccak256(x)^bytes32(receiver);
                       ^----------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:84:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            check = x^keccak256(receiver);
                      ^-----------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:84:23: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            check = x^keccak256(receiver);
                      ^-----------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:96:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (algorithm == Algorithm.sha) return sha256(seed);
                                               ^----------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:96:48: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        if (algorithm == Algorithm.sha) return sha256(seed);
                                               ^----------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:97:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        else return keccak256(seed);
                    ^-------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:97:21: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        else return keccak256(seed);
                    ^-------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:105:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (algorithm == Algorithm.sha) return sha256(key);
                                               ^---------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:105:48: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (algorithm == Algorithm.sha) return sha256(key);
                                               ^---------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:106:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        else return keccak256(key);
                    ^------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:106:21: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        else return keccak256(key);
                    ^------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:114:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (algorithm == Algorithm.sha) return sha256(addr);
                                               ^----------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:114:48: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        if (algorithm == Algorithm.sha) return sha256(addr);
                                               ^----------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:115:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        else return keccak256(addr);
                    ^-------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:115:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        else return keccak256(addr);
                    ^-------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:163:9: Warning: Invoking events without "emit" prefix is deprecated.
        Locked(_hash, _operator, _check);
        ^------------------------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:189:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProofVerified(_seed, msg.sender, balance);
        ^---------------------------------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:200:17: Warning: Invoking events without "emit" prefix is deprecated.
                TokenTransfer(_token, msg.sender, receiver, _value);
                ^-------------------------------------------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:212:9: Warning: Invoking events without "emit" prefix is deprecated.
        WithdrawTokens(_token, msg.sender, value);
        ^---------------------------------------^
/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:225:13: Warning: Invoking events without "emit" prefix is deprecated.
            ClearedDeposit(_for, deposit+_value);
            ^----------------------------------^

INFO:Detectors:[92m
BlackBox.unlock.allowance (local variable @ /unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#198-199) shadows:
	- BlackBox.allowance (function @ /unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#235-240)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Token.balanceOf (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#8-9) should be declared external
Token.allowance (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#9-10) should be declared external
Token.transfer (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#10-11) should be declared external
Token.transferFrom (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#11-14) should be declared external
Owned.transferOwnership (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#30-34) should be declared external
Owned.changeRestrictions (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#34-38) should be declared external
Owned.kill (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#39-44) should be declared external
Encoder.generateProofSet (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#55-68) should be declared external
BlackBox.lock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#151-168) should be declared external
BlackBox.unlock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#177-209) should be declared external
BlackBox.withdrawTokens (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#212-218) should be declared external
BlackBox.allowance (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#235-240) should be declared external
BlackBox.fallback (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Encoder._escrow' (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#71-93) is not in mixedCase
Function 'Encoder.hash_seed' (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#95-103) is not in mixedCase
Function 'Encoder.hash_data' (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#104-112) is not in mixedCase
Parameter '_hash' of BlackBox.lock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#152) is not in mixedCase
Parameter '_operator' of BlackBox.lock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#153) is not in mixedCase
Parameter '_check' of BlackBox.lock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#153) is not in mixedCase
Parameter '_seed' of BlackBox.unlock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#177-178) is not in mixedCase
Parameter '_value' of BlackBox.unlock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#178-179) is not in mixedCase
Parameter '_algo' of BlackBox.unlock (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#179) is not in mixedCase
Parameter '_token' of BlackBox.withdrawTokens (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#212) is not in mixedCase
Parameter '_for' of BlackBox.clearDeposits (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#222-223) is not in mixedCase
Parameter '_value' of BlackBox.clearDeposits (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#223) is not in mixedCase
Parameter '_token' of BlackBox.allowance (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#235-236) is not in mixedCase
Parameter '_from' of BlackBox.allowance (/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol#236) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xf937b0e645f789aac4c75749fb291c9bc37a92b2.sol analyzed (4 contracts), 29 result(s) found