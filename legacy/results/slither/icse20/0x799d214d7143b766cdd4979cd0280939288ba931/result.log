INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:85:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:190:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:195:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:200:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:458:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:470:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:474:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:480:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:487:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:502:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:520:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:526:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:531:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:541:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:547:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:552:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:558:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:577:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:583:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:608:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:636:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:659:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:667:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:684:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:695:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:696:100: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[reciever].minCap && tokenAmountOf[reciever] == 0) throw;
                                                                                                   ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:707:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:711:92: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[addr].minCap && tokenAmountOf[addr] == 0) throw;
                                                                                           ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:777:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:809:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:835:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:850:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:904:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1013:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1104:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1116:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1120:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (value == 0) throw;
                      ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1140:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1143:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (agent == 0x0) throw;
                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1145:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != upgradeMaster) throw;
                                       ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1147:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (getUpgradeState() == UpgradeState.Upgrading) throw;
                                                       ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1152:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(!upgradeAgent.isUpgradeAgent()) throw;
                                         ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1154:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (upgradeAgent.originalSupply() != totalSupply) throw;
                                                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1175:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (master == 0x0) throw;
                         ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1176:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != upgradeMaster) throw;
                                       ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1223:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1260:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1268:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1337:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1344:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1469:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleTokenExt(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable, uint _globalMinCap)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1497:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw; // Cannot create a token without supply and no minting
        ^---^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1563:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ReservedTokensFinalizeAgent(CrowdsaleTokenExt _token, CrowdsaleExt _crowdsale) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:105:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:586:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:675:7: Warning: Invoking events without "emit" prefix is deprecated.
      Whitelisted(addr, status, minCap, maxCap);
      ^---------------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:677:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistItemChanged(addr, status, minCap, maxCap);
      ^------------------------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:788:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(startsAt);
    ^-----------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:820:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:989:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:999:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1016:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1130:7: Warning: Invoking events without "emit" prefix is deprecated.
      Upgrade(msg.sender, upgradeAgent, value);
      ^--------------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1156:7: Warning: Invoking events without "emit" prefix is deprecated.
      UpgradeAgentSet(upgradeAgent);
      ^---------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1402:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1410:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1490:7: Warning: Invoking events without "emit" prefix is deprecated.
      Minted(owner, totalSupply);
      ^------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1530:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpdatedTokenInformation(name, symbol);
    ^-----------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1545:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClaimedTokens(_token, owner, balance);
    ^-----------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:85:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:138:3: Warning: No visibility specified. Defaulting to "public". 
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:145:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:150:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:240:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:249:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:300:3: Warning: No visibility specified. Defaulting to "public". 
  function distributeReservedTokens(uint reservedTokensDistributionBatch);
  ^----------------------------------------------------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:303:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:458:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:501:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:769:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:986:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:993:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1003:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1007:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1020:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1104:3: Warning: No visibility specified. Defaulting to "public". 
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1273:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) canTransfer(msg.sender) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1278:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) canTransfer(_from) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1469:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleTokenExt(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable, uint _globalMinCap)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1526:3: Warning: No visibility specified. Defaulting to "public". 
  function setTokenInformation(string _name, string _symbol) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:25:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:31:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:38:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:43:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:49:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:53:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:57:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:61:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:132:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:138:3: Warning: Function state mutability can be restricted to pure
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:145:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:150:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:232:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:240:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:249:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:289:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:894:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:982:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1055:3: Warning: Function state mutability can be restricted to pure
  function isUpgradeAgent() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:1183:3: Warning: Function state mutability can be restricted to pure
  function canUpgrade() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in ReservedTokensFinalizeAgent.distributeReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1606-1635):
	External calls:
	- assert(bool)(distributedReservedTokensDestinationsLen < token.reservedTokensDestinationsLen()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1614-1619)
	- i < crowdsale.joinedCrowdsalesLen() (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1620-1626)
	- batch = token.reservedTokensDestinationsLen().minus(distributedReservedTokensDestinationsLen) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1629-1635)
	- reservedAddr = token.reservedTokensDestinations(j) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	- allocatedBonusInTokens = token.getReservedTokens(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	- percentsOfTokensUnit = token.getReservedPercentageUnit(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	- percentsOfTokensDecimals = token.getReservedPercentageDecimals(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	- token.mint(reservedAddr,allocatedBonusInPercentage) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	- token.mint(reservedAddr,allocatedBonusInTokens) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	- token.finalizeReservedAddress(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	State variables written after the call(s):
	- distributedReservedTokensDestinationsLen (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
Reentrancy in ReservedTokensFinalizeAgent.distributeReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1606-1635):
	External calls:
	- assert(bool)(distributedReservedTokensDestinationsLen < token.reservedTokensDestinationsLen()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1614-1619)
	- i < crowdsale.joinedCrowdsalesLen() (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1620-1626)
	- batch = token.reservedTokensDestinationsLen().minus(distributedReservedTokensDestinationsLen) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1629-1635)
	- distributedReservedTokensDestinationsLen == token.reservedTokensDestinationsLen() (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
	State variables written after the call(s):
	- reservedTokensAreDistributed (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
Reentrancy in CrowdsaleExt.finalize (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#654-667):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#666)
	State variables written after the call(s):
	- finalized (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#667)
Reentrancy in CrowdsaleExt.investInternal (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#527-611):
	External calls:
	- getState() == State.Funding (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#537-550)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#555-557)
	- updateInheritedEarlyParticipantWhitelist(receiver,tokenAmount) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#573-576)
	State variables written after the call(s):
	- tokenAmountOf (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#590-592)
	- tokensSold (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#597-598)
	- weiRaised (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#593-597)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
CrowdsaleTokenExt.claimTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1589-1593) does not use the value returned by external calls:
	-token.transfer(owner,balance) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1591)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
CrowdsaleExt.updateInheritedEarlyParticipantWhitelist has external calls inside a loop:
	- crowdsale.updateEarlyParticipantWhitelist(reciever,tokensBought) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#718)
CrowdsaleExt.setStartsAt has external calls inside a loop:
	- assert(bool)(time >= crowdsale.endsAt()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#814)
CrowdsaleExt.setEndsAt has external calls inside a loop:
	- assert(bool)(time <= crowdsale.startsAt()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#843-844)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- i < crowdsale.joinedCrowdsalesLen() (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1620-1626)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- reservedAddr = token.reservedTokensDestinations(j) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- ! token.areTokensDistributedForAddress(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- allocatedBonusInTokens = token.getReservedTokens(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- percentsOfTokensUnit = token.getReservedPercentageUnit(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- percentsOfTokensDecimals = token.getReservedPercentageDecimals(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- token.mint(reservedAddr,allocatedBonusInPercentage) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- token.mint(reservedAddr,allocatedBonusInTokens) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- token.finalizeReservedAddress(reservedAddr) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- tier = CrowdsaleExt(crowdsale.joinedCrowdsales(i)) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1624-1625)
ReservedTokensFinalizeAgent.distributeReservedTokens has external calls inside a loop:
	- tokensSold = tokensSold.plus(tier.tokensSold()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1625-1626)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#474-515):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#495-498)
	State variables written after the call(s):
	- endsAt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#509)
	- isUpdatable (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#515)
	- isWhiteListed (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#515)
	- minimumFundingGoal (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#512-513)
	- multisigWallet (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#499)
	- startsAt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#508)
Reentrancy in CrowdsaleExt.investInternal (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#527-611):
	External calls:
	- getState() == State.Funding (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#537-550)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#555-557)
	- updateInheritedEarlyParticipantWhitelist(receiver,tokenAmount) (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#573-576)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#586-590)
	- investorCount (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#585)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleExt.getState (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#913-924) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#922-924)
	- block.timestamp < startsAt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#921-924)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#373-375)
CrowdsaleExt.joinedCrowdsalesLenMax should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#414-416)
CrowdsaleExt.ownerTestValue should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#443)
FractionalERC20Ext.decimals should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#353)
FractionalERC20Ext.minCap should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#353)
PricingStrategy.tier should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#238)
UpgradeAgent.originalSupply should be constant (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1085-1086)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#204:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#206:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#209:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#501:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#506-507:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#509:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#511-512:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#518:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#537:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#546:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#550:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#562:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#569:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#573:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#580:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#602:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#605:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#623:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#658-659:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#683:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#686-687:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#700:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#712:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#713:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#721:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#733:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#804:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#840:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#866:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#882-883:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#928:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1054:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1157-1159:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1176:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1177-1178:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1182:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1190:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1192:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1202:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1219:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1265:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1311-1312:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1316:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1380:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1382:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1552:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1029-1037) should be declared external
ERC20Basic.balanceOf (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#12-13) should be declared external
Ownable.transferOwnership (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#105-113) should be declared external
SafeMathLibExt.times (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#138-142) should be declared external
SafeMathLibExt.divides (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#143-150) should be declared external
SafeMathLibExt.minus (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#151-159) should be declared external
SafeMathLibExt.plus (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#159-161) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#240-245) should be declared external
PricingStrategy.isSane (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#247-249) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#257-260) should be declared external
PricingStrategy.updateRate (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#261-262) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#272-279) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#298-300) should be declared external
FinalizeAgent.isSane (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#307) should be declared external
ReservedTokensFinalizeAgent.isSane (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1603-1606) should be declared external
ReservedTokensFinalizeAgent.distributeReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1606-1635) should be declared external
FinalizeAgent.distributeReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#309) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#321-322) should be declared external
ReservedTokensFinalizeAgent.finalizeCrowdsale (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol) should be declared external
ERC20.allowance (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#328-335) should be declared external
StandardToken.allowance (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1059-1065) should be declared external
ERC20.approve (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#345-349) should be declared external
StandardToken.approve (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1037-1059) should be declared external
CrowdsaleExt.fallback (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#517-518) should be declared external
CrowdsaleExt.buy (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#618-621) should be declared external
CrowdsaleExt.distributeReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#621-630) should be declared external
CrowdsaleExt.areReservedTokensDistributed (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#630-635) should be declared external
CrowdsaleExt.canDistributeReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#635-650) should be declared external
CrowdsaleExt.finalize (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#654-667) should be declared external
CrowdsaleExt.setFinalizeAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#674-683) should be declared external
CrowdsaleExt.setEarlyParticipantWhitelistMultiple (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#696-710) should be declared external
CrowdsaleExt.updateEarlyParticipantWhitelist (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#719-742) should be declared external
CrowdsaleExt.whitelistedParticipantsLength (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#751-754) should be declared external
CrowdsaleExt.updateJoinedCrowdsalesMultiple (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#782-794) should be declared external
CrowdsaleExt.setStartsAt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#794-815) should be declared external
CrowdsaleExt.setEndsAt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#828-846) should be declared external
CrowdsaleExt.setMultisig (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#880-884) should be declared external
CrowdsaleExt.isFinalizerSane (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#888-889) should be declared external
CrowdsaleExt.isPricingSane (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#893-902) should be declared external
CrowdsaleExt.isCrowdsale (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#924-926) should be declared external
StandardToken.isToken (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1010-1011) should be declared external
UpgradeAgent.isUpgradeAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1086-1089) should be declared external
UpgradeAgent.upgradeFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1089-1092) should be declared external
UpgradeableToken.upgrade (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1147-1169) should be declared external
UpgradeableToken.setUpgradeMaster (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1213-1221) should be declared external
ReleasableToken.setReleaseAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1273-1278) should be declared external
ReleasableToken.setTransferAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1286-1288) should be declared external
MintableTokenExt.finalizeReservedAddress (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1382-1385) should be declared external
MintableTokenExt.areTokensDistributedForAddress (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1392-1396) should be declared external
MintableTokenExt.getReservedTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1396-1400) should be declared external
MintableTokenExt.getReservedPercentageUnit (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1400-1406) should be declared external
MintableTokenExt.getReservedPercentageDecimals (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1406-1410) should be declared external
MintableTokenExt.setReservedTokensListMultiple (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1410-1434) should be declared external
MintableTokenExt.mint (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1437-1445) should be declared external
MintableTokenExt.setMintAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1447-1455) should be declared external
CrowdsaleTokenExt.setTokenInformation (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1579-1584) should be declared external
CrowdsaleTokenExt.claimTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1589-1593) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol:
	- pragma solidity^0.4.11 (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#2-3): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#91-93) is not in mixedCase
Function 'CrowdsaleExt.CrowdsaleExt' (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#474-515) is not in mixedCase
Parameter '_name' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#477-479) is not in mixedCase
Parameter '_token' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#479) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#479-483) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#483-485) is not in mixedCase
Parameter '_start' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#485) is not in mixedCase
Parameter '_end' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#486) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#486-487) is not in mixedCase
Parameter '_isUpdatable' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#487-490) is not in mixedCase
Parameter '_isWhiteListed' of CrowdsaleExt.CrowdsaleExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#490) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.setPricingStrategy (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#856-857) is not in mixedCase
Variable 'CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#373-375) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1031-1037) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1011-1012) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1012) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1059) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1059-1065) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1019-1020) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1020) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1020) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1037-1038) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1039) is not in mixedCase
Function 'UpgradeableToken.UpgradeableToken' (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1144-1146) is not in mixedCase
Parameter '_upgradeMaster' of UpgradeableToken.UpgradeableToken (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1144-1145) is not in mixedCase
Parameter '_to' of ReleasableToken.transfer (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1317) is not in mixedCase
Parameter '_value' of ReleasableToken.transfer (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1317-1318) is not in mixedCase
Parameter '_from' of ReleasableToken.transferFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1325) is not in mixedCase
Parameter '_to' of ReleasableToken.transferFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1325-1326) is not in mixedCase
Parameter '_value' of ReleasableToken.transferFrom (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1326) is not in mixedCase
Function 'CrowdsaleTokenExt.CrowdsaleTokenExt' (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1521-1556) is not in mixedCase
Parameter '_name' of CrowdsaleTokenExt.CrowdsaleTokenExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1523) is not in mixedCase
Parameter '_symbol' of CrowdsaleTokenExt.CrowdsaleTokenExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1523) is not in mixedCase
Parameter '_initialSupply' of CrowdsaleTokenExt.CrowdsaleTokenExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1523) is not in mixedCase
Parameter '_decimals' of CrowdsaleTokenExt.CrowdsaleTokenExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1523) is not in mixedCase
Parameter '_mintable' of CrowdsaleTokenExt.CrowdsaleTokenExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1523-1524) is not in mixedCase
Parameter '_globalMinCap' of CrowdsaleTokenExt.CrowdsaleTokenExt (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1524) is not in mixedCase
Parameter '_name' of CrowdsaleTokenExt.setTokenInformation (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1579-1581) is not in mixedCase
Parameter '_symbol' of CrowdsaleTokenExt.setTokenInformation (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1582) is not in mixedCase
Parameter '_token' of CrowdsaleTokenExt.claimTokens (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1589) is not in mixedCase
Function 'ReservedTokensFinalizeAgent.ReservedTokensFinalizeAgent' (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1601-1603) is not in mixedCase
Parameter '_token' of ReservedTokensFinalizeAgent.ReservedTokensFinalizeAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1601) is not in mixedCase
Parameter '_crowdsale' of ReservedTokensFinalizeAgent.ReservedTokensFinalizeAgent (/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol#1602) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x799d214d7143b766cdd4979cd0280939288ba931.sol analyzed (17 contracts), 172 result(s) found