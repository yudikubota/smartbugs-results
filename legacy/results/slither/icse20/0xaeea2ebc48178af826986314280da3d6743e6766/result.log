INFO:Slither:Compilation warnings/errors on /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:30:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:54:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DLT(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:69:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               
                        ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:70:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:71:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           
                                            ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:72:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; 
                                                      ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:80:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:86:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                
                        ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:87:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:88:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 
                                       ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:89:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  
                                                      ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:90:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     
                                                   ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:106:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            
                                            ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:107:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:115:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            
                                            ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:116:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:124:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            
                                           ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:125:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:133:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.sender != owner)throw;
                               ^---^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:28:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:75:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                  
        ^-------------------------------^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:94:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:110:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:119:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:128:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:54:5: Warning: No visibility specified. Defaulting to "public". 
    function DLT(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:78:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:98:5: Warning: No visibility specified. Defaulting to "public". 
    function batch(address []toAddr, uint256 []value) returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function freeze(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function unfreeze(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:132:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawEther(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:28:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
DLT (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#36-139) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#69-79)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#28-36) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#35:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#70-71:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#71-72:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#72:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#73:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#108-109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#118:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
DLT.approve (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#79-85) should be declared external
DLT.transferFrom (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#85-99) should be declared external
DLT.batch (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#99-106) should be declared external
DLT.burn (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#106-115) should be declared external
DLT.freeze (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#115-124) should be declared external
DLT.unfreeze (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#125-137) should be declared external
DLT.withdrawEther (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#137-139) should be declared external
DLT.fallback (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol:
	- pragma solidity^0.4.10 (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'DLT.DLT' (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#56-69) is not in mixedCase
Parameter '_to' of DLT.transfer (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#69) is not in mixedCase
Parameter '_value' of DLT.transfer (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#69-70) is not in mixedCase
Parameter '_spender' of DLT.approve (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#80) is not in mixedCase
Parameter '_value' of DLT.approve (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#80-81) is not in mixedCase
Parameter '_from' of DLT.transferFrom (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#86) is not in mixedCase
Parameter '_to' of DLT.transferFrom (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#86) is not in mixedCase
Parameter '_value' of DLT.transferFrom (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#86) is not in mixedCase
Parameter '_value' of DLT.burn (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#107) is not in mixedCase
Parameter '_value' of DLT.freeze (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#116) is not in mixedCase
Parameter '_value' of DLT.unfreeze (/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol#125-126) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/7/0xaeea2ebc48178af826986314280da3d6743e6766.sol analyzed (2 contracts), 40 result(s) found