INFO:Slither:Compilation warnings/errors on /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:11:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ( msg.sender != owner ) throw;
                                   ^---^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:45:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function OriginalMyIdRepository() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:54:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ( userByWallet[wallet] > 0 ) throw;
                                        ^---^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:73:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ( userByWallet[wallet] > 0 ) throw;
                                        ^---^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:117:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:260:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:278:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:279:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:323:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:324:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:335:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:424:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / div;
        ^---^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:534:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:562:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:792:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:816:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(len);
        ^-----^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:280:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:276:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:370:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:276:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:419:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:276:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:766:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:766:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:812:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:276:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:63:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        idRepository i = userIds[userIndex];
        ^------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:71:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        string[] walletList = i.userWallets; 
        ^-----------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:92:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        idRepository i = userIds[userIndex];
        ^------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:100:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        idRepository i = userIds[userIndex];
        ^------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:420:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:79:9: Warning: Invoking events without "emit" prefix is deprecated.
        User(id);
        ^------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        CheckUserByWallet( userId );
        ^-------------------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:102:13: Warning: Invoking events without "emit" prefix is deprecated.
            ShowLastWallet( i.userWallets[j] );
            ^--------------------------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:593:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:593:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:594:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:596:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:598:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:598:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:630:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:630:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:631:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:633:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:635:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:636:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:636:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:638:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:638:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:6:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership( address newOwner ) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:45:2: Warning: No visibility specified. Defaulting to "public". 
	function OriginalMyIdRepository() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function newUser( uint256 id, string wallet ) onlyOwner returns ( bool ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function checkUserByWallet( string wallet ) returns ( uint256 ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function getLastWallet( uint256 id ) returns ( string ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function getWalletsFromUser( uint256 id ) returns (string wallets){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:109:5: Warning: No visibility specified. Defaulting to "public". 
    function isWalletFromUser( uint256 id, string wallet ) returns ( bool ){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:116:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:90:5: Warning: Function state mutability can be restricted to view
    function getLastWallet( uint256 id ) returns ( string ) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:109:5: Warning: Function state mutability can be restricted to view
    function isWalletFromUser( uint256 id, string wallet ) returns ( bool ){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:164:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:188:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:201:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:250:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:276:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:305:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:318:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:362:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:413:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:462:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:474:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:500:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:529:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:557:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ret in strings.len (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#207) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
strings.memcpy.len (local variable @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#168-169) shadows:
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#207-231)
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#282-310)
strings.len.len (local variable @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#289) shadows:
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#207-231)
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#282-310)
strings.nextRune.len (local variable @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#384) shadows:
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#207-231)
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#282-310)
strings.ord.len (local variable @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#435) shadows:
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#207-231)
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#282-310)
strings.count.count (local variable @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#785-786) shadows:
	- strings.count (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#785-792)
strings.join.len (local variable @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol) shadows:
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#207-231)
	- strings.len (function @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#282-310)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
strings.memcpy uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#167-186)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#175-177
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#181-186
strings.toSlice uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#194-201)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#198-199
strings.toSliceB32 uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#238-250)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#246-250
strings.toString uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#269-272)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#270-271
strings.len uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#282-310)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#291-293
strings.compare uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#327-352)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#336-341
strings.nextRune uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#374-409)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#387-389
strings.ord uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#429-471)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#440-444
strings.keccak uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#474-481)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#476-481
strings.startsWith uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#489-507)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#497-506
strings.beyond uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#516-538)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#526-531
strings.endsWith uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#551-565)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#558-565
strings.until uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#576-590)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#582-589
strings.findPtr uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#593-629)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#601-618
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#620
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#625-626
strings.rfindPtr uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#632-675)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#641-659
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#662-663
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#667-668
strings.concat uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#812-822)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#817-818
strings.join uses assembly (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol)
	- /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#12:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#57:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#75-76:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
accessControlled.owned (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#6-10) should be declared external
accessControlled.transferOwnership (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#16-22) should be declared external
OriginalMyIdRepository.checkUserByWallet (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#85-91) should be declared external
OriginalMyIdRepository.getLastWallet (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#91-97) should be declared external
OriginalMyIdRepository.getWalletsFromUser (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#97-110) should be declared external
OriginalMyIdRepository.isWalletFromUser (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#110-118) should be declared external
OriginalMyIdRepository.fallback (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#123-125) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol:
	- pragma solidity^0.4.10 (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#1): it allows old versions
	- pragma solidity^0.4.10 (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#164-165): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'accessControlled' (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#3-22) is not in CapWords
Struct 'OriginalMyIdRepository.idRepository' (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#35-40) is not in CapWords
Function 'OriginalMyIdRepository.OriginalMyIdRepository' (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#46-52) is not in mixedCase
Contract 'strings' (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#165-831) is not in CapWords
Struct 'strings.slice' (/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol#165-167) is not in CapWords
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/14/0x7b65b5b95391d6b3d77031a889279376e27572d5.sol analyzed (3 contracts), 41 result(s) found