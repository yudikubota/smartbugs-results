INFO:Slither:Compilation warnings/errors on /unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:114:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function StandardToken() {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:283:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LeviusDAO() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:344:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CrowdsaleLeviusDAO(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:225:28: Warning: This declaration shadows an existing declaration.
        function balanceOf(address owner) constant returns(uint256 balance) {
                           ^-----------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:109:9: The shadowed declaration is here:
        address owner;
        ^-----------^

/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:263:28: Warning: This declaration shadows an existing declaration.
        function allowance(address owner, address spender) constant returns(uint256 remaining) {
                           ^-----------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:109:9: The shadowed declaration is here:
        address owner;
        ^-----------^

/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:140:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(msg.sender, to, value);
                        ^-----------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:157:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(msg.sender, to, value);
                        ^-----------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:193:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(from, to, value);
                        ^-----------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:247:17: Warning: Invoking events without "emit" prefix is deprecated.
                Approval(msg.sender, spender, value);
                ^----------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:291:9: Warning: Invoking events without "emit" prefix is deprecated.
        BestCountTokens(best_count[_num]);
        ^-------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:297:9: Warning: Invoking events without "emit" prefix is deprecated.
        BestWallet(best_wals[_num]);
        ^-------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:369:9: Warning: Invoking events without "emit" prefix is deprecated.
        SendTokens(tokens);
        ^----------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:370:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundTransfer(msg.sender, msg.value);
        ^---------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:394:21: Warning: Invoking events without "emit" prefix is deprecated.
                    FundTransfer(msg.sender, amount);
                    ^------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:412:17: Warning: Invoking events without "emit" prefix is deprecated.
                FundTransfer(owner, amountRaised);
                ^-------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:58:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address owner) constant returns(uint256 balance);
        ^------------------------------------------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:59:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address to, uint256 value) returns(bool success);
        ^-----------------------------------------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:60:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address from, address to, uint256 value) returns(bool success);
        ^-----------------------------------------------------------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:73:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address spender, uint256 value) returns(bool success);
        ^---------------------------------------------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:86:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address owner, address spender) constant returns(uint256 remaining);
        ^-------------------------------------------------------------------------------------^
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:114:9: Warning: No visibility specified. Defaulting to "public". 
        function StandardToken() {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:130:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address to, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:149:9: Warning: No visibility specified. Defaulting to "public". 
        function transferWithoutChangeBest(address to, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:175:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address from, address to, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:201:9: Warning: No visibility specified. Defaulting to "public". 
        function CheckBest(uint _tokens, address _address) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:225:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address owner) constant returns(uint256 balance) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:240:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address spender, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:263:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address owner, address spender) constant returns(uint256 remaining) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:283:5: Warning: No visibility specified. Defaulting to "public". 
    function LeviusDAO() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:289:5: Warning: No visibility specified. Defaulting to "public". 
    function GetBestTokenCount(uint8 _num) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:295:5: Warning: No visibility specified. Defaulting to "public". 
    function GetBestWalletAddress(uint8 _num) onlyOwner returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:344:5: Warning: No visibility specified. Defaulting to "public". 
    function CrowdsaleLeviusDAO(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:352:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:373:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice() constant returns(uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:387:5: Warning: No visibility specified. Defaulting to "public". 
    function safeWithdrawal() afterDeadline {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:402:5: Warning: No visibility specified. Defaulting to "public". 
    function WithdrawalTokensAfterDeadLine() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:408:5: Warning: No visibility specified. Defaulting to "public". 
    function WithdrawalAfterGoalReached() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:4:3: Warning: Function state mutability can be restricted to pure
  function mul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:9:3: Warning: Function state mutability can be restricted to pure
  function div(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:15:3: Warning: Function state mutability can be restricted to pure
  function sub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:19:3: Warning: Function state mutability can be restricted to pure
  function add(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:24:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:27:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:30:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:33:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
CrowdsaleLeviusDAO.fallback (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#364-389) does not use the value returned by external calls:
	-tokenReward.transfer(msg.sender,tokens) (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#377-378)
CrowdsaleLeviusDAO.WithdrawalTokensAfterDeadLine (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#414-419) does not use the value returned by external calls:
	-tokenReward.transferWithoutChangeBest(msg.sender,tokenReward.balanceOf(address(this))) (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#415-419)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
StandardToken.balanceOf.owner (local variable @ /unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#234) shadows:
	- StandardToken.owner (state variable @ /unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#114)
StandardToken.allowance.owner (local variable @ /unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#275) shadows:
	- StandardToken.owner (state variable @ /unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#114)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleLeviusDAO.fallback (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#364-389):
	External calls:
	- assert(bool)(tokenReward.balanceOf(address(this)) >= tokens) (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#370-373)
	State variables written after the call(s):
	- amountRaised (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#373-374)
	- eth_balance (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#374-376)
Reentrancy in CrowdsaleLeviusDAO.fallback (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#364-389):
	External calls:
	- assert(bool)(tokenReward.balanceOf(address(this)) >= tokens) (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#370-373)
	- tokenReward.transfer(msg.sender,tokens) (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#377-378)
	State variables written after the call(s):
	- fundingGoalReached (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#383-385)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleLeviusDAO.DECIMAL_ZEROS should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#341-342)
CrowdsaleLeviusDAO.PRICE_01 should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#332-334)
CrowdsaleLeviusDAO.PRICE_02 should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#338)
CrowdsaleLeviusDAO.PRICE_03 should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#341)
CrowdsaleLeviusDAO.crowdsaleClosed should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#325-326)
CrowdsaleLeviusDAO.deadline should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#313-314)
CrowdsaleLeviusDAO.round1 should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#310-312)
CrowdsaleLeviusDAO.start_ico should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#309)
LeviusDAO.DECIMAL_ZEROS should be constant (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#286-289)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
TokenInterface.balanceOf (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#58-59) should be declared external
StandardToken.balanceOf (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#234-236) should be declared external
StandardToken.transfer (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#132-151) should be declared external
TokenInterface.transfer (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#59-60) should be declared external
TokenInterface.transferFrom (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#60-64) should be declared external
StandardToken.transferFrom (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#178-204) should be declared external
StandardToken.approve (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#247-258) should be declared external
TokenInterface.approve (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#74-77) should be declared external
TokenInterface.allowance (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#86-89) should be declared external
StandardToken.allowance (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#274-279) should be declared external
StandardToken.transferWithoutChangeBest (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#151-173) should be declared external
LeviusDAO.GetBestTokenCount (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#298-305) should be declared external
LeviusDAO.GetBestWalletAddress (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#305-308) should be declared external
CrowdsaleLeviusDAO.fallback (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#364-389) should be declared external
CrowdsaleLeviusDAO.safeWithdrawal (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#402-414) should be declared external
CrowdsaleLeviusDAO.WithdrawalTokensAfterDeadLine (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#414-419) should be declared external
CrowdsaleLeviusDAO.WithdrawalAfterGoalReached (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol:
	- pragma solidity^0.4.13 (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#116-123) is not in mixedCase
Function 'StandardToken.CheckBest' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#204-225) is not in mixedCase
Parameter '_tokens' of StandardToken.CheckBest (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#204-205) is not in mixedCase
Parameter '_address' of StandardToken.CheckBest (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#205) is not in mixedCase
Variable 'StandardToken.best_wals' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#115-116) is not in mixedCase
Variable 'StandardToken.best_count' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#116) is not in mixedCase
Function 'LeviusDAO.LeviusDAO' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#295-298) is not in mixedCase
Function 'LeviusDAO.GetBestTokenCount' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#298-305) is not in mixedCase
Parameter '_num' of LeviusDAO.GetBestTokenCount (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#302) is not in mixedCase
Function 'LeviusDAO.GetBestWalletAddress' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#305-308) is not in mixedCase
Parameter '_num' of LeviusDAO.GetBestWalletAddress (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#305) is not in mixedCase
Variable 'LeviusDAO.DECIMAL_ZEROS' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#286-289) is not in mixedCase
Function 'CrowdsaleLeviusDAO.CrowdsaleLeviusDAO' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#359-364) is not in mixedCase
Function 'CrowdsaleLeviusDAO.WithdrawalTokensAfterDeadLine' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#414-419) is not in mixedCase
Function 'CrowdsaleLeviusDAO.WithdrawalAfterGoalReached' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol) is not in mixedCase
Variable 'CrowdsaleLeviusDAO.start_ico' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#309) is not in mixedCase
Variable 'CrowdsaleLeviusDAO.PRICE_01' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#332-334) is not in mixedCase
Variable 'CrowdsaleLeviusDAO.PRICE_02' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#338) is not in mixedCase
Variable 'CrowdsaleLeviusDAO.PRICE_03' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#341) is not in mixedCase
Variable 'CrowdsaleLeviusDAO.DECIMAL_ZEROS' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#341-342) is not in mixedCase
Variable 'CrowdsaleLeviusDAO.eth_balance' (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#347-348) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CrowdsaleLeviusDAO.crowdsaleClosed (/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol#325-326) is never used in CrowdsaleLeviusDAO
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/47/0x2c8382ca66d5611987b393aa6e39b6a9c406bbd2.sol analyzed (5 contracts), 47 result(s) found