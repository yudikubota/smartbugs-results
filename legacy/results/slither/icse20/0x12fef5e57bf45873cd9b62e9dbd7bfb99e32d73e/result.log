INFO:Slither:Compilation warnings/errors on /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:7:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:12:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != owner) throw;
		                         ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:83:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function CofounditToken(address _icoAddress) {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:102:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < tokenFrozenUntilBlock) throw;	// Throw is token is frozen in case of emergency         
		                                          ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:103:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (restrictedAddresses[_to]) throw;                // Prevent transfer to restricted addresses         
		                              ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:104:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balances[msg.sender] < _value) throw;           // Check if the sender has enough         
		                                   ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:105:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balances[_to] + _value < balances[_to]) throw;  // Check for overflows         
		                                            ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:114:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < tokenFrozenUntilBlock) throw;	// Throw is token is frozen in case of emergency         
		                                          ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:130:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < tokenFrozenUntilBlock) throw;	// Throw is token is frozen in case of emergency         
		                                          ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:131:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (restrictedAddresses[_to]) throw;                // Prevent transfer to restricted addresses         
		                              ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:132:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balances[_from] < _value) throw;                // Check if the sender has enough         
		                              ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:133:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balances[_to] + _value < balances[_to]) throw;  // Check for overflows         
		                                            ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:134:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value > allowances[_from][msg.sender]) throw;  // Check allowance         
		                                            ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:149:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != icoContractAddress) throw;			// Check if minter is ico Contract address         
		                                      ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:150:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (restrictedAddresses[_to]) throw;                    // Prevent transfer to restricted addresses         
		                              ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:151:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_amount == 0 || sha3(_reason) == sha3("")) throw;   // Check if values are not null;         
		                                               ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:152:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balances[_to] + _amount < balances[_to]) throw;     // Check for overflows         
		                                             ^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:177:3: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		throw;     // Prevents accidental sending of ether     
		^---^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:28:43: Warning: This declaration shadows an existing declaration.
	function totalSupply() constant returns (uint256 totalSupply);     
	                                         ^-----------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:28:2: The shadowed declaration is here:
	function totalSupply() constant returns (uint256 totalSupply);     
	^------------------------------------------------------------^

/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:91:43: Warning: This declaration shadows an existing declaration.
	function totalSupply() constant returns (uint256 totalSupply) {         
	                                         ^-----------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:91:2: The shadowed declaration is here:
	function totalSupply() constant returns (uint256 totalSupply) {         
 ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:108:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(msg.sender, _to, _value);                  // Notify anyone listening that this transfer took place         
		^-------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:116:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, _value);             // Raise Approval event         
		^------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:138:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value);                       // Notify anyone listening that this transfer took place         
		^--------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:151:23: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (_amount == 0 || sha3(_reason) == sha3("")) throw;   // Check if values are not null;         
		                    ^-----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:151:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (_amount == 0 || sha3(_reason) == sha3("")) throw;   // Check if values are not null;         
		                    ^-----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:151:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (_amount == 0 || sha3(_reason) == sha3("")) throw;   // Check if values are not null;         
		                    ^-----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:151:40: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (_amount == 0 || sha3(_reason) == sha3("")) throw;   // Check if values are not null;         
		                                     ^------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:155:3: Warning: Invoking events without "emit" prefix is deprecated.
		Mint(_to, _amount);                          		    // Create Mint event         
		^----------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:156:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(0x0, _to, _amount);                            // Create Transfer event from 0x     
		^-------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:162:3: Warning: Invoking events without "emit" prefix is deprecated.
		TokenFrozen(_frozenUntilBlock, _reason);     
		^-------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:7:2: Warning: No visibility specified. Defaulting to "public". 
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:16:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:22:2: Warning: No visibility specified. Defaulting to "public". 
	function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); 
	^----------------------------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:28:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalSupply);     
	^------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:32:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance) {}     
	^----------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:32:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function balanceOf(address _owner) constant returns (uint256 balance) {}     
	                   ^------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:32:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function balanceOf(address _owner) constant returns (uint256 balance) {}     
	                                                     ^-------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:38:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint256 _value) returns (bool success) {}     
	^----------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:38:20: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transfer(address _to, uint256 _value) returns (bool success) {}     
	                  ^---------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:38:33: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transfer(address _to, uint256 _value) returns (bool success) {}     
	                               ^------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:38:58: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transfer(address _to, uint256 _value) returns (bool success) {}     
	                                                        ^----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:45:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     
	^-----------------------------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:45:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     
	                      ^-----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:45:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     
	                                     ^---------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:45:52: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     
	                                                  ^------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:45:77: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     
	                                                                           ^----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:51:2: Warning: No visibility specified. Defaulting to "public". 
	function approve(address _spender, uint256 _value) returns (bool success) {}     
	^--------------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:51:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function approve(address _spender, uint256 _value) returns (bool success) {}     
	                 ^--------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:51:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function approve(address _spender, uint256 _value) returns (bool success) {}     
	                                   ^------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:51:62: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function approve(address _spender, uint256 _value) returns (bool success) {}     
	                                                            ^----------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:56:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}       
	^------------------------------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:56:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}       
	                   ^------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:56:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}       
	                                   ^--------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:56:73: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}       
	                                                                       ^---------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:83:2: Warning: No visibility specified. Defaulting to "public". 
	function CofounditToken(address _icoAddress) {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:91:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalSupply) {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:96:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address _owner) constant returns (uint256 balance) {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:101:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address _to, uint256 _value) returns (bool success) {     	
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:113:2: Warning: No visibility specified. Defaulting to "public". 
	function approve(address _spender, uint256 _value) returns (bool success) {     	
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:121:2: Warning: No visibility specified. Defaulting to "public". 
	function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {            
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:129:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {     	
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:143:2: Warning: No visibility specified. Defaulting to "public". 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:148:2: Warning: No visibility specified. Defaulting to "public". 
	function mintTokens(address _to, uint256 _amount, string _reason) {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:160:2: Warning: No visibility specified. Defaulting to "public". 
	function freezeTransfersUntil(uint256 _frozenUntilBlock, string _reason) onlyOwner {     	
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:166:2: Warning: No visibility specified. Defaulting to "public". 
	function editRestrictedAddress(address _newRestrictedAddress) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:170:2: Warning: No visibility specified. Defaulting to "public". 
	function isRestrictedAddress(address _querryAddress) constant returns (bool answer){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:176:2: Warning: No visibility specified. Defaulting to "public". 
	function () {         
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:32:2: Warning: Function state mutability can be restricted to pure
	function balanceOf(address _owner) constant returns (uint256 balance) {}     
	^----------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:38:2: Warning: Function state mutability can be restricted to pure
	function transfer(address _to, uint256 _value) returns (bool success) {}     
	^----------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:45:2: Warning: Function state mutability can be restricted to pure
	function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     
	^-----------------------------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:51:2: Warning: Function state mutability can be restricted to pure
	function approve(address _spender, uint256 _value) returns (bool success) {}     
	^--------------------------------------------------------------------------^
/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:56:2: Warning: Function state mutability can be restricted to pure
	function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}       
	^------------------------------------------------------------------------------------------^

INFO:Detectors:[92m
IERC20Token.totalSupply.totalSupply (local variable @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#29-30) shadows:
	- IERC20Token.totalSupply (function @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#28-30)
CofounditToken.totalSupply.totalSupply (local variable @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#95) shadows:
	- CofounditToken.totalSupply (function @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#92-96)
	- IERC20Token.totalSupply (function @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#28-30)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
CofounditToken.decimals should be constant (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#69-70)
CofounditToken.name should be constant (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#67-68)
CofounditToken.standard should be constant (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#66-67)
CofounditToken.symbol should be constant (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#68-69)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#13-16:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#131:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#133:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#150:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#151:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#152-153:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#153:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#184:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#16-21) should be declared external
tokenRecipient.receiveApproval (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#22-25) should be declared external
IERC20Token.totalSupply (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#28-30) should be declared external
CofounditToken.totalSupply (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#92-96) should be declared external
CofounditToken.balanceOf (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#97-101) should be declared external
IERC20Token.balanceOf (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#32-34) should be declared external
IERC20Token.transfer (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#38-40) should be declared external
CofounditToken.transfer (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#102-113) should be declared external
CofounditToken.transferFrom (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#130-143) should be declared external
IERC20Token.transferFrom (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#45-47) should be declared external
CofounditToken.allowance (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#144-149) should be declared external
IERC20Token.allowance (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#56-58) should be declared external
CofounditToken.approveAndCall (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#122-129) should be declared external
CofounditToken.mintTokens (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#149-160) should be declared external
CofounditToken.freezeTransfersUntil (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#162-167) should be declared external
CofounditToken.editRestrictedAddress (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#167-174) should be declared external
CofounditToken.isRestrictedAddress (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#174-177) should be declared external
CofounditToken.fallback (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#181-185) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#3-21) is not in CapWords
Contract 'tokenRecipient' (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#21-25) is not in CapWords
Parameter '_owner' of CofounditToken.balanceOf (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#98-100) is not in mixedCase
Parameter '_to' of CofounditToken.transfer (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#102) is not in mixedCase
Parameter '_value' of CofounditToken.transfer (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#102) is not in mixedCase
Parameter '_from' of CofounditToken.transferFrom (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#130) is not in mixedCase
Parameter '_to' of CofounditToken.transferFrom (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#130) is not in mixedCase
Parameter '_value' of CofounditToken.transferFrom (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#130) is not in mixedCase
Parameter '_spender' of CofounditToken.approve (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#114) is not in mixedCase
Parameter '_value' of CofounditToken.approve (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#114) is not in mixedCase
Parameter '_owner' of CofounditToken.allowance (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#147) is not in mixedCase
Parameter '_spender' of CofounditToken.allowance (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#147-148) is not in mixedCase
Function 'CofounditToken.CofounditToken' (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#84-91) is not in mixedCase
Parameter '_icoAddress' of CofounditToken.CofounditToken (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#84) is not in mixedCase
Parameter '_spender' of CofounditToken.approveAndCall (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#122) is not in mixedCase
Parameter '_value' of CofounditToken.approveAndCall (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#122) is not in mixedCase
Parameter '_extraData' of CofounditToken.approveAndCall (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#122) is not in mixedCase
Parameter '_to' of CofounditToken.mintTokens (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#149-150) is not in mixedCase
Parameter '_amount' of CofounditToken.mintTokens (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#150) is not in mixedCase
Parameter '_reason' of CofounditToken.mintTokens (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#150) is not in mixedCase
Parameter '_frozenUntilBlock' of CofounditToken.freezeTransfersUntil (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#162-165) is not in mixedCase
Parameter '_reason' of CofounditToken.freezeTransfersUntil (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#165) is not in mixedCase
Parameter '_newRestrictedAddress' of CofounditToken.editRestrictedAddress (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#170) is not in mixedCase
Parameter '_querryAddress' of CofounditToken.isRestrictedAddress (/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol#174) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x12fef5e57bf45873cd9b62e9dbd7bfb99e32d73e.sol analyzed (4 contracts), 63 result(s) found