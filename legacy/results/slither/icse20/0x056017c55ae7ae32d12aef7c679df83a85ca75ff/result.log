INFO:Slither:Compilation warnings/errors on /unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:445:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function WyvernToken (bytes32 merkleRoot, uint totalUtxoAmount) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:26:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        computedHash = keccak256(computedHash, proofElement);
                       ^-----------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:29:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        computedHash = keccak256(proofElement, computedHash);
                       ^-----------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:91:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:132:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:148:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:170:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:181:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:204:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(burner, _value);
        ^------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:230:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), destination, numberOfDelayedTokens); 
        ^------------------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:231:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensReleased(destination, numberOfDelayedTokens);
        ^------------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:292:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return validateSignature(sha256(addr), v, r, s, pubKeyToEthereumAddress(pubKey));
                                 ^----------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:292:34: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        return validateSignature(sha256(addr), v, r, s, pubKeyToEthereumAddress(pubKey));
                                 ^----------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:324:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return ripemd160(sha256(startingByte, x));
                             ^---------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:324:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return ripemd160(sha256(startingByte, x));
                   ^--------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:324:20: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            return ripemd160(sha256(startingByte, x));
                   ^--------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:328:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return ripemd160(sha256(startingByte, x, y));
                             ^------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:328:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return ripemd160(sha256(startingByte, x, y));
                   ^-----------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:328:20: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            return ripemd160(sha256(startingByte, x, y));
                   ^-----------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:353:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 merkleLeafHash = keccak256(txid, originalAddress, outputIndex, satoshis);
                                 ^-----------------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:389:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 merkleLeafHash = keccak256(txid, originalAddress, outputIndex, satoshis);
                                 ^-----------------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:413:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), msg.sender, tokensRedeemed);
        ^----------------------------------------------^
/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:416:9: Warning: Invoking events without "emit" prefix is deprecated.
        UTXORedeemed(txid, outputIndex, satoshis, proof, pubKey, v, r, s, msg.sender, tokensRedeemed);
        ^-------------------------------------------------------------------------------------------^

INFO:Detectors:[93m
MerkleProof.verifyProof (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#11-39) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[92m
MerkleProof.verifyProof uses assembly (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#11-39)
	- /unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#20-24
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
MerkleProof.verifyProof (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#11-39) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#70) should be declared external
BasicToken.balanceOf (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#101-107) should be declared external
BasicToken.transfer (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#85-97) should be declared external
ERC20Basic.transfer (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#71) should be declared external
StandardToken.allowance (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#163-164) should be declared external
ERC20.allowance (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#108-109) should be declared external
ERC20.transferFrom (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#109-110) should be declared external
StandardToken.transferFrom (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#126-139) should be declared external
StandardToken.approve (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#148-154) should be declared external
ERC20.approve (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#110-113) should be declared external
StandardToken.increaseApproval (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#169-176) should be declared external
StandardToken.decreaseApproval (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#176-193) should be declared external
BurnableToken.burn (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#198-211) should be declared external
DelayedReleaseToken.releaseTokens (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#230-242) should be declared external
UTXORedeemableToken.canRedeemUTXO (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#356-365) should be declared external
UTXORedeemableToken.redeemUTXO (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#388-435) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol:
	- pragma solidity^0.4.13 (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_proof' of MerkleProof.verifyProof (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#11) is not in mixedCase
Parameter '_root' of MerkleProof.verifyProof (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#11) is not in mixedCase
Parameter '_leaf' of MerkleProof.verifyProof (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#11) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#106) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#85-86) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#86) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#163) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#163-164) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#126) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#126-127) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#127) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#148-149) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#150-153) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#170) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#170) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#177) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#177-179) is not in mixedCase
Parameter '_value' of BurnableToken.burn (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#199) is not in mixedCase
Function 'WyvernToken.WyvernToken' (/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol#455-460) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x056017c55ae7ae32d12aef7c679df83a85ca75ff.sol analyzed (10 contracts), 39 result(s) found