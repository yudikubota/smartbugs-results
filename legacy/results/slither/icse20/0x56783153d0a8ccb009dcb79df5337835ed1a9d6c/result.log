INFO:Slither:Compilation warnings/errors on /unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:132:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:378:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function NanoLoanEngine(Token _rcn) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:454:9: Warning: Use of the "var" keyword is deprecated.
        var loan = Loan(Status.initial, _oracleContract, _borrower, 0x0, msg.sender, 0x0, _amount, 0, 0, 0, 0, _interestRate,
        ^------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:187:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewSymbol(currency, ticker);
        ^-------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:188:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 currency = keccak256(ticker);
                           ^---------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:188:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 currency = keccak256(ticker);
                           ^---------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:365:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(loans[index].metadata);
               ^------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:365:16: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
        return keccak256(loans[index].metadata);
               ^------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:458:9: Warning: Invoking events without "emit" prefix is deprecated.
        CreatedLoan(index, _borrower, msg.sender);
        ^---------------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:509:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(this, oracle, borrower, creator, currency, amount, interestRate, interestRatePunitory, duesIn,
               ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:539:9: Warning: Invoking events without "emit" prefix is deprecated.
        ApprovedBy(index, msg.sender);
        ^---------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:569:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(loan.borrower == ecrecover(keccak256("\x19Ethereum Signed Message:\n32", identifier), v, r, s));
                                           ^-------------------------------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:571:9: Warning: Invoking events without "emit" prefix is deprecated.
        ApprovedBy(index, loan.borrower);
        ^------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:603:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0x0, loan.lender, index);
        ^-------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:624:9: Warning: Invoking events without "emit" prefix is deprecated.
        Lent(index, loan.lender, cosigner);
        ^--------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:664:9: Warning: Invoking events without "emit" prefix is deprecated.
        DestroyedBy(index, msg.sender);
        ^----------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:670:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(loan.lender, 0x0, index);
            ^-------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:712:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(loan.lender, to, index);
        ^------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:763:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, to, index);
        ^-----------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:916:9: Warning: Invoking events without "emit" prefix is deprecated.
        PartialPayment(index, msg.sender, _from, toPay);
        ^---------------------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:921:13: Warning: Invoking events without "emit" prefix is deprecated.
            TotalPayment(index);
            ^-----------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:927:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(loan.lender, 0x0, index);
            ^-------------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:507:5: Warning: No visibility specified. Defaulting to "public". 
    function buildIdentifier(Oracle oracle, address borrower, address creator, bytes32 currency, uint256 amount, uint256 interestRate,
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:282:5: Warning: Function state mutability can be restricted to pure
    function name() public view returns (string _name) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:286:5: Warning: Function state mutability can be restricted to pure
    function symbol() public view returns (string _symbol) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:954:32: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            (rate, decimals) = oracle.getRate(currency, data);
                               ^----------------------------^
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:1113:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return getOptimalSell(
               ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol:1130:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return getOptimalSell(
               ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
ConverterRamp.transfer (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1231-1243) sends eth to arbitrary user
	Dangerous calls:
	- to.transfer(amount) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1238-1239)
ConverterRamp.convertSafe (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1295-1320) sends eth to arbitrary user
	Dangerous calls:
	- boughtAmount = converter.convert.value(sendEth)(fromToken,toToken,amount,1) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1308)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
NanoLoanEngine.calculateInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#825-837) uses a dangerous strict equality:
	- amount == 0
NanoLoanEngine.calculateInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#825-837) uses a dangerous strict equality:
	- amount == 0
NanoLoanEngine.convertRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#969-980) uses a dangerous strict equality:
	- oracle == address(0)
NanoLoanEngine.calculateInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#825-837) uses a dangerous strict equality:
	- amount == 0
NanoLoanEngine.convertRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#969-980) uses a dangerous strict equality:
	- oracle == address(0)
NanoLoanEngine.cosign (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#651-663) uses a dangerous strict equality:
	- require(bool)(loan.status == Status.lent && (loan.dueTime - loan.duesIn) == block.timestamp)
NanoLoanEngine.calculateInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#825-837) uses a dangerous strict equality:
	- amount == 0
NanoLoanEngine.convertRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#969-980) uses a dangerous strict equality:
	- oracle == address(0)
NanoLoanEngine.cosign (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#651-663) uses a dangerous strict equality:
	- require(bool)(loan.status == Status.lent && (loan.dueTime - loan.duesIn) == block.timestamp)
NanoLoanEngine.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#604-642) uses a dangerous strict equality:
	- require(bool)(loan.cosigner == address(cosigner))
NanoLoanEngine.calculateInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#825-837) uses a dangerous strict equality:
	- amount == 0
NanoLoanEngine.convertRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#969-980) uses a dangerous strict equality:
	- oracle == address(0)
NanoLoanEngine.cosign (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#651-663) uses a dangerous strict equality:
	- require(bool)(loan.status == Status.lent && (loan.dueTime - loan.duesIn) == block.timestamp)
NanoLoanEngine.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#604-642) uses a dangerous strict equality:
	- require(bool)(loan.cosigner == address(cosigner))
NanoLoanEngine.transferFrom (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#759-762) uses a dangerous strict equality:
	- require(bool)(loans[index].lender == from)
ConverterRamp.convertSafe (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1295-1320) uses a dangerous strict equality:
	- require(bool,string)(boughtAmount == (toToken.balanceOf(this)) - prevBalance,Bought amound does does not match)
	- require(bool,string)(boughtAmount == (address(this).balance) - prevBalance,Bought amound does does not match)
ConverterRamp.convertSafe (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1295-1320) uses a dangerous strict equality:
	- require(bool,string)(boughtAmount == (toToken.balanceOf(this)) - prevBalance,Bought amound does does not match)
	- require(bool,string)(boughtAmount == (address(this).balance) - prevBalance,Bought amound does does not match)
ConverterRamp.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1162-1220) uses a dangerous strict equality:
	- require(bool,string)(rcn.balanceOf(this) == initialBalance,The contract balance should not change)
ConverterRamp.convertSafe (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1295-1320) uses a dangerous strict equality:
	- require(bool,string)(boughtAmount == (toToken.balanceOf(this)) - prevBalance,Bought amound does does not match)
	- require(bool,string)(boughtAmount == (address(this).balance) - prevBalance,Bought amound does does not match)
ConverterRamp.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1162-1220) uses a dangerous strict equality:
	- require(bool,string)(rcn.balanceOf(this) == initialBalance,The contract balance should not change)
ConverterRamp.pay (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1090-1141) uses a dangerous strict equality:
	- require(bool,string)(rcn.balanceOf(this) == initialBalance,Converter balance has incremented)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in NanoLoanEngine.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#604-642):
	External calls:
	- transferValue = convertRate(loan.oracle,loan.currency,oracleData,loan.amount) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#620-621)
	- require(bool)(rcn.transferFrom(msg.sender,loan.borrower,transferValue)) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#621-624)
	State variables written after the call(s):
	- loans (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#637-639)
Reentrancy in NanoLoanEngine.pay (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#934-965):
	External calls:
	- transferValue = convertRate(loan.oracle,loan.currency,oracleData,toPay) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#956-957)
	- require(bool)(rcn.transferFrom(msg.sender,this,transferValue)) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#964)
	State variables written after the call(s):
	- loans (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#964-965)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
newTimestamp in NanoLoanEngine.internalAddInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#851-852) is a local variable never initialiazed
cl in ConverterRamp.getOptimalSell (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1277) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
NanoLoanEngine.ownerOf.owner (local variable @ /unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#476) shadows:
	- Ownable.owner (state variable @ /unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#132-133)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
ConverterRamp.getOptimalSell has external calls inside a loop:
	- returnRebuy = converter.getReturn(fromToken,toToken,optimalSell) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1280-1281)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in NanoLoanEngine.pay (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#934-965):
	External calls:
	- transferValue = convertRate(loan.oracle,loan.currency,oracleData,toPay) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#956-957)
	State variables written after the call(s):
	- lockedTokens (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#962-964)
Reentrancy in NanoLoanEngine.withdrawal (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1010-1024):
	External calls:
	- require(bool)(rcn.transfer(to,amount)) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1019-1021)
	State variables written after the call(s):
	- lockedTokens (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1023-1024)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
RpSafeMath.safeAdd (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#208-214) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((z >= x) && (z >= y)) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#212-214)
NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#448-475) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(identifierToIndex[identifier] == 0) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#473-474)
	- require(bool)(_expirationRequest > block.timestamp) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#461-462)
NanoLoanEngine.approveLoanIdentifier (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#565-569) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(index != 0) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#569)
NanoLoanEngine.registerApprove (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#576-583) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(index != 0) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#579)
NanoLoanEngine.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#604-642) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(rcn.transferFrom(msg.sender,loan.borrower,transferValue)) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#621-624)
	- require(bool)(loan.status == Status.initial) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#608-610)
	- loan.cancelableAt > 0 (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#617)
	- require(bool)(loan.cosigner == address(cosigner)) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#640-641)
	- require(bool)(block.timestamp <= loan.expirationRequest) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#610-611)
NanoLoanEngine.cosign (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#651-663) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(loan.status == Status.lent && (loan.dueTime - loan.duesIn) == block.timestamp) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#653-656)
NanoLoanEngine.destroyIdentifier (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#702-707) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(index != 0) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#705)
NanoLoanEngine.transferFrom (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#759-762) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(loans[index].lender == from) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#760-761)
NanoLoanEngine.calculateInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#825-837) uses timestamp for comparisons
	Dangerous comparisons:
	- amount == 0 (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#827-837)
NanoLoanEngine.internalAddInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#846-893) uses timestamp for comparisons
	Dangerous comparisons:
	- endNonPunitory > loan.interestTimestamp (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#856-866)
	- timestamp > loan.interestTimestamp (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#847-893)
	- timestamp > loan.dueTime (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#866-888)
	- newInterest != loan.interest || newPunitoryInterest != loan.punitoryInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#888-893)
NanoLoanEngine.convertRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#969-980) uses timestamp for comparisons
	Dangerous comparisons:
	- oracle == address(0) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#972-980)
	- require(bool)(decimals <= RCN_DECIMALS) (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#978)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Engine.VERSION should be constant (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#26)
Engine.VERSION_NAME should be constant (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#26-28)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Token.transfer (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#6-7) should be declared external
Token.transferFrom (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#7-8) should be declared external
Token.allowance (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#8-9) should be declared external
Token.approve (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#9-10) should be declared external
Token.increaseApproval (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#10-11) should be declared external
Token.balanceOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#11-14) should be declared external
Engine.getTotalLoans (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#35-36) should be declared external
Engine.getOracle (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#36-37) should be declared external
Engine.getBorrower (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#37-38) should be declared external
Engine.getCosigner (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#38-39) should be declared external
Engine.ownerOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#39-40) should be declared external
Engine.getCreator (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#40-41) should be declared external
Engine.getAmount (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#41-42) should be declared external
Engine.getPaid (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#42-43) should be declared external
Engine.getDueTime (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#43-44) should be declared external
Engine.getApprobation (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#44-45) should be declared external
Engine.getStatus (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#45-46) should be declared external
Engine.isApproved (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#46-47) should be declared external
Engine.getPendingAmount (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#47-48) should be declared external
Engine.getCurrency (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#48-49) should be declared external
Engine.approveLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#50-51) should be declared external
Engine.transfer (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#51-52) should be declared external
Engine.takeOwnership (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#52-53) should be declared external
Engine.withdrawal (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#53-57) should be declared external
Cosigner.url (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#78) should be declared external
Cosigner.cost (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#82-85) should be declared external
Cosigner.requestCosign (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#91-94) should be declared external
Cosigner.claim (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#102-104) should be declared external
ERC721.name (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#105-106) should be declared external
ERC721.symbol (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#106-107) should be declared external
ERC721.totalSupply (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#107-108) should be declared external
ERC721.balanceOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#108-110) should be declared external
ERC721.ownerOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#110-111) should be declared external
ERC721.approve (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#111-112) should be declared external
ERC721.takeOwnership (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#112-113) should be declared external
ERC721.transfer (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#113-114) should be declared external
ERC721.setApprovalForAll (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#114-115) should be declared external
ERC721.getApproved (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#115-116) should be declared external
ERC721.isApprovedForAll (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#117-119) should be declared external
ERC721.tokenMetadata (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#119-120) should be declared external
Ownable.transferTo (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#144-151) should be declared external
Oracle.url (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#174-175) should be declared external
Oracle.getRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#180-184) should be declared external
Oracle.addCurrency (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#189-201) should be declared external
Oracle.supported (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#202-208) should be declared external
TokenLockable.withdrawTokens (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#264-275) should be declared external
NanoLoanEngine.name (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#291-294) should be declared external
NanoLoanEngine.symbol (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#294-296) should be declared external
NanoLoanEngine.totalSupply (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#304-308) should be declared external
NanoLoanEngine.tokenMetadata (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#362-365) should be declared external
NanoLoanEngine.tokenMetadataHash (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#373-375) should be declared external
NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#448-475) should be declared external
NanoLoanEngine.ownerOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#475-476) should be declared external
NanoLoanEngine.getTotalLoans (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#476-477) should be declared external
NanoLoanEngine.getOracle (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#477-478) should be declared external
NanoLoanEngine.getBorrower (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#478-479) should be declared external
NanoLoanEngine.getCosigner (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#479-480) should be declared external
NanoLoanEngine.getCreator (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#480-481) should be declared external
NanoLoanEngine.getAmount (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#481-482) should be declared external
NanoLoanEngine.getPunitoryInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#482-483) should be declared external
NanoLoanEngine.getInterestTimestamp (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#483-484) should be declared external
NanoLoanEngine.getPaid (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#484-485) should be declared external
NanoLoanEngine.getInterestRate (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#485-486) should be declared external
NanoLoanEngine.getInterestRatePunitory (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#486-487) should be declared external
NanoLoanEngine.getDueTime (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#487-488) should be declared external
NanoLoanEngine.getDuesIn (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#488-489) should be declared external
NanoLoanEngine.getCancelableAt (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#489-490) should be declared external
NanoLoanEngine.getApprobation (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#490-491) should be declared external
NanoLoanEngine.getStatus (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#491-492) should be declared external
NanoLoanEngine.getLenderBalance (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#492-494) should be declared external
NanoLoanEngine.getApproved (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#494-496) should be declared external
NanoLoanEngine.getCurrency (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#496-497) should be declared external
NanoLoanEngine.getExpirationRequest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#497-501) should be declared external
NanoLoanEngine.getInterest (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#501-503) should be declared external
NanoLoanEngine.approveLoanIdentifier (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#565-569) should be declared external
NanoLoanEngine.registerApprove (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#576-583) should be declared external
NanoLoanEngine.lend (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#604-642) should be declared external
NanoLoanEngine.destroyIdentifier (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#702-707) should be declared external
NanoLoanEngine.takeOwnership (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#747-748) should be declared external
NanoLoanEngine.transferFrom (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#759-762) should be declared external
NanoLoanEngine.approve (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#783-789) should be declared external
NanoLoanEngine.pay (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#934-965) should be declared external
NanoLoanEngine.withdrawal (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1010-1024) should be declared external
NanoLoanEngine.setDeprecated (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1028-1036) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '' of Engine.ownerOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#39) is not in mixedCase
Variable 'Engine.VERSION' (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#26) is not in mixedCase
Variable 'Engine.VERSION_NAME' (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#26-28) is not in mixedCase
Parameter '' of ERC721.ownerOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#111) is not in mixedCase
Parameter '' of ERC721.approve (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#112) is not in mixedCase
Parameter '_scope_0' of ERC721.approve (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#112) is not in mixedCase
Parameter '' of ERC721.takeOwnership (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#113) is not in mixedCase
Parameter '' of ERC721.transfer (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#113) is not in mixedCase
Parameter '_scope_0' of ERC721.transfer (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#113) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#139-141) is not in mixedCase
Parameter '_to' of Ownable.transferTo (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#149) is not in mixedCase
Parameter '_owner' of NanoLoanEngine.balanceOf (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#315) is not in mixedCase
Parameter '_owner' of NanoLoanEngine.tokensOfOwner (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#329) is not in mixedCase
Function 'NanoLoanEngine.NanoLoanEngine' (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#393-400) is not in mixedCase
Parameter '_rcn' of NanoLoanEngine.NanoLoanEngine (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#395) is not in mixedCase
Parameter '_oracleContract' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#449) is not in mixedCase
Parameter '_borrower' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#449-450) is not in mixedCase
Parameter '_currency' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#450) is not in mixedCase
Parameter '_amount' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#450-451) is not in mixedCase
Parameter '_interestRate' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#451) is not in mixedCase
Parameter '_interestRatePunitory' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#452) is not in mixedCase
Parameter '_duesIn' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#452) is not in mixedCase
Parameter '_cancelableAt' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#452-454) is not in mixedCase
Parameter '_expirationRequest' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#454) is not in mixedCase
Parameter '_metadata' of NanoLoanEngine.createLoan (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#454) is not in mixedCase
Parameter '_address' of NanoLoanEngine.getApprobation (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#490) is not in mixedCase
Parameter '_index' of NanoLoanEngine.takeOwnership (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#747) is not in mixedCase
Parameter '_amount' of NanoLoanEngine.pay (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#934-935) is not in mixedCase
Parameter '_from' of NanoLoanEngine.pay (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#935) is not in mixedCase
Parameter '_deprecated' of NanoLoanEngine.setDeprecated (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol#1031-1033) is not in mixedCase
Parameter '_token' of ConverterRamp.withdrawTokens (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol) is not in mixedCase
Parameter '_to' of ConverterRamp.withdrawTokens (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol) is not in mixedCase
Parameter '_amount' of ConverterRamp.withdrawTokens (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol) is not in mixedCase
Parameter '_to' of ConverterRamp.withdrawEther (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol) is not in mixedCase
Parameter '_amount' of ConverterRamp.withdrawEther (/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/14/0x56783153d0a8ccb009dcb79df5337835ed1a9d6c.sol analyzed (12 contracts), 149 result(s) found