INFO:Slither:Compilation warnings/errors on /unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:
/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:246:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(address(this), token, amount, user, nonce);
                   ^--------------------------------------------------^
/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:249:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user);
                      ^-------------------------------------------------^
/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:298:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(address(this), tradeAddresses[0], tradeValues[7], tradeAddresses[1], tradeValues[8], tradeValues[9], tradeValues[2], tradeAddresses[2]) ... 
     ^-----------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:299:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(address(this), tradeAddresses[1], tradeValues[3], tradeAddresses[0], tradeValues[4], tradeValues[5], tradeValues[6], tradeAddresses[3]) ... 
     ^-----------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:300:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) == tradeAddresses[2]);
                      ^------------------------------------------------------^
/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:301:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", tradeHash), v[1], rs[2], rs[3]) == tradeAddresses[3]);
                      ^------------------------------------------------------^

INFO:Detectors:[92m
Reentrancy in DexBrokerage.adminWithdraw (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#237-276):
	External calls:
	- require(bool)(ERC20(token).transfer(user,amount)) (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#266-270)
	External calls sending eth:
	- user.transfer(amount) (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#259)
	State variables written after the call(s):
	- lastActiveTransaction (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#270-272)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#100-110) should be declared external
ERC20Basic.totalSupply (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#114-115) should be declared external
ERC20Basic.balanceOf (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#115-116) should be declared external
ERC20Basic.transfer (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#116-121) should be declared external
ERC20.allowance (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#125-126) should be declared external
ERC20.transferFrom (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#126-127) should be declared external
ERC20.approve (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#127-131) should be declared external
DexBrokerage.approveCurrencyTokenAddress (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#165-173) should be declared external
DexBrokerage.invalidateOrdersBefore (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#173-176) should be declared external
DexBrokerage.setMakerFee (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#176-188) should be declared external
DexBrokerage.setTakerFee (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#188-201) should be declared external
DexBrokerage.setInactivityReleasePeriod (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#201-206) should be declared external
DexBrokerage.setAdmin (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#206-209) should be declared external
DexBrokerage.depositToken (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#210-212) should be declared external
DexBrokerage.deposit (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#219-224) should be declared external
DexBrokerage.withdraw (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#225-237) should be declared external
DexBrokerage.adminWithdraw (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#237-276) should be declared external
DexBrokerage.balanceOf (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#276-281) should be declared external
DexBrokerage.trade (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#293-373) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol:
	- pragma solidity^0.4.23 (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#1): it allows old versions
	- pragma solidity^0.4.23 (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#8-12): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_makerFee' of DexBrokerage. (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#159) is not in mixedCase
Parameter '_takerFee' of DexBrokerage. (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#159-160) is not in mixedCase
Parameter '_feeAccount' of DexBrokerage. (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#160-161) is not in mixedCase
Parameter '_inactivityReleasePeriod' of DexBrokerage. (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#161) is not in mixedCase
Parameter '_makerFee' of DexBrokerage.setMakerFee (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#177-179) is not in mixedCase
Parameter '_takerFee' of DexBrokerage.setTakerFee (/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol#189-190) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/12/0x41a5b8aa081dcd69ace566061d5b6adcb92cae1c.sol analyzed (5 contracts), 27 result(s) found