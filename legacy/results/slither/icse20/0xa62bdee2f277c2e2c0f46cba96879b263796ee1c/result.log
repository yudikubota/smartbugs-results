INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:84:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function StandardToken() {}
        ^-------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:271:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function HackerGold(address multisig) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:319:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (now < milestones.p1) throw;
                                         ^---^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:320:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (now >= milestones.p6) throw;
                                          ^---^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:321:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (msg.value == 0) throw;
                                    ^---^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:324:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (getTotalValue() + msg.value > SAFETY_LIMIT) throw;
                                                                ^---^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:332:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!wallet.send(msg.value)) throw;
                                             ^---^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:106:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(msg.sender, to, value);
                        ^-----------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:144:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(from, to, value);
                        ^-----------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:189:17: Warning: Invoking events without "emit" prefix is deprecated.
                Approval(msg.sender, spender, value);
                ^----------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:289:26: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
                balances[0x342e62732b76875da9305083ea8ae63125a4e667] = 16110893000;
                         ^----------------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:25:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address owner) constant returns(uint256 balance);
        ^------------------------------------------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:27:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address to, uint256 value) returns(bool success);
        ^-----------------------------------------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:29:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address from, address to, uint256 value) returns(bool success);
        ^-----------------------------------------------------------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:42:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address spender, uint256 value) returns(bool success);
        ^---------------------------------------------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:55:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address owner, address spender) constant returns(uint256 remaining);
        ^-------------------------------------------------------------------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:84:9: Warning: No visibility specified. Defaulting to "public". 
        function StandardToken() {}
        ^-------------------------^
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:96:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address to, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:127:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address from, address to, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:163:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address owner) constant returns(uint256 balance) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:180:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address spender, uint256 value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:205:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address owner, address spender) constant returns(uint256 remaining) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:271:9: Warning: No visibility specified. Defaulting to "public". 
        function HackerGold(address multisig) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:300:9: Warning: No visibility specified. Defaulting to "public". 
        function() payable {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:317:9: Warning: No visibility specified. Defaulting to "public". 
        function createHKG(address holder) payable {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:340:9: Warning: No visibility specified. Defaulting to "public". 
        function getPrice() constant returns(uint result) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:386:9: Warning: No visibility specified. Defaulting to "public". 
        function getTotalSupply() constant returns(uint result) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:397:9: Warning: No visibility specified. Defaulting to "public". 
        function getNow() constant returns(uint result) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:406:9: Warning: No visibility specified. Defaulting to "public". 
        function getTotalValue() constant returns(uint result) {
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
HackerGold.BASE_PRICE should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#242-243)
HackerGold.DECIMAL_ZEROS should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#252-253)
HackerGold.FIN_PRICE should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#248)
HackerGold.MID_PRICE should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#245-246)
HackerGold.SAFETY_LIMIT should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#249-251)
HackerGold.decimals should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#238-239)
HackerGold.name should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#235-236)
HackerGold.symbol should be constant (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#241)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:
	- Version used: ['^0.4.0', '^0.4.2']
	- /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#1 declares pragma solidity^0.4.0
	- /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#66-67 declares pragma solidity^0.4.2
	- /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#221 declares pragma solidity^0.4.0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#328-329:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#330:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#332:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#336:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#344:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#171-174) should be declared external
TokenInterface.balanceOf (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#25-27) should be declared external
StandardToken.transfer (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#99-119) should be declared external
TokenInterface.transfer (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#27-29) should be declared external
TokenInterface.transferFrom (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#29-33) should be declared external
StandardToken.transferFrom (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#129-159) should be declared external
StandardToken.approve (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#185-199) should be declared external
TokenInterface.approve (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#42-46) should be declared external
StandardToken.allowance (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#216-219) should be declared external
TokenInterface.allowance (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#55-58) should be declared external
HackerGold.fallback (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#309-311) should be declared external
HackerGold.getTotalSupply (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#398-402) should be declared external
HackerGold.getNow (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol:
	- pragma solidity^0.4.0 (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#1): it allows old versions
	- pragma solidity^0.4.2 (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#66-67): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#221): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#88-89) is not in mixedCase
Struct 'HackerGold.milestones_struct' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#261-268) is not in CapWords
Function 'HackerGold.HackerGold' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#279-305) is not in mixedCase
Variable 'HackerGold.BASE_PRICE' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#242-243) is not in mixedCase
Variable 'HackerGold.MID_PRICE' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#245-246) is not in mixedCase
Variable 'HackerGold.FIN_PRICE' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#248) is not in mixedCase
Variable 'HackerGold.SAFETY_LIMIT' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#249-251) is not in mixedCase
Variable 'HackerGold.DECIMAL_ZEROS' (/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol#252-253) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0xa62bdee2f277c2e2c0f46cba96879b263796ee1c.sol analyzed (3 contracts), 29 result(s) found