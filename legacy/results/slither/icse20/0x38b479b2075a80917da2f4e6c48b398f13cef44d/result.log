INFO:Slither:Compilation warnings/errors on /unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol:
/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol:76:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function KittyRace(address _kittyCoreAddress) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol:192:32: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            raceScore += uint8(block.blockhash(races[_raceId].blockJoinedLastRacer + numRacers - i)) % 20;
                               ^-------------^
/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol:233:38: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        ( , , , , , , , , , genes) = kittyCore.getKitty(_kittyId);
                                     ^--------------------------^

INFO:Detectors:[91m
KittyRace.race (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#175-235) sends eth to arbitrary user
	Dangerous calls:
	- PayoutEvent(_raceId,winner.kittyOwner,(entryFee * numRacers) - (processingFee * numRacers),! winner.kittyOwner.send((entryFee * numRacers) - (processingFee * numRacers)),msg.sender,processingFee * numRacers,! msg.sender.send(processingFee * numRacers)) (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#215-231)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
KittyRace.getKittySkillScore (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#236-253) uses a dangerous strict equality:
	- genes & geneMasks[i][0] == geneMasks[i][0]
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
skillScore in KittyRace.getKittySkillScore (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#242-246) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
KittyRace.registerForRace.race (local variable @ /unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#139) shadows:
	- KittyRace.race (function @ /unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#175-235)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in KittyRace.race (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#175-235):
	External calls:
	- raceScore = getKittySkillScore(racer.kittyId) (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#193)
	State variables written after the call(s):
	- activeRacers (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#213-214)
Reentrancy in KittyRace.registerForRace (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#125-175):
	External calls:
	- require(bool)(msg.sender == kittyCore.ownerOf(_kittyId)) (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#134-136)
	State variables written after the call(s):
	- activeRacers (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#163)
	- raceId (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#144-145)
	- races (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#150-152)
	- races (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#152-155)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#194-197:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
KittyRace.kill (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#83-89) should be declared external
KittyRace.setEntryFee (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#90) should be declared external
KittyRace.setProcessingFee (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#90-91) should be declared external
KittyRace.setRegistrationPeriod (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#91-93) should be declared external
KittyRace.setMaxRacers (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#93-95) should be declared external
KittyRace.setGameOn (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#95-97) should be declared external
KittyRace.setKittyCoreAddress (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#98-106) should be declared external
KittyRace.getRace (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#106-114) should be declared external
KittyRace.getRacer (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#114-125) should be declared external
KittyCoreI.getKitty (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#256-262) should be declared external
KittyCoreI.ownerOf (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol:
	- pragma solidity^0.4.21 (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'KittyRace.KittyRace' (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#77-83) is not in mixedCase
Parameter '_kittyCoreAddress' of KittyRace.KittyRace (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#78) is not in mixedCase
Parameter '_entryFee' of KittyRace.setEntryFee (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#90) is not in mixedCase
Parameter '_processingFee' of KittyRace.setProcessingFee (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#91) is not in mixedCase
Parameter '_registrationPeriod' of KittyRace.setRegistrationPeriod (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#92) is not in mixedCase
Parameter '_maxRacers' of KittyRace.setMaxRacers (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#93) is not in mixedCase
Parameter '_gameOn' of KittyRace.setGameOn (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#95) is not in mixedCase
Parameter '_kittyCoreAddress' of KittyRace.setKittyCoreAddress (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#99-100) is not in mixedCase
Parameter '_raceId' of KittyRace.getRace (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#106) is not in mixedCase
Parameter '_raceId' of KittyRace.getRacer (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#114-115) is not in mixedCase
Parameter '_racerIndex' of KittyRace.getRacer (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#116) is not in mixedCase
Parameter '_kittyId' of KittyRace.registerForRace (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#127) is not in mixedCase
Parameter '_raceId' of KittyRace.race (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#175) is not in mixedCase
Parameter '_kittyId' of KittyRace.getKittySkillScore (/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol#236) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x38b479b2075a80917da2f4e6c48b398f13cef44d.sol analyzed (2 contracts), 33 result(s) found