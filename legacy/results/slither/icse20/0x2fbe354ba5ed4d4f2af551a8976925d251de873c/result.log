INFO:Slither:Compilation warnings/errors on /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:25:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:32:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Owned () {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:82:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Exchange(address feeAccount_, address dvipAddress_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:98:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:105:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.value != 0) throw;
                          ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:107:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!Token(token).transferFrom(msg.sender, this, amount)) throw;
                                                                ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:113:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[token][msg.sender] < amount) throw;
                                            ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:116:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!msg.sender.send(amount)) throw;
                                    ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:118:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!Token(token).transfer(msg.sender, amount)) throw;
                                                      ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:141:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    )) throw;
       ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:174:88: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) != msg.sender) throw;
                                                                                       ^---^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:24:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:40:5: Warning: Invoking events without "emit" prefix is deprecated.
    SetOwner(owner, newOwner);
    ^-----------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:109:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:120:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:134:17: Warning: "sha3" has been deprecated in favour of "keccak256"
    tradeHash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
                ^--------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:134:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    tradeHash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
                ^--------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:136:17: Warning: "sha3" has been deprecated in favour of "keccak256"
      ecrecover(sha3("\x19Ethereum Signed Message:\n32", tradeHash),v,r,s) == user &&
                ^-------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:136:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      ecrecover(sha3("\x19Ethereum Signed Message:\n32", tradeHash),v,r,s) == user &&
                ^-------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:156:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenBuy, amount, tokenSell, amountSell * amount / amountBuy, user, msg.sender, tradeHash);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:163:16: Warning: "sha3" has been deprecated in favour of "keccak256"
    testHash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
               ^--------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:163:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    testHash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
               ^--------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:165:19: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (ecrecover(sha3("\x19Ethereum Signed Message:\n32", testHash), v, r, s) != user) return 4;
                  ^------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:165:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (ecrecover(sha3("\x19Ethereum Signed Message:\n32", testHash), v, r, s) != user) return 4;
                  ^------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:173:20: Warning: "sha3" has been deprecated in favour of "keccak256"
    bytes32 hash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
                   ^--------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:173:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
                   ^--------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:174:19: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) != msg.sender) throw;
                  ^--------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:174:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) != msg.sender) throw;
                  ^--------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:176:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, msg.sender, v, r, s);
    ^-------------------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:12:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success);
    ^-------------------------------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function assert(bool assertion) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:32:3: Warning: No visibility specified. Defaulting to "public". 
  function Owned () {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:39:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwner(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:43:3: Warning: No visibility specified. Defaulting to "public". 
  function getOwner() returns (address out) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:82:3: Warning: No visibility specified. Defaulting to "public". 
  function Exchange(address feeAccount_, address dvipAddress_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:89:3: Warning: No visibility specified. Defaulting to "public". 
  function setFeeAccount(address feeAccount_) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:93:3: Warning: No visibility specified. Defaulting to "public". 
  function setDVIP(address dvipAddress_) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:97:3: Warning: No visibility specified. Defaulting to "public". 
  function() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:101:3: Warning: No visibility specified. Defaulting to "public". 
  function deposit(address token, uint256 amount) payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:112:3: Warning: No visibility specified. Defaulting to "public". 
  function withdraw(address token, uint256 amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:123:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address token, address user) constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function trade(address tokenBuy, uint256 amountBuy, address tokenSell, uint256 amountSell, uint256 expires, uint256 nonce, address user, uint8 v, bytes32 r, bytes32 s, uint256 amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:162:3: Warning: No visibility specified. Defaulting to "public". 
  function testTrade(address tokenBuy, uint256 amountBuy, address tokenSell, uint256 amountSell, uint256 expires, uint256 nonce, address user, uint8 v, bytes32 r, bytes32 s, uint256 amount, address sender) constant returns (uint8 code) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function cancelOrder(address tokenBuy, uint256 amountBuy, address tokenSell, uint256 amountSell, uint256 expires, uint256 nonce, uint8 v, bytes32 r, bytes32 s, address user) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:24:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:43:3: Warning: Function state mutability can be restricted to view
  function getOwner() returns (address out) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:163:5: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    testHash = sha3(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user);
    ^------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:166:5: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    amountSelln = safeMul(amountSell, amount) / amountBuy;
    ^---------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:166:19: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    amountSelln = safeMul(amountSell, amount) / amountBuy;
                  ^-------------------------^
/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:169:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    if (safeAdd(orderFills[testHash], amount) > amountBuy) return 7;
        ^-----------------------------------^

INFO:Detectors:[93m
Exchange.testTrade (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#162-172) is declared view but changes state variables:
	- Exchange.testHash
	- Exchange.amountSelln
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Exchange.trade (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#132-162):
	External calls:
	- feeMake = DVIP(dvipAddress).feeFor(feeMakeExporter,msg.sender,1000000000000000000) (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#143-144)
	- feeTake = DVIP(dvipAddress).feeFor(feeTakeExporter,user,1000000000000000000) (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#144-145)
	State variables written after the call(s):
	- orderFills (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#156-160)
	- tokens (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#145-147)
	- tokens (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#148-149)
	- tokens (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#150-151)
	- tokens (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#151-152)
	- tokens (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#153-154)
	- tokens (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#156)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Assertive.assert (function @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#24-29) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Exchange.trade (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#132-162):
	External calls:
	- feeMake = DVIP(dvipAddress).feeFor(feeMakeExporter,msg.sender,1000000000000000000) (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#143-144)
	- feeTake = DVIP(dvipAddress).feeFor(feeTakeExporter,user,1000000000000000000) (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#144-145)
	State variables written after the call(s):
	- feeTake (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#144-145)
	- feeTerm (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#147-148)
	- feeTerm (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#149-150)
	- feeTerm (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#151)
	- feeTerm (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#152-153)
	- feeTerm (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#154-155)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.allowTransactions should be constant (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#9-10)
Token.decimals should be constant (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#8-9)
Token.name should be constant (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#5-6)
Token.standard should be constant (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#4-5)
Token.symbol should be constant (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#6-7)
Token.totalSupply should be constant (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#7-8)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#29:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#112:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#115-116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#136-138:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#138-143:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#143:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#165-166:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#167-169:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#174-176:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#176-178:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.transfer (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#12-13) should be declared external
Token.approveAndCall (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#13-14) should be declared external
Token.approve (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#14-15) should be declared external
Token.transferFrom (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#15-19) should be declared external
Owned.setOwner (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#39-43) should be declared external
Owned.getOwner (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#43-49) should be declared external
Exchange.setFeeAccount (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#91-95) should be declared external
Exchange.setDVIP (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#97-102) should be declared external
Exchange.fallback (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#102-103) should be declared external
Exchange.deposit (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#103-114) should be declared external
Exchange.withdraw (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#114-127) should be declared external
Exchange.balanceOf (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#127-132) should be declared external
Exchange.trade (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#132-162) should be declared external
Exchange.testTrade (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#162-172) should be declared external
Exchange.cancelOrder (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#172-178) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol:
	- pragma solidity^0.4.11 (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#33-36) is not in mixedCase
Function 'Exchange.Exchange' (/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol#83-90) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/34/0x2fbe354ba5ed4d4f2af551a8976925d251de873c.sol analyzed (6 contracts), 38 result(s) found