INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:64:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function FuBi() { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:78:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(_value <= 0) throw;                                     
                        ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:80:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[msg.sender] < _value) throw;                   
                                           ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:82:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[_to] + _value < balances[_to]) throw; 
                                                    ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:105:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:106:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[_from] < _value) throw; // Check if the sender has enough
                                      ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:107:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[_to] + _value < balances[_to]) throw; // Check for overflows
                                                    ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:108:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw; // Check allowance
                                                   ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:158:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!owner.send(this.balance)) throw;
                                       ^---^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:130:37: Warning: This declaration shadows an existing declaration.
    function freeze(address target, bool freeze) onlyOwner
                                    ^---------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:130:5: The shadowed declaration is here:
    function freeze(address target, bool freeze) onlyOwner
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:88:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                          
        ^-------------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:113:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:135:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFu(target,freeze);  
        ^---------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:158:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (!owner.send(this.balance)) throw;
                        ^----------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns(uint256);
    ^--------------------------------------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value) returns(bool ok);
    ^---------------------------------------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint value) returns(bool ok);
    ^---------------------------------------------------------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:17:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint value) returns(bool ok);
    ^-------------------------------------------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns(uint);
    ^------------------------------------------------------------------------^
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:64:5: Warning: No visibility specified. Defaulting to "public". 
    function FuBi() { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns (bool success)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value) returns(bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:118:5: Warning: No visibility specified. Defaulting to "public". 
    function mint(address _to, uint256 _value) onlyOwner
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:130:5: Warning: No visibility specified. Defaulting to "public". 
    function freeze(address target, bool freeze) onlyOwner
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function turn_flag_ON() onlyOwner
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function turn_flag_OFF() onlyOwner
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
FuBi.totalSupply (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#46-47) shadows:
	- ERC20.totalSupply (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#7-8)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
FuBi.freeze.freeze (local variable @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#135-136) shadows:
	- FuBi.freeze (function @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#135-142)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
ERC20.totalSupply should be constant (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#7-8)
FuBi.decimals should be constant (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#45)
FuBi.name should be constant (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#41-42)
FuBi.symbol should be constant (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#43-44)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#79:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#108-110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20.balanceOf (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#9-10) should be declared external
FuBi.balanceOf (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#70-75) should be declared external
FuBi.transfer (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#77-93) should be declared external
ERC20.transfer (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#11-12) should be declared external
ERC20.transferFrom (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#13-14) should be declared external
FuBi.transferFrom (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#105-117) should be declared external
FuBi.approve (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#95-99) should be declared external
ERC20.approve (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#17-18) should be declared external
ERC20.allowance (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#19-20) should be declared external
FuBi.allowance (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#100-104) should be declared external
FuBi.mint (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#122-130) should be declared external
FuBi.freeze (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#135-142) should be declared external
FuBi.transferOwnership (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#144-150) should be declared external
FuBi.turn_flag_ON (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#152-156) should be declared external
FuBi.turn_flag_OFF (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#157-160) should be declared external
FuBi.drain (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol:
	- pragma solidity^0.4.8 (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of FuBi.balanceOf (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#72) is not in mixedCase
Parameter '_to' of FuBi.transfer (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#77) is not in mixedCase
Parameter '_value' of FuBi.transfer (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#77-78) is not in mixedCase
Parameter '_from' of FuBi.transferFrom (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#105) is not in mixedCase
Parameter '_to' of FuBi.transferFrom (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#105) is not in mixedCase
Parameter '_value' of FuBi.transferFrom (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#105) is not in mixedCase
Parameter '_spender' of FuBi.approve (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#95) is not in mixedCase
Parameter '_value' of FuBi.approve (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#95-96) is not in mixedCase
Parameter '_owner' of FuBi.allowance (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#100) is not in mixedCase
Parameter '_spender' of FuBi.allowance (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#100-103) is not in mixedCase
Function 'FuBi.FuBi' (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#65-69) is not in mixedCase
Parameter '_to' of FuBi.mint (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#123) is not in mixedCase
Parameter '_value' of FuBi.mint (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#123-125) is not in mixedCase
Function 'FuBi.turn_flag_ON' (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#152-156) is not in mixedCase
Function 'FuBi.turn_flag_OFF' (/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol#157-160) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x661eb2bafdcd01a689b91c28580f8f07c3dc170d.sol analyzed (2 contracts), 43 result(s) found