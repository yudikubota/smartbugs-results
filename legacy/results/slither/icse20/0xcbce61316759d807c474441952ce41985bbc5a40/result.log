INFO:Slither:Compilation warnings/errors on /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:65:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MoacToken(address founderInput, address signerInput, uint startBlockInput, uint endBlockInput) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:97:115: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number<startBlock || block.number>endBlock || (saleEtherRaised + msg.value)>etherCap || halted) throw;
                                                                                                                  ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:103:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!founder.call.value(msg.value)()) throw; 
                                              ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:111:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender!=founder) throw;
                                 ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:112:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= endBlock + founderLockup) throw;
                                                      ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:113:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (founderAllocated) throw;
                              ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:124:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender!=signer) throw;
                                ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:125:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number >= endBlock) throw; //offline can be done only before end block
                                      ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:140:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender!=founder) throw;
                                 ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:141:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number >= endBlock) throw; //offline can be done only before end block
                                      ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:161:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= (endBlock + transferLockup) && msg.sender!=founder) throw; 
                                                                                ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:162:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if( balances[msg.sender] < tokenNum ) throw;
                                              ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:171:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if( msg.sender != founder) throw;
                                   ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:172:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if( redeem[_to] < tokenNum ) throw;
                                     ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:183:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender!=founder) throw;
                                 ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:188:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender!=founder) throw;
                                 ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:202:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender!=founder) throw;
                                 ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:210:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= (endBlock + transferLockup) && msg.sender!=founder) throw;
                                                                                ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:226:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= (endBlock + transferLockup) && msg.sender!=founder) throw;
                                                                                ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:249:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:15:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:96:9: Warning: Invoking events without "emit" prefix is deprecated.
        print(hash);
        ^---------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:104:9: Warning: Invoking events without "emit" prefix is deprecated.
        Donate(msg.value, tokens);
        ^-----------------------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:117:9: Warning: Invoking events without "emit" prefix is deprecated.
        AllocateFounderTokens(msg.sender);
        ^-------------------------------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:194:34: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        if (msg.sender == owner) suicide(owner); 
                                 ^------------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:216:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:233:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function MoacToken(address founderInput, address signerInput, uint startBlockInput, uint endBlockInput) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:74:5: Warning: No visibility specified. Defaulting to "public". 
    function price() constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function testPrice(uint256 currentSupply) constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function donate( bytes32 hash) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function allocateFounderTokens() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function offlineDonate(uint256 offlineTokenNum, uint256 offlineEther) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function offlineAdjust(uint256 offlineTokenNum, uint256 offlineEther) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:153:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemBalanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemToken(uint256 tokenNum) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:170:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemRestore(address _to, uint256 tokenNum){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:182:5: Warning: No visibility specified. Defaulting to "public". 
    function halt() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:187:5: Warning: No visibility specified. Defaulting to "public". 
    function unhalt() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:193:5: Warning: No visibility specified. Defaulting to "public". 
    function kill() { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function changeFounder(address newFounder) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:209:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:225:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:248:5: Warning: No visibility specified. Defaulting to "public". 
    function() {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
MoacToken.decimals should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#32)
MoacToken.etherCap should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#49-50)
MoacToken.founderAllocation should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#53-55)
MoacToken.founderLockup should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#52)
MoacToken.levelFourTokenNum should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#45-47)
MoacToken.levelOneTokenNum should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#42-43)
MoacToken.levelThreeTokenNum should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#44-45)
MoacToken.levelTwoTokenNum should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#43-44)
MoacToken.name should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#28-29)
MoacToken.saleTokenSupply should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#56-57)
MoacToken.symbol should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#29-30)
MoacToken.transferLockup should be constant (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#50-52)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#108-109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#144:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#144:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#164:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#181-182:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#194:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#199:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#202-203:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#210:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#214-215:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#229:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
MoacToken.balanceOf (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#9-13) should be declared external
MoacToken.approve (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#13-19) should be declared external
MoacToken.allowance (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#19-23) should be declared external
MoacToken.testPrice (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#85-96) should be declared external
MoacToken.donate (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#97-111) should be declared external
MoacToken.allocateFounderTokens (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#112-123) should be declared external
MoacToken.offlineDonate (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#125-139) should be declared external
MoacToken.offlineAdjust (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#141-154) should be declared external
MoacToken.redeemBalanceOf (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#158-161) should be declared external
MoacToken.redeemToken (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#162-171) should be declared external
MoacToken.redeemRestore (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#174-188) should be declared external
MoacToken.halt (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#190-194) should be declared external
MoacToken.unhalt (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#194-200) should be declared external
MoacToken.kill (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#201-203) should be declared external
MoacToken.changeFounder (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#209-210) should be declared external
MoacToken.transfer (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#212-226) should be declared external
MoacToken.transferFrom (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#228-243) should be declared external
MoacToken.fallback (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol:
	- pragma solidity^0.4.11 (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in MoacToken.donate (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#97-111):
	-! founder.call.value(msg.value)() /unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#108-109
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Event 'MoacToken.print' (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#65) is not in CapWords
Parameter '_owner' of MoacToken.balanceOf (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#9) is not in mixedCase
Parameter '_spender' of MoacToken.approve (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#13) is not in mixedCase
Parameter '_value' of MoacToken.approve (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#13) is not in mixedCase
Parameter '_owner' of MoacToken.allowance (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#19) is not in mixedCase
Parameter '_spender' of MoacToken.allowance (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#19) is not in mixedCase
Function 'MoacToken.MoacToken' (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#65-74) is not in mixedCase
Parameter '_owner' of MoacToken.redeemBalanceOf (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#160) is not in mixedCase
Parameter '_to' of MoacToken.redeemRestore (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#175) is not in mixedCase
Parameter '_to' of MoacToken.transfer (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#212-213) is not in mixedCase
Parameter '_value' of MoacToken.transfer (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#213) is not in mixedCase
Parameter '_from' of MoacToken.transferFrom (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#228) is not in mixedCase
Parameter '_to' of MoacToken.transferFrom (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#228) is not in mixedCase
Parameter '_value' of MoacToken.transferFrom (/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol#228-229) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/2/0xcbce61316759d807c474441952ce41985bbc5a40.sol analyzed (1 contracts), 55 result(s) found