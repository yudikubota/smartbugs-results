INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:10:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:15:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:42:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:57:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:58:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:83:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:84:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:85:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:95:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:110:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ObjectToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:119:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:120:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:121:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:130:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:131:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:132:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:133:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:160:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:167:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:171:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:61:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:89:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:124:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:137:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:144:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:145:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:150:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:163:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:173:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:10:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:24:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:56:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:94:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function ObjectToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:118:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:129:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:148:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:153:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:158:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:166:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#27-102) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#57-64)
ObjectToken (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#102-176) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#119-129)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
token.standard should be constant (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#28-30)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#16-17:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#58:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#59:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#99-100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#131:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#162:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#173:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#19-24) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#24-27) should be declared external
ObjectToken.transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#119-129) should be declared external
token.transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#57-64) should be declared external
token.approveAndCall (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#72-82) should be declared external
token.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#82-94) should be declared external
ObjectToken.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#130-143) should be declared external
token.fallback (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#99-102) should be declared external
ObjectToken.mintToken (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#143-150) should be declared external
ObjectToken.freezeAccount (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#152-156) should be declared external
ObjectToken.setPrices (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#158-160) should be declared external
ObjectToken.buy (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#160-168) should be declared external
ObjectToken.sell (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#168-176) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol:
	- pragma solidity^0.4.2 (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#7-24) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#24-27) is not in CapWords
Contract 'token' (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#27-102) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#57) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#57) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#66-67) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#67) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#73) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#74) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#74) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#83) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#83) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#83) is not in mixedCase
Parameter '_to' of ObjectToken.transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#119-120) is not in mixedCase
Parameter '_value' of ObjectToken.transfer (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#120) is not in mixedCase
Parameter '_from' of ObjectToken.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#130) is not in mixedCase
Parameter '_to' of ObjectToken.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#130) is not in mixedCase
Parameter '_value' of ObjectToken.transferFrom (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#130-131) is not in mixedCase
Function 'ObjectToken.ObjectToken' (/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol#114-119) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0x868326efca6e89f75a76d141167759f1ad10854c.sol analyzed (4 contracts), 53 result(s) found