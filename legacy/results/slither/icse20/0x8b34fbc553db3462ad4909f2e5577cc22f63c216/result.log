INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:191:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LRCMidTermHoldingContract(address _lrcTokenAddress, address _owner) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:238:9: Warning: Use of the "var" keyword is deprecated.
        var lrcToken = Token(lrcTokenAddress);
        ^----------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:267:9: Warning: Use of the "var" keyword is deprecated.
        var record = records[msg.sender];
        ^--------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:268:9: Warning: Use of the "var" keyword is deprecated.
        var lrcToken = Token(lrcTokenAddress);
        ^----------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:304:9: Warning: Use of the "var" keyword is deprecated.
        var record = records[msg.sender];
        ^--------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:209:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint amount = ethAmount.min256(this.balance);
                                       ^----------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:213:9: Warning: Invoking events without "emit" prefix is deprecated.
        Drained(amount);
        ^-------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:224:9: Warning: Invoking events without "emit" prefix is deprecated.
        Started(depositStartTime);
        ^-----------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:233:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint ethAmount = this.balance;
                         ^----------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:245:9: Warning: Invoking events without "emit" prefix is deprecated.
        Closed(ethAmount, lrcAmount);
        ^--------------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:270:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint lrcAmount = this.balance.mul(RATE)
                         ^----------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:288:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:321:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdrawal(
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:92:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:98:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:111:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:116:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function LRCMidTermHoldingContract(address _lrcTokenAddress, address _owner) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:249:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:262:5: Warning: No visibility specified. Defaulting to "public". 
    function depositLRC() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:299:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawLRC() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:26:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:32:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:39:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:44:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:57:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:61:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:65:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:69:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in LRCMidTermHoldingContract.close (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#234-256):
	External calls:
	- lrcAmount = lrcToken.balanceOf(address(this)) (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#248-249)
	- require(bool)(lrcToken.transfer(owner,lrcAmount)) (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#252-253)
	External calls sending eth:
	- owner.transfer(ethAmount) (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#242-244)
	State variables written after the call(s):
	- closed (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#253)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
LRCMidTermHoldingContract.start (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#224-231) uses a dangerous strict equality:
	- require(bool)(depositStartTime == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in LRCMidTermHoldingContract.depositLRC (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#270-305):
	External calls:
	- lrcAmount = this.balance.mul(RATE).min256(lrcToken.balanceOf(msg.sender)).min256(lrcToken.allowance(msg.sender,address(this))).min256(MAX_LRC_DEPOSIT_PER_ADDRESS - record.lrcAmount) (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#275-284)
	State variables written after the call(s):
	- records (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#292-293)
	- records (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#294)
	- records (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#294)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in LRCMidTermHoldingContract.depositLRC (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#270-305):
	External calls:
	- lrcAmount = this.balance.mul(RATE).min256(lrcToken.balanceOf(msg.sender)).min256(lrcToken.allowance(msg.sender,address(this))).min256(MAX_LRC_DEPOSIT_PER_ADDRESS - record.lrcAmount) (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#275-284)
	State variables written after the call(s):
	- depositId (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#298-301)
	- ethSent (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#295-298)
	- lrcReceived (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#295)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.totalSupply should be constant (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#90-91)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Token.balanceOf (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#94-95) should be declared external
Token.transfer (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#100) should be declared external
Token.transferFrom (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#107-108) should be declared external
Token.approve (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#113-114) should be declared external
Token.allowance (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#118-119) should be declared external
LRCMidTermHoldingContract.drain (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#211-222) should be declared external
LRCMidTermHoldingContract.start (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#224-231) should be declared external
LRCMidTermHoldingContract.close (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#234-256) should be declared external
LRCMidTermHoldingContract.fallback (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#260-263) should be declared external
LRCMidTermHoldingContract.getLRCAmount (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol) should be declared external
LRCMidTermHoldingContract.getTimestamp (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol:
	- pragma solidity^0.4.11 (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#18-22): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'LRCMidTermHoldingContract.LRCMidTermHoldingContract' (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#195-206) is not in mixedCase
Parameter '_lrcTokenAddress' of LRCMidTermHoldingContract.LRCMidTermHoldingContract (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#196-199) is not in mixedCase
Parameter '_owner' of LRCMidTermHoldingContract.LRCMidTermHoldingContract (/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol#200) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0x8b34fbc553db3462ad4909f2e5577cc22f63c216.sol analyzed (4 contracts), 20 result(s) found