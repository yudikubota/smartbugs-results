INFO:Slither:Compilation warnings/errors on /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:22:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!assertion) throw;
                        ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:90:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner && !admins[msg.sender]) throw;
                                                        ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:96:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContracts[msg.sender]) throw;
                                           ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:101:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:176:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (expiry > 1000000) throw;
                              ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:184:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Exchange(address feeAccount_, uint256 makerFee_, uint256 takerFee_, uint256 inactivityReleasePeriod_) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:262:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContractAllowed(msg.sender, user)) throw;
                                                       ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:263:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, user) < amount) throw; 
                                                      ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:270:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContractAllowed(msg.sender, user)) throw;
                                                       ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:278:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContractAllowed(msg.sender, user)) throw;
                                                       ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:284:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContractAllowed(msg.sender, user)) throw;
                                                       ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:290:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContractAllowed(msg.sender, user)) throw;
                                                       ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:314:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, user) < amount) throw; 
                                                      ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:336:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!Token(token).transferFrom(msg.sender, this, amount)) throw; // attempts to transfer the token to this contract, if fails throws an error
                                                                  ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:343:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, msg.sender) < amount) throw;
                                                            ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:349:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(amount)) throw; // send ETH
                                          ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:351:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!Token(token).transfer(msg.sender, amount)) throw; // Send token
                                                            ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:358:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContracts[futuresContract]) throw;
                                                ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:366:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContracts[futuresContract]) throw;
                                                ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:368:94: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw; // checks that the provided signature is valid
                                                                                             ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:400:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (withdrawn[hash]) throw; // checks if the withdrawal was already executed, if true, throws an error
                             ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:402:94: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw; // checks that the provided signature is valid
                                                                                             ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:407:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, user) < amount) throw; // checks that user has enough balance
                                                      ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:419:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!user.send(amount)) throw; // sends ETH
                                    ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:421:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!Token(token).transfer(user, amount)) throw; // sends tokens
                                                      ^---^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:21:5: Warning: This declaration shadows a builtin symbol.
    function assert(bool assertion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:62:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetOwner(owner, newOwner);
        ^-----------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:367:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, futuresContract); 
                       ^------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:368:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw; // checks that the provided signature is valid
                      ^-------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:377:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, msg.sender); 
                       ^-------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:378:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256("\x19Ethereum Signed Message:\n32", hash) ... 
     ^-------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:399:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, token, amount, user, nonce); // creates the hash for the withdrawal request
                       ^-----------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:402:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw; // checks that the provided signature is valid
                      ^-------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:542:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(this, tradeAddresses[0], tradeValues[0], tradeAddresses[1], tradeValues[1], tradeValues[2], tradeAddresses[2]) ... 
     ^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:543:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(this, tradeAddresses[3], tradeValues[3], tradeAddresses[4], tradeValues[4], tradeValues[5], tradeAddresses[5]) ... 
     ^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:547:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", t.makerOrderHash), v[0], rs[0], rs[1]) != t.maker)
                      ^-------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:554:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", t.takerOrderHash), v[1], rs[2], rs[3]) != t.taker)
                      ^-------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:781:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 orderHash = keccak256(
                            ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:785:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) == cancelAddresses[2]);
                          ^------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:788:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 cancelHash = keccak256(this, orderHash, cancelAddresses[3], cancelValues[3]);
                             ^-------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:789:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", cancelHash), v[1], rs[2], rs[3]) == cancelAddresses[3]);
                          ^-------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success);
    ^-------------------------------------------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:21:5: Warning: No visibility specified. Defaulting to "public". 
    function assert(bool assertion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function safeMul(uint a, uint b) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function safeSub(uint a, uint b) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function safeAdd(uint a, uint b) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:61:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function getOwner() returns (address out) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function setAdmin(address admin, bool isAdmin) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:78:5: Warning: No visibility specified. Defaulting to "public". 
    function setFuturesContract(address futuresContract, bool isFuturesContract) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:175:5: Warning: No visibility specified. Defaulting to "public". 
    function setInactivityReleasePeriod(uint256 expiry) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:184:5: Warning: No visibility specified. Defaulting to "public". 
    function Exchange(address feeAccount_, uint256 makerFee_, uint256 takerFee_, uint256 inactivityReleasePeriod_) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:193:5: Warning: No visibility specified. Defaulting to "public". 
    function setFees(uint256 makerFee_, uint256 takerFee_) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:230:5: Warning: No visibility specified. Defaulting to "public". 
    function decodeBalanceAndReserve (address token, address user) returns (uint256[2])
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:239:5: Warning: No visibility specified. Defaulting to "public". 
    function futuresContractAllowed (address futuresContract, address user) returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:249:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address token, address user) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:261:5: Warning: No visibility specified. Defaulting to "public". 
    function setReserve(address token, address user, uint256 amount) onlyFuturesContract returns (bool success) { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:269:5: Warning: No visibility specified. Defaulting to "public". 
    function setBalance(address token, address user, uint256 amount) onlyFuturesContract returns (bool success)     {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:276:5: Warning: No visibility specified. Defaulting to "public". 
    function subBalanceAddReserve(address token, address user, uint256 subBalance, uint256 addReserve) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:282:5: Warning: No visibility specified. Defaulting to "public". 
    function addBalanceSubReserve(address token, address user, uint256 addBalance, uint256 subReserve) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:288:5: Warning: No visibility specified. Defaulting to "public". 
    function subBalanceSubReserve(address token, address user, uint256 subBalance, uint256 subReserve) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:295:5: Warning: No visibility specified. Defaulting to "public". 
    function availableBalanceOf(address token, address user) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:300:5: Warning: No visibility specified. Defaulting to "public". 
    function getInactivityReleasePeriod() view returns (uint256)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:320:5: Warning: No visibility specified. Defaulting to "public". 
    function deposit() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:329:5: Warning: No visibility specified. Defaulting to "public". 
    function depositToken(address token, uint128 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:340:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw(address token, uint256 amount) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:340:63: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function withdraw(address token, uint256 amount) returns (bool success) {
                                                              ^----------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:356:5: Warning: No visibility specified. Defaulting to "public". 
    function userAllowFuturesContract(address futuresContract)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:364:5: Warning: No visibility specified. Defaulting to "public". 
    function allowFuturesContractForUser(address futuresContract, address user, uint8 v, bytes32 r, bytes32 s) onlyAdmin
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:374:5: Warning: No visibility specified. Defaulting to "public". 
    function allowFuturesContractForUserByFuturesContract(address user, uint8 v, bytes32 r, bytes32 s) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:389:5: Warning: No visibility specified. Defaulting to "public". 
    function adminWithdraw(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:398:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    ) onlyAdmin returns (bool success) {
                         ^----------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:427:5: Warning: No visibility specified. Defaulting to "public". 
    function batchAdminWithdraw(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:454:5: Warning: No visibility specified. Defaulting to "public". 
    function getMakerTakerBalances(address token, address maker, address taker) view returns (uint256[4])
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:497:5: Warning: No visibility specified. Defaulting to "public". 
    function trade(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:730:5: Warning: No visibility specified. Defaulting to "public". 
    function batchOrderTrade(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:748:5: Warning: No visibility specified. Defaulting to "public". 
    function cancelOrder(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:21:5: Warning: Function state mutability can be restricted to pure
    function assert(bool assertion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:67:5: Warning: Function state mutability can be restricted to view
    function getOwner() returns (address out) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:230:5: Warning: Function state mutability can be restricted to view
    function decodeBalanceAndReserve (address token, address user) returns (uint256[2])
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:239:5: Warning: Function state mutability can be restricted to view
    function futuresContractAllowed (address futuresContract, address user) returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:251:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return decodeBalanceAndReserve(token, user)[0];
               ^----------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:257:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return decodeBalanceAndReserve(token, user)[1];
               ^----------------------------------^
/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:296:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return safeSub(balanceOf(token, user), getReserve(token, user));
               ^------------------------------------------------------^

INFO:Detectors:[92m
Exchange.assert (function @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#21-25) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Exchange.subBalanceAddReserve.subBalance (local variable @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#279-282) shadows:
	- Exchange.subBalance (function @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#321-323)
Exchange.addBalanceSubReserve.addBalance (local variable @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#286-288) shadows:
	- Exchange.addBalance (function @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#314-320)
Exchange.subBalanceSubReserve.subBalance (local variable @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#294) shadows:
	- Exchange.subBalance (function @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#321-323)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Exchange.adminWithdraw (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#397-435):
	External calls:
	- ! Token(token).transfer(user,amount) (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#429-430)
	External calls sending eth:
	- ! user.send(amount) (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#428)
	State variables written after the call(s):
	- lastActiveTransaction (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#431-432)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Exchange.EtmTokenAddress should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#116)
Token.allowTransactions should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#10-11)
Token.decimals should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#9-10)
Token.name should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#6-7)
Token.standard should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#5-6)
Token.symbol should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#7-8)
Token.totalSupply should be constant (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#8-9)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#25:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#269:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#269-270:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#278:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#282:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#288:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#295:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#322:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#341:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#349:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#358:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#361:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#367:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#374:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#376:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#403:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#409:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#412:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#428:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#430:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#95:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.transfer (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#13-14) should be declared external
Token.approveAndCall (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#14-15) should be declared external
Token.approve (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#15-16) should be declared external
Token.transferFrom (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#16-19) should be declared external
Exchange.setOwner (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#62-67) should be declared external
Exchange.getOwner (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#69-72) should be declared external
Exchange.setAdmin (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#73-78) should be declared external
Exchange.setFuturesContract (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#78-90) should be declared external
Exchange.setInactivityReleasePeriod (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#179-184) should be declared external
Exchange.setFees (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#195-208) should be declared external
Exchange.setReserve (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#264-271) should be declared external
Exchange.setBalance (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#276-279) should be declared external
Exchange.subBalanceAddReserve (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#279-285) should be declared external
Exchange.addBalanceSubReserve (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#285-291) should be declared external
Exchange.subBalanceSubReserve (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#291-300) should be declared external
Exchange.getInactivityReleasePeriod (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#308-312) should be declared external
Exchange.deposit (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#323-331) should be declared external
Exchange.depositToken (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#332-343) should be declared external
Exchange.withdraw (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#343-364) should be declared external
Exchange.userAllowFuturesContract (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#364-368) should be declared external
Exchange.allowFuturesContractForUser (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#368-378) should be declared external
Exchange.allowFuturesContractForUserByFuturesContract (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#378-395) should be declared external
Exchange.batchAdminWithdraw (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#435-468) should be declared external
Exchange.getMakerTakerBalances (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#468-472) should be declared external
Exchange.batchOrderTrade (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#770-784) should be declared external
Exchange.cancelOrder (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#785-818) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol:
	- pragma solidity^0.4.19 (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Exchange.Exchange' (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#187-194) is not in mixedCase
Variable 'Exchange.EtmTokenAddress' (/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol#116) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/24/0x335fe4a7ff2150d88f66b8cfd6eadbe0656e9ca9.sol analyzed (2 contracts), 59 result(s) found