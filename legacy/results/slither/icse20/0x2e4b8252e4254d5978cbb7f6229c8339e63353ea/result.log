INFO:Slither:Compilation warnings/errors on /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:39:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:68:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PITAB(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:84:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:85:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:86:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:87:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:96:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:104:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:105:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:106:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:107:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:108:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:117:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:118:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:126:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:127:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:135:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:136:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:145:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:37:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:90:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:112:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:121:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:139:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function PITAB(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:83:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:94:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:103:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:116:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:125:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:134:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:144:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:150:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:37:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
PITAB (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#44-152) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#84-94)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#37-44) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#43:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#119:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#119:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#137:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#137-138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
PITAB.transfer (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#84-94) should be declared external
PITAB.approve (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#96-103) should be declared external
PITAB.transferFrom (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#104-117) should be declared external
PITAB.burn (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#117-126) should be declared external
PITAB.freeze (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#126-135) should be declared external
PITAB.unfreeze (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#135-149) should be declared external
PITAB.withdrawEther (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#150-152) should be declared external
PITAB.fallback (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol:
	- pragma solidity^0.4.8 (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#7-10): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'PITAB.PITAB' (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#70-84) is not in mixedCase
Parameter '_to' of PITAB.transfer (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#84) is not in mixedCase
Parameter '_value' of PITAB.transfer (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#84) is not in mixedCase
Parameter '_spender' of PITAB.approve (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#96-97) is not in mixedCase
Parameter '_value' of PITAB.approve (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#97) is not in mixedCase
Parameter '_from' of PITAB.transferFrom (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#104) is not in mixedCase
Parameter '_to' of PITAB.transferFrom (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#104) is not in mixedCase
Parameter '_value' of PITAB.transferFrom (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#104) is not in mixedCase
Parameter '_value' of PITAB.burn (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#117) is not in mixedCase
Parameter '_value' of PITAB.freeze (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#126-127) is not in mixedCase
Parameter '_value' of PITAB.unfreeze (/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol#135-136) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/31/0x2e4b8252e4254d5978cbb7f6229c8339e63353ea.sol analyzed (2 contracts), 40 result(s) found