INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:55:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:72:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:78:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:105:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:110:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:340:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:350:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:354:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:360:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:367:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:404:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:408:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:416:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:434:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:443:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:449:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!multisigWallet.send(weiAmount)) throw;
                                         ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:471:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (getState() != State.PreFunding) { throw; }
                                          ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:500:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:501:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:509:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:510:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:518:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track partipants for thank you email
                          ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:519:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:557:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:578:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:623:9: Warning: Use of the "var" keyword is deprecated.
        var addr = addrs[i];
        ^------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:631:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:635:9: Warning: Use of the "var" keyword is deprecated.
        var addr = addrs[i];
        ^------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:636:9: Warning: Use of the "var" keyword is deprecated.
        var weiLimit = weiLimits[i];
        ^----------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:652:9: Warning: Use of the "var" keyword is deprecated.
        var addr = addrs[i];
        ^------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:660:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:664:9: Warning: Use of the "var" keyword is deprecated.
        var addr = addrs[i];
        ^------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:665:9: Warning: Use of the "var" keyword is deprecated.
        var weiLimit = weiLimits[i];
        ^----------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:682:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time < now) { throw; }
                      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:685:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (time > endsAt) { throw; }
                         ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:688:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (startsAt < now) { throw; }
                          ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:695:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (secs < 0) { throw; }
                    ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:698:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (startsAt + secs > endsAt) { throw; }
                                    ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:701:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (startsAt + largeCapDelay < now) { throw; }
                                          ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:720:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:737:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:752:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:764:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:776:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:780:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:837:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:931:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:987:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:994:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:1012:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:12:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:53:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:452:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:491:7: Warning: Invoking events without "emit" prefix is deprecated.
      Invested(receiver, weiAmount, tokenAmount, 0);
      ^-------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:499:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:499:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:588:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:600:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:608:5: Warning: Invoking events without "emit" prefix is deprecated.
    WhitelistedEarlyParticipant(addr, status);
    ^---------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:617:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistedSmallCap(addr, weiLimit);
      ^---------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:625:9: Warning: Invoking events without "emit" prefix is deprecated.
        WhitelistedSmallCap(addr, weiLimit);
        ^---------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:638:9: Warning: Invoking events without "emit" prefix is deprecated.
        WhitelistedSmallCap(addr, weiLimit);
        ^---------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:646:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistedLargeCap(addr, weiLimit);
      ^---------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:654:9: Warning: Invoking events without "emit" prefix is deprecated.
        WhitelistedLargeCap(addr, weiLimit);
        ^---------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:667:9: Warning: Invoking events without "emit" prefix is deprecated.
        WhitelistedLargeCap(addr, weiLimit);
        ^---------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:691:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(endsAt);
    ^---------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:704:5: Warning: Invoking events without "emit" prefix is deprecated.
    LargeCapStartTimeChanged(startsAt + largeCapDelay);
    ^------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:724:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:779:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:907:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:917:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:934:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:973:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:981:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:83:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:141:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:181:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:194:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:195:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:197:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:198:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:199:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:340:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:381:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:573:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:586:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:597:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:606:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParticipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:614:3: Warning: No visibility specified. Defaulting to "public". 
  function setSmallCapWhitelistParticipant(address addr, uint256 weiLimit) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:620:3: Warning: No visibility specified. Defaulting to "public". 
  function setSmallCapWhitelistParticipants(address[] addrs, uint256 weiLimit) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:629:3: Warning: No visibility specified. Defaulting to "public". 
  function setSmallCapWhitelistParticipants(address[] addrs, uint256[] weiLimits) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:643:3: Warning: No visibility specified. Defaulting to "public". 
  function setLargeCapWhitelistParticipant(address addr, uint256 weiLimit) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:649:3: Warning: No visibility specified. Defaulting to "public". 
  function setLargeCapWhitelistParticipants(address[] addrs, uint256 weiLimit) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:658:3: Warning: No visibility specified. Defaulting to "public". 
  function setLargeCapWhitelistParticipants(address[] addrs, uint256[] weiLimits) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:672:3: Warning: No visibility specified. Defaulting to "public". 
  function setWhitelistAgent(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:679:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:694:3: Warning: No visibility specified. Defaulting to "public". 
  function setLargeCapDelay(uint secs) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:717:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:732:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:822:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:861:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:904:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:911:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:921:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:925:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:938:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:1012:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:1019:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:1019:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:1019:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:1019:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:37:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:41:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:45:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:49:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:53:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:133:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:141:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:169:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:827:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol:900:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#573-588):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#586-587)
	State variables written after the call(s):
	- finalized (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#588)
Reentrancy in Crowdsale.investInternal (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#402-464):
	External calls:
	- state = getState() (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#412)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#426-428)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#456-458)
	- weiRaised (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#452-456)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#54-67) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#351-391):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#370)
	State variables written after the call(s):
	- endsAt (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#379)
	- isWhitelistAgent (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#386-388)
	- isWhitelistAgent (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#388-389)
	- minimumFundingGoal (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#391)
	- multisigWallet (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#370-371)
	- startsAt (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#375)
Reentrancy in Crowdsale.investInternal (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#402-464):
	External calls:
	- state = getState() (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#412)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#426-428)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#433-436)
	- investorCount (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#431)
	- tokenAmountOf (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#437-439)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.investInternal (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#402-464) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > startsAt + largeCapDelay (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#442-449)
Crowdsale.getState (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#826-854) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#847-854)
	- block.timestamp < startsAt (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#843-854)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#240-243)
FractionalERC20.decimals should be constant (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#222-223)
MintableToken.mintingFinished should be constant (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#985)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#372:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#374:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#378-379:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#379:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#424:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#425:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#429:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#452:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#461:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#462:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#486:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#515:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#515-516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#524:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#527:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#535:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#536:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#582-583:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#599:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#651:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#687:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#708:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#710:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#713:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#720:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#724:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#730:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#745-746:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#763:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#778:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#791:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#805:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#809:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#861:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#967:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#1019:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#1023:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#84-96) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#137-141) should be declared external
PricingStrategy.isSane (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#146-149) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#161-164) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#175-176) should be declared external
FinalizeAgent.isSane (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#189-190) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#194) should be declared external
ERC20.balanceOf (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#197-198) should be declared external
StandardToken.balanceOf (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#949-951) should be declared external
ERC20.allowance (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#198-199) should be declared external
StandardToken.allowance (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#969-972) should be declared external
StandardToken.transfer (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#928-932) should be declared external
ERC20.transfer (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#199-200) should be declared external
StandardToken.transferFrom (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#933-949) should be declared external
ERC20.transferFrom (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#200-201) should be declared external
ERC20.approve (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#201-206) should be declared external
StandardToken.approve (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#953-969) should be declared external
Crowdsale.fallback (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#395) should be declared external
Crowdsale.preallocate (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#484-508) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#544-551) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#553-560) should be declared external
Crowdsale.buy (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#565-569) should be declared external
Crowdsale.finalize (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#573-588) should be declared external
Crowdsale.setFinalizeAgent (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#594-599) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#604-608) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#614-620) should be declared external
Crowdsale.setEarlyParticipantWhitelist (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#621-626) should be declared external
Crowdsale.setSmallCapWhitelistParticipant (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#630-637) should be declared external
Crowdsale.setSmallCapWhitelistParticipants (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#637-649) should be declared external
Crowdsale.setSmallCapWhitelistParticipants (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#649-659) should be declared external
Crowdsale.setLargeCapWhitelistParticipant (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#660-667) should be declared external
Crowdsale.setLargeCapWhitelistParticipants (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#667-681) should be declared external
Crowdsale.setLargeCapWhitelistParticipants (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#681-698) should be declared external
Crowdsale.setWhitelistAgent (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#698-701) should be declared external
Crowdsale.setStartsAt (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#704-715) should be declared external
Crowdsale.setLargeCapDelay (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#716-732) should be declared external
Crowdsale.setEndsAt (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#745-748) should be declared external
Crowdsale.setMultisig (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#775-779) should be declared external
Crowdsale.loadRefund (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#786-793) should be declared external
Crowdsale.refund (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#800-809) should be declared external
Crowdsale.isFinalizerSane (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#814-815) should be declared external
Crowdsale.isPricingSane (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#816-817) should be declared external
Crowdsale.setOwnerTestValue (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#855-856) should be declared external
Crowdsale.isCrowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#856-857) should be declared external
StandardToken.isToken (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#927-928) should be declared external
MintableToken.mint (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#1003-1012) should be declared external
MintableToken.setMintAgent (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#1012-1017) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#76-79) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#351-391) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#353-354) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#354-357) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#357-360) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#360) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#361-363) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#363-365) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#614) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#759) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#240-243) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#949-950) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#971) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#971) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#928) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#928-929) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#933) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#933-934) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#934) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#953) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol#953) is not in mixedCase
Function 'MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale' (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale (/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0x36e168966f61b674a3073e1d9e159a56880c7059.sol analyzed (11 contracts), 119 result(s) found