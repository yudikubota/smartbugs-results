INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:129:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, token, amount, user, nonce);
                   ^--------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:133:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user);
                      ^-------------------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:164:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... sha256(this, tradeAddresses[0], tradeValues[0], tradeAddresses[1], tradeValues[1], tradeValues[2], tradeValues[3], tradeAddresses[2]) ... 
     ^-----------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:165:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) == tradeAddresses[2]);
                      ^------------------------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:166:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 tradeHash = sha256(orderHash, tradeValues[4], tradeAddresses[3], tradeValues[5]);
                        ^------------------------------------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:167:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", tradeHash), v[1], rs[2], rs[3]) == tradeAddresses[3]);
                      ^------------------------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:187:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, user);
                   ^----------------------------------------------------------------------------------------^
/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:188:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    assert(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user);
                     ^-------------------------------------------------^

INFO:Detectors:[92m
Reentrancy in AXNETDEX.depositToken (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#120-128):
	External calls:
	- assert(bool)(Token(token).transferFrom(msg.sender,this,amount)) (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#124-125)
	State variables written after the call(s):
	- tokens (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#125-128)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.decimals should be constant (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#70-74)
Token.name should be constant (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#70)
Token.symbol should be constant (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#70)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Owned.transferOwnership (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#44-48) should be declared external
Owned.acceptOwnership (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#49-57) should be declared external
Token.totalSupply (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#58) should be declared external
Token.balanceOf (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#58-59) should be declared external
Token.allowance (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#59-61) should be declared external
Token.transfer (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#61-62) should be declared external
Token.approve (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#62-63) should be declared external
Token.transferFrom (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#63-65) should be declared external
AXNETDEX.fallback (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#101-102) should be declared external
AXNETDEX.setAdmin (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#104-110) should be declared external
AXNETDEX.changeFeeAccount (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#114-116) should be declared external
AXNETDEX.deposit (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#116-120) should be declared external
AXNETDEX.depositToken (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#120-128) should be declared external
AXNETDEX.adminWithdraw (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#128-156) should be declared external
AXNETDEX.balanceOf (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#156-158) should be declared external
AXNETDEX.trade (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#164-186) should be declared external
AXNETDEX.cancelOrder (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#187-192) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol:
	- pragma solidity^0.4.23 (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol#45) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0xacf999bfa9347e8ebe6816ed30bf44b127233177.sol analyzed (4 contracts), 21 result(s) found