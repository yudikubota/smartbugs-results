INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:76:5: Warning: Function state mutability can be restricted to pure
    function conversionWhitelist() public view returns (IWhitelist) {}
    ^----------------------------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:77:5: Warning: Function state mutability can be restricted to pure
    function conversionFee() public view returns (uint32) {}
    ^------------------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:78:5: Warning: Function state mutability can be restricted to pure
    function connectors(address _address) public view returns (uint256, uint32, bool, bool, bool) { _address; }
    ^---------------------------------------------------------------------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:104:5: Warning: Function state mutability can be restricted to pure
    function owner() public view returns (address) {}
    ^-----------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:47:5: Warning: Function state mutability can be restricted to pure
    function name() public view returns (string) {}
    ^---------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:48:5: Warning: Function state mutability can be restricted to pure
    function symbol() public view returns (string) {}
    ^-----------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:49:5: Warning: Function state mutability can be restricted to pure
    function decimals() public view returns (uint8) {}
    ^------------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:50:5: Warning: Function state mutability can be restricted to pure
    function totalSupply() public view returns (uint256) {}
    ^-----------------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:51:5: Warning: Function state mutability can be restricted to pure
    function balanceOf(address _owner) public view returns (uint256) { _owner; }
    ^--------------------------------------------------------------------------^
/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol:52:5: Warning: Function state mutability can be restricted to pure
    function allowance(address _owner, address _spender) public view returns (uint256) { _owner; _spender; }
    ^------------------------------------------------------------------------------------------------------^

INFO:Detectors:[93m
Reentrancy in BancorX.updateRegistry (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#583-603):
	External calls:
	- newRegistry = registry.addressOf(ContractIds.CONTRACT_REGISTRY) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#592-593)
	State variables written after the call(s):
	- registry (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#603)
Reentrancy in BancorX.upgrade (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-627):
	External calls:
	- bancorXUpgrader = IBancorXUpgrader(registry.addressOf(ContractIds.BANCOR_X_UPGRADER)) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-624)
	- bancorXUpgrader.upgrade(version,_reporters) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#626-627)
	State variables written after the call(s):
	- owner (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#627)
Reentrancy in BancorX.xTransfer (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#639-656):
	External calls:
	- lockTokens(_amount) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#645-646)
	State variables written after the call(s):
	- prevLockBlockNumber (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#652-654)
	- prevLockLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#649-651)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
BancorX.releaseTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol) does not use the value returned by external calls:
	-bntToken.transfer(_to,_amount) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in BancorX.constructor (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#445-481):
	External calls:
	- bntToken = ISmartToken(registry.addressOf(ContractIds.BNT_TOKEN)) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#472-473)
	- bntConverter = IBancorConverter(registry.addressOf(ContractIds.BNT_CONVERTER)) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#473-479)
	State variables written after the call(s):
	- bntConverter (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#473-479)
Reentrancy in BancorX.updateRegistry (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#583-603):
	External calls:
	- newRegistry = registry.addressOf(ContractIds.CONTRACT_REGISTRY) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#592-593)
	State variables written after the call(s):
	- prevRegistry (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#602)
Reentrancy in BancorX.upgrade (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-627):
	External calls:
	- bancorXUpgrader = IBancorXUpgrader(registry.addressOf(ContractIds.BANCOR_X_UPGRADER)) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-624)
	State variables written after the call(s):
	- newOwner (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#626)
Reentrancy in BancorX.upgrade (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-627):
	External calls:
	- bancorXUpgrader = IBancorXUpgrader(registry.addressOf(ContractIds.BANCOR_X_UPGRADER)) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-624)
	- bancorXUpgrader.upgrade(version,_reporters) (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#626-627)
	State variables written after the call(s):
	- newOwner (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#627)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
BancorX.version should be constant (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#366-367)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
IBancorXUpgrader.upgrade (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#9-12) should be declared external
IERC20Token.name (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#47-48) should be declared external
IERC20Token.symbol (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#48-49) should be declared external
IERC20Token.decimals (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#49-50) should be declared external
IERC20Token.totalSupply (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#50-51) should be declared external
IERC20Token.balanceOf (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#51-52) should be declared external
IERC20Token.allowance (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#52-54) should be declared external
IERC20Token.transfer (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#54-55) should be declared external
IERC20Token.transferFrom (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#55-56) should be declared external
IERC20Token.approve (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#56-59) should be declared external
IWhitelist.isWhitelisted (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#65-68) should be declared external
IBancorConverter.getReturn (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#74-75) should be declared external
IBancorConverter.convert (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#75-77) should be declared external
IBancorConverter.conversionWhitelist (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#77-78) should be declared external
IBancorConverter.conversionFee (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#78) should be declared external
IBancorConverter.connectors (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#78-79) should be declared external
IBancorConverter.getConnectorBalance (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#79-81) should be declared external
IBancorConverter.claimTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#81-82) should be declared external
IBancorConverter.change (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#82-88) should be declared external
IContractRegistry.addressOf (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#93-94) should be declared external
IContractRegistry.getAddress (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#97-102) should be declared external
IOwned.owner (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#106-110) should be declared external
ITokenHolder.withdrawTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#298-299) should be declared external
TokenHolder.withdrawTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#330-338) should be declared external
ISmartToken.disableTransfers (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#343-344) should be declared external
ISmartToken.issue (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#344) should be declared external
ISmartToken.destroy (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#344-345) should be declared external
BancorX.setMaxLockLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#502-508) should be declared external
BancorX.setMaxReleaseLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#511-517) should be declared external
BancorX.setMinLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#519-524) should be declared external
BancorX.setLimitIncPerBlock (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#527-529) should be declared external
BancorX.setMinRequiredReports (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#534-538) should be declared external
BancorX.setReporter (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#547-552) should be declared external
BancorX.enableXTransfers (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#556-558) should be declared external
BancorX.enableReporting (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#563-566) should be declared external
BancorX.disableRegistryUpdate (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#573-575) should be declared external
BancorX.setBNTConverterAddress (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#578-581) should be declared external
BancorX.updateRegistry (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#583-603) should be declared external
BancorX.restoreRegistry (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#608-616) should be declared external
BancorX.upgrade (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622-627) should be declared external
BancorX.xTransfer (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#639-656) should be declared external
BancorX.reportTx (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#668-708) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#147) is not in mixedCase
Parameter '_x' of SafeMath.add (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#178) is not in mixedCase
Parameter '_y' of SafeMath.add (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#178) is not in mixedCase
Parameter '_x' of SafeMath.sub (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#191) is not in mixedCase
Parameter '_y' of SafeMath.sub (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#191) is not in mixedCase
Parameter '_x' of SafeMath.mul (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#205-206) is not in mixedCase
Parameter '_y' of SafeMath.mul (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#206-209) is not in mixedCase
Parameter '_x' of Utils.safeAdd (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#256-258) is not in mixedCase
Parameter '_y' of Utils.safeAdd (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#258) is not in mixedCase
Parameter '_x' of Utils.safeSub (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#272) is not in mixedCase
Parameter '_y' of Utils.safeSub (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#272-274) is not in mixedCase
Parameter '_x' of Utils.safeMul (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#288-289) is not in mixedCase
Parameter '_y' of Utils.safeMul (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#289) is not in mixedCase
Parameter '_token' of TokenHolder.withdrawTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#332) is not in mixedCase
Parameter '_to' of TokenHolder.withdrawTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#332) is not in mixedCase
Parameter '_amount' of TokenHolder.withdrawTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#332-333) is not in mixedCase
Parameter '_maxLockLimit' of BancorX. (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#445-446) is not in mixedCase
Parameter '_maxReleaseLimit' of BancorX. (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#446) is not in mixedCase
Parameter '_minLimit' of BancorX. (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#448) is not in mixedCase
Parameter '_limitIncPerBlock' of BancorX. (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#448) is not in mixedCase
Parameter '_minRequiredReports' of BancorX. (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#448-449) is not in mixedCase
Parameter '_registry' of BancorX. (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#449) is not in mixedCase
Parameter '_maxLockLimit' of BancorX.setMaxLockLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#502-506) is not in mixedCase
Parameter '_maxReleaseLimit' of BancorX.setMaxReleaseLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#511-515) is not in mixedCase
Parameter '_minLimit' of BancorX.setMinLimit (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#520) is not in mixedCase
Parameter '_limitIncPerBlock' of BancorX.setLimitIncPerBlock (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#527) is not in mixedCase
Parameter '_minRequiredReports' of BancorX.setMinRequiredReports (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#536) is not in mixedCase
Parameter '_reporter' of BancorX.setReporter (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#547) is not in mixedCase
Parameter '_active' of BancorX.setReporter (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#547) is not in mixedCase
Parameter '_enable' of BancorX.enableXTransfers (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#556) is not in mixedCase
Parameter '_enable' of BancorX.enableReporting (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#563-564) is not in mixedCase
Parameter '_disable' of BancorX.disableRegistryUpdate (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#574) is not in mixedCase
Parameter '_reporters' of BancorX.upgrade (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#622) is not in mixedCase
Parameter '_toBlockchain' of BancorX.xTransfer (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#639) is not in mixedCase
Parameter '_to' of BancorX.xTransfer (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#639) is not in mixedCase
Parameter '_amount' of BancorX.xTransfer (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#639) is not in mixedCase
Parameter '_fromBlockchain' of BancorX.reportTx (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#668-669) is not in mixedCase
Parameter '_txId' of BancorX.reportTx (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#669-670) is not in mixedCase
Parameter '_to' of BancorX.reportTx (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#670) is not in mixedCase
Parameter '_amount' of BancorX.reportTx (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#670-671) is not in mixedCase
Parameter '_amount' of BancorX.lockTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol#741) is not in mixedCase
Parameter '_to' of BancorX.releaseTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol) is not in mixedCase
Parameter '_amount' of BancorX.releaseTokens (/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x98a741591049b6a92d7266a0668a26aaf61a1b5e.sol analyzed (14 contracts), 94 result(s) found