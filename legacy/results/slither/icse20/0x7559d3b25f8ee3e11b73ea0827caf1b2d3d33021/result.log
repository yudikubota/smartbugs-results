INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:75:3: Warning: Modifiers of functions without implementation are ignored.
  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool);
  ^----------------------------------------------------------------------------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:77:3: Warning: Modifiers of functions without implementation are ignored.
  function finishMinting() onlyOwner public returns (bool);
  ^-------------------------------------------------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:151:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function CABCoinICO(uint256 sBlock) public {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:172:3: Warning: Use of the "var" keyword is deprecated.
		var maxEth = maxAv.div(price);
		^--------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:316:6: Warning: Use of the "var" keyword is deprecated.
	    var sumToReturn = ethGiven[sender];
	    ^-------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Constants {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:229:4: Warning: Invoking events without "emit" prefix is deprecated.
	  Buy(owner,msg.value);
	  ^------------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:249:8: Warning: Invoking events without "emit" prefix is deprecated.
		  			AmountToLittle();
		  			^--------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:301:4: Warning: Invoking events without "emit" prefix is deprecated.
	  SendAllFunds();
	  ^------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:304:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		devTeam.recieveFunds.value(this.balance)();
		                           ^----------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:314:4: Warning: Invoking events without "emit" prefix is deprecated.
	  Refund(sender,ethGiven[sender]);
	  ^-----------------------------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:322:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
	    if(sumToReturn>this.balance){
	                   ^----------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:323:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
	    	sender.transfer(this.balance);
	    	                ^----------^
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:291:2: Warning: No visibility specified. Defaulting to "public". 
	function IsPreICO() returns(bool){
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:25:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:31:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:38:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:43:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) constant public returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol:291:2: Warning: Function state mutability can be restricted to view
	function IsPreICO() returns(bool){
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
CABCoinICO.sendAllFunds (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#314-319) sends eth to arbitrary user
	Dangerous calls:
	- devTeam.recieveFunds.value(this.balance)() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#317-318)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
CABCoinI.owner (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#57) is never initialized. It is used in:
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Reentrancy in CABCoinICO.refund (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#319-336):
	External calls:
	- isAfterICO() && coin.totalSupply() < minimumGoal (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#322-336)
	State variables written after the call(s):
	- ethGiven (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#326-328)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
CABCoinICO.buy (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#236-304) does not use the value returned by external calls:
	-coin.finishMinting() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#246)
	-coin.finishMinting() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#272-273)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in CABCoinICO.buy (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#236-304):
	External calls:
	- tokensAmountPerEth = getCabCoinsAmount() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#243)
	- tokensAvailable = coin.getMaxTokenAvaliable() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#248-250)
	- isMintedDev = coin.mint(owner,val) (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#260-262)
	- isMinted = coin.mint(devTeam,valForTeam) (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#263-267)
	State variables written after the call(s):
	- ethGiven (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#268-269)
Reentrancy in CABCoinICO.buy (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#236-304):
	External calls:
	- tokensAmountPerEth = getCabCoinsAmount() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#243)
	- tokensAvailable = coin.getMaxTokenAvaliable() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#248-250)
	State variables written after the call(s):
	- preICOHolders (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#275-276)
Reentrancy in CABCoinICO.buy (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#236-304):
	External calls:
	- tokensAmountPerEth = getCabCoinsAmount() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#243)
	- tokensAvailable = coin.getMaxTokenAvaliable() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#248-250)
	- devTeam.recieveFunds.value(msg.value.mul(PRE_ICO_RISK_PERCENTAGE).div(100))() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#276-280)
	- isMintedDev = coin.mint(owner,val) (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#282-289)
	- isMinted = coin.mint(devTeam,valForTeam) (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#291-292)
	External calls sending eth:
	- devTeam.recieveFunds.value(msg.value.mul(PRE_ICO_RISK_PERCENTAGE).div(100))() (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#276-280)
	State variables written after the call(s):
	- ethGiven (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#292-295)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CABCoinI.mintingFinished should be constant (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#58-60)
CABCoinI.owner should be constant (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#57)
CABCoinI.totalSupply should be constant (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#57-58)
CABCoinICO.currBlock should be constant (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#121-122)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
SafeMath.mul (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#25-31) should be declared external
SafeMath.div (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#31-38) should be declared external
SafeMath.sub (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#38-43) should be declared external
SafeMath.add (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#43-51) should be declared external
DevTeamContractI.recieveFunds (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#54-56) should be declared external
CABCoinI.mint (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#75-77) should be declared external
CABCoinI.getMaxTokenAvaliable (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#77-80) should be declared external
CABCoinI.finishMinting (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#80-82) should be declared external
CABCoinICO.getAllTimes (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#124-160) should be declared external
CABCoinICO.SetContracts (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#164-172) should be declared external
CABCoinICO.getMaxEther (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#172-181) should be declared external
CABCoinICO.fallback (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#216-235) should be declared external
CABCoinICO.buy (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#236-304) should be declared external
CABCoinICO.refund (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#319-336) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Constant 'Constants.blocksByDay' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#4-5) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.coinMultiplayer' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#5-7) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.delayOfPreICO' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#12-13) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.delayOfICO1' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#13-14) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.delayOfICO2' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#14-15) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.delayOfICOEND' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#15-16) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.minimumGoal' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#16-17) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.maxTokenSupplyPreICO' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#17-18) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.maxTokenSupplyICO1' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#18-19) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.maxTokenSupplyICO2' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#19-20) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Constants.maxTokenSupplyICOEND' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#20-24) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'CABCoinICO.GetTime' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#122-124) is not in mixedCase
Function 'CABCoinICO.CABCoinICO' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#160-164) is not in mixedCase
Function 'CABCoinICO.SetContracts' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#164-172) is not in mixedCase
Function 'CABCoinICO.IsPreICO' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#304-314) is not in mixedCase
Variable 'CABCoinICO._startBlock' (/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol#91-92) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0x7559d3b25f8ee3e11b73ea0827caf1b2d3d33021.sol analyzed (5 contracts), 38 result(s) found