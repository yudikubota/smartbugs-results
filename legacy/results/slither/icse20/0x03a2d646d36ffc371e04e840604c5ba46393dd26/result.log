INFO:Slither:Compilation warnings/errors on /unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:22:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:39:13: Warning: Invoking events without "emit" prefix is deprecated.
            ChangedOwner(owner);
            ^-----------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:303:3: Warning: Invoking events without "emit" prefix is deprecated.
		Deposit(beneficiary, tokens);
		^--------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:397:3: Warning: Invoking events without "emit" prefix is deprecated.
		Withdraws(addr, diff);
		^-------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:424:4: Warning: Invoking events without "emit" prefix is deprecated.
			Deposit(a, value);
			^---------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:4:2: Warning: No visibility specified. Defaulting to "public". 
	function transferFrom(address from, address to, uint amount) returns(bool);
	^-------------------------------------------------------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:5:2: Warning: No visibility specified. Defaulting to "public". 
	function transfer(address to, uint amount) returns(bool);
	^-------------------------------------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:6:2: Warning: No visibility specified. Defaulting to "public". 
	function balanceOf(address addr) constant returns(uint);
	^------------------------------------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:22:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function owner() returns (address);
    ^---------------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function changeOwner(address);
    ^----------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function acceptOwnership();
    ^-------------------------^
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:163:2: Warning: No visibility specified. Defaulting to "public". 
	function() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:170:2: Warning: No visibility specified. Defaulting to "public". 
	function nullify() onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:182:2: Warning: No visibility specified. Defaulting to "public". 
	function init(uint _periods, uint _t0special) onlyOwner notInitialized {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:188:2: Warning: No visibility specified. Defaulting to "public". 
	function finalizeInit() onlyOwner notInitialized {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:192:2: Warning: No visibility specified. Defaulting to "public". 
	function setToken(address tok) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:200:2: Warning: No visibility specified. Defaulting to "public". 
	function lock() onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:209:2: Warning: No visibility specified. Defaulting to "public". 
	function start(uint _startBlockTimestamp) onlyOwner initialized preStart {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:220:2: Warning: No visibility specified. Defaulting to "public". 
	function isStarted() constant returns(bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:231:2: Warning: No visibility specified. Defaulting to "public". 
	function refundTokens(address addr, uint amount) onlyOwner preLock {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:243:2: Warning: No visibility specified. Defaulting to "public". 
	function updateTotal() onlyOwner postLock {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:266:2: Warning: No visibility specified. Defaulting to "public". 
	function periodAt(uint _blockTimestamp) constant returns(uint) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:286:2: Warning: No visibility specified. Defaulting to "public". 
	function period() constant returns(uint) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:294:2: Warning: No visibility specified. Defaulting to "public". 
	function deposit(uint tokens) onlyOwner notNullified {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:299:2: Warning: No visibility specified. Defaulting to "public". 
	function depositTo(address beneficiary, uint tokens) onlyOwner preLock notNullified {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:307:2: Warning: No visibility specified. Defaulting to "public". 
	function bulkDepositTo(uint256[] bits) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:318:2: Warning: No visibility specified. Defaulting to "public". 
	function withdraw() notNullified returns(bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:328:2: Warning: No visibility specified. Defaulting to "public". 
	function availableForWithdrawalAt(uint256 blockTimestamp) constant returns (uint256) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:345:2: Warning: No visibility specified. Defaulting to "public". 
	function _withdrawTo(uint _deposit, uint _withdrawn, uint _blockTimestamp, uint _total) constant returns (uint) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:378:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawTo(address addr) postStart notNullified returns (bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:402:2: Warning: No visibility specified. Defaulting to "public". 
	function bulkWithdraw(address[] addrs) notNullified {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:413:2: Warning: No visibility specified. Defaulting to "public". 
	function multiMint(uint nonce, uint256[] bits) onlyOwner preLock {
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Savings.withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#392-412) uses a dangerous strict equality:
	- diff == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Savings.withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#392-412):
	External calls:
	- require(bool)(token.transfer(addr,diff)) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#408-410)
	State variables written after the call(s):
	- withdrawn (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#410)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Savings.refundTokens (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#238-239) does not use the value returned by external calls:
	-token.transfer(addr,amount) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#239)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Savings.depositTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#306-316):
	External calls:
	- require(bool)(token.transferFrom(msg.sender,this,tokens)) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#309-310)
	State variables written after the call(s):
	- deposited (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#310-311)
	- totalfv (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#311-312)
Reentrancy in Savings.start (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#213-221):
	External calls:
	- tokenBalance = token.balanceOf(this) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#218-220)
	State variables written after the call(s):
	- remainder (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#221)
	- total (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#220)
Reentrancy in Savings.updateTotal (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#253-257):
	External calls:
	- current = token.balanceOf(this) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#253-254)
	State variables written after the call(s):
	- remainder (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#256-257)
	- total (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#256)
Reentrancy in Savings.withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#392-412):
	External calls:
	- require(bool)(token.transfer(addr,diff)) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#408-410)
	State variables written after the call(s):
	- remainder (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#410-411)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Savings.updateTotal (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#253-257) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(current >= remainder) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#254)
Savings.periodAt (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#275-293) uses timestamp for comparisons
	Dangerous comparisons:
	- p > periods (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#292)
	- startBlockTimestamp > _blockTimestamp (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#281-285)
Savings._withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#351-389) uses timestamp for comparisons
	Dangerous comparisons:
	- withdrawable > _withdrawn (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#382-386)
Savings.withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#392-412) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(token.transfer(addr,diff)) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#408-410)
	- diff == 0 (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#402-403)
	- require(bool)((diff + _w) <= ((_d * total) / totalfv)) (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#407-408)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Token.transferFrom (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#4-5) should be declared external
Token.transfer (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#5-6) should be declared external
Token.balanceOf (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#6-9) should be declared external
IOwned.owner (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#46-47) should be declared external
IOwned.changeOwner (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#47-51) should be declared external
IOwned.acceptOwnership (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#51) should be declared external
Savings.fallback (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#174-175) should be declared external
Savings.nullify (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#176-177) should be declared external
Savings.init (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#188-197) should be declared external
Savings.finalizeInit (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#197-200) should be declared external
Savings.setToken (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#200-205) should be declared external
Savings.lock (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#207-209) should be declared external
Savings.start (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#213-221) should be declared external
Savings.isStarted (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#225-229) should be declared external
Savings.refundTokens (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#238-239) should be declared external
Savings.updateTotal (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#253-257) should be declared external
Savings.period (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#295-299) should be declared external
Savings.deposit (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#302-306) should be declared external
Savings.bulkDepositTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#317-324) should be declared external
Savings.withdraw (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#326-328) should be declared external
Savings.bulkWithdraw (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#413-417) should be declared external
Savings.multiMint (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol:
	- pragma solidity>=0.4.10 (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#23-26) is not in mixedCase
Parameter '_newOwner' of Owned.changeOwner (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#31-32) is not in mixedCase
Parameter '' of IOwned.changeOwner (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#50-51) is not in mixedCase
Parameter '_periods' of Savings.init (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#188-189) is not in mixedCase
Parameter '_t0special' of Savings.init (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#189-192) is not in mixedCase
Parameter '_startBlockTimestamp' of Savings.start (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#214-217) is not in mixedCase
Parameter '_blockTimestamp' of Savings.periodAt (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#275-276) is not in mixedCase
Function 'Savings._withdrawTo' (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#351-389) is not in mixedCase
Parameter '_deposit' of Savings._withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#351-353) is not in mixedCase
Parameter '_withdrawn' of Savings._withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#353) is not in mixedCase
Parameter '_blockTimestamp' of Savings._withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#353) is not in mixedCase
Parameter '_total' of Savings._withdrawTo (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#353) is not in mixedCase
Constant 'Savings.intervalSecs' (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#92-97) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Savings.precision' (/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol#97-98) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x03a2d646d36ffc371e04e840604c5ba46393dd26.sol analyzed (4 contracts), 48 result(s) found