INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:46:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:59:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Controlled() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:93:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:98:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:156:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != dao) throw;
                               ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:172:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isStarted) throw;
                        ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:176:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isFinalized) throw;
                         ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:180:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!finalizeSet) throw;
                          ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:183:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CrowdSalePreICO(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:190:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isStarted) throw;
                       ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:200:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (totalDepositedEthers >= hardCapAmount) throw;
                                                   ^---^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:44:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:184:43: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xF961Eb0aCF690bd8F92C5f9C486f3b30848d87AA'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        tokenFactory = SphereTokenFactory(0xf961eb0acf690bd8f92c5f9c486f3b30848d87aa);
                                          ^----------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:209:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            msg.sender.send(excess);
            ^---------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:215:13: Warning: Return value of low-level calls not used.
            dao.call.gas(150000).value(totalDepositedEthers * 2 / 10)();
            ^---------------------------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:216:45: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            multiSig.call.gas(150000).value(this.balance)();
                                            ^----------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:216:13: Warning: Return value of low-level calls not used.
            multiSig.call.gas(150000).value(this.balance)();
            ^---------------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:223:41: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        multiSig.call.gas(150000).value(this.balance)();
                                        ^----------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:223:9: Warning: Return value of low-level calls not used.
        multiSig.call.gas(150000).value(this.balance)();
        ^---------------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:59:5: Warning: No visibility specified. Defaulting to "public". 
    function Controlled() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function changeOwner(address _newController) onlyController {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function acceptOwnership() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:78:2: Warning: No visibility specified. Defaulting to "public". 
	function mint(address target, uint amount);
	^-----------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function setPricing() onlyController{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:183:5: Warning: No visibility specified. Defaulting to "public". 
    function CrowdSalePreICO(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:189:5: Warning: No visibility specified. Defaulting to "public". 
    function startCrowdsale() onlyController {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:194:5: Warning: No visibility specified. Defaulting to "public". 
    function setDAOAndMultiSig(address _dao, address _multiSig) onlyController{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:199:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable stopInEmergency onlyStarted notFinalized{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:213:5: Warning: No visibility specified. Defaulting to "public". 
    function finalize() payable onlyController afterFinalizeSet{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:220:5: Warning: No visibility specified. Defaulting to "public". 
    function emergency() payable onlyStarted onlyInEmergency onlyController afterFinalizeSet{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:28:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:32:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:36:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:40:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:44:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:139:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                numTokens = safeAdd(numTokens, ethersToDepositInTier / priceList[i].costPerToken);
                            ^-------------------------------------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:140:17: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                priceList[i].ethersDepositedInTier = safeAdd(ethersToDepositInTier, priceList[i].ethersDepositedInTier);
                ^--------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:140:54: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                priceList[i].ethersDepositedInTier = safeAdd(ethersToDepositInTier, priceList[i].ethersDepositedInTier);
                                                     ^----------------------------------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:141:17: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                totalDepositedEthers = safeAdd(ethersToDepositInTier, totalDepositedEthers);
                ^------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:141:40: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                totalDepositedEthers = safeAdd(ethersToDepositInTier, totalDepositedEthers);
                                       ^--------------------------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:142:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                value = safeSub(value, ethersToDepositInTier);
                        ^-----------------------------------^
/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:147:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        currentTierIndex = tierIndex;
        ^--------------^

INFO:Detectors:[93m
PricingMechanism.allocateTokensInternally (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#134-161) is declared view but changes state variables:
	- PricingMechanism.currentTierIndex
	- PricingMechanism.priceList
	- PricingMechanism.totalDepositedEthers
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#45-52) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in CrowdSalePreICO.finalize (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#215-225):
	External calls:
	- dao.call.gas(150000).value(totalDepositedEthers * 2 / 10)() (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#220-221)
	- multiSig.call.gas(150000).value(this.balance)() (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#221-223)
	State variables written after the call(s):
	- isFinalized (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#223)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdSalePreICO.duration should be constant (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#172-173)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#52:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#163:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#196-197:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#204-205:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#181-182:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#184:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#186:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Controlled.changeOwner (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#66-70) should be declared external
Controlled.acceptOwnership (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#70-78) should be declared external
SphereTokenFactory.mint (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#83) should be declared external
CrowdSalePreICO.startCrowdsale (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#194-199) should be declared external
CrowdSalePreICO.setDAOAndMultiSig (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#199-202) should be declared external
CrowdSalePreICO.fallback (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#202-215) should be declared external
CrowdSalePreICO.finalize (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#215-225) should be declared external
CrowdSalePreICO.emergency (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol:
	- pragma solidity^0.4.13 (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in CrowdSalePreICO.finalize (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#215-225):
	-dao.call.gas(150000).value(totalDepositedEthers * 2 / 10)() /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#220-221
	-multiSig.call.gas(150000).value(this.balance)() /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#221-223
Low level call in CrowdSalePreICO.emergency (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol):
	-multiSig.call.gas(150000).value(this.balance)() /unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Controlled.Controlled' (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#61-65) is not in mixedCase
Parameter '_newController' of Controlled.changeOwner (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#66-67) is not in mixedCase
Function 'CrowdSalePreICO.CrowdSalePreICO' (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#187-194) is not in mixedCase
Parameter '_dao' of CrowdSalePreICO.setDAOAndMultiSig (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#199-200) is not in mixedCase
Parameter '_multiSig' of CrowdSalePreICO.setDAOAndMultiSig (/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol#200) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0xb33812b316e0c454039a3b48d09dfe97d11683cc.sol analyzed (7 contracts), 29 result(s) found