INFO:Slither:Compilation warnings/errors on /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:29:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (records[node].owner != msg.sender) throw;
                                               ^---^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:36:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:80:9: Warning: Use of the "var" keyword is deprecated.
        var subnode = sha3(node, label);
        ^---------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:172:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SubdomainRegistrar(ENS _ens) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:203:5: Warning: Use of the "var" keyword is deprecated.
    var label = keccak256(name);
    ^-------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:214:5: Warning: Use of the "var" keyword is deprecated.
    var label = keccak256(name);
    ^-------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:215:5: Warning: Use of the "var" keyword is deprecated.
    var node = keccak256(TLD_NODE, label);
    ^------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:226:5: Warning: Use of the "var" keyword is deprecated.
    var label = keccak256(name);
    ^-------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:227:5: Warning: Use of the "var" keyword is deprecated.
    var domain = domains[label];
    ^--------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:247:5: Warning: Use of the "var" keyword is deprecated.
    var label = keccak256(name);
    ^-------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:248:5: Warning: Use of the "var" keyword is deprecated.
    var domain = domains[label];
    ^--------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:268:5: Warning: Use of the "var" keyword is deprecated.
    var node = keccak256(TLD_NODE, label);
    ^------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:269:5: Warning: Use of the "var" keyword is deprecated.
    var subnode = keccak256(node, keccak256(subdomain));
    ^---------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:275:5: Warning: Use of the "var" keyword is deprecated.
    var data = domains[label];
    ^------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:287:5: Warning: Use of the "var" keyword is deprecated.
    var domainNode = keccak256(TLD_NODE, label);
    ^------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:288:5: Warning: Use of the "var" keyword is deprecated.
    var subdomainLabel = keccak256(subdomain);
    ^----------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:293:5: Warning: Use of the "var" keyword is deprecated.
    var domain = domains[label];
    ^--------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:307:5: Warning: Use of the "var" keyword is deprecated.
    var total = domain.price;
    ^-------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:309:7: Warning: Use of the "var" keyword is deprecated.
      var referralFee = (domain.price * domain.referralFeePPM) / 1000000;
      ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:332:5: Warning: Use of the "var" keyword is deprecated.
    var subnode = keccak256(node, label);
    ^---------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:67:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner) only_owner(node) {
                                    ^-----------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:43:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:79:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
                                                          ^-----------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:43:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:90:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver) only_owner(node) {
                                       ^--------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:50:5: The shadowed declaration is here:
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:100:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
                                  ^--------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:57:5: The shadowed declaration is here:
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:112:34: Warning: This declaration shadows an existing declaration.
  function setAddr(bytes32 node, address addr) public;
                                 ^----------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:111:3: The shadowed declaration is here:
  function addr(bytes32 node) public view returns (address);
  ^--------------------------------------------------------^

/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:37:17: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        records[0].owner = msg.sender;
                ^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:68:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(node, owner);
        ^-------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:80:23: Warning: "sha3" has been deprecated in favour of "keccak256"
        var subnode = sha3(node, label);
                      ^---------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:80:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        var subnode = sha3(node, label);
                      ^---------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewOwner(node, label, owner);
        ^--------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:91:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewResolver(node, resolver);
        ^-------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:101:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewTTL(node, ttl);
        ^---------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:185:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      ret = ens.owner(keccak256(TLD_NODE, label));
                      ^------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:202:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
  function transfer(string name, address newOwner) public owner_only(keccak256(name)) {
                                                                     ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:202:70: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
  function transfer(string name, address newOwner) public owner_only(keccak256(name)) {
                                                                     ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:203:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:203:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:204:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    OwnerChanged(keccak256(name), domains[label].owner, newOwner);
                 ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:204:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    OwnerChanged(keccak256(name), domains[label].owner, newOwner);
                 ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:204:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnerChanged(keccak256(name), domains[label].owner, newOwner);
    ^-----------------------------------------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:213:73: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
  function setResolver(string name, address resolver) public owner_only(keccak256(name)) {
                                                                        ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:213:73: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
  function setResolver(string name, address resolver) public owner_only(keccak256(name)) {
                                                                        ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:214:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:214:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:215:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var node = keccak256(TLD_NODE, label);
               ^------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:225:92: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
  function configureDomain(string name, uint price, uint referralFeePPM) public owner_only(keccak256(name)) {
                                                                                           ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:225:92: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
  function configureDomain(string name, uint price, uint referralFeePPM) public owner_only(keccak256(name)) {
                                                                                           ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:226:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:226:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:229:8: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if(keccak256(domain.name) != label) {
       ^--------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:229:8: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if(keccak256(domain.name) != label) {
       ^--------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:238:5: Warning: Invoking events without "emit" prefix is deprecated.
    DomainConfigured(label);
    ^---------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:246:56: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
  function unlistDomain(string name) public owner_only(keccak256(name)) {
                                                       ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:246:56: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
  function unlistDomain(string name) public owner_only(keccak256(name)) {
                                                       ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:247:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:247:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    var label = keccak256(name);
                ^-------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:249:5: Warning: Invoking events without "emit" prefix is deprecated.
    DomainUnlisted(label);
    ^-------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:268:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var node = keccak256(TLD_NODE, label);
               ^------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:269:35: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var subnode = keccak256(node, keccak256(subdomain));
                                  ^------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:269:35: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    var subnode = keccak256(node, keccak256(subdomain));
                                  ^------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:269:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var subnode = keccak256(node, keccak256(subdomain));
                  ^-----------------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:287:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var domainNode = keccak256(TLD_NODE, label);
                     ^------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:288:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var subdomainLabel = keccak256(subdomain);
                         ^------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:288:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    var subdomainLabel = keccak256(subdomain);
                         ^------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:291:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ens.owner(keccak256(domainNode, subdomainLabel)) == address(0));
                      ^-----------------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:296:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(keccak256(domain.name) == label);
            ^--------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:296:13: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    require(keccak256(domain.name) == label);
            ^--------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:325:5: Warning: Invoking events without "emit" prefix is deprecated.
    NewRegistration(label, subdomain, subdomainOwner, referrer, domain.price);
    ^-----------------------------------------------------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:332:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var subnode = keccak256(node, label);
                  ^--------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(bytes32 node, address owner) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function setResolver(bytes32 node, address resolver) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:123:3: Warning: No visibility specified. Defaulting to "public". 
  function query(bytes32 label, string subdomain) view returns(string domain, uint signupFee, uint rent, uint referralFeePPM);
  ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:267:3: Warning: No visibility specified. Defaulting to "public". 
  function query(bytes32 label, string subdomain) view returns(string domain, uint price, uint rent, uint referralFeePPM) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:343:3: Warning: No visibility specified. Defaulting to "public". 
  function supportsInterface(bytes4 interfaceID) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:350:20: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function rentDue(bytes32 label, string subdomain) public view returns(uint timestamp) {
                   ^-----------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:350:35: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function rentDue(bytes32 label, string subdomain) public view returns(uint timestamp) {
                                  ^--------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:354:20: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function payRent(bytes32 label, string subdomain) public payable {
                   ^-----------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:354:35: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function payRent(bytes32 label, string subdomain) public payable {
                                  ^--------------^
/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:343:3: Warning: Function state mutability can be restricted to pure
  function supportsInterface(bytes4 interfaceID) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
SubdomainRegistrar.register (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#291-336) sends eth to arbitrary user
	Dangerous calls:
	- referrer.transfer(referralFee) (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#323)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Reentrancy in SubdomainRegistrar.unlistDomain (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#254-262):
	External calls:
	- domain.owner = owner(label) (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#261)
	State variables written after the call(s):
	- domains (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#261)
	- domains (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#261-262)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ENS.setOwner.owner (local variable @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#69) shadows:
	- ENS.owner (function @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#43-48)
ENS.setSubnodeOwner.owner (local variable @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#81) shadows:
	- ENS.owner (function @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#43-48)
ENS.setResolver.resolver (local variable @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#92) shadows:
	- ENS.resolver (function @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#50-55)
ENS.setTTL.ttl (local variable @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#105-107) shadows:
	- ENS.ttl (function @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#58-62)
Resolver.setAddr.addr (local variable @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#116) shadows:
	- Resolver.addr (function @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#112-116)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#82:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#33-34:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ENS.owner (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#43-48) should be declared external
ENS.resolver (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#50-55) should be declared external
ENS.ttl (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#58-62) should be declared external
ENS.setOwner (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#68-73) should be declared external
ENS.setSubnodeOwner (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#79-87) should be declared external
ENS.setResolver (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#91-97) should be declared external
ENS.setTTL (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#102-110) should be declared external
Resolver.supportsInterface (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#111-112) should be declared external
Resolver.addr (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#112-116) should be declared external
Resolver.setAddr (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#116) should be declared external
SubdomainRegistrar.query (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#272-284) should be declared external
RegistrarInterface.query (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#123-126) should be declared external
RegistrarInterface.register (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#126-127) should be declared external
SubdomainRegistrar.register (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#291-336) should be declared external
RegistrarInterface.rentDue (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#127-130) should be declared external
SubdomainRegistrar.rentDue (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol) should be declared external
SubdomainRegistrar.payRent (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol) should be declared external
RegistrarInterface.payRent (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#130-132) should be declared external
SubdomainRegistrar.transfer (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#205-213) should be declared external
SubdomainRegistrar.setResolver (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#219-223) should be declared external
SubdomainRegistrar.configureDomain (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#230-248) should be declared external
SubdomainRegistrar.unlistDomain (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#254-262) should be declared external
SubdomainRegistrar.supportsInterface (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#351-357) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol:
	- pragma solidity^0.4.4 (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ENS.ENS' (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#37-41) is not in mixedCase
Modifier 'ENS.only_owner' (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#28-34) is not in mixedCase
Function 'SubdomainRegistrar.SubdomainRegistrar' (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#178-179) is not in mixedCase
Parameter '_ens' of SubdomainRegistrar.SubdomainRegistrar (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#178) is not in mixedCase
Modifier 'SubdomainRegistrar.owner_only' (/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol#198-200) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/6/0xfa6512358d241b636edf5f8ccaaf86676dec21a7.sol analyzed (4 contracts), 38 result(s) found