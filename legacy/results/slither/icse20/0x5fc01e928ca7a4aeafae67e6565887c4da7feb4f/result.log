INFO:Slither:Compilation warnings/errors on /unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:34:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:55:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function QuantumLocksmith(bytes32 ownerChallenge) public payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:8:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = sha256(key);  
               ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:8:16: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        hash = sha256(key);  
               ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:10:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            hash = sha256(hash);  
                   ^----------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:10:20: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            hash = sha256(hash);  
                   ^----------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:16:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        challenge = sha256(sha256(key),caller);
                           ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:16:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        challenge = sha256(sha256(key),caller);
                           ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:16:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        challenge = sha256(sha256(key),caller);
                    ^------------------------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:21:35: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        challenge = sha256(sha256(sha256(key),caller),receiver);
                                  ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:21:35: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        challenge = sha256(sha256(sha256(key),caller),receiver);
                                  ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:21:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        challenge = sha256(sha256(sha256(key),caller),receiver);
                           ^------------------------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:21:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        challenge = sha256(sha256(sha256(key),caller),receiver);
                    ^-----------------------------------------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:79:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 k = sha256(sha256(key),msg.sender);
                           ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:79:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 k = sha256(sha256(key),msg.sender);
                           ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:79:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 k = sha256(sha256(key),msg.sender);
                    ^----------------------------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:83:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            k = sha256(k,receiver);
                ^----------------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:112:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes32 k = sha256(sha256(key),msg.sender);
                               ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:112:32: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            bytes32 k = sha256(sha256(key),msg.sender);
                               ^---------^
/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:112:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes32 k = sha256(sha256(key),msg.sender);
                        ^----------------------------^

INFO:Detectors:[92m
helper.derive_sha256 (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#5-14) should be declared external
helper.blind_sha256 (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#14-19) should be declared external
helper.double_blind_sha256 (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#19-25) should be declared external
QuantumLocksmith.lockDeposit (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#62-75) should be declared external
QuantumLocksmith.unlockDeposit (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#76-99) should be declared external
QuantumLocksmith.depositToLock (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#100-108) should be declared external
QuantumLocksmith.fallback (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#110-112) should be declared external
QuantumLocksmith.kill (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#112-117) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol:
	- pragma solidity^0.4.18 (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'helper' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#3-26) is not in CapWords
Function 'helper.derive_sha256' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#5-14) is not in mixedCase
Function 'helper.blind_sha256' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#14-19) is not in mixedCase
Function 'helper.double_blind_sha256' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#19-25) is not in mixedCase
Contract 'owned' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#26-40) is not in CapWords
Struct 'QuantumLocksmith.lock' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#45-53) is not in CapWords
Function 'QuantumLocksmith.QuantumLocksmith' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#55-62) is not in mixedCase
Parameter '_protocol' of QuantumLocksmith.lockDeposit (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#63-64) is not in mixedCase
Variable 'QuantumLocksmith.m_pending' (/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol#43-44) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/37/0x5fc01e928ca7a4aeafae67e6565887c4da7feb4f.sol analyzed (3 contracts), 18 result(s) found