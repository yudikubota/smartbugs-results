INFO:Slither:Compilation warnings/errors on /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:18:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Own() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:23:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:39:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:46:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:81:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:85:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:91:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:105:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:125:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:133:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:149:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Token() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:210:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if ((now < startTime) || (now > endTime )) throw;
		                                           ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:215:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if ((refundsOpen != true )) throw;
		                            ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:224:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function Crowdsale(address _TRIBEAddress, address _to) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:237:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (startTime != 0) throw; // Crowdsale was already started
		                    ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:245:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value < MIN_INVEST_ETHER) throw; // Do not accept investment if the amount is lower than the minimum allowed investment
		                                  ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:248:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (coinToSend.add(coinSentToEther) > MAX_CAP) throw;	
		                                               ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:276:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < endTime)  throw; // If Crowdsale still running
                            ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:279:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!multisigEther.send(this.balance)) throw; // Move the remaining Ether to the multisig address
		                                       ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:293:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!multisigEther.send(this.balance)) throw; //Transfer to team multisig wallet
                                           ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:303:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (addr == address(0)) throw;
		                        ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:327:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value != backers[msg.sender].coinSent) throw; // compare value from backer balance
		                                            ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:376:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract ERC20Basic {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:374:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:250:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		Backer backer = backers[beneficiary];
		^-----------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:84:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (this.balance < payment) {
        ^----------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:93:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogRefundETH(payee,payment);
    ^-------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:113:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:129:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:135:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:158:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, 0x0, _value);
    ^-------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:260:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogCoinsEmited(msg.sender ,coinToSend);
		^------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:261:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogReceivedETH(beneficiary, etherReceived); 
		^----------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:279:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (!multisigEther.send(this.balance)) throw; // Move the remaining Ether to the multisig address
		                        ^----------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:293:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (!multisigEther.send(this.balance)) throw; //Transfer to team multisig wallet
                            ^----------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:3:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:4:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value);
  ^----------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:9:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value);
  ^----------------------------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:11:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value);
  ^--------------------------------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:18:5: Warning: No visibility specified. Defaulting to "public". 
    function Own() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:76:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawPayments() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:110:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:116:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:124:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:138:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:149:3: Warning: No visibility specified. Defaulting to "public". 
  function Token() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:155:3: Warning: No visibility specified. Defaulting to "public". 
  function burner(uint _value) onlyOwner returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:224:2: Warning: No visibility specified. Defaulting to "public". 
	function Crowdsale(address _TRIBEAddress, address _to) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:230:2: Warning: No visibility specified. Defaulting to "public". 
	function() stopInEmergency respectTimeFrame payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:236:2: Warning: No visibility specified. Defaulting to "public". 
	function start() onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:292:2: Warning: No visibility specified. Defaulting to "public". 
	function drain() onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:296:3: Warning: No visibility specified. Defaulting to "public". 
  function coinDrain() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:267:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		if (now < startTime.add(7 days)) return amount.add(amount.div(5));   // bonus 20%
		          ^-------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:267:54: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		if (now < startTime.add(7 days)) return amount.add(amount.div(5));   // bonus 20%
		                                                   ^-----------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:267:43: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		if (now < startTime.add(7 days)) return amount.add(amount.div(5));   // bonus 20%
		                                        ^-----------------------^
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:362:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:365:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:368:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:371:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:374:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ERC20Basic (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#1-8) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#4-5)
ERC20 (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#8-15) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#10-11)
	-approve (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#11-12)
BasicToken (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#101-124) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#111-121)
StandardToken (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#124-146) has incorrect ERC20 function interface(s):
	-transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#125-134)
	-approve (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#134-141)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.receiveETH (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#247-272):
	External calls:
	- coin.transfer(beneficiary,coinToSend) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#256)
	State variables written after the call(s):
	- backers (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#256-257)
	- backers (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#257-259)
	- coinSentToEther (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#266-267)
Reentrancy in Crowdsale.refund (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#332-353):
	External calls:
	- coin.transferFrom(msg.sender,address(this),_value) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#342-343)
	State variables written after the call(s):
	- backers (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#347-348)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.finalize (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#279-297):
	External calls:
	- remains = coin.balanceOf(this) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#290-292)
	External calls sending eth:
	- ! multisigEther.send(this.balance) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#285-290)
	State variables written after the call(s):
	- coinToBurn (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#293)
Reentrancy in Crowdsale.finalize (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#279-297):
	External calls:
	- remains = coin.balanceOf(this) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#290-292)
	- coin.transfer(owner,remains) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#295-296)
	External calls sending eth:
	- ! multisigEther.send(this.balance) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#285-290)
	State variables written after the call(s):
	- crowdsaleClosed (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#296-297)
Reentrancy in Crowdsale.receiveETH (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#247-272):
	External calls:
	- coin.transfer(beneficiary,coinToSend) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#256)
	State variables written after the call(s):
	- etherReceived (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#261-265)
Reentrancy in Crowdsale.refund (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#332-353):
	External calls:
	- coin.transferFrom(msg.sender,address(this),_value) (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#342-343)
	State variables written after the call(s):
	- payments (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#350-351)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#25-27:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#44:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#51:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#91-92:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#98-99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#245:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#254:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#284:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#288-290:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#302:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#317:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#335:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#223:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#224-225:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#3-4) should be declared external
BasicToken.balanceOf (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#121-124) should be declared external
ERC20Basic.transfer (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#4-5) should be declared external
BasicToken.transfer (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#111-121) should be declared external
StandardToken.allowance (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#143-146) should be declared external
ERC20.allowance (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#9-10) should be declared external
ERC20.transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#10-11) should be declared external
StandardToken.transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#125-134) should be declared external
StandardToken.approve (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#134-141) should be declared external
ERC20.approve (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#11-12) should be declared external
Own.transferOwnership (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#27-35) should be declared external
Puller.withdrawPayments (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#78-101) should be declared external
Token.burner (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#157-171) should be declared external
Crowdsale.fallback (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#239-243) should be declared external
Crowdsale.start (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#244-247) should be declared external
Crowdsale.finalize (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#279-297) should be declared external
Crowdsale.drain (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#301-303) should be declared external
Crowdsale.coinDrain (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#304-312) should be declared external
Crowdsale.changeMultisig (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#313-321) should be declared external
Crowdsale.changeTribeOwner (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#321-322) should be declared external
Crowdsale.setRefundState (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#322-323) should be declared external
Crowdsale.refund (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#332-353) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Own.Own' (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#19-22) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#121) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#111-112) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#112) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#143) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#143-144) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#126) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#126) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#126) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#134-135) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#135) is not in mixedCase
Function 'Token.Token' (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#152-156) is not in mixedCase
Parameter '_value' of Token.burner (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#158) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#231-237) is not in mixedCase
Parameter '_TRIBEAddress' of Crowdsale.Crowdsale (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#235) is not in mixedCase
Parameter '_to' of Crowdsale.Crowdsale (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#235) is not in mixedCase
Parameter '_value' of Crowdsale.refund (/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol#334) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/18/0x728e2d16369d41bf19ad50233c62347f112814cf.sol analyzed (10 contracts), 69 result(s) found