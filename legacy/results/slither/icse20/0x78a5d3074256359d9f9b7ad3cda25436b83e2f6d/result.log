INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:82:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:134:27: Warning: Use of unary + is deprecated.
            balances[to] =+ value;            
                          ^-----^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:264:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:308:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < milestones.p1) throw;
                                 ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:309:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= milestones.p6) throw;
                                  ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:310:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:313:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (getTotalValue() + msg.value > SAFETY_LIMIT) throw; 
                                                        ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:321:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!wallet.send(msg.value)) throw;
                                     ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:579:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:594:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (etherPrice == 0) throw;
                             ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:607:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(retEther)) throw;
                                            ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:656:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress == 0x0) throw;
                                           ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:690:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != virtualExchangeAddress) throw;
                                                ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:787:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ableToIssueTokens) throw;
                               ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:790:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(this) > 0) throw;
                                 ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:793:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:797:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (requestValue > PROPOSAL_FUNDS_TH * percent) throw;
                                                        ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:836:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:840:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:847:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            requestValue     >  PROPOSAL_FUNDS_TH * percent) throw;
                                                             ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:887:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:890:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:893:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= proposals[id].votindEndTS) throw;
                                              ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:896:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].voted[msg.sender]) throw;
                                             ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:929:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:930:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].submitter != msg.sender) throw;
                                                   ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:933:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < proposals[id].votindEndTS) throw;
                                             ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:937:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:941:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].votesObjecting  > objectionThreshold) throw;
                                                                ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:978:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1001:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1006:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (eventInfo.getEventEnd() + 12 weeks)) throw;
                                                        ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1011:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            lastImpeachmentProposal.votindEndTS +  2 weeks > now) throw;
                                                                  ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1033:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.newExecutive == 0x0) throw;
                                                         ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1037:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1040:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.voted[msg.sender]) throw;
                                                       ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1043:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.votindEndTS + 2 weeks <= now) throw;
                                                                  ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1157:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1171:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyBeforeEnd() { if (now  >=  eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1172:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterEnd()  { if (now  <   eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1174:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterTradingStart()  { if (now  < eventInfo.getTradingStart()) throw; _; }
                                                                                ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1176:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyExecutive()     { if (msg.sender != executive) throw; _; }
                                                                ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1178:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyIfAbleToIssueTokens()  { if (!ableToIssueTokens) throw; _; } 
                                                                  ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1228:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function VirtualExchange(address hackerGoldAddr, address eventInfoAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1251:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isExistByBytes(symbolBytes)) throw;
                                         ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1254:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (dstContract.getExecutive() != msg.sender) throw;
                                                      ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1285:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isExistByBytes(companyNameBytes)) throw;
                                               ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1295:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (valueHKGOwned < hkg) throw;        
                                 ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1299:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (valueAvailbeOnExchange < hkg) throw;
                                          ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1303:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (dstTokens < hkg * dstContract.getHKGPrice()) throw;    
                                                         ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1348:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyOwner()    { if (msg.sender != owner)        throw; _; }
                                                              ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1349:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier eventInfoSet() { if (eventInfo  == address(0))   throw; _; }
                                                              ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1351:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyBeforeEnd() { if (now  >= eventInfo.getEventEnd()) throw; _; }
                                                                    ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1352:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterEnd()  { if (now  <  eventInfo.getEventEnd()) throw; _; }
                                                                    ^---^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:105:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, to, value);
            ^-----------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:142:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(from, to, value);
            ^-----------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:185:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, value);
        ^----------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:619:9: Warning: Invoking events without "emit" prefix is deprecated.
        BuyForEtherTransaction(msg.sender, collectedEther, totalSupply, etherPrice, tokens);
        ^---------------------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:634:10: Warning: Invoking events without "emit" prefix is deprecated.
         PriceHKGChange(qtyForOneHKG, preferedQtySold, totalSupply);
         ^--------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:668:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(this, virtualExchangeAddress, qtyToEmit);
        ^-----------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:671:9: Warning: Invoking events without "emit" prefix is deprecated.
        DstTokensIssued(hkgPrice, preferedQtySold, totalSupply, qtyToEmit);
        ^----------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:708:7: Warning: Invoking events without "emit" prefix is deprecated.
      BuyForHKGTransaction(sender, preferedQtySold, totalSupply, hkgPrice, tokensQty);
      ^-----------------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:733:10: Warning: Invoking events without "emit" prefix is deprecated.
         DstTokensIssued(qtyForOneEther, totalSupply, totalSupply, qtyToEmit);
         ^------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:747:10: Warning: Invoking events without "emit" prefix is deprecated.
         NewEtherPrice(qtyForOneEther);
         ^---------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:759:9: Warning: Invoking events without "emit" prefix is deprecated.
        DisableTokenIssuance();
        ^--------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:773:9: Warning: Invoking events without "emit" prefix is deprecated.
        BurnedAllRemainedTokens();
        ^-----------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:800:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (requestValue > this.balance) 
                           ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:801:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            requestValue = this.balance;    
                           ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:805:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:805:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:813:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:857:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:857:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:867:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:908:10: Warning: Invoking events without "emit" prefix is deprecated.
         ObjectedVote(id, msg.sender, votes);         
         ^---------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:955:12: Warning: Invoking events without "emit" prefix is deprecated.
           EtherRedeemAccepted(proposals[id].submitter, proposals[id].value);                              
           ^---------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:982:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        bool success = msg.sender.send(this.balance);        
                                       ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1021:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentProposed(msg.sender, urlDetails, now + 2 weeks, newExecutive);
        ^----------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1050:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentSupport(msg.sender, votingRights[msg.sender]);
        ^------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1059:13: Warning: Invoking events without "emit" prefix is deprecated.
            ImpeachmentAccepted(executive);
            ^----------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1087:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1263:9: Warning: Invoking events without "emit" prefix is deprecated.
        Enlisted(dstAddress);
        ^------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance);
    ^-------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:29:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success);
    ^----------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:161:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:178:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:264:5: Warning: No visibility specified. Defaulting to "public". 
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:289:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:306:5: Warning: No visibility specified. Defaulting to "public". 
    function createHKG(address holder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:329:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:375:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:386:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:395:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalValue() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:420:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventStart() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:427:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventEnd() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:436:5: Warning: No visibility specified. Defaulting to "public". 
    function getVotingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:444:5: Warning: No visibility specified. Defaulting to "public". 
    function getTradingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:451:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:579:5: Warning: No visibility specified. Defaulting to "public". 
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:590:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:631:6: Warning: No visibility specified. Defaulting to "public". 
     function setHKGPrice(uint qtyForOneHKG) onlyExecutive  {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:648:5: Warning: No visibility specified. Defaulting to "public". 
    function issuePreferedTokens(uint qtyForOneHKG, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:686:5: Warning: No visibility specified. Defaulting to "public". 
    function buyForHackerGold(uint hkgValue) onlyBeforeEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:723:5: Warning: No visibility specified. Defaulting to "public". 
    function issueTokens(uint qtyForOneEther, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:742:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrice(uint qtyForOneEther) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:756:5: Warning: No visibility specified. Defaulting to "public". 
    function disableTokenIssuance() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:767:5: Warning: No visibility specified. Defaulting to "public". 
    function burnRemainToken() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:783:5: Warning: No visibility specified. Defaulting to "public". 
    function submitEtherProposal(uint requestValue, string url) onlyAfterEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:828:5: Warning: No visibility specified. Defaulting to "public". 
    function submitHKGProposal(uint requestValue, string url) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:882:6: Warning: No visibility specified. Defaulting to "public". 
     function objectProposal(bytes32 id){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:884:9: Warning: Unused local variable.
        Proposal memory proposal = proposals[id];
        ^----------------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:912:6: Warning: No visibility specified. Defaulting to "public". 
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:927:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemProposalFunds(bytes32 id) onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:952:12: Warning: Unused local variable.
           bool success = proposals[id].submitter.send(proposals[id].value); 
           ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:973:5: Warning: No visibility specified. Defaulting to "public". 
    function getAllTheFunds() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:982:9: Warning: Unused local variable.
        bool success = msg.sender.send(this.balance);        
        ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:997:6: Warning: No visibility specified. Defaulting to "public". 
     function submitImpeachmentProposal(string urlDetails, address newExecutive){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1030:5: Warning: No visibility specified. Defaulting to "public". 
    function supportImpeachment(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1070:5: Warning: No visibility specified. Defaulting to "public". 
    function votingRightsOf(address _owner) constant returns (uint256 result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1074:5: Warning: No visibility specified. Defaulting to "public". 
    function getPreferedQtySold() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1078:5: Warning: No visibility specified. Defaulting to "public". 
    function setVirtualExchange(address virtualExchangeAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1082:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGOwned() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1086:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherValue() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1090:5: Warning: No visibility specified. Defaulting to "public". 
    function getExecutive() constant returns (address result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1094:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1098:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1102:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTName() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1106:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTNameBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1110:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbol() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1114:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbolBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1118:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() constant returns (address result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1122:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1126:5: Warning: No visibility specified. Defaulting to "public". 
    function getCollectedEther() constant returns (uint results) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1130:5: Warning: No visibility specified. Defaulting to "public". 
    function getCounterProposals() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1134:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalIdByIndex(uint i) constant returns (bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1138:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalObjectionByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1142:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalValueByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1146:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentUrlDetails() constant returns (string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1151:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentVotesSupporting() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1155:5: Warning: No visibility specified. Defaulting to "public". 
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1228:5: Warning: No visibility specified. Defaulting to "public". 
    function VirtualExchange(address hackerGoldAddr, address eventInfoAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1244:5: Warning: No visibility specified. Defaulting to "public". 
    function enlist(address dstAddress) onlyBeforeEnd {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1280:5: Warning: No visibility specified. Defaulting to "public". 
    function buy(bytes32 companyNameBytes, uint hkg) onlyBeforeEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1281:57: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
                                               returns (bool success) {
                                                        ^----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1289:9: Warning: Unused local variable.
        uint tokensQty = hkg * dstContract.getHKGPrice();
        ^------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1321:5: Warning: No visibility specified. Defaulting to "public". 
    function isExistByBytes(bytes32 companyNameBytes) constant returns (bool result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1329:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventStart() constant eventInfoSet returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1333:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventEnd() constant eventInfoSet returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1337:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:912:6: Warning: Function state mutability can be restricted to view
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1107:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(name);
               ^-----------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1115:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(symbol);
               ^-------------^
/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:1155:5: Warning: Function state mutability can be restricted to pure
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in DSTContract.redeemProposalFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#952-991):
	External calls:
	- hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#974-976)
	External calls sending eth:
	- success = proposals[id].submitter.send(proposals[id].value) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#978-982)
	State variables written after the call(s):
	- proposals (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#990)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
DSTContract.objectProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#912-940) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.objectProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#912-940) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#952-991) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.objectProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#912-940) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#952-991) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.supportImpeachment (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1056-1102) uses a dangerous strict equality:
	- lastImpeachmentProposal.newExecutive == 0x0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#848-900):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#876-878)
	- requestValue = getHKGOwned() (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#877-878)
	State variables written after the call(s):
	- counterProposals (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#893)
	- timeOfLastProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#893-895)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
DSTContract.redeemProposalFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#952-991) does not use the value returned by external calls:
	-hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#974-976)
DSTContract.getAllTheFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1002-1015) does not use the value returned by external calls:
	-hackerGold.transfer(msg.sender,getHKGOwned()) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1011-1014)
VirtualExchange.buy (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1311-1362) does not use the value returned by external calls:
	-hackerGold.transferFrom(msg.sender,veAddress,hkg) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1351-1352)
	-hackerGold.transfer(dstContract.getAddress(),hkg) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1352-1356)
	-dstContract.buyForHackerGold(hkg) (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1359)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in VirtualExchange.enlist (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1284-1301):
	External calls:
	- symbolBytes = dstContract.getDSTSymbolBytes() (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1288-1289)
	State variables written after the call(s):
	- dstListed (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1295-1297)
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#848-900):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#876-878)
	- requestValue = getHKGOwned() (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#877-878)
	State variables written after the call(s):
	- listProposals (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#891-892)
	- proposals (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#890)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSTContract.convert uses assembly (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1187-1190)
	- /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1190
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DSTContract.DECIMAL_ZEROS should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#504)
DSTContract.PROPOSAL_FUNDS_TH should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#508-509)
DSTContract.PROPOSAL_LIFETIME should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#506-507)
DSTContract.decimals should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#532-533)
EventInfo.eventStart should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#427)
HackerGold.BASE_PRICE should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#236-238)
HackerGold.DECIMAL_ZEROS should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#245-247)
HackerGold.FIN_PRICE should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#241)
HackerGold.MID_PRICE should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#239-241)
HackerGold.SAFETY_LIMIT should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#244)
HackerGold.decimals should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#231-232)
HackerGold.name should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#229-230)
HackerGold.symbol should be constant (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#234-235)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#318:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#319-320:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#321:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#325-326:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#333:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#615:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#633:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#680:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#717:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#808:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#810:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#813:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#822:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#828:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#860:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#863-864:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#875:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#882:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#919-921:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#923:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#925:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#929:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#955:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#956-957:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#960-961:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#965:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#968:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1009:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1029:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1036:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1042:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1060-1061:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1068:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1071:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1076:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1188:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1194:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1196-1197:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1198:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1200-1201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1204:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1291:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1294:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1318:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1333:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1343:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1349:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
TokenInterface.approve (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#42-46) should be declared external
StandardToken.approve (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#182-195) should be declared external
TokenInterface.allowance (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#55-58) should be declared external
StandardToken.allowance (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#211-214) should be declared external
HackerGold.fallback (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#298-300) should be declared external
HackerGold.getTotalSupply (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#390-393) should be declared external
HackerGold.getNow (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#403-410) should be declared external
EventInfo.getEventStart (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#436-441) should be declared external
EventInfo.getEventEnd (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#442-445) should be declared external
EventInfo.getVotingStart (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#451-458) should be declared external
EventInfo.getTradingStart (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#460-463) should be declared external
EventInfo.getNow (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#465-467) should be declared external
DSTContract.fallback (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#608-645) should be declared external
DSTContract.setHKGPrice (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#650-653) should be declared external
DSTContract.issuePreferedTokens (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#663-695) should be declared external
DSTContract.buyForHackerGold (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#707-733) should be declared external
DSTContract.issueTokens (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#743-764) should be declared external
DSTContract.setEtherPrice (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#769-778) should be declared external
DSTContract.disableTokenIssuance (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#783-784) should be declared external
DSTContract.burnRemainToken (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#789-793) should be declared external
DSTContract.submitEtherProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#801-840) should be declared external
DSTContract.submitHKGProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#848-900) should be declared external
DSTContract.objectProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#912-940) should be declared external
DSTContract.redeemProposalFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#952-991) should be declared external
DSTContract.getAllTheFunds (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1002-1015) should be declared external
DSTContract.submitImpeachmentProposal (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1021-1052) should be declared external
DSTContract.supportImpeachment (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1056-1102) should be declared external
DSTContract.votingRightsOf (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1110-1114) should be declared external
DSTContract.getPreferedQtySold (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1114-1118) should be declared external
DSTContract.setVirtualExchange (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1118-1123) should be declared external
DSTContract.getEtherValue (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1127-1130) should be declared external
DSTContract.getExecutive (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1131-1134) should be declared external
DSTContract.getHKGPrice (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1134-1138) should be declared external
DSTContract.getEtherPrice (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1138-1139) should be declared external
DSTContract.getDSTName (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1142-1143) should be declared external
DSTContract.getDSTNameBytes (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1143-1146) should be declared external
DSTContract.getDSTSymbol (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1146-1151) should be declared external
DSTContract.getDSTSymbolBytes (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1151-1152) should be declared external
DSTContract.getAddress (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1152-1156) should be declared external
DSTContract.getTotalSupply (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1156-1161) should be declared external
DSTContract.getCollectedEther (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1161-1168) should be declared external
DSTContract.getCounterProposals (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1169-1171) should be declared external
DSTContract.getProposalIdByIndex (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1172-1174) should be declared external
DSTContract.getProposalObjectionByIndex (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1174-1177) should be declared external
DSTContract.getProposalValueByIndex (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1177-1181) should be declared external
DSTContract.getCurrentImpeachmentUrlDetails (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1182-1186) should be declared external
DSTContract.getCurrentImpeachmentVotesSupporting (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1186-1187) should be declared external
VirtualExchange.enlist (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1284-1301) should be declared external
VirtualExchange.buy (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1311-1362) should be declared external
VirtualExchange.getEventStart (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol) should be declared external
VirtualExchange.getEventEnd (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol) should be declared external
VirtualExchange.getNow (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol:
	- pragma solidity^0.4.0 (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#87-88) is not in mixedCase
Struct 'HackerGold.milestones_struct' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#259-262) is not in CapWords
Function 'HackerGold.HackerGold' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#272-295) is not in mixedCase
Variable 'HackerGold.BASE_PRICE' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#236-238) is not in mixedCase
Variable 'HackerGold.MID_PRICE' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#239-241) is not in mixedCase
Variable 'HackerGold.FIN_PRICE' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#241) is not in mixedCase
Variable 'HackerGold.SAFETY_LIMIT' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#244) is not in mixedCase
Variable 'HackerGold.DECIMAL_ZEROS' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#245-247) is not in mixedCase
Function 'DSTContract.DSTContract' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#598-607) is not in mixedCase
Parameter '_owner' of DSTContract.votingRightsOf (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1110) is not in mixedCase
Variable 'DSTContract.DECIMAL_ZEROS' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#504) is not in mixedCase
Variable 'DSTContract.PROPOSAL_LIFETIME' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#506-507) is not in mixedCase
Variable 'DSTContract.PROPOSAL_FUNDS_TH' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#508-509) is not in mixedCase
Function 'VirtualExchange.VirtualExchange' (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#1270-1275) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
EventInfo.HACKATHON_5_WEEKS (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#422-425) is never used in EventInfo
DSTContract.enumDeclaration (/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol#550-552) is never used in DSTContract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol analyzed (6 contracts), 132 result(s) found