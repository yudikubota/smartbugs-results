INFO:Slither:Compilation warnings/errors on /unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:95:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:196:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Injii() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:228:7: Warning: Use of the "var" keyword is deprecated.
      var _allowance = allowed[_from][msg.sender];
      ^------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:272:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Metadata() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:310:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ecosystem(address _metadataContractAddr) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:366:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CompanyInventory(address _metadataContractAddr) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:489:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Crowdsale() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:141:5: Warning: Invoking events without "emit" prefix is deprecated.
    StateChanged(true);
    ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:148:5: Warning: Invoking events without "emit" prefix is deprecated.
    StateChanged(true);
    ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:214:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(msg.sender, _to, _value);
      ^-------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:236:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(_from, _to, _value);
      ^--------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:255:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, iacToApprove);
    ^------------------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:332:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensReceived(_from, _value);
        ^---------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:381:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:387:43: Warning: Using "years" as a unit denomination is deprecated.
            require(now >= startBlock.Add(1 years));
                                          ^-----^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:392:43: Warning: Using "years" as a unit denomination is deprecated.
            require(now >= startBlock.Add(2 years));
                                          ^-----^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:396:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:412:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransferredUnlockedTokens(beneficiary, iacToCredit, comment);
        ^----------------------------------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:414:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:425:74: Warning: Using "years" as a unit denomination is deprecated.
    uint256 public constant gapInPrimaryCrowdsaleAndSecondaryCrowdsale = 2 years;
                                                                         ^-----^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:581:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:600:11: Warning: Invoking events without "emit" prefix is deprecated.
          StateChanged(true);
          ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:616:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:666:9: Warning: Invoking events without "emit" prefix is deprecated.
        ReceivedETH(beneficiary,ETHReceived);
        ^----------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:669:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenSupplied(beneficiary, iacToSend, msg.value);
        ^----------------------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:671:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:692:9: Warning: Invoking events without "emit" prefix is deprecated.
        MintAndTransferIAC(beneficiary, iacToCredit, comment);
        ^---------------------------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:694:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:718:9: Warning: Invoking events without "emit" prefix is deprecated.
        SuccessfullyTransferedFromCompanyInventory(beneficiary, iacToCredit, comment);
        ^---------------------------------------------------------------------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:720:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:748:11: Warning: Invoking events without "emit" prefix is deprecated.
          StateChanged(true);
          ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:761:9: Warning: Invoking events without "emit" prefix is deprecated.
        StateChanged(true);
        ^----------------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:776:38: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        GetIACFundAccount().transfer(this.balance);
                                     ^----------^
/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:331:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenFallback(address _from, uint _value){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
CompanyInventory.initiateLocking (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#380-393) uses a dangerous strict equality:
	- require(bool)(msg.sender == objMetadata.getAddress(crowdsaleContractID) && startBlock == 0)
Crowdsale.GetIACFundAccount (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#554-585) uses a dangerous strict equality:
	- remainder == 0
	- remainder == 1
	- remainder == 2
	- remainder == 3
	- remainder == 4
	- remainder == 5
	- remainder == 6
	- remainder == 7
	- remainder == 8
Crowdsale.GetIACFundAccount (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#554-585) uses a dangerous strict equality:
	- remainder == 0
	- remainder == 1
	- remainder == 2
	- remainder == 3
	- remainder == 4
	- remainder == 5
	- remainder == 6
	- remainder == 7
	- remainder == 8
Crowdsale.startSale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#585-593) uses a dangerous strict equality:
	- assert(bool)(startBlock == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.LockInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#738-752):
	External calls:
	- inventoryContractAddress = objMetada.getAddress(inventoryContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#740-741)
	- objCompanyInventory.initiateLocking(totalSupplyFromInventory) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#747-748)
	State variables written after the call(s):
	- inventoryLocked (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#748-752)
Reentrancy in Ecosystem.SetCrowdsaleAddress (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#323-338):
	External calls:
	- crowdsaleContractAddress = objMetadata.getAddress(crowdsaleContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#327-328)
	State variables written after the call(s):
	- crowdsaleAddressSet (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#337-338)
Reentrancy in Crowdsale.SetEcosystemContract (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#540-554):
	External calls:
	- ecosystemContractAddress = objMetada.getAddress(ecosystemContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#547-549)
	State variables written after the call(s):
	- balances (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#550-551)
Reentrancy in CompanyInventory.TransferFromCompanyInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#407-425):
	External calls:
	- objCrowdsale.transfer(beneficiary,iacToCredit) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#411-412)
	State variables written after the call(s):
	- totalSuppliedAfterLock (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#412-414)
Reentrancy in CompanyInventory.initiateLocking (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#380-393):
	External calls:
	- require(bool)(msg.sender == objMetadata.getAddress(crowdsaleContractID) && startBlock == 0) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#381-385)
	State variables written after the call(s):
	- startBlock (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#385-386)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Crowdsale.totalSupply (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#449-450) shadows:
	- ERC20Basic.totalSupply (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#55-56)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[93m
Ecosystem.rewardUser (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#338-345) does not use the value returned by external calls:
	-objCrowdsale.transfer(user,iacToSend) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#344-345)
CompanyInventory.TransferFromCompanyInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#407-425) does not use the value returned by external calls:
	-objCrowdsale.transfer(beneficiary,iacToCredit) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#411-412)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in CompanyInventory.CompanyInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#371-380):
	External calls:
	- objMetadata.addAddress(inventoryContractID,this) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#378-379)
	- objCrowdsale = Crowdsale(objMetadata.getAddress(crowdsaleContractID)) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#379-380)
	State variables written after the call(s):
	- objCrowdsale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#379-380)
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#501-522):
	External calls:
	- ecosystemContractAddress = objMetada.getAddress(ecosystemContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#516)
	State variables written after the call(s):
	- objEcosystem (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#518)
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#501-522):
	External calls:
	- ecosystemContractAddress = objMetada.getAddress(ecosystemContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#516)
	- objMetada.addAddress(crowdsaleContractID,this) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#518-519)
	State variables written after the call(s):
	- balances (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#519-520)
	- targetToAchieve (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#520-522)
Reentrancy in Crowdsale.LockInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#738-752):
	External calls:
	- inventoryContractAddress = objMetada.getAddress(inventoryContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#740-741)
	State variables written after the call(s):
	- balances (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#742-743)
	- objCompanyInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#745-746)
	- totalSupply (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#743-745)
Reentrancy in Ecosystem.SetCrowdsaleAddress (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#323-338):
	External calls:
	- crowdsaleContractAddress = objMetadata.getAddress(crowdsaleContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#327-328)
	State variables written after the call(s):
	- objCrowdsale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#332-337)
Reentrancy in Crowdsale.SetEcosystemContract (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#540-554):
	External calls:
	- ecosystemContractAddress = objMetada.getAddress(ecosystemContractID) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#547-549)
	State variables written after the call(s):
	- objEcosystem (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#552-554)
Reentrancy in CompanyInventory.TransferFromCompanyInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#407-425):
	External calls:
	- objCrowdsale.transfer(beneficiary,iacToCredit) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#411-412)
	State variables written after the call(s):
	- totalRemainInInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#421-422)
	- totalSupplyFromInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#414-419)
Reentrancy in CompanyInventory.initiateLocking (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#380-393):
	External calls:
	- require(bool)(msg.sender == objMetadata.getAddress(crowdsaleContractID) && startBlock == 0) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#381-385)
	State variables written after the call(s):
	- unlockedTokens (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#386-387)
Reentrancy in CompanyInventory.initiateLocking (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#380-393):
	External calls:
	- require(bool)(msg.sender == objMetadata.getAddress(crowdsaleContractID) && startBlock == 0) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#381-385)
	- balance = objCrowdsale.balanceOf(this) (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#387)
	State variables written after the call(s):
	- balance (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#387)
	- totalRemainInInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#389-392)
	- totalSupplyFromInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#388-389)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Injii.version should be constant (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#177-178)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Injii.balanceOf (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#249-252) should be declared external
ERC20Basic.balanceOf (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#56-59) should be declared external
ERC20Basic.transfer (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#59-61) should be declared external
Injii.transfer (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#209-226) should be declared external
ERC20.allowance (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#72-75) should be declared external
Injii.allowance (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#272-278) should be declared external
Injii.transferFrom (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#226-249) should be declared external
ERC20.transferFrom (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#75-78) should be declared external
Injii.approve (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#254-268) should be declared external
ERC20.approve (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#80-81) should be declared external
Ownable.transferOwnership (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#108-115) should be declared external
Metadata.getAddress (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#285-287) should be declared external
Metadata.addAddress (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#297-304) should be declared external
Ecosystem.SetCrowdsaleAddress (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#323-338) should be declared external
Ecosystem.rewardUser (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#338-345) should be declared external
Ecosystem.tokenFallback (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#345-348) should be declared external
CompanyInventory.initiateLocking (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#380-393) should be declared external
CompanyInventory.releaseTokens (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#393-406) should be declared external
Crowdsale.SetEcosystemContract (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#540-554) should be declared external
Crowdsale.startSale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#585-593) should be declared external
Crowdsale.startSecondaryCrowdsale (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#596-625) should be declared external
Crowdsale.setPrice (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#626-630) should be declared external
Crowdsale.LockInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#738-752) should be declared external
Crowdsale.finalize (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#753-778) should be declared external
Crowdsale.unlock (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol) should be declared external
Crowdsale.fallback (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol) should be declared external
Crowdsale.drain (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol:
	- pragma solidity^0.4.17 (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'SafeMath.Mul' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#8-16) is not in mixedCase
Function 'SafeMath.Div' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#18-26) is not in mixedCase
Function 'SafeMath.Sub' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#28-35) is not in mixedCase
Function 'SafeMath.Add' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#37-48) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#99-101) is not in mixedCase
Parameter '_owner' of Injii.balanceOf (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#250) is not in mixedCase
Parameter '_to' of Injii.transfer (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#209) is not in mixedCase
Parameter '_value' of Injii.transfer (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#209) is not in mixedCase
Parameter '_owner' of Injii.allowance (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#273) is not in mixedCase
Parameter '_spender' of Injii.allowance (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#273-274) is not in mixedCase
Parameter '_from' of Injii.transferFrom (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#227) is not in mixedCase
Parameter '_to' of Injii.transferFrom (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#227) is not in mixedCase
Parameter '_value' of Injii.transferFrom (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#227) is not in mixedCase
Parameter '_spender' of Injii.approve (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#254-255) is not in mixedCase
Parameter '_value' of Injii.approve (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#255) is not in mixedCase
Function 'Injii.Injii' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#204-207) is not in mixedCase
Function 'Metadata.Metadata' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#282-284) is not in mixedCase
Function 'Ecosystem.Ecosystem' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#315-323) is not in mixedCase
Parameter '_metadataContractAddr' of Ecosystem.Ecosystem (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#315-316) is not in mixedCase
Function 'Ecosystem.SetCrowdsaleAddress' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#323-338) is not in mixedCase
Parameter '_from' of Ecosystem.tokenFallback (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#346) is not in mixedCase
Parameter '_value' of Ecosystem.tokenFallback (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#346) is not in mixedCase
Constant 'Ecosystem.ecosystemContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#311) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Ecosystem.crowdsaleContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#312) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'CompanyInventory.CompanyInventory' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#371-380) is not in mixedCase
Parameter '_metadataContractAddr' of CompanyInventory.CompanyInventory (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#371-374) is not in mixedCase
Parameter '_alreadyTransferredTokens' of CompanyInventory.initiateLocking (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#380) is not in mixedCase
Function 'CompanyInventory.TransferFromCompanyInventory' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#407-425) is not in mixedCase
Constant 'CompanyInventory.crowdsaleContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#365-366) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CompanyInventory.inventoryContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#366-367) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Crowdsale.Crowdsale' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#501-522) is not in mixedCase
Function 'Crowdsale.SetEcosystemContract' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#540-554) is not in mixedCase
Function 'Crowdsale.GetIACFundAccount' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#554-585) is not in mixedCase
Parameter '_tokensPerEther' of Crowdsale.setPrice (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#626-627) is not in mixedCase
Function 'Crowdsale.MintAndTransferToken' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#687-708) is not in mixedCase
Function 'Crowdsale.TransferFromCompanyInventory' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#710-738) is not in mixedCase
Function 'Crowdsale.LockInventory' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#738-752) is not in mixedCase
Constant 'Crowdsale.durationCrowdSale' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#431) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.gapInPrimaryCrowdsaleAndSecondaryCrowdsale' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#433-434) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.maxCapCompanyInventory' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#437-439) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.maxCap' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#441) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.maxCapEcosystem' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#442) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.numberOfTokensToAvail50PercentDiscount' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#443-444) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.numberOfTokensToAvail25percentDiscount' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#445-446) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.minimumNumberOfTokens' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#446-447) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Crowdsale.ETHReceived' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#456-457) is not in mixedCase
Constant 'Crowdsale.ecosystemContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#494-495) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.crowdsaleContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#496-497) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.inventoryContractID' (/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol#498-499) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/31/0xede8792712d075abf085b49ebb4d80a0d2ed888d.sol analyzed (10 contracts), 98 result(s) found