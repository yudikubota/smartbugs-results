INFO:Slither:Compilation warnings/errors on /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:521:5: Warning: Use of the "var" keyword is deprecated.
				var nOverrun = (landlBal + tenantBal) - self._TotalAmount;
				^----------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:788:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:799:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1511:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1569:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function StayBitContractFactory()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:382:3: Warning: Invoking events without "emit" prefix is deprecated.
		logEvent(stage, atype, timestamp, guid, text);
		^-------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:589:13: Warning: Invoking events without "emit" prefix is deprecated.
            logEvent(stage, LogMessageInfo, nCurrentDate, sGuid, strMessage2);
            ^---------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1545:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner_, _newOwner);
    ^-------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1640:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require (contracts[keccak256(Guid)]._Id == 0);
		                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1640:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require (contracts[keccak256(Guid)]._Id == 0);
		                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1642:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._CurrentDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1642:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._CurrentDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1643:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._CreatedDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1643:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._CreatedDate = now;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1644:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._RentPerDay = rentPerDay;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1644:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._RentPerDay = rentPerDay;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1645:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._MoveInDate = moveInDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1645:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._MoveInDate = moveInDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1646:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._MoveOutDate = moveOutDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1646:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._MoveOutDate = moveOutDate;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1647:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._SecDeposit = secDeposit;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1647:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._SecDeposit = secDeposit;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1648:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._DoorLockData = doorLockData;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1648:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._DoorLockData = doorLockData;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1649:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._landlord = landlord;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1649:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._landlord = landlord;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1650:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._tenant = msg.sender;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1650:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._tenant = msg.sender;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1651:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._ContractAddress = this;		
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1651:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._ContractAddress = this;		
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1652:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._tokenApi = ERC20Interface(supportedTokens[tokenId]._ContractAddress);
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1652:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._tokenApi = ERC20Interface(supportedTokens[tokenId]._ContractAddress);
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1653:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._Id = Id;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1653:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._Id = Id;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1654:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._Guid = Guid;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1654:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._Guid = Guid;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1655:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)]._CancelPolicy = cancelPolicy;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1655:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)]._CancelPolicy = cancelPolicy;
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1657:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		contracts[keccak256(Guid)].initialize();
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1657:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		contracts[keccak256(Guid)].initialize();
		          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1659:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		uint256 startBalance = contracts[keccak256(Guid)]._tokenApi.balanceOf(this);
		                                 ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1659:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		uint256 startBalance = contracts[keccak256(Guid)]._tokenApi.balanceOf(this);
		                                 ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1662:81: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		supportedTokens[tokenId]._ContractFeeBal += CalculateCreateFee(uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1662:81: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		supportedTokens[tokenId]._ContractFeeBal += CalculateCreateFee(uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:107: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:107: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:152: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1665:152: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:100: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:100: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:167: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:167: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1668:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:13: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:51: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:145: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1671:145: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(Guid) ... 
     ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:21: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:65: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1674:65: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require(contracts[keccak256(Guid)]._Balance >= uint(contracts[keccak256(Guid)]._TotalAmount));
		                                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1677:3: Warning: Invoking events without "emit" prefix is deprecated.
		contractCreated(rentPerDay, cancelPolicy, moveInDate, moveOutDate, secDeposit, landlord, tokenId, Id, Guid, extraAmount);
		^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1686:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    if (contracts[keccak256(Guid)]._Id != 0)
	                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1686:20: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
	    if (contracts[keccak256(Guid)]._Id != 0)
	                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1688:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contracts[keccak256(Guid)].SimulateCurrentDate(n);
			          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1688:14: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contracts[keccak256(Guid)].SimulateCurrentDate(n);
			          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1695:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1695:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1697:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			actualBalance = contracts[keccak256(Guid)].GetContractBalance();
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1697:30: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			actualBalance = contracts[keccak256(Guid)].GetContractBalance();
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1698:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			curDate = contracts[keccak256(Guid)].GetCurrentDate();
			                    ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1698:24: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			curDate = contracts[keccak256(Guid)].GetCurrentDate();
			                    ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1699:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			tenantMovedIn = contracts[keccak256(Guid)]._TenantConfirmedMoveIn;
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1699:30: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			tenantMovedIn = contracts[keccak256(Guid)]._TenantConfirmedMoveIn;
			                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1700:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			misrepSignaled = contracts[keccak256(Guid)]._MisrepSignaled;
			                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1700:31: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			misrepSignaled = contracts[keccak256(Guid)]._MisrepSignaled;
			                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1701:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			doorLockData = contracts[keccak256(Guid)]._DoorLockData;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1701:29: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			doorLockData = contracts[keccak256(Guid)]._DoorLockData;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1702:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			escrStage = contracts[keccak256(Guid)].GetCurrentStage();
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1702:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			escrStage = contracts[keccak256(Guid)].GetCurrentStage();
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1703:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			escrState = contracts[keccak256(Guid)]._State;
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1703:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			escrState = contracts[keccak256(Guid)]._State;
			                      ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1704:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			calcAmount = contracts[keccak256(Guid)]._TotalAmount;
			                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1704:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			calcAmount = contracts[keccak256(Guid)]._TotalAmount;
			                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1705:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			actualMoveOutDate = contracts[keccak256(Guid)]._ActualMoveOutDate;
			                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1705:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			actualMoveOutDate = contracts[keccak256(Guid)]._ActualMoveOutDate;
			                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1706:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			cancelPolicy = contracts[keccak256(Guid)]._CancelPolicy;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1706:29: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			cancelPolicy = contracts[keccak256(Guid)]._CancelPolicy;
			                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1712:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1712:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1714:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1716:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1716:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1718:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1718:49: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1720:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1720:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1722:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1722:49: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1724:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1724:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1726:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1726:47: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.TenantTerminate(contracts[keccak256(Guid)]);
				                                          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:71: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:71: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1736:4: Warning: Invoking events without "emit" prefix is deprecated.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			^-----------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1743:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1743:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1745:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1747:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1747:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1749:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1749:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1751:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1751:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1753:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1753:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1755:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1755:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1757:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1757:53: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.TenantTerminateMisrep(contracts[keccak256(Guid)]);
				                                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:71: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:71: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1767:4: Warning: Invoking events without "emit" prefix is deprecated.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			^-----------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1773:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1773:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1775:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._tenant);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1777:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1777:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1779:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1779:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1781:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1781:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1783:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1783:46: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                         ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1785:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1785:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1787:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1787:44: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.TenantMoveIn(contracts[keccak256(Guid)]);
				                                       ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1797:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1797:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1799:63: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(SecDeposit >= 0 && SecDeposit <= uint256(contracts[keccak256(Guid)]._SecDeposit));
			                                                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1799:63: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(SecDeposit >= 0 && SecDeposit <= uint256(contracts[keccak256(Guid)]._SecDeposit));
			                                                           ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                  ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:115: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1800:115: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			require(contracts[keccak256(Guid)]._State == BaseEscrowLib.GetContractStateActive() && msg.sender == contracts[keccak256(Guid)]._landlord);
			                                                                                                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1802:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1802:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._CancelPolicy == 1)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1804:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				FlexibleEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1804:51: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				FlexibleEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1806:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1806:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 2)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1808:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				ModerateEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1808:51: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				ModerateEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1810:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1810:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			else if (contracts[keccak256(Guid)]._CancelPolicy == 3)
			                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1812:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				StrictEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1812:49: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				StrictEscrowLib.LandlordTerminate(contracts[keccak256(Guid)], SecDeposit);
				                                            ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                             ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:71: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:71: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			                                                                   ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1822:4: Warning: Invoking events without "emit" prefix is deprecated.
			contractTerminated(contracts[keccak256(Guid)]._Id, Guid, contracts[keccak256(Guid)]._State);
			^-----------------------------------------------------------------------------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1828:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1828:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		if (contracts[keccak256(Guid)]._Id != 0)
		              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1830:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._landlBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1830:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._landlBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1832:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				uint landlBal = uint(contracts[keccak256(Guid)]._landlBal);
				                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1832:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				uint landlBal = uint(contracts[keccak256(Guid)]._landlBal);
				                               ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1833:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._landlBal = 0;		
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1833:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._landlBal = 0;		
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:61: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:61: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1834:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._landlord, landlBal);
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1835:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._Balance -= landlBal;						
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1835:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._Balance -= landlBal;						
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1838:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			if (contracts[keccak256(Guid)]._tenantBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1838:18: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
			if (contracts[keccak256(Guid)]._tenantBal > 0)
			              ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1840:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				uint tenantBal = uint(contracts[keccak256(Guid)]._tenantBal);
				                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1840:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				uint tenantBal = uint(contracts[keccak256(Guid)]._tenantBal);
				                                ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1841:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tenantBal = 0;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1841:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tenantBal = 0;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:61: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:61: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				                                                        ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1842:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._tokenApi.transfer(contracts[keccak256(Guid)]._tenant, tenantBal);			
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1843:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
				contracts[keccak256(Guid)]._Balance -= tenantBal;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1843:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
				contracts[keccak256(Guid)]._Balance -= tenantBal;
				          ^-------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:463:2: Warning: No visibility specified. Defaulting to "public". 
	function initialize(EscrowContractState storage self) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1569:2: Warning: No visibility specified. Defaulting to "public". 
	function StayBitContractFactory()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1680:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:33:9: Warning: Function state mutability can be restricted to pure
        function isLeapYear(uint16 year) public constant returns (bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:46:9: Warning: Function state mutability can be restricted to pure
        function leapYearsBefore(uint year) public constant  returns (uint) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:143:9: Warning: Function state mutability can be restricted to pure
        function getHour(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:147:9: Warning: Function state mutability can be restricted to pure
        function getMinute(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:151:9: Warning: Function state mutability can be restricted to pure
        function getSecond(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:155:9: Warning: Function state mutability can be restricted to pure
        function getWeekday(uint timestamp) public constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:249:3: Warning: Function state mutability can be restricted to pure
		function compareDateTimesForContract(uint t1, uint t2) public constant returns (int res)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:272:3: Warning: Function state mutability can be restricted to pure
		function compareInts(int n1, int n2) internal constant returns (int res)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:386:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateActive() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:391:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateCancelledByTenant() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:396:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateCancelledByLandlord() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:401:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateTerminatedMisrep() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:406:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateEarlyTerminatedByTenant() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:411:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateEarlyTerminatedByTenantSecDep() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:416:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateEarlyTerminatedByLandlord() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:421:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateTerminatedOK() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:426:2: Warning: Function state mutability can be restricted to pure
	function GetContractStateTerminatedSecDep() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:431:2: Warning: Function state mutability can be restricted to pure
	function GetContractStagePreMoveIn() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:436:2: Warning: Function state mutability can be restricted to pure
	function GetContractStageLiving() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:441:2: Warning: Function state mutability can be restricted to pure
	function GetContractStageTermination() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:446:2: Warning: Function state mutability can be restricted to pure
	function GetLogMessageInfo() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:451:2: Warning: Function state mutability can be restricted to pure
	function GetLogMessageWarning() public constant returns (int)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:456:2: Warning: Function state mutability can be restricted to pure
[91m	function GetLogMessageError() public constant returns (int)[0m
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:600:25: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		uint nActualBalance = GetContractBalance(self);
		                      ^----------------------^
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:652:2: Warning: Function state mutability can be restricted to view
	function GetContractBalance(EscrowContractState storage self) public returns (uint res)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:658:2: Warning: Function state mutability can be restricted to pure
	function splitBalanceAccordingToRatings(int balance, int tenantScore, int landlScore) public constant returns (int tenantBal, int landlBal)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:704:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal constant returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:733:5: Warning: Function state mutability can be restricted to pure
    function bytes32ToString(bytes32 x) internal constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:750:5: Warning: Function state mutability can be restricted to pure
    function bytes32ArrayToString(bytes32[] data) internal constant returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:770:5: Warning: Function state mutability can be restricted to pure
    function uintToBytes(uint v) internal constant returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:786:5: Warning: Function state mutability can be restricted to pure
    function bytesToUInt(bytes32 v) internal constant returns (uint ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:1697:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
			actualBalance = contracts[keccak256(Guid)].GetContractBalance();
			                ^---------------------------------------------^

INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:
	Contract StayBitContractFactory has payable functions:
	 - fallback (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1724-1726)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in StayBitContractFactory.CreateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1654-1724):
	External calls:
	- startBalance = contracts[keccak256()(Guid)]._tokenApi.balanceOf(this) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1693)
	State variables written after the call(s):
	- supportedTokens (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1695-1698)
Reentrancy in StayBitContractFactory.CreateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1654-1724):
	External calls:
	- startBalance = contracts[keccak256()(Guid)]._tokenApi.balanceOf(this) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1693)
	- require(bool)(extraAmount + uint256(contracts[keccak256()(Guid)]._TotalAmount) + CalculateCreateFee(uint256(contracts[keccak256()(Guid)]._TotalAmount)) <= contracts[keccak256()(Guid)]._tokenApi.balanceOf(msg.sender)) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1698-1702)
	- contracts[keccak256()(Guid)]._tokenApi.transferFrom(msg.sender,this,extraAmount + uint256(contracts[keccak256()(Guid)]._TotalAmount) + CalculateCreateFee(uint256(contracts[keccak256()(Guid)]._TotalAmount))) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1703-1706)
	- contracts[keccak256()(Guid)]._Balance = contracts[keccak256()(Guid)]._tokenApi.balanceOf(this) - startBalance - CalculateCreateFee(uint256(contracts[keccak256()(Guid)]._TotalAmount)) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1711-1714)
	State variables written after the call(s):
	- contracts (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1711-1714)
Reentrancy in StayBitContractFactory.SendTokens (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol):
	External calls:
	- contracts[keccak256()(Guid)]._tokenApi.transfer(contracts[keccak256()(Guid)]._landlord,landlBal) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
	State variables written after the call(s):
	- contracts (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
	- contracts (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
Reentrancy in StayBitContractFactory.SendTokens (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol):
	External calls:
	- contracts[keccak256()(Guid)]._tokenApi.transfer(contracts[keccak256()(Guid)]._landlord,landlBal) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
	- contracts[keccak256()(Guid)]._tokenApi.transfer(contracts[keccak256()(Guid)]._tenant,tenantBal) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
	State variables written after the call(s):
	- contracts (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
urlLength in BaseEscrowLib.bytes32ArrayToString (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#776) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
StayBitContractFactory.WithdrawFeeBalance (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1630-1642) does not use the value returned by external calls:
	-tokenApi.transfer(to,amount) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1640-1642)
StayBitContractFactory.CreateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1654-1724) does not use the value returned by external calls:
	-contracts[keccak256()(Guid)]._tokenApi.transferFrom(msg.sender,this,extraAmount + uint256(contracts[keccak256()(Guid)]._TotalAmount) + CalculateCreateFee(uint256(contracts[keccak256()(Guid)]._TotalAmount))) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1703-1706)
StayBitContractFactory.SendTokens (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) does not use the value returned by external calls:
	-contracts[keccak256()(Guid)]._tokenApi.transfer(contracts[keccak256()(Guid)]._landlord,landlBal) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
	-contracts[keccak256()(Guid)]._tokenApi.transfer(contracts[keccak256()(Guid)]._tenant,tenantBal) (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#825-826:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#835:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
DateTime.getMonth (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#138-141) should be declared external
DateTime.getDay (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#143-145) should be declared external
DateTime.toTimestamp (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#160-164) should be declared external
DateTime.toTimestamp (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#164-168) should be declared external
DateTime.toTimestamp (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#168-172) should be declared external
DateTime.compareDatesWithoutTime (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#232-249) should be declared external
DateTime.compareDateTimesForContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#258-287) should be declared external
ERC20Interface.totalSupply (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#297-298) should be declared external
ERC20Interface.balanceOf (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#298-299) should be declared external
ERC20Interface.allowance (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#299-301) should be declared external
ERC20Interface.transfer (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#301-302) should be declared external
ERC20Interface.approve (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#302-308) should be declared external
ERC20Interface.transferFrom (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#308-312) should be declared external
BaseEscrowLib.ContractLogEvent (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#393-399) should be declared external
BaseEscrowLib.GetContractStateCancelledByTenant (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#406-411) should be declared external
BaseEscrowLib.GetContractStateCancelledByLandlord (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#411-413) should be declared external
BaseEscrowLib.GetContractStateTerminatedMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#413-418) should be declared external
BaseEscrowLib.GetContractStateEarlyTerminatedByTenant (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#418-426) should be declared external
BaseEscrowLib.GetContractStateEarlyTerminatedByTenantSecDep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#426-431) should be declared external
BaseEscrowLib.GetContractStateEarlyTerminatedByLandlord (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#431-438) should be declared external
BaseEscrowLib.GetContractStateTerminatedOK (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#438-443) should be declared external
BaseEscrowLib.GetContractStateTerminatedSecDep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#443-451) should be declared external
BaseEscrowLib.GetContractStagePreMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#451-456) should be declared external
BaseEscrowLib.GetContractStageLiving (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#456-462) should be declared external
BaseEscrowLib.GetContractStageTermination (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#462-463) should be declared external
BaseEscrowLib.GetLogMessageInfo (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#463-468) should be declared external
BaseEscrowLib.GetLogMessageWarning (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#468-471) should be declared external
BaseEscrowLib.GetLogMessageError (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#471-472) should be declared external
BaseEscrowLib.initialize (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#476-507) should be declared external
BaseEscrowLib.TerminateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#507-613) should be declared external
BaseEscrowLib.SimulateCurrentDate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#654-665) should be declared external
BaseEscrowLib.splitBalanceAccordingToRatings (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#679-706) should be declared external
BaseEscrowLib.formatDate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#706-716) should be declared external
FlexibleEscrowLib.TenantTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#846-924) should be declared external
FlexibleEscrowLib.TenantMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#924-939) should be declared external
FlexibleEscrowLib.TenantTerminateMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#941-969) should be declared external
FlexibleEscrowLib.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#969-1076) should be declared external
ModerateEscrowLib.TenantTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1086-1164) should be declared external
ModerateEscrowLib.TenantMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1165-1180) should be declared external
ModerateEscrowLib.TenantTerminateMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1180-1210) should be declared external
ModerateEscrowLib.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1210-1326) should be declared external
StrictEscrowLib.TenantTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1331-1401) should be declared external
StrictEscrowLib.TenantMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1401-1417) should be declared external
StrictEscrowLib.TenantTerminateMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1417-1446) should be declared external
StrictEscrowLib.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1446-1553) should be declared external
Ownable.owner (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1566) should be declared external
Ownable.transferOwnership (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1576-1583) should be declared external
StayBitContractFactory.SetFactoryParams (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1624-1626) should be declared external
StayBitContractFactory.GetFeeBalance (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1627-1630) should be declared external
StayBitContractFactory.WithdrawFeeBalance (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1630-1642) should be declared external
StayBitContractFactory.SetTokenInfo (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1642-1647) should be declared external
StayBitContractFactory.CreateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1654-1724) should be declared external
StayBitContractFactory.fallback (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1724-1726) should be declared external
StayBitContractFactory.SimulateCurrentDate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1726-1736) should be declared external
StayBitContractFactory.GetContractInfo (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1736-1771) should be declared external
StayBitContractFactory.TenantTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1771-1800) should be declared external
StayBitContractFactory.TenantTerminateMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1800-1830) should be declared external
StayBitContractFactory.TenantMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1830-1847) should be declared external
StayBitContractFactory.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol:
	- pragma solidity^0.4.15 (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Struct 'DateTime._DateTime' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#14-24) is not in CapWords
Event 'BaseEscrowLib.logEvent' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#382-386) is not in CapWords
Function 'BaseEscrowLib.ContractLogEvent' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#393-399) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateActive' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#401-406) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateCancelledByTenant' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#406-411) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateCancelledByLandlord' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#411-413) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateTerminatedMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#413-418) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateEarlyTerminatedByTenant' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#418-426) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateEarlyTerminatedByTenantSecDep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#426-431) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateEarlyTerminatedByLandlord' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#431-438) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateTerminatedOK' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#438-443) is not in mixedCase
Function 'BaseEscrowLib.GetContractStateTerminatedSecDep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#443-451) is not in mixedCase
Function 'BaseEscrowLib.GetContractStagePreMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#451-456) is not in mixedCase
Function 'BaseEscrowLib.GetContractStageLiving' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#456-462) is not in mixedCase
Function 'BaseEscrowLib.GetContractStageTermination' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#462-463) is not in mixedCase
Function 'BaseEscrowLib.GetLogMessageInfo' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#463-468) is not in mixedCase
Function 'BaseEscrowLib.GetLogMessageWarning' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#468-471) is not in mixedCase
Function 'BaseEscrowLib.GetLogMessageError' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#471-472) is not in mixedCase
Function 'BaseEscrowLib.TerminateContract' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#507-613) is not in mixedCase
Function 'BaseEscrowLib.GetCurrentStage' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#613-652) is not in mixedCase
Function 'BaseEscrowLib.SimulateCurrentDate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#654-665) is not in mixedCase
Function 'BaseEscrowLib.GetCurrentDate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#665-676) is not in mixedCase
Function 'BaseEscrowLib.GetContractBalance' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#676-679) is not in mixedCase
Parameter '_a' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#716-717) is not in mixedCase
Parameter '_b' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#717) is not in mixedCase
Parameter '_c' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#717) is not in mixedCase
Parameter '_d' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#717) is not in mixedCase
Parameter '_e' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#717) is not in mixedCase
Parameter '_a' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#739) is not in mixedCase
Parameter '_b' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#739) is not in mixedCase
Parameter '_c' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#739) is not in mixedCase
Parameter '_d' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#739-740) is not in mixedCase
Parameter '_a' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#744) is not in mixedCase
Parameter '_b' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#744) is not in mixedCase
Parameter '_c' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#744) is not in mixedCase
Parameter '_a' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#750) is not in mixedCase
Parameter '_b' of BaseEscrowLib.strConcat (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#750) is not in mixedCase
Constant 'BaseEscrowLib.ContractStateActive' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#345) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateCancelledByTenant' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#346) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateCancelledByLandlord' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#346-349) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateTerminatedMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#349-350) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateEarlyTerminatedByTenant' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#353-354) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateEarlyTerminatedByTenantSecDep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#354-355) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateEarlyTerminatedByLandlord' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#355-358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateTerminatedOK' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#359-360) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStateTerminatedSecDep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#360-361) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStagePreMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#362) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStageLiving' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#364-365) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ContractStageTermination' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#366-367) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ActionKeyTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#367-369) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ActionKeyMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#369) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ActionKeyTerminateMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#369-373) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ActionKeyPropOk' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#373-375) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.ActionKeyClaimDeposit' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#375-376) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.LogMessageInfo' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#376-380) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.LogMessageWarning' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#380) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.LogMessageError' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#380-382) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BaseEscrowLib.EnableSimulatedCurrentDate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#391) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'FlexibleEscrowLib.TenantTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#846-924) is not in mixedCase
Function 'FlexibleEscrowLib.TenantMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#924-939) is not in mixedCase
Function 'FlexibleEscrowLib.TenantTerminateMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#941-969) is not in mixedCase
Function 'FlexibleEscrowLib.LandlordTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#969-1076) is not in mixedCase
Parameter 'SecDeposit' of FlexibleEscrowLib.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#971) is not in mixedCase
Constant 'FlexibleEscrowLib.FreeCancelBeforeMoveInDays' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#843) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'FlexibleEscrowLib.ExpireAfterMoveOutDays' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#844-845) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'ModerateEscrowLib.TenantTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1086-1164) is not in mixedCase
Function 'ModerateEscrowLib.TenantMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1165-1180) is not in mixedCase
Function 'ModerateEscrowLib.TenantTerminateMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1180-1210) is not in mixedCase
Function 'ModerateEscrowLib.LandlordTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1210-1326) is not in mixedCase
Parameter 'SecDeposit' of ModerateEscrowLib.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1210) is not in mixedCase
Constant 'ModerateEscrowLib.FreeCancelBeforeMoveInDays' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1081-1083) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ModerateEscrowLib.ExpireAfterMoveOutDays' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1085-1086) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'StrictEscrowLib.TenantTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1331-1401) is not in mixedCase
Function 'StrictEscrowLib.TenantMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1401-1417) is not in mixedCase
Function 'StrictEscrowLib.TenantTerminateMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1417-1446) is not in mixedCase
Function 'StrictEscrowLib.LandlordTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1446-1553) is not in mixedCase
Parameter 'SecDeposit' of StrictEscrowLib.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1448) is not in mixedCase
Constant 'StrictEscrowLib.FreeCancelBeforeMoveInDays' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1329-1331) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'StrictEscrowLib.ExpireAfterMoveOutDays' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1331) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Ownable.Ownable' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1563-1564) is not in mixedCase
Parameter '_newOwner' of Ownable.transferOwnership (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1578-1579) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1588-1591) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1588) is not in mixedCase
Event 'StayBitContractFactory.contractCreated' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1620-1621) is not in CapWords
Event 'StayBitContractFactory.contractTerminated' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1621) is not in CapWords
Function 'StayBitContractFactory.StayBitContractFactory' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1621-1624) is not in mixedCase
Function 'StayBitContractFactory.SetFactoryParams' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1624-1626) is not in mixedCase
Function 'StayBitContractFactory.GetFeeBalance' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1627-1630) is not in mixedCase
Function 'StayBitContractFactory.WithdrawFeeBalance' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1630-1642) is not in mixedCase
Function 'StayBitContractFactory.SetTokenInfo' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1642-1647) is not in mixedCase
Function 'StayBitContractFactory.CalculateCreateFee' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1647-1651) is not in mixedCase
Function 'StayBitContractFactory.CreateContract' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1654-1724) is not in mixedCase
Parameter 'Id' of StayBitContractFactory.CreateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1659) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.CreateContract (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1659) is not in mixedCase
Function 'StayBitContractFactory.SimulateCurrentDate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1726-1736) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.SimulateCurrentDate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1726) is not in mixedCase
Function 'StayBitContractFactory.GetContractInfo' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1736-1771) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.GetContractInfo (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1736) is not in mixedCase
Function 'StayBitContractFactory.TenantTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1771-1800) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.TenantTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1773) is not in mixedCase
Function 'StayBitContractFactory.TenantTerminateMisrep' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1800-1830) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.TenantTerminateMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1800) is not in mixedCase
Function 'StayBitContractFactory.TenantMoveIn' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1830-1847) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.TenantMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1831-1832) is not in mixedCase
Function 'StayBitContractFactory.LandlordTerminate' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) is not in mixedCase
Parameter 'SecDeposit' of StayBitContractFactory.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.LandlordTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) is not in mixedCase
Function 'StayBitContractFactory.SendTokens' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) is not in mixedCase
Parameter 'Guid' of StayBitContractFactory.SendTokens (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol) is not in mixedCase
Variable 'StayBitContractFactory.CreateEnabled' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1605) is not in mixedCase
Variable 'StayBitContractFactory.PercentageFee' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1608-1610) is not in mixedCase
Variable 'StayBitContractFactory.ContractFee' (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#1614-1616) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
BaseEscrowLib.ActionKeyTerminate (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#367-369) is never used in BaseEscrowLib
BaseEscrowLib.ActionKeyMoveIn (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#369) is never used in BaseEscrowLib
BaseEscrowLib.ActionKeyTerminateMisrep (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#369-373) is never used in BaseEscrowLib
BaseEscrowLib.ActionKeyPropOk (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#373-375) is never used in BaseEscrowLib
BaseEscrowLib.ActionKeyClaimDeposit (/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol#375-376) is never used in BaseEscrowLib
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/12/0xf7e13ba09219dba3666d997d34b9ad1e2f1fe9ac.sol analyzed (8 contracts), 184 result(s) found