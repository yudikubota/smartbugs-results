INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:44:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public { owner = msg.sender; }
  ^-----------------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:66:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Deployer() public { deployer = msg.sender; }
  ^---------------------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:127:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ModultradeStorage() public {}
  ^------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:219:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ModultradeProposal(address _modultrade, address _seller, address _mtrContractAddress) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:393:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Modultrade(address _owner, address _oracle, address _mtrContractAddress, address _storageAddress) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:429:5: Warning: Use of the "var" keyword is deprecated.
    var _proposal = modultradeStorage.getProposalById(id);
    ^-----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:435:5: Warning: Use of the "var" keyword is deprecated.
    var _proposal = modultradeStorage.getProposalById(id);
    ^-----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:441:5: Warning: Use of the "var" keyword is deprecated.
    var _proposal = modultradeStorage.getProposalById(id);
    ^-----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:447:5: Warning: Use of the "var" keyword is deprecated.
    var _proposal = modultradeStorage.getProposalById(id);
    ^-----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:134:5: Warning: Invoking events without "emit" prefix is deprecated.
    InsertProposalEvent(proposal, id, seller);
    ^---------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:160:5: Warning: Invoking events without "emit" prefix is deprecated.
    PaidProposalEvent(proposal, id);
    ^-----------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:263:5: Warning: Invoking events without "emit" prefix is deprecated.
    PaidEvent(id, state, buyer);
    ^-------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:292:5: Warning: Invoking events without "emit" prefix is deprecated.
    DeliveryEvent(id, state, deliveryId);
    ^----------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:308:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    ClosedEvent(id, state, seller, this.balance);
                                   ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:308:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClosedEvent(id, state, seller, this.balance);
    ^------------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:316:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    seller.transfer(this.balance);
                    ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:339:37: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    CanceledEvent(id, state, buyer, this.balance);
                                    ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:339:5: Warning: Invoking events without "emit" prefix is deprecated.
    CanceledEvent(id, state, buyer, this.balance);
    ^-------------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:345:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (cancelFee > this.balance) {
                    ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:346:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      _fee = this.balance;
             ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:349:9: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (this.balance > 0 && buyer != address(0)) {
        ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:350:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      buyer.transfer(this.balance);
                     ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:372:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    return this.balance;
           ^----------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:413:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEvent (address(proposal), 'ModultradeProposal', 1);
    ^---------------------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:420:5: Warning: Invoking events without "emit" prefix is deprecated.
    ProposalCreatedEvent(proposal.id(), address(proposal));
    ^----------------------------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:431:5: Warning: Invoking events without "emit" prefix is deprecated.
    PaidProposalEvent(proposal, id);
    ^-----------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:437:5: Warning: Invoking events without "emit" prefix is deprecated.
    CancelProposalEvent(proposal, id);
    ^-------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:443:5: Warning: Invoking events without "emit" prefix is deprecated.
    CloseProposalEvent(proposal, id);
    ^------------------------------^
/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:449:5: Warning: Invoking events without "emit" prefix is deprecated.
    DeliveryProposalEvent(proposal, id);
    ^---------------------------------^

INFO:Detectors:[91m
ModultradeProposal.closeEth (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#326-328) sends eth to arbitrary user
	Dangerous calls:
	- feeAddress.transfer(fee) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#327)
	- seller.transfer(this.balance) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#328)
ModultradeProposal.cancelEth (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#355-367) sends eth to arbitrary user
	Dangerous calls:
	- feeAddress.transfer(_fee) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#361-362)
	- buyer.transfer(this.balance) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#363-364)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in ModultradeProposal.cancel (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#332-355):
	External calls:
	- _balance = getBalance() (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#339)
	- cancelMtr(cancelFee) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#346-348)
	External calls sending eth:
	- cancelEth(cancelFee) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#343-344)
	State variables written after the call(s):
	- state (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#348-349)
Reentrancy in ModultradeProposal.close (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#303-326):
	External calls:
	- closeMtr() (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#316-318)
	External calls sending eth:
	- closeEth() (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#313)
	State variables written after the call(s):
	- state (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#319-321)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
ModultradeProposal.closeMtr (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#328-332) does not use the value returned by external calls:
	-mtrContract.transfer(feeAddress,fee) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#329-331)
	-mtrContract.transfer(seller,getBalance()) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#331-332)
ModultradeProposal.cancelMtr (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#367-382) does not use the value returned by external calls:
	-mtrContract.transfer(feeAddress,_fee) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#372-376)
	-mtrContract.transfer(buyer,_balance) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#380-382)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in ModultradeProposal.paid (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#274-279):
	External calls:
	- require(bool)(getBalance() >= total) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#276-279)
	- setPaid(_buyer) (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#279)
	State variables written after the call(s):
	- payDate (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#279)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20.totalSupply should be constant (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#10-12)
ModultradeStorage._doMigrate should be constant (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#119)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20.balanceOf (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#12-14) should be declared external
ERC20.allowance (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#14-16) should be declared external
ERC20.transfer (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#16-18) should be declared external
ERC20.transferFrom (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#18-20) should be declared external
ERC20.approve (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#20-22) should be declared external
ModultradeProposal.tokenFallback (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#288-290) should be declared external
ContractReceiver.tokenFallback (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#29-32) should be declared external
ModultradeStorage.insertProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#130-141) should be declared external
ModultradeStorage.getProposalsBySeller (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#141-145) should be declared external
ModultradeStorage.getProposals (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#145-149) should be declared external
ModultradeStorage.getProposalById (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#149-153) should be declared external
ModultradeStorage.getCount (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#153-157) should be declared external
ModultradeStorage.getCountBySeller (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#157-160) should be declared external
ModultradeStorage.firePaidProposalEvent (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#161-171) should be declared external
ModultradeStorage.changeOwner (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#171-179) should be declared external
ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#234-252) should be declared external
ModultradeProposal.setFee (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#252-258) should be declared external
ModultradeProposal.fallback (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#259) should be declared external
ModultradeProposal.paid (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#274-279) should be declared external
ModultradeProposal.tokenFallback (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#290-293) should be declared external
ModultradeProposal.delivery (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#293-303) should be declared external
ModultradeProposal.close (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#303-326) should be declared external
ModultradeProposal.cancel (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#332-355) should be declared external
Modultrade.createProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#414-435) should be declared external
Modultrade.transferStorage (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#435-440) should be declared external
Modultrade.firePaidProposalEvent (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#440-446) should be declared external
Modultrade.fireCancelProposalEvent (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#446-452) should be declared external
Modultrade.fireCloseProposalEvent (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol) should be declared external
Modultrade.fireDeliveryProposalEvent (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol:
	- pragma solidity^0.4.18 (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#44-47) is not in mixedCase
Function 'Deployer.Deployer' (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#68-69) is not in mixedCase
Function 'ModultradeStorage.ModultradeStorage' (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#129-130) is not in mixedCase
Function 'ModultradeProposal.ModultradeProposal' (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#222-234) is not in mixedCase
Parameter '_modultrade' of ModultradeProposal.ModultradeProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#223) is not in mixedCase
Parameter '_seller' of ModultradeProposal.ModultradeProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#223-226) is not in mixedCase
Parameter '_mtrContractAddress' of ModultradeProposal.ModultradeProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#226-227) is not in mixedCase
Parameter '_id' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#234-235) is not in mixedCase
Parameter '_title' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#235-236) is not in mixedCase
Parameter '_price' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#236-237) is not in mixedCase
Parameter '_currency' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#237-239) is not in mixedCase
Parameter '_units' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#239) is not in mixedCase
Parameter '_total' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#240) is not in mixedCase
Parameter '_validUntil' of ModultradeProposal.setProposal (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#240-241) is not in mixedCase
Parameter '_fee' of ModultradeProposal.setFee (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#252) is not in mixedCase
Parameter '_feeAddress' of ModultradeProposal.setFee (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#252-253) is not in mixedCase
Parameter '_buyer' of ModultradeProposal.setPaid (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#264-265) is not in mixedCase
Parameter '_buyer' of ModultradeProposal.paid (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#274-275) is not in mixedCase
Parameter '_deliveryId' of ModultradeProposal.delivery (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#293-296) is not in mixedCase
Function 'Modultrade.Modultrade' (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#405-413) is not in mixedCase
Parameter '_owner' of Modultrade.Modultrade (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#406-407) is not in mixedCase
Parameter '_oracle' of Modultrade.Modultrade (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#407-408) is not in mixedCase
Parameter '_mtrContractAddress' of Modultrade.Modultrade (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#408-410) is not in mixedCase
Parameter '_storageAddress' of Modultrade.Modultrade (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#410-411) is not in mixedCase
Parameter '_owner' of Modultrade.transferStorage (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#435-436) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ModultradeStorage._doMigrate (/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol#119) is never used in ModultradeStorage
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/11/0x74cebf05e472afb012896a9dafc3ce057233136f.sol analyzed (9 contracts), 64 result(s) found