INFO:Slither:Compilation warnings/errors on /unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:111:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function StandardToken(Crowdsale x){
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:124:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:179:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:211:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function MintableToken(Crowdsale x) StandardToken(x){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:260:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DjohniKrasavchickToken(Crowdsale x) MintableToken(x){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:305:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Crowdsale() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:83:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:132:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:150:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:236:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:246:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:336:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if(hardcap==this.balance){
                    ^----------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:366:15: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      require(this.balance <= hardcap && !isHardCapWasReached );
              ^----------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:376:15: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      require(this.balance < softcap && now > start + period * 1 hours);
              ^----------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:383:10: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if(this.balance > softcap) {
         ^----------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:384:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        myWalletForETH.transfer(this.balance);
                                ^----------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:399:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:11:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:20:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:21:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:80:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) crowdsaleIsOverOrThisIsContract returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:92:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:111:3: Warning: No visibility specified. Defaulting to "public". 
  function StandardToken(Crowdsale x){
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:123:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:141:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:160:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:179:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:195:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:211:6: Warning: No visibility specified. Defaulting to "public". 
     function MintableToken(Crowdsale x) StandardToken(x){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:232:3: Warning: No visibility specified. Defaulting to "public". 
  function mint(address _to, uint256 _amount) onlyOwner canMint returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:244:3: Warning: No visibility specified. Defaulting to "public". 
  function finishMinting() onlyOwner returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:260:5: Warning: No visibility specified. Defaulting to "public". 
    function DjohniKrasavchickToken(Crowdsale x) MintableToken(x){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:305:5: Warning: No visibility specified. Defaulting to "public". 
    function Crowdsale() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:342:5: Warning: No visibility specified. Defaulting to "public". 
    function stopCrowdSaleOnlyForOwner() onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:375:5: Warning: No visibility specified. Defaulting to "public". 
    function refund() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:403:4: Warning: No visibility specified. Defaulting to "public". 
   function createTokens() isUnderHardCap saleIsOn payable {
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:422:5: Warning: No visibility specified. Defaulting to "public". 
    function addBountyAdresses(address[] array) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:428:5: Warning: No visibility specified. Defaulting to "public". 
    function distributeBountyTokens() onlyOwner crowdsaleIsOver{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:436:9: Warning: No visibility specified. Defaulting to "public". 
        function distributeDjonniTokens(address addr) onlyOwner crowdsaleIsOver{
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:32:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:38:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:45:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:50:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:317:5: Warning: Function state mutability can be restricted to view
    function getContractAddress() public returns(address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:328:5: Warning: Function state mutability can be restricted to view
    function isCrowsdaleTimeFinished() internal returns(bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:398:5: Warning: Function state mutability can be restricted to view
    function showThisBallance() public returns (uint){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in Crowdsale.fallback (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#425-431):
	External calls:
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- createTokens() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	External calls sending eth:
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	State variables written after the call(s):
	- isHardCapWasReached (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
Reentrancy in Crowdsale.fallback (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#425-431):
	External calls:
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- createTokens() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	External calls sending eth:
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	State variables written after the call(s):
	- developerTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	- isCrowdsaleStoped (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	- isHardCapWasReached (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
Reentrancy in Crowdsale.stopCrowdSale (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#362-371):
	External calls:
	- token.mintingFinished() == false (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-369)
	- finishMinting() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-367)
	External calls sending eth:
	- finishMinting() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-367)
	State variables written after the call(s):
	- isCrowdsaleStoped (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#370)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Crowdsale.isHardCapReached (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#348-356) uses a dangerous strict equality:
	- hardcap == this.balance
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.distributeDjonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol):
	External calls:
	- token.transfer(addr,djonniTokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol)
	State variables written after the call(s):
	- djonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Crowdsale.finishMinting (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#388-412) does not use the value returned by external calls:
	-token.mint(this,tokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#396-398)
	-token.finishMinting() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#398)
	-token.transfer(myWalletForETH,developerTokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#407-412)
Crowdsale.createTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#416-424) does not use the value returned by external calls:
	-token.mint(this,tokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#422)
	-token.transfer(msg.sender,tokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#422-423)
Crowdsale.distributeBountyTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#437-444) does not use the value returned by external calls:
	-token.transfer(bountyAdresses[i],amountofTokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol)
Crowdsale.distributeDjonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol) does not use the value returned by external calls:
	-token.transfer(addr,djonniTokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Crowdsale.distributeBountyTokens has external calls inside a loop:
	- token.transfer(bountyAdresses[i],amountofTokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.createTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#416-424):
	External calls:
	- token.mint(this,tokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#422)
	- token.transfer(msg.sender,tokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#422-423)
	State variables written after the call(s):
	- balances (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#423-424)
Reentrancy in Crowdsale.fallback (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#425-431):
	External calls:
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- createTokens() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	External calls sending eth:
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#429)
	- stopCrowdSale() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	State variables written after the call(s):
	- bountyTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
	- djonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#430-431)
Reentrancy in Crowdsale.finishMinting (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#388-412):
	External calls:
	- issuedTokenSupply = token.totalSupply() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#391-392)
	- token.mint(this,tokens) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#396-398)
	- token.finishMinting() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#398)
	- issuedTokenSupply = token.totalSupply() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#399-403)
	External calls sending eth:
	- myWalletForETH.transfer(this.balance) (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#391)
	State variables written after the call(s):
	- bountyTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#403-404)
	- developerTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#404-406)
	- djonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#406-407)
Reentrancy in Crowdsale.stopCrowdSale (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#362-371):
	External calls:
	- token.mintingFinished() == false (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-369)
	- finishMinting() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-367)
	External calls sending eth:
	- finishMinting() (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-367)
	State variables written after the call(s):
	- bountyTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-367)
	- djonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#366-367)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#10-11) should be declared external
BasicToken.balanceOf (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#93-101) should be declared external
BasicToken.transfer (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#80-89) should be declared external
ERC20Basic.transfer (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#11-12) should be declared external
ERC20.allowance (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#20-21) should be declared external
StandardToken.allowance (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#167-169) should be declared external
StandardToken.transferFrom (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#124-138) should be declared external
ERC20.transferFrom (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#21-22) should be declared external
ERC20.approve (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#22-23) should be declared external
StandardToken.approve (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#143-156) should be declared external
Ownable.transferOwnership (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#204-206) should be declared external
MintableToken.mint (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#236-249) should be declared external
MintableToken.finishMinting (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#254-260) should be declared external
Crowdsale.getContractAddress (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#328-330) should be declared external
Crowdsale.stopCrowdSaleOnlyForOwner (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#356-361) should be declared external
Crowdsale.refund (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#385-388) should be declared external
Crowdsale.showThisBallance (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#413-415) should be declared external
Crowdsale.addBountyAdresses (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#431-437) should be declared external
Crowdsale.distributeBountyTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#437-444) should be declared external
Crowdsale.distributeDjonniTokens (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol:
	- pragma solidity^0.4.15 (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#97-99) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#81) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#81) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#168) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#168) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#126) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#126) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#126) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#144) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#144) is not in mixedCase
Function 'StandardToken.StandardToken' (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#118-119) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#187-192) is not in mixedCase
Function 'MintableToken.MintableToken' (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#221-227) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#236-237) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#237-239) is not in mixedCase
Function 'DjohniKrasavchickToken.DjohniKrasavchickToken' (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#275-279) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol#314-328) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/27/0x15e365ca920bae8fecc9d550d2c9dfcb33121873.sol analyzed (9 contracts), 52 result(s) found