INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:70:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GDU() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:135:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:136:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:137:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:138:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:147:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:155:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:156:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:157:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:158:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:159:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:168:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:169:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:177:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:178:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:186:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:187:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:196:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:123:55: Warning: Using "years" as a unit denomination is deprecated.
        uint256 times = (currentTime  - createTime) / 1 years;
                                                      ^-----^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:141:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:163:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:172:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:181:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:190:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function GDU() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:111:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawUnlockMonth() onlyMounthWithdrawer {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:120:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawUnlockYear() onlyYearWithdrawer {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:134:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:145:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:167:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:176:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:185:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:195:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:201:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
GDU (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#38-203) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#135-146)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#137:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#157:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#159:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#161:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#171:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#179:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#180:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#188:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#189:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
GDU.withdrawUnlockMonth (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#113-122) should be declared external
GDU.withdrawUnlockYear (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#122-135) should be declared external
GDU.transfer (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#135-146) should be declared external
GDU.approve (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#148-154) should be declared external
GDU.transferFrom (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#155-169) should be declared external
GDU.burn (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#169-178) should be declared external
GDU.freeze (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#178-187) should be declared external
GDU.unfreeze (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#188-202) should be declared external
GDU.withdrawEther (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol) should be declared external
GDU.fallback (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol:
	- pragma solidity^0.4.8 (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'GDU.GDU' (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#71-100) is not in mixedCase
Parameter '_to' of GDU.transfer (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#135) is not in mixedCase
Parameter '_value' of GDU.transfer (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#135-136) is not in mixedCase
Parameter '_spender' of GDU.approve (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#149) is not in mixedCase
Parameter '_value' of GDU.approve (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#149-151) is not in mixedCase
Parameter '_from' of GDU.transferFrom (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#155) is not in mixedCase
Parameter '_to' of GDU.transferFrom (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#155) is not in mixedCase
Parameter '_value' of GDU.transferFrom (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#155-156) is not in mixedCase
Parameter '_value' of GDU.burn (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#170) is not in mixedCase
Parameter '_value' of GDU.freeze (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#179) is not in mixedCase
Parameter '_value' of GDU.unfreeze (/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol#188) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0xc9cf692366d5fbf1c9f32ac35f08378ed090b1fb.sol analyzed (2 contracts), 42 result(s) found