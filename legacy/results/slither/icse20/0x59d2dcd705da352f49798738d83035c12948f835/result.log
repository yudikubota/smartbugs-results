INFO:Slither:Compilation warnings/errors on /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:
/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:1942:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomNumber = uint(keccak256(result)) % query.range;
                                    ^---------------^
/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:1942:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
                randomNumber = uint(keccak256(result)) % query.range;
                                    ^---------------^
/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:1967:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomNumber = uint(keccak256(result)) % token.ethLotteryBank();
                                ^---------------^
/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:1967:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            randomNumber = uint(keccak256(result)) % token.ethLotteryBank();
                                ^---------------^

INFO:Detectors:[91m
Game.refundBet (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1946-1952) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(queries[queryId].amount) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1951-1952)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	State variables written after the call(s):
	- lotteryStage (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2041-2042)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	State variables written after the call(s):
	- maxRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
	- minRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
	- token.updateEthLotteryBank(token.ethLotteryBalances(tokensHolder)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2043-2045)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	State variables written after the call(s):
	- lotterySize (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2050-2051)
	- lotteryStage (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2051)
	- tokensHolders (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2050)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
	- token.updateEthLotteryBank(token.ethLotteryBalances(tokensHolder)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2043-2045)
	- lotteryQueryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	- lotteryQueryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	State variables written after the call(s):
	- OAR (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	- lotteryQueryId (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	- oraclize (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Buffer.init (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#142-156) is declared view but contains assembly code
Buffer.append (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#175-217) is declared view but contains assembly code
Buffer.append (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#226-243) is declared view but contains assembly code
Buffer.appendInt (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#250-273) is declared view but contains assembly code
usingOraclize.getCodeSize (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#840-845) is declared view but contains assembly code
usingOraclize.copyBytes (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1213-1237) is declared view but contains assembly code
usingOraclize.safeMemoryCleaner (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1332-1334) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Game.constructor (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1805-1810):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1807-1808)
	- oraclize_setCustomGasPrice(5000000000) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1808-1809)
	State variables written after the call(s):
	- OAR (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1808-1809)
	- oraclize (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1808-1809)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#371-376):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#373-375)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#375)
	State variables written after the call(s):
	- oraclize (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#375)
Reentrancy in Game.sendBonusTokens (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1906-1940):
	External calls:
	- token.buyTokens(player,tokensAmount) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1934-1935)
	State variables written after the call(s):
	- playersIndex (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1936)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
buf in usingOraclize.stra2cbor (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#993-994) is a local variable never initialiazed
range in Game.placeBet (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1836) is a local variable never initialiazed
i in Game.sendBonusTokens (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1921) is a local variable never initialiazed
winChance in Game.placeBet (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1836) is a local variable never initialiazed
buf in usingOraclize.ba2cbor (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1001) is a local variable never initialiazed
isWin in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1985) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
CBOR.encodeType (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#282-303) does not use the value returned by external calls:
	-buf.appendInt(value,1) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#289)
	-buf.appendInt(value,2) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#291-295)
	-buf.appendInt(value,4) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#296)
	-buf.appendInt(value,8) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#300)
CBOR.encodeBytes (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#317-322) does not use the value returned by external calls:
	-buf.append(value) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#322)
CBOR.encodeString (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#324-329) does not use the value returned by external calls:
	-buf.append(bytes(value)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#329)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Detailed.constructor.name (local variable @ /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1445-1446) shadows:
	- ERC20Detailed.name (function @ /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1453-1454)
ERC20Detailed.constructor.symbol (local variable @ /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1446-1447) shadows:
	- ERC20Detailed.symbol (function @ /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1456-1460)
ERC20Detailed.constructor.decimals (local variable @ /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1447) shadows:
	- ERC20Detailed.decimals (function @ /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1461-1463)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Game.__callback has external calls inside a loop:
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
Game.__callback has external calls inside a loop:
	- token.updateEthLotteryBank(token.ethLotteryBalances(tokensHolder)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2043-2045)
Game.lottery has external calls inside a loop:
	- participantBalance = token.ethLotteryBalances(participant) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1895-1896)
Game.updateLotteryRanges has external calls inside a loop:
	- participantBalance = token.ethLotteryBalances(participant) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2063-2064)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	State variables written after the call(s):
	- oraclize_randomDS_args (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1981-2008)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1981-2008)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	External calls sending eth:
	- sendWin(query.gamer,query.amount) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1982)
	State variables written after the call(s):
	- waitingPrizes (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1982)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	External calls sending eth:
	- sendWin(query.gamer,query.prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1987)
	State variables written after the call(s):
	- waitingPrizes (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1987)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	External calls sending eth:
	- sendWin(query.gamer,query.prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1993-1994)
	State variables written after the call(s):
	- waitingPrizes (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1993-1994)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	External calls sending eth:
	- sendWin(query.gamer,query.amount) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1982)
	- sendWin(query.gamer,query.prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1987)
	- sendWin(query.gamer,query.prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1993-1994)
	State variables written after the call(s):
	- queries (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2008-2009)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	State variables written after the call(s):
	- tokensHolders (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2036)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	State variables written after the call(s):
	- waitingPrizes (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
	- token.updateEthLotteryBank(token.ethLotteryBalances(tokensHolder)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2043-2045)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	State variables written after the call(s):
	- lastLotteryTime (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2051-2052)
Reentrancy in Game.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056):
	External calls:
	- require(bool,string)((msg.sender == oraclize_cbAddress()),Sender must be Oraclize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1975-1976)
	- randomNumber = uint256(keccak256()(result)) % token.ethLotteryBank() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2015)
	- WinLottery(tokensHolder,prize,token.ethLotteryBalances(tokensHolder),lotteryRound) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2040-2041)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2042-2043)
	- token.updateEthLotteryBank(token.ethLotteryBalances(tokensHolder)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2043-2045)
	- lotteryQueryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	External calls sending eth:
	- sendWin(tokensHolder,prize) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2037-2040)
	- lotteryQueryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
	- oraclize_randomDS_args (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2055-2056)
Reentrancy in Game.constructor (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1805-1810):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1807-1808)
	- oraclize_setCustomGasPrice(5000000000) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1808-1809)
	State variables written after the call(s):
	- beneficiar (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1809-1810)
	- callbackGas (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1809)
	- oraclize_network_name (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1808-1809)
Reentrancy in Game.lottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1880-1905):
	External calls:
	- require(bool)(token.ethLotteryBank() > 0) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1886-1887)
	- lotteryParticipants = token.ethLotteryParticipants() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1888-1889)
	- participantBalance = token.ethLotteryBalances(participant) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1895-1896)
	State variables written after the call(s):
	- tokensHolders (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1898)
Reentrancy in Game.lottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1880-1905):
	External calls:
	- require(bool)(token.ethLotteryBank() > 0) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1886-1887)
	- lotteryParticipants = token.ethLotteryParticipants() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1888-1889)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1901)
	State variables written after the call(s):
	- lotteryRound (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1901-1902)
	- maxRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1901)
	- minRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1901)
Reentrancy in Game.lottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1880-1905):
	External calls:
	- require(bool)(token.ethLotteryBank() > 0) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1886-1887)
	- ! token.isEthLottery() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1888-1902)
	- lotteryParticipants = token.ethLotteryParticipants() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1888-1889)
	- updateLotteryRanges() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1901)
	- token.startEthLottery() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1905)
	- lotteryQueryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1905)
	External calls sending eth:
	- lotteryQueryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1905)
	State variables written after the call(s):
	- lotteryQueryId (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1905)
	- oraclize_network_name (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1905)
	- oraclize_randomDS_args (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1905)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1011-1071):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1025-1026)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1032-1033)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1032-1033)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1032-1033)
	- oraclize_randomDS_args (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1065-1069)
Reentrancy in Game.placeBet (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1829-1880):
	External calls:
	- queryId = random() (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1870-1871)
	State variables written after the call(s):
	- beneficiarFund (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1871)
	- betsBalances (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1872-1873)
	- lotterySize (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1871)
	- queries (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1875-1876)
	- queries (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1876-1878)
Reentrancy in Game.random (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol):
	External calls:
	- require(bool)(address(this).balance >= oraclize_getPrice(random,callbackGas)) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol)
	- queryId = oraclize_newRandomDSQuery(0,4,callbackGas) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol)
	External calls sending eth:
	- queryId = oraclize_newRandomDSQuery(0,4,callbackGas) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol)
	- oraclize_randomDS_args (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol)
Reentrancy in Game.updateLotteryRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2056-2068):
	External calls:
	- participantBalance = token.ethLotteryBalances(participant) (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2063-2064)
	State variables written after the call(s):
	- maxRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2066-2068)
	- minRanges (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#2064-2065)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Buffer.init uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#142-156)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#149-156
Buffer.append uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#175-217)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#185-202
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#203-206
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#213-217
Buffer.append uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#226-243)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#230-243
Buffer.appendInt uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#250-273)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#256-272
usingOraclize.getCodeSize uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#840-845)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#844-845
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1011-1071)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1026-1030
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1030-1031
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1037-1068
usingOraclize.verifySig uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1079-1097)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1089-1090
usingOraclize.copyBytes uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1213-1237)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1229-1232
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1240-1267)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1256-1267
usingOraclize.ecrecovery uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1269-1331)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1290-1325
usingOraclize.safeMemoryCleaner uses assembly (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1332-1334)
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1332-1334
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#95)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:
	- Version used: ['>=0.4.22<0.5', '^0.4.24']
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1 declares pragma solidity^0.4.24
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#91 declares pragma solidity>=0.4.22<0.5
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1334-1335 declares pragma solidity^0.4.24
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1407 declares pragma solidity^0.4.24
	- /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1434 declares pragma solidity^0.4.24
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
OraclizeI.query2 (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#97-98) should be declared external
OraclizeI.queryN (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#99-100) should be declared external
OraclizeI.getPrice (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#102-103) should be declared external
OraclizeI.getPrice (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#103-104) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#114-116) should be declared external
usingOraclize.__callback (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#419-420) should be declared external
Ownable.owner (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1355-1356) should be declared external
Ownable.renounceOwnership (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1378-1382) should be declared external
Ownable.transferOwnership (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1390-1391) should be declared external
ERC20Detailed.name (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1453-1454) should be declared external
ERC20Detailed.symbol (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1456-1460) should be declared external
ERC20Detailed.decimals (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1461-1463) should be declared external
ERC20.totalSupply (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1483-1484) should be declared external
IERC20.totalSupply (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1414-1415) should be declared external
ERC20.balanceOf (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1487-1489) should be declared external
IERC20.balanceOf (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1416-1420) should be declared external
IERC20.allowance (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1421-1423) should be declared external
ERC20.allowance (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1499-1501) should be declared external
IERC20.transfer (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1426-1429) should be declared external
ERC20.transfer (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1505-1506) should be declared external
ERC20.approve (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1521-1526) should be declared external
IERC20.approve (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1429-1430) should be declared external
IERC20.transferFrom (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1431) should be declared external
ERC20.transferFrom (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1537-1543) should be declared external
ERC20.increaseAllowance (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1557-1566) should be declared external
ERC20.decreaseAllowance (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1580-1588) should be declared external
BonusToken.buyTokens (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1674-1678) should be declared external
BonusToken.startEthLottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1678-1679) should be declared external
BonusToken.startTokensLottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1679-1682) should be declared external
BonusToken.restartEthLottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1683-1690) should be declared external
BonusToken.restartTokensLottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1690-1699) should be declared external
BonusToken.updateEthLotteryBank (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1699-1703) should be declared external
BonusToken.updateTokensLotteryBank (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1703-1707) should be declared external
BonusToken.swapTokens (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1707-1715) should be declared external
BonusToken.sendToEthLottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1715-1732) should be declared external
BonusToken.sendToTokensLottery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1733-1746) should be declared external
BonusToken.ethLotteryParticipants (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1746-1748) should be declared external
BonusToken.tokensLotteryParticipants (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1748-1754) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol:
	- pragma solidity>=0.4.22<0.5 (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#91): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#96-97) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#98-99) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#100-102) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#108-113) is not in mixedCase
Struct 'Buffer.buffer' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#141-142) is not in CapWords
Parameter '_capacity' of Buffer.init (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#143) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#346-1334) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#377-381) is not in mixedCase
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#381-419) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#419-420) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#420-432) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#432-434) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#434-436) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#437-441) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#441-446) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#446-451) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#451-456) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#456-461) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#461-466) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#466-471) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#471-477) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#477-483) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#483-489) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#489-495) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#495-503) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#503-508) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#508-513) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#513-520) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#520-526) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#526-530) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#531-536) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#537-544) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#544-550) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#551-556) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#556-563) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#563-573) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#573-580) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#581-587) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#587-595) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#595-605) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#605-613) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#614-621) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#622-630) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#631-639) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#639-646) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#646-651) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#651-657) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#657-666) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#666-672) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#672-676) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#676-682) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#683-689) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#689-694) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#694-700) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#700-706) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#706-713) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#713-720) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#720-727) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#727-735) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#735-743) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#743-751) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#751-758) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#759-767) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#767-776) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#776-785) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#785-792) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#792-801) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#801-814) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#814-826) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#826-830) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#831-834) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#834-836) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#836-839) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#846) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#868) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#868-869) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#889) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#889) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#906) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#906-907) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#907) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#907) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#907) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#932) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#932) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#932-933) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#933) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#936) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#936-937) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#937-938) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#942-943) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#943) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#949-950) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#954) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#954-955) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1006-1008) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1007) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1008-1011) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1011-1071) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1012-1013) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1013) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1013) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1071-1076) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1097-1134) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1146-1154) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1147-1148) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1148) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1148) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1155) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1158-1212) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1160) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1240-1267) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#347) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#348) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#349) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#350) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#351-352) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#352-353) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#354-356) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#356-358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#358-359) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#359-361) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#361-362) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#362-364) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#364-366) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#367) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1006) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1076) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1076-1078) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1136-1146) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1398-1407) is not in mixedCase
Function 'ERC20._transfer' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1598-1605) is not in mixedCase
Function 'ERC20._mint' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1619-1627) is not in mixedCase
Function 'ERC20._burn' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1636-1644) is not in mixedCase
Function 'Game.__callback' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1973-2056) is not in mixedCase
Constant 'Game.GAME_COIN_FlIP' (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#1760-1761) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#347) is never used in Game
usingOraclize.week (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#348) is never used in Game
usingOraclize.month (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#349) is never used in Game
usingOraclize.proofType_NONE (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#350) is never used in Game
usingOraclize.proofType_TLSNotary (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#351-352) is never used in Game
usingOraclize.proofType_Android (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#354-356) is never used in Game
usingOraclize.proofType_Native (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#356-358) is never used in Game
usingOraclize.proofStorage_IPFS (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#358) is never used in Game
usingOraclize.networkID_mainnet (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#359-361) is never used in Game
usingOraclize.networkID_testnet (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#361-362) is never used in Game
usingOraclize.networkID_morden (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#362-364) is never used in Game
usingOraclize.networkID_consensys (/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol#364-366) is never used in Game
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/24/0x59d2dcd705da352f49798738d83035c12948f835.sol analyzed (12 contracts), 238 result(s) found