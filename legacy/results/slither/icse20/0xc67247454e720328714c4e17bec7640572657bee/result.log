INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:16:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Permissioned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:37:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ENSReverseRegister(address registry, string name) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:39:13: Warning: Use of the "var" keyword is deprecated.
            var reverseRegistrar = RegistryRef(registry).owner(0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2);
            ^------------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:144:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DomainSale(address _registry) public ENSReverseRegister(_registry, CONTRACT_ENS) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:61:9: Warning: Invoking events without "emit" prefix is deprecated.
        Pause();
        ^-----^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:66:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unpause();
        ^-------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:121:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:121:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:128:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:128:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:186:9: Warning: Invoking events without "emit" prefix is deprecated.
        Offer(msg.sender, _name, _price, reserve);
        ^---------------------------------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:190:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        registrar.transfer(keccak256(_name), msg.sender);
                           ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:190:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        registrar.transfer(keccak256(_name), msg.sender);
                           ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:191:9: Warning: Invoking events without "emit" prefix is deprecated.
        Cancel(_name);
        ^-----------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:198:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:198:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:200:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        registrar.transfer(keccak256(_name), msg.sender);
                           ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:200:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        registrar.transfer(keccak256(_name), msg.sender);
                           ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:201:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(previousOwner, msg.sender, _name, msg.value);
        ^---------------------------------------------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:219:9: Warning: Invoking events without "emit" prefix is deprecated.
        Bid(msg.sender, _name, msg.value);
        ^-------------------------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:226:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:226:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:228:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        registrar.transfer(keccak256(_name), s.lastBidder);
                           ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:228:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        registrar.transfer(keccak256(_name), s.lastBidder);
                           ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:229:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(previousOwner, s.lastBidder, _name, s.lastBid);
        ^-----------------------------------------------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:239:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(msg.sender, amount);
            ^--------------------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:244:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:244:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        (,deed,,,) = registrar.entries(keccak256(_name));
                                       ^--------------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:249:9: Warning: Invoking events without "emit" prefix is deprecated.
        Cancel(_name);
        ^-----------^
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:71:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:76:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:80:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:84:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
DomainSale.auctionNotStarted (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#136-141) uses a dangerous strict equality:
	- require(bool)(sales[_name].auctionStarted == 0)
	- require(bool)(sales[_name].auctionStarted == 0)
DomainSale.auctionNotStarted (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#136-141) uses a dangerous strict equality:
	- require(bool)(sales[_name].auctionStarted == 0)
	- require(bool)(sales[_name].auctionStarted == 0)
DomainSale.isBuyable (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#157-160) uses a dangerous strict equality:
	- sales[_name].price != 0 && sales[_name].auctionStarted == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DomainSale.buy (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#196-209):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#201-202)
	- previousOwner = deed.previousOwner() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#202)
	- registrar.transfer(keccak256()(_name),msg.sender) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#203-205)
	State variables written after the call(s):
	- sales (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#207-208)
Reentrancy in DomainSale.finish (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#226-239):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#229-230)
	- previousOwner = deed.previousOwner() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#230-231)
	- registrar.transfer(keccak256()(_name),s.lastBidder) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#231-234)
	State variables written after the call(s):
	- sales (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#238-239)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ENSReverseRegister.ENSReverseRegister (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#37-47) does not use the value returned by external calls:
	-ReverseRegistrarRef(reverseRegistrar).setName(name) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#41-46)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in DomainSale.buy (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#196-209):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#201-202)
	- previousOwner = deed.previousOwner() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#202)
	- registrar.transfer(keccak256()(_name),msg.sender) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#203-205)
	State variables written after the call(s):
	- balances (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#206-207)
Reentrancy in DomainSale.buy (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#196-209):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#201-202)
	- previousOwner = deed.previousOwner() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#202)
	- registrar.transfer(keccak256()(_name),msg.sender) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#203-205)
	External calls sending eth:
	- withdraw() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#208)
	State variables written after the call(s):
	- balances (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#208)
Reentrancy in DomainSale.finish (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#226-239):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#229-230)
	- previousOwner = deed.previousOwner() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#230-231)
	- registrar.transfer(keccak256()(_name),s.lastBidder) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#231-234)
	State variables written after the call(s):
	- balances (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#236-238)
Reentrancy in DomainSale.finish (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#226-239):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#229-230)
	- previousOwner = deed.previousOwner() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#230-231)
	- registrar.transfer(keccak256()(_name),s.lastBidder) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#231-234)
	External calls sending eth:
	- withdraw() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#239)
	State variables written after the call(s):
	- balances (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#239)
Reentrancy in DomainSale.invalidate (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#247-254):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#250-252)
	State variables written after the call(s):
	- balances (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#252-253)
	- sales (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#253)
Reentrancy in DomainSale.invalidate (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#247-254):
	External calls:
	- (None,deed,None,None,None) = registrar.entries(keccak256()(_name)) (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#250-252)
	External calls sending eth:
	- withdraw() (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#254)
	State variables written after the call(s):
	- balances (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#254)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deed.owner should be constant (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#3-4)
Deed.previousOwner should be constant (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#4-5)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Registry.owner (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#7-9) should be declared external
Registrar.transfer (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#10-11) should be declared external
Registrar.entries (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#11-13) should be declared external
Permissioned.isPermitted (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#23-26) should be declared external
Permissioned.setPermission (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#26-31) should be declared external
RegistryRef.owner (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#31-33) should be declared external
ReverseRegistrarRef.setName (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#34-37) should be declared external
Pausable.pause (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#59-64) should be declared external
Pausable.unpause (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#64-71) should be declared external
DomainSale.sale (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#148-154) should be declared external
DomainSale.isAuction (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#154-156) should be declared external
DomainSale.isBuyable (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#157-160) should be declared external
DomainSale.auctionStarted (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#160-163) should be declared external
DomainSale.auctionEnds (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#163-166) should be declared external
DomainSale.price (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#176-179) should be declared external
DomainSale.balance (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#179-180) should be declared external
DomainSale.offer (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#180-190) should be declared external
DomainSale.cancel (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#190-196) should be declared external
DomainSale.buy (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#196-209) should be declared external
DomainSale.bid (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#209-226) should be declared external
DomainSale.finish (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#226-239) should be declared external
DomainSale.invalidate (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#247-254) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol:
	- pragma solidity^0.4.2 (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Permissioned.Permissioned' (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#16-19) is not in mixedCase
Function 'ENSReverseRegister.ENSReverseRegister' (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#37-47) is not in mixedCase
Function 'DomainSale.DomainSale' (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#145-148) is not in mixedCase
Parameter '_registry' of DomainSale.DomainSale (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#145-147) is not in mixedCase
Parameter '_name' of DomainSale.sale (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#149) is not in mixedCase
Parameter '_name' of DomainSale.isAuction (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#154) is not in mixedCase
Parameter '_name' of DomainSale.isBuyable (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#157) is not in mixedCase
Parameter '_name' of DomainSale.auctionStarted (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#160) is not in mixedCase
Parameter '_name' of DomainSale.auctionEnds (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#163-164) is not in mixedCase
Parameter '_name' of DomainSale.minimumBid (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#167) is not in mixedCase
Parameter '_name' of DomainSale.price (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#177) is not in mixedCase
Parameter '_name' of DomainSale.offer (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#180) is not in mixedCase
Parameter '_price' of DomainSale.offer (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#180-181) is not in mixedCase
Parameter '_name' of DomainSale.cancel (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#191) is not in mixedCase
Parameter '_name' of DomainSale.buy (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#196) is not in mixedCase
Parameter '_name' of DomainSale.bid (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#209) is not in mixedCase
Parameter '_name' of DomainSale.finish (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#227) is not in mixedCase
Parameter '_name' of DomainSale.invalidate (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#247) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Pausable.PERM_PAUSE (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#50-52) is never used in DomainSale
DomainSale.SELLER_SALE_PERCENTAGE (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#100-101) is never used in DomainSale
DomainSale.CONTRACT_ENS (/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol#103) is never used in DomainSale
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/4/0xc67247454e720328714c4e17bec7640572657bee.sol analyzed (10 contracts), 54 result(s) found