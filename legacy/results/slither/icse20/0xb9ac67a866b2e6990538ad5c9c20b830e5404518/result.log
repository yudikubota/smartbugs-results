INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:21:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:528:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function UpgradeableToken(address master) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:670:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintableToken(uint initialSupply, address multisig, bool mintable) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:744:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleToken(uint initial_supply, uint8 token_decimals, address team_multisig, bool mintable, address token_retriever) public
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:871:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function GenericCrowdsale(address team_multisig, uint start, uint end) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1200:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TokenTranchePricing(uint[] init_tranches) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1254:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function DeploymentInfo() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1290:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(uint eth_price_in_eurs, address team_multisig, uint start, uint end, address token_retriever, uint[] init_tranches)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:69:5: Warning: Invoking events without "emit" prefix is deprecated.
    Halted(true);
    ^----------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:75:5: Warning: Invoking events without "emit" prefix is deprecated.
    Halted(false);
    ^-----------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:235:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, to, value);
    ^-----------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:264:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(from, to, value);
    ^-----------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:282:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, spender, value);
    ^----------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:305:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, spender, allowed[msg.sender][spender]);
      ^---------------------------------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:323:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, spender, allowed[msg.sender][spender]);
      ^---------------------------------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:333:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(account, 0, value);
    ^-------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:334:5: Warning: Invoking events without "emit" prefix is deprecated.
    Burned(account, value);
    ^--------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:343:5: Warning: Invoking events without "emit" prefix is deprecated.
    Minted(receiver, amount);
    ^----------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:348:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:550:5: Warning: Invoking events without "emit" prefix is deprecated.
    Upgrade(msg.sender, upgradeAgent, value);
    ^--------------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:571:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpgradeAgentSet(upgradeAgent);
    ^---------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:695:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:964:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:973:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(receiver);
                   ^--------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:973:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
    bytes32 hash = sha256(receiver);
                   ^--------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1039:5: Warning: Invoking events without "emit" prefix is deprecated.
    Finalized();
    ^---------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1048:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1060:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:1068:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:604:3: Warning: Function state mutability can be restricted to pure
  function canUpgrade() public view returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in UpgradeableToken.upgrade (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#551-569):
	External calls:
	- upgradeAgent.upgradeFrom(msg.sender,value) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#562)
	State variables written after the call(s):
	- totalUpgraded (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#567-568)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
LostAndFoundToken.enableLostAndFound (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#654-667) does not use the value returned by external calls:
	-token_contract.approve(agent,tokens) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#665-667)
Crowdsale.finalize (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1416-1426) does not use the value returned by external calls:
	-token.transfer(multisigWallet,unsoldTokens - unsoldTokens.div(2)) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1423-1426)
Crowdsale.assignTokens (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1344-1349) does not use the value returned by external calls:
	-token.transfer(receiver,tokenAmount) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1349)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
StandardToken.transferFrom.allowance (local variable @ /unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#259-261) shadows:
	- StandardToken.allowance (function @ /unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#302-304)
	- EIP20Token.allowance (function @ /unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#166-170)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.finalize (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1416-1426):
	External calls:
	- token.releaseTokenTransfer() (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1418-1422)
	- unsoldTokens = token.balanceOf(address(this)) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1422-1423)
	- token.burn(unsoldTokens.div(2)) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1423)
	- token.transfer(multisigWallet,unsoldTokens - unsoldTokens.div(2)) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1423-1426)
	State variables written after the call(s):
	- finalized (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol)
Reentrancy in GenericCrowdsale.preallocate (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#963-972):
	External calls:
	- tokenAmount = fullTokens.mul(10 ** uint256(token.decimals())) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#968)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#972)
	- tokenAmountOf (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#972)
	- tokensSold (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#972)
	- weiRaised (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#972)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
GenericCrowdsale.GenericCrowdsale (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#900-904) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < start && start < end) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#902-903)
GenericCrowdsale.getState (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1115-1119) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1118)
	- block.timestamp < startsAt (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1117-1118)
TokenTranchePricing.TokenTranchePricing (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1220-1259) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < start && start < end) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1241-1242)
TokenTranchePricing.getCurrentTranche (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1267-1273) uses timestamp for comparisons
	Dangerous comparisons:
	- tranches[i].start <= block.timestamp && block.timestamp < tranches[i].end && tokensSold < tranches[i].amount (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1269-1271)
Crowdsale.setStartingTime (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(startingTime > block.timestamp && startingTime < endsAt) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol)
Crowdsale.setEndingTime (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(endingTime > block.timestamp && endingTime > startsAt) (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleToken.name should be constant (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#742)
CrowdsaleToken.symbol should be constant (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#742)
UpgradeAgent.originalSupply should be constant (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#474-476)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#39-47) should be declared external
EIP20Token.balanceOf (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#163) should be declared external
StandardToken.balanceOf (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#251-252) should be declared external
StandardToken.approve (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#277-290) should be declared external
EIP20Token.approve (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#165-166) should be declared external
StandardToken.allowance (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#302-304) should be declared external
EIP20Token.allowance (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#166-170) should be declared external
StandardToken.addApproval (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#310-318) should be declared external
StandardToken.subApproval (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#322-337) should be declared external
ReleasableToken.setReleaseAgent (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#381-388) should be declared external
ReleasableToken.setTransferAgent (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#389-393) should be declared external
UpgradeAgent.isUpgradeAgent (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#477-482) should be declared external
UpgradeAgent.upgradeFrom (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#498-501) should be declared external
UpgradeableToken.upgrade (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#551-569) should be declared external
UpgradeableToken.changeUpgradeMaster (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#618-622) should be declared external
MintableToken.mint (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#714-717) should be declared external
MintableToken.setMintAgent (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#718-719) should be declared external
CrowdsaleToken.burn (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#806-809) should be declared external
GenericCrowdsale.fallback (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#911-913) should be declared external
GenericCrowdsale.preallocate (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#963-972) should be declared external
GenericCrowdsale.setInvestmentGateway (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1032-1035) should be declared external
GenericCrowdsale.setRequireCustomerId (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1082-1086) should be declared external
GenericCrowdsale.setRequireSignedAddress (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1088-1094) should be declared external
GenericCrowdsale.setEarlyParticipantWhitelist (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1095-1103) should be declared external
TokenTranchePricing.getTranchesLength (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1216-1218) should be declared external
DeploymentInfo.getDeploymentBlock (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1285-1286) should be declared external
Crowdsale.setMinimumBuyValue (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1388-1390) should be declared external
Crowdsale.setStartingTime (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol) should be declared external
Crowdsale.setEndingTime (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol:
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#82-83): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#136-138): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#145-147): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#150-152): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#156-158): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#185): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#202-203): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#448): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#452-453): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#632): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#667-669): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1195-1198): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1284): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#21-27) is not in mixedCase
Variable 'StandardToken.total_supply' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#224-228) is not in mixedCase
Function 'UpgradeableToken.UpgradeableToken' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#544-547) is not in mixedCase
Parameter 'new_master' of UpgradeableToken.changeUpgradeMaster (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#619-622) is not in mixedCase
Parameter 'new_master' of UpgradeableToken.setUpgradeMaster (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#623) is not in mixedCase
Parameter 'token_contract' of LostAndFoundToken.enableLostAndFound (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#655) is not in mixedCase
Function 'MintableToken.MintableToken' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#687-706) is not in mixedCase
Function 'CrowdsaleToken.CrowdsaleToken' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#763-775) is not in mixedCase
Parameter 'initial_supply' of CrowdsaleToken.CrowdsaleToken (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#765-766) is not in mixedCase
Parameter 'token_decimals' of CrowdsaleToken.CrowdsaleToken (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#766) is not in mixedCase
Parameter 'team_multisig' of CrowdsaleToken.CrowdsaleToken (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#766) is not in mixedCase
Parameter 'token_retriever' of CrowdsaleToken.CrowdsaleToken (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#767-768) is not in mixedCase
Variable 'CrowdsaleToken.lost_and_found_master' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#744) is not in mixedCase
Function 'GenericCrowdsale.GenericCrowdsale' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#900-904) is not in mixedCase
Parameter 'team_multisig' of GenericCrowdsale.GenericCrowdsale (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#900) is not in mixedCase
Function 'TokenTranchePricing.TokenTranchePricing' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1220-1259) is not in mixedCase
Parameter 'init_tranches' of TokenTranchePricing.TokenTranchePricing (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1220-1222) is not in mixedCase
Constant 'TokenTranchePricing.amount_offset' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1212) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TokenTranchePricing.start_offset' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1213) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TokenTranchePricing.end_offset' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1213-1214) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TokenTranchePricing.price_offset' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1214) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TokenTranchePricing.tranche_size' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1214-1216) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'DeploymentInfo.DeploymentInfo' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1285) is not in mixedCase
Variable 'DeploymentInfo.deployed_on' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1284-1285) is not in mixedCase
Parameter '' of Crowdsale.calculateTokenAmount (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1351) is not in mixedCase
Parameter 'token_contract' of Crowdsale.enableLostAndFound (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1319-1343) is not in mixedCase
Parameter 'eth_price_in_eurs' of Crowdsale.Crowdsale (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1319) is not in mixedCase
Parameter 'team_multisig' of Crowdsale.Crowdsale (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1319-1320) is not in mixedCase
Parameter 'token_retriever' of Crowdsale.Crowdsale (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1320) is not in mixedCase
Parameter 'init_tranches' of Crowdsale.Crowdsale (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1320-1321) is not in mixedCase
Parameter 'milieurs_amount' of Crowdsale.updateEursPerEth (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol) is not in mixedCase
Constant 'Crowdsale.token_decimals' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1288) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.token_initial_supply' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1288-1290) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.token_mintable' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1290) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Crowdsale.sellable_tokens' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1290-1291) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Crowdsale.minimum_buy_value' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1291-1292) is not in mixedCase
Variable 'Crowdsale.milieurs_per_eth' (/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol#1294) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/30/0xb9ac67a866b2e6990538ad5c9c20b830e5404518.sol analyzed (17 contracts), 82 result(s) found