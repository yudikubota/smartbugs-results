INFO:Slither:Compilation warnings/errors on /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:8:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:15:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:99:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:107:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:112:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:165:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:175:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:179:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:185:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:190:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:195:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:200:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:204:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:211:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:222:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:226:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:245:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:246:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;
                         ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:250:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw;
                              ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:251:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;
                        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:255:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw;
                          ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:256:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw;
                              ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:270:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:281:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:300:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:309:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:313:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:318:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:322:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:351:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:372:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function EthTranchePricing(uint[] _tranches) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:374:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:385:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:391:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:394:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:450:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:98:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:227:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:241:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:244:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:244:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:286:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:291:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:295:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:304:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:321:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:8:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:21:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:31:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:32:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success);
  ^-----------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:37:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:38:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success);
  ^------------------------------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:39:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success);
  ^---------------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:59:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:70:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:81:3: Warning: No visibility specified. Defaulting to "public". 
  function safeMul(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:87:3: Warning: No visibility specified. Defaulting to "public". 
  function safeSub(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:92:3: Warning: No visibility specified. Defaulting to "public". 
  function safeAdd(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:165:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:194:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:278:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:284:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:288:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:293:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:297:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:306:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:344:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:354:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:372:3: Warning: No visibility specified. Defaulting to "public". 
  function EthTranchePricing(uint[] _tranches) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:423:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address _crowdsale) public constant returns(bool) {
                  ^----------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:438:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals) public constant returns (uint) {
                                                      ^-------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:449:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:65:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:70:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:52:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:98:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) private {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:347:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:442:14: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      return safeMul(value,multiplier) / preicoAddresses[msgSender];
             ^-----------------------^
/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:446:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return safeMul(value,multiplier) / price;
           ^-----------------------^

INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:
	Contract EthTranchePricing has payable functions:
	 - fallback (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#278-286):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#284-285)
	State variables written after the call(s):
	- finalized (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#286)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#201-234):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#207-214)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#215-218)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#226-227)
	- weiRaised (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#225-226)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMathLib.assert (function @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#103-107) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#167-199):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#180-184)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#197)
	- minimumFundingGoal (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#198-199)
	- multisigWallet (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#184-188)
	- startsAt (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#194)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#201-234):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#207-214)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#215-218)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#220-221)
	- investorCount (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#219-220)
	- tokenAmountOf (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#221-225)
Reentrancy in Crowdsale.preallocate (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#234-246):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#237-238)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#241-243)
	- tokenAmountOf (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#243-244)
	- tokensSold (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#240-241)
	- weiRaised (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#238-240)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#338-354) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < startsAt (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#342-354)
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#345-354)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply should be constant (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#31)
FractionalERC20.decimals should be constant (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#50-52)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#17:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#190:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#192:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#197:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#197-198:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#200:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#208:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#211-212:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#218:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#229:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#232:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#252:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#254:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#262:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#262:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#282-283:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#289:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#312:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#319:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#321:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#327:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#331:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#361:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#390:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#403:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#407:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#410-411:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#21-29) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#31-32) should be declared external
ERC20Basic.transfer (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#32-33) should be declared external
ERC20.allowance (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#37-38) should be declared external
ERC20.transferFrom (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#38-39) should be declared external
ERC20.approve (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#39-40) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#52-57) should be declared external
FinalizeAgent.isSane (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#59-63) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#63-65) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#66-70) should be declared external
EthTranchePricing.isSane (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#436-438) should be declared external
PricingStrategy.isSane (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#71-75) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#75-81) should be declared external
EthTranchePricing.calculatePrice (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol) should be declared external
SafeMathLib.safeSub (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#89-94) should be declared external
Crowdsale.fallback (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#199-200) should be declared external
Crowdsale.preallocate (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#234-246) should be declared external
Crowdsale.buyWithSignedAddress (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#263-268) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#269-274) should be declared external
Crowdsale.buy (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#275-278) should be declared external
Crowdsale.finalize (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#278-286) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#286-289) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#289-293) should be declared external
Crowdsale.setRequireSignedAddress (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#293-304) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#305-308) should be declared external
Crowdsale.setEndsAt (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#308-314) should be declared external
Crowdsale.loadRefund (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#319-324) should be declared external
Crowdsale.refund (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#324-331) should be declared external
Crowdsale.isFinalizerSane (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#335-336) should be declared external
Crowdsale.isPricingSane (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#336-338) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#354-355) should be declared external
Crowdsale.isCrowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#355-356) should be declared external
EthTranchePricing.setPreicoAddress (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#411-416) should be declared external
EthTranchePricing.getTranche (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#416-420) should be declared external
EthTranchePricing.getPricingStartsAt (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#429-433) should be declared external
EthTranchePricing.getPricingEndsAt (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#434-436) should be declared external
EthTranchePricing.fallback (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#8-13) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#167-199) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#169) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#169-171) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#171-173) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#173) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#173) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#173-174) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#294) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#315-316) is not in mixedCase
Function 'EthTranchePricing.EthTranchePricing' (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#384-411) is not in mixedCase
Parameter '_tranches' of EthTranchePricing.EthTranchePricing (/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol#384) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x486e49d1622fdfc8ca760fcfc17792753a4beca8.sol analyzed (10 contracts), 92 result(s) found