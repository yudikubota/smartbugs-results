INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:35:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSAuth() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:331:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTokenBase(uint supply) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:404:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSToken(bytes32 symbol_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:504:14: Warning: Use of the "var" keyword is deprecated.
        var (wut, haz) = peek();
             ^-^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:504:19: Warning: Use of the "var" keyword is deprecated.
        var (wut, haz) = peek();
                  ^-^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:549:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiVox(uint par_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:581:9: Warning: Use of the "var" keyword is deprecated.
        var age = era() - tau;
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:588:9: Warning: Use of the "var" keyword is deprecated.
        var wag = int128(how * age);
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:705:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiTub(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:816:9: Warning: Use of the "var" keyword is deprecated.
        var rho_ = era();
        ^------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:817:9: Warning: Use of the "var" keyword is deprecated.
        var age = rho_ - rho;
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:821:9: Warning: Use of the "var" keyword is deprecated.
        var inc = RAY;
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:824:13: Warning: Use of the "var" keyword is deprecated.
            var _chi_ = _chi;
            ^-------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:844:9: Warning: Use of the "var" keyword is deprecated.
        var pro = rmul(tag(), ink(cup));
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:845:9: Warning: Use of the "var" keyword is deprecated.
        var con = rmul(vox.par(), tab(cup));
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:846:9: Warning: Use of the "var" keyword is deprecated.
        var min = rmul(con, mat);
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:897:9: Warning: Use of the "var" keyword is deprecated.
        var owe = rmul(wad, rdiv(rap(cup), tab(cup)));
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:905:14: Warning: Use of the "var" keyword is deprecated.
        var (val, ok) = pep.peek();
             ^-^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:905:19: Warning: Use of the "var" keyword is deprecated.
        var (val, ok) = pep.peek();
                  ^^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:921:9: Warning: Use of the "var" keyword is deprecated.
        var rue = tab(cup);
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:928:9: Warning: Use of the "var" keyword is deprecated.
        var owe = rdiv(rmul(rmul(rue, axe), vox.par()), tag());
        ^-----^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:37:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(msg.sender);
        ^---------------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:45:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(owner);
        ^----------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:53:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetAuthority(authority);
        ^------------------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:111:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);
        ^---------------------------------------------------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:230:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:230:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:361:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:369:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, guy, wad);
        ^----------------------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:431:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:455:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(guy, wad);
        ^------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:464:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(guy, wad);
        ^------------^
/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:858:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNewCup(msg.sender, cup);
        ^------------------------^

INFO:Detectors:[93m
Reentrancy in SaiTub.bite (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#948-952):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#950-952)
	- rue = tab(cup) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
Reentrancy in SaiTub.bite (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#948-952):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#950-952)
	- rue = tab(cup) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- sin.mint(tap,rue) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	State variables written after the call(s):
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- rum (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
Reentrancy in SaiTub.bite (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#948-952):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#950-952)
	- rue = tab(cup) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- sin.mint(tap,rue) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- owe = rdiv(rmul(rmul(rue,axe),vox.par()),tag()) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	- skr.push(tap,owe) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
	State variables written after the call(s):
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol)
Reentrancy in SaiTub.draw (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#906-922):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#911-912)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
Reentrancy in SaiTub.draw (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#906-922):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#911-912)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
	- rum (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
Reentrancy in SaiTub.draw (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#906-922):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#911-912)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
	- cups[cup].ire = add(cups[cup].ire,rdiv(wad,rhi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#917-918)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#917-918)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#917-918)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#917-918)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#917-918)
Reentrancy in SaiTub.draw (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#906-922):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#911-912)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#912-913)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#913-915)
	- cups[cup].ire = add(cups[cup].ire,rdiv(wad,rhi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#917-918)
	- sai.mint(cups[cup].lad,wad) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#918-920)
	- require(bool)(safe(cup)) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#920)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#920)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#920)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#920)
Reentrancy in SaiTub.mold (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#765-781):
	External calls:
	- drip() (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#772-773)
	State variables written after the call(s):
	- tax (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#773)
Reentrancy in SaiTub.mold (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#765-781):
	External calls:
	- drip() (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#776)
	State variables written after the call(s):
	- fee (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#776)
Reentrancy in SaiTub.shut (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#940-948):
	External calls:
	- tab(cup) != 0 (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#944-945)
	- wipe(cup,tab(cup)) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
	- rum (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
Reentrancy in SaiTub.shut (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#940-948):
	External calls:
	- tab(cup) != 0 (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#944-945)
	- wipe(cup,tab(cup)) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#945)
	- free(cup,ink(cup)) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#946)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#946)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#946)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#946)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#947-948)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#946)
Reentrancy in SaiTub.wipe (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#922-940):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#925-927)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
Reentrancy in SaiTub.wipe (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#922-940):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#925-927)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
	- rum = sub(rum,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#928-930)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#928-930)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#928-930)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#928-930)
	- rum (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#928-930)
Reentrancy in SaiTub.wipe (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#922-940):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#925-927)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#927-928)
	- rum = sub(rum,rdiv(wad,chi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#928-930)
	- cups[cup].ire = sub(cups[cup].ire,rdiv(add(wad,owe),rhi())) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#930-934)
	State variables written after the call(s):
	- _chi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#930-934)
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#930-934)
	- cups (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#930-934)
	- rho (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#930-934)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SaiTub.safe.min (local variable @ /unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#873-874) shadows:
	- DSMath.min (function @ /unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#149-152)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in SaiTub.drip (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#842-860):
	External calls:
	- sai.mint(tap,rmul(sub(_chi,_chi_),rum)) (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#854-855)
	State variables written after the call(s):
	- _rhi (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#860)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSToken.decimals should be constant (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#415)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DSAuthority.canCall (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#22-26) should be declared external
DSAuth.setOwner (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#41-48) should be declared external
DSAuth.setAuthority (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#49-57) should be declared external
DSStop.stop (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#278-280) should be declared external
DSStop.start (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#280-281) should be declared external
DSTokenBase.totalSupply (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#346-347) should be declared external
ERC20.totalSupply (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#297-298) should be declared external
ERC20.balanceOf (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#298-300) should be declared external
DSTokenBase.balanceOf (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#347-352) should be declared external
ERC20.allowance (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#300-304) should be declared external
DSTokenBase.allowance (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#352-355) should be declared external
ERC20.transfer (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#308) should be declared external
DSTokenBase.transfer (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#356-361) should be declared external
DSToken.approve (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#424-426) should be declared external
DSToken.push (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#450-453) should be declared external
DSToken.pull (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#453-457) should be declared external
DSToken.move (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#457-458) should be declared external
DSToken.mint (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#458-459) should be declared external
DSToken.burn (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#459-462) should be declared external
DSToken.setName (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#485-486) should be declared external
DSValue.read (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#522-524) should be declared external
DSValue.poke (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#525-526) should be declared external
DSValue.void (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#526-529) should be declared external
SaiVox.mold (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#582-585) should be declared external
SaiVox.par (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#587-589) should be declared external
SaiVox.way (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#589-593) should be declared external
SaiVox.tell (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#593-594) should be declared external
SaiVox.tune (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#595-597) should be declared external
SaiTub.lad (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#699-703) should be declared external
SaiTub.din (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#720-726) should be declared external
SaiTub.air (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#727-733) should be declared external
SaiTub.mold (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#765-781) should be declared external
SaiTub.setPip (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#783-786) should be declared external
SaiTub.setPep (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#786-788) should be declared external
SaiTub.setVox (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#788-790) should be declared external
SaiTub.turn (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#793-796) should be declared external
SaiTub.join (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#818-827) should be declared external
SaiTub.exit (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#827-832) should be declared external
SaiTub.open (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#877-885) should be declared external
SaiTub.give (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#885-889) should be declared external
SaiTub.lock (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#889-898) should be declared external
SaiTub.draw (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#906-922) should be declared external
SaiTub.shut (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#940-948) should be declared external
SaiTub.bite (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#948-952) should be declared external
SaiTub.cage (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol) should be declared external
SaiTub.flow (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol:
	- pragma solidity^0.4.18 (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#2-3): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'DSAuth.DSAuth' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#36-40) is not in mixedCase
Function 'DSThing.S' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#238-241) is not in mixedCase
Function 'DSTokenBase.DSTokenBase' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#342-346) is not in mixedCase
Variable 'DSTokenBase._supply' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#336-337) is not in mixedCase
Variable 'DSTokenBase._balances' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#337-339) is not in mixedCase
Variable 'DSTokenBase._approvals' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#339-342) is not in mixedCase
Function 'DSToken.DSToken' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#416-420) is not in mixedCase
Function 'SaiVox.SaiVox' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#573-577) is not in mixedCase
Variable 'SaiVox._par' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#566-568) is not in mixedCase
Variable 'SaiVox._way' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#568) is not in mixedCase
Function 'SaiTub.SaiTub' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#745-759) is not in mixedCase
Variable 'SaiTub._chi' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#681) is not in mixedCase
Variable 'SaiTub._rhi' (/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol#683) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/1/0x448a5065aebb8e423f0896e6c5d525c040f59af3.sol analyzed (15 contracts), 77 result(s) found