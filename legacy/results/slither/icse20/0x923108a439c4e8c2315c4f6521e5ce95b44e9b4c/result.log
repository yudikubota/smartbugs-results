INFO:Slither:Compilation warnings/errors on /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:490:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BTTSToken(address owner, string symbol, string name, uint8 decimals, uint initialSupply, bool mintable, bool transferable) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:642:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:156:13: Warning: Invoking events without "emit" prefix is deprecated.
            Mint(self.owner, initialSupply, false);
            ^------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:157:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(address(0), self.owner, initialSupply);
            ^---------------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:192:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(self.owner, self.newOwner);
        ^---------------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:198:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(self.owner, newOwner);
        ^----------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:209:9: Warning: Invoking events without "emit" prefix is deprecated.
        MinterUpdated(self.minter, minter);
        ^--------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:220:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(tokenOwner, tokens, lockAccount);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:221:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), tokenOwner, tokens);
        ^--------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:228:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccountUnlocked(tokenOwner);
        ^-------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:235:13: Warning: Invoking events without "emit" prefix is deprecated.
            MinterUpdated(self.minter, address(0));
            ^------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:238:9: Warning: Invoking events without "emit" prefix is deprecated.
        MintingDisabled();
        ^---------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:244:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransfersEnabled();
        ^----------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:324:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, tokens);
        ^------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:330:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);
        ^------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:345:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:354:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedTransferSig, tokenContract, tokenOwner, to, tokens, fee, nonce);
               ^-----------------------------------------------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:359:78: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:372:82: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(tokenOwner != address(0) && tokenOwner == ecrecoverFromSig(self, keccak256(signingPrefix, hash), sig));
                                                                                 ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:378:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, to, tokens);
        ^------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:381:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, feeAccount, fee);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:385:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedApproveSig, tokenContract, tokenOwner, spender, tokens, fee, nonce);
               ^---------------------------------------------------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:390:78: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:400:82: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(tokenOwner != address(0) && tokenOwner == ecrecoverFromSig(self, keccak256(signingPrefix, hash), sig));
                                                                                 ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:405:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(tokenOwner, spender, tokens);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:408:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, feeAccount, fee);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:412:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedTransferFromSig, tokenContract, spender, from, to, tokens, fee, nonce);
               ^------------------------------------------------------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:417:72: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:432:76: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(spender != address(0) && spender == ecrecoverFromSig(self, keccak256(signingPrefix, hash), sig));
                                                                           ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:439:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);
        ^------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:443:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, feeAccount, fee);
        ^-----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:447:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(signedApproveAndCallSig, tokenContract, tokenOwner, spender, tokens, data, fee, nonce);
               ^----------------------------------------------------------------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:452:78: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(signingPrefix, hash) ... 
     ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:462:82: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(tokenOwner != address(0) && tokenOwner == ecrecoverFromSig(self, keccak256(signingPrefix, hash), sig));
                                                                                 ^----------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:467:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(tokenOwner, spender, tokens);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:470:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(tokenOwner, feeAccount, fee);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:654:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:659:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, _newOwner);
        ^------------------------------------^
/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:768:9: Warning: Invoking events without "emit" prefix is deprecated.
        BTTSTokenListing(msg.sender, bttsTokenAddress, symbol, name, decimals, 
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BTTSLib.ecrecoverFromSig (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#271-289) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:
	Contract BTTSToken has payable functions:
	 - fallback (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#577-578)
	But does not have a function to withdraw the ether
Contract locking ether found in /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:
	Contract BTTSTokenFactory has payable functions:
	 - fallback (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
BTTSToken.BTTSToken.owner (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#500) shadows:
	- BTTSToken.owner (function @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#513-514)
BTTSToken.BTTSToken.symbol (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#500) shadows:
	- BTTSToken.symbol (function @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#530-533)
BTTSToken.BTTSToken.name (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#500) shadows:
	- BTTSToken.name (function @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#533-535)
BTTSToken.BTTSToken.decimals (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#500-501) shadows:
	- BTTSToken.decimals (function @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#535-536)
BTTSToken.BTTSToken.mintable (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#502-503) shadows:
	- BTTSToken.mintable (function @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#557-558)
BTTSToken.BTTSToken.transferable (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#503) shadows:
	- BTTSToken.transferable (function @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#558-561)
BTTSTokenFactory.verify.owner (local variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#725-726) shadows:
	- Owned.owner (state variable @ /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#658-659)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
BTTSLib.ecrecoverFromSig uses assembly (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#271-289)
	- /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#274-288
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#8-9) should be declared external
BTTSToken.totalSupply (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#583-586) should be declared external
BTTSToken.balanceOf (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#586-588) should be declared external
ERC20Interface.balanceOf (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#9-10) should be declared external
ERC20Interface.allowance (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#10-11) should be declared external
BTTSToken.allowance (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#589-590) should be declared external
BTTSToken.transfer (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#590-595) should be declared external
ERC20Interface.transfer (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#11-12) should be declared external
ERC20Interface.approve (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#12-13) should be declared external
BTTSToken.approve (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#595-596) should be declared external
BTTSToken.transferFrom (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#596-597) should be declared external
ERC20Interface.transferFrom (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#13-15) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#24-28) should be declared external
BTTSTokenInterface.approveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#49-51) should be declared external
BTTSToken.approveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#598-599) should be declared external
BTTSTokenInterface.signedTransferHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#54-55) should be declared external
BTTSToken.signedTransferHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#602-605) should be declared external
BTTSTokenInterface.signedTransferCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#55-56) should be declared external
BTTSToken.signedTransferCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#605-608) should be declared external
BTTSTokenInterface.signedTransfer (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#56-58) should be declared external
BTTSToken.signedTransfer (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#608-611) should be declared external
BTTSToken.signedApproveHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#611-614) should be declared external
BTTSTokenInterface.signedApproveHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#58-59) should be declared external
BTTSTokenInterface.signedApproveCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#59-60) should be declared external
BTTSToken.signedApproveCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#614-617) should be declared external
BTTSToken.signedApprove (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#617-620) should be declared external
BTTSTokenInterface.signedApprove (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#60-62) should be declared external
BTTSTokenInterface.signedTransferFromHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#62-63) should be declared external
BTTSToken.signedTransferFromHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#620-623) should be declared external
BTTSTokenInterface.signedTransferFromCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#63-64) should be declared external
BTTSToken.signedTransferFromCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#623-626) should be declared external
BTTSToken.signedTransferFrom (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#626-629) should be declared external
BTTSTokenInterface.signedTransferFrom (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#64-66) should be declared external
BTTSTokenInterface.signedApproveAndCallHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#66-67) should be declared external
BTTSToken.signedApproveAndCallHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#629-630) should be declared external
BTTSToken.signedApproveAndCallCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#630-640) should be declared external
BTTSTokenInterface.signedApproveAndCallCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#67-68) should be declared external
BTTSToken.signedApproveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#640-653) should be declared external
BTTSTokenInterface.signedApproveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#68-70) should be declared external
BTTSTokenInterface.mint (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#70-72) should be declared external
BTTSToken.mint (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#550-555) should be declared external
BTTSToken.unlockAccount (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#555-557) should be declared external
BTTSTokenInterface.unlockAccount (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#72-73) should be declared external
BTTSToken.disableMinting (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#561-563) should be declared external
BTTSTokenInterface.disableMinting (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#73-75) should be declared external
BTTSToken.enableTransfers (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#563-564) should be declared external
BTTSTokenInterface.enableTransfers (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#75) should be declared external
BTTSLib.init (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#147-165) should be declared external
BTTSLib.transferOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#190-193) should be declared external
BTTSLib.acceptOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#193-199) should be declared external
BTTSLib.transferOwnershipImmediately (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#199-206) should be declared external
BTTSLib.setMinter (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#210-214) should be declared external
BTTSLib.mint (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#214-228) should be declared external
BTTSLib.unlockAccount (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#228-234) should be declared external
BTTSLib.disableMinting (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#235-247) should be declared external
BTTSLib.enableTransfers (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#247-250) should be declared external
BTTSLib.transferAnyERC20Token (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#255-258) should be declared external
BTTSLib.getCheckResultMessage (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#292-319) should be declared external
BTTSLib.transfer (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#321-333) should be declared external
BTTSLib.approve (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#333-337) should be declared external
BTTSLib.transferFrom (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#337-346) should be declared external
BTTSLib.approveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#346-353) should be declared external
BTTSLib.signedTransferCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#358-372) should be declared external
BTTSLib.signedTransfer (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#372-387) should be declared external
BTTSLib.signedApproveCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#389-400) should be declared external
BTTSLib.signedApprove (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#400-414) should be declared external
BTTSLib.signedTransferFromCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#416-432) should be declared external
BTTSLib.signedTransferFrom (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#432-449) should be declared external
BTTSLib.signedApproveAndCallCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#451-462) should be declared external
BTTSLib.signedApproveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#462-487) should be declared external
BTTSToken.owner (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#513-514) should be declared external
BTTSToken.newOwner (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#515-516) should be declared external
BTTSToken.transferOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#516-519) should be declared external
BTTSToken.acceptOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#519-522) should be declared external
BTTSToken.transferOwnershipImmediately (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#522-526) should be declared external
BTTSToken.symbol (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#530-533) should be declared external
BTTSToken.name (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#533-535) should be declared external
BTTSToken.decimals (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#535-536) should be declared external
BTTSToken.minter (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#542-545) should be declared external
BTTSToken.setMinter (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#545-549) should be declared external
BTTSToken.mintable (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#557-558) should be declared external
BTTSToken.transferable (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#558-561) should be declared external
BTTSToken.transferAnyERC20Token (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#570-574) should be declared external
BTTSToken.fallback (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#577-578) should be declared external
Owned.transferOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#669-670) should be declared external
Owned.acceptOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#670-675) should be declared external
Owned.transferOwnershipImmediately (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#675-680) should be declared external
BTTSTokenFactory.verify (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#721-733) should be declared external
BTTSTokenFactory.deployBTTSTokenContract (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#774-787) should be declared external
BTTSTokenFactory.transferAnyERC20Token (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol) should be declared external
BTTSTokenFactory.fallback (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol:
	- pragma solidity^0.4.18 (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Constant 'BTTSTokenInterface.bttsVersion' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#34-36) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signingPrefix' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#36-37) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedTransferSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#37-38) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedApproveSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#38-39) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedTransferFromSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#39-40) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSTokenInterface.signedApproveAndCallSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#40-42) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '' of BTTSLib.ecrecoverFromSig (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#272) is not in mixedCase
Parameter '' of BTTSLib.getCheckResultMessage (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#293) is not in mixedCase
Parameter '' of BTTSLib.signedTransferHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#356) is not in mixedCase
Parameter '' of BTTSLib.signedApproveHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#387) is not in mixedCase
Parameter '' of BTTSLib.signedTransferFromHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#414) is not in mixedCase
Parameter '' of BTTSLib.signedApproveAndCallHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#449) is not in mixedCase
Constant 'BTTSLib.bttsVersion' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#126) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signingPrefix' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#126-127) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedTransferSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#127-128) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedApproveSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#128-129) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedTransferFromSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#129-131) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BTTSLib.signedApproveAndCallSig' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#131-133) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_data' of BTTSToken.approveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#599) is not in mixedCase
Parameter '_data' of BTTSToken.signedApproveAndCallHash (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#629) is not in mixedCase
Parameter '_data' of BTTSToken.signedApproveAndCallCheck (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#634-635) is not in mixedCase
Parameter '_data' of BTTSToken.signedApproveAndCall (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#645) is not in mixedCase
Function 'BTTSToken.BTTSToken' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#498-506) is not in mixedCase
Parameter '_newOwner' of BTTSToken.transferOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#516-517) is not in mixedCase
Parameter '_newOwner' of BTTSToken.transferOwnershipImmediately (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#523-526) is not in mixedCase
Parameter '_minter' of BTTSToken.setMinter (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#547) is not in mixedCase
Function 'Owned.Owned' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#666) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#669) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnershipImmediately (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#675) is not in mixedCase
Variable 'BTTSTokenFactory._verify' (/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol#692) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/2/0x923108a439c4e8c2315c4f6521e5ce95b44e9b4c.sol analyzed (7 contracts), 133 result(s) found