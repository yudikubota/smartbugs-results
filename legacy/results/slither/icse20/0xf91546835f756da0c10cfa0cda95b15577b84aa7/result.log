INFO:Detectors:[91m
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) sends eth to arbitrary user
	Dangerous calls:
	- Channels[_lcID].partyAddresses[0].transfer(_balances[0]) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#533-535)
	- Channels[_lcID].partyAddresses[1].transfer(_balances[1]) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#535-538)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],Channels[_lcID].erc20Balances[0]),CreateChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#429-432)
	External calls sending eth:
	- Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0]) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#423-425)
	State variables written after the call(s):
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#436)
Reentrancy in LedgerChannel.byzantineCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#759-837):
	External calls:
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[0],tokenbalanceA),byzantineCloseChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#814-819)
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[1],tokenbalanceI),byzantineCloseChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#819-827)
	External calls sending eth:
	- channel.partyAddresses[0].transfer(ethbalanceA) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#809-810)
	- channel.partyAddresses[1].transfer(ethbalanceI) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#810-813)
	State variables written after the call(s):
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#828-829)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
ECTools.recoverSigner (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#54-83) is declared view but contains assembly code
ECTools.uintToBytes32 (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#126-130) is declared view but contains assembly code
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) uses a dangerous strict equality:
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0]
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0]
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) uses a dangerous strict equality:
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0]
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0]
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == true)
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1])
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3])
	- require(bool)(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state,_sigA))
	- require(bool)(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state,_sigI))
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) uses a dangerous strict equality:
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0]
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0]
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == true)
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1])
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3])
	- require(bool)(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state,_sigA))
	- require(bool)(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state,_sigI))
LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383-419) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].partyAddresses[0] == address(0),Channel has already been created.)
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) uses a dangerous strict equality:
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0]
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0]
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == true)
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1])
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3])
	- require(bool)(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state,_sigA))
	- require(bool)(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state,_sigI))
LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383-419) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].partyAddresses[0] == address(0),Channel has already been created.)
LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463-495) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].isOpen == true,Tried adding funds to a closed channel)
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1])
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1])
	- Channels[_lcID].partyAddresses[0] == recipient
	- Channels[_lcID].partyAddresses[1] == recipient
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) uses a dangerous strict equality:
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0]
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0]
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == true)
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1])
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3])
	- require(bool)(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state,_sigA))
	- require(bool)(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state,_sigI))
LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383-419) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].partyAddresses[0] == address(0),Channel has already been created.)
LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463-495) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].isOpen == true,Tried adding funds to a closed channel)
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1])
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1])
	- Channels[_lcID].partyAddresses[0] == recipient
	- Channels[_lcID].partyAddresses[1] == recipient
LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#621-665) uses a dangerous strict equality:
	- require(bool)(_isContained(_initState,_proof,Channels[_lcID].VCrootHash) == true)
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) uses a dangerous strict equality:
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[0] && Channels[_lcID].isOpen == false)
LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) uses a dangerous strict equality:
	- cursor == _root
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) uses a dangerous strict equality:
	- virtualChannels[_vcID].partyA == Channels[_lcID].partyAddresses[0]
	- virtualChannels[_vcID].partyB == Channels[_lcID].partyAddresses[0]
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == true)
	- require(bool)(totalEthDeposit == _balances[0] + _balances[1])
	- require(bool)(totalTokenDeposit == _balances[2] + _balances[3])
	- require(bool)(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state,_sigA))
	- require(bool)(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state,_sigI))
LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383-419) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].partyAddresses[0] == address(0),Channel has already been created.)
LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463-495) uses a dangerous strict equality:
	- require(bool,string)(Channels[_lcID].isOpen == true,Tried adding funds to a closed channel)
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1])
	- require(bool)(recipient == Channels[_lcID].partyAddresses[0] || recipient == Channels[_lcID].partyAddresses[1])
	- Channels[_lcID].partyAddresses[0] == recipient
	- Channels[_lcID].partyAddresses[1] == recipient
LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#621-665) uses a dangerous strict equality:
	- require(bool)(_isContained(_initState,_proof,Channels[_lcID].VCrootHash) == true)
LedgerChannel.joinChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#437-461) uses a dangerous strict equality:
	- require(bool)(Channels[_lcID].isOpen == false)
	- require(bool)(msg.sender == Channels[_lcID].partyAddresses[1])
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383-419):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),CreateChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#405)
	State variables written after the call(s):
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#406)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#407)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#409)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#414-416)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#416-417)
Reentrancy in LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463-495):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#473)
	State variables written after the call(s):
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#474)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#489-492)
Reentrancy in LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463-495):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#473)
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balance),deposit: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#484-485)
	State variables written after the call(s):
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#485-487)
Reentrancy in LedgerChannel.joinChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#437-461):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),joinChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#449-454)
	State variables written after the call(s):
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#454-455)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#455-456)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#456)
	- Channels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#457)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in LedgerChannel.byzantineCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#759-837):
	External calls:
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[0],tokenbalanceA),byzantineCloseChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#814-819)
	- require(bool,string)(channel.token.transfer(channel.partyAddresses[1],tokenbalanceI),byzantineCloseChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#819-827)
	External calls sending eth:
	- channel.partyAddresses[0].transfer(ethbalanceA) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#809-810)
	- channel.partyAddresses[1].transfer(ethbalanceI) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#810-813)
	State variables written after the call(s):
	- numChannels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#830)
Reentrancy in LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[0],_balances[2]),happyCloseChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#542-544)
	- require(bool,string)(Channels[_lcID].token.transfer(Channels[_lcID].partyAddresses[1],_balances[3]),happyCloseChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#545-550)
	External calls sending eth:
	- Channels[_lcID].partyAddresses[0].transfer(_balances[0]) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#533-535)
	- Channels[_lcID].partyAddresses[1].transfer(_balances[1]) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#535-538)
	State variables written after the call(s):
	- numChannels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#551)
Reentrancy in LedgerChannel.joinChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#437-461):
	External calls:
	- require(bool,string)(Channels[_lcID].token.transferFrom(msg.sender,this,_balances[1]),joinChannel: token transfer failure) (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#449-454)
	State variables written after the call(s):
	- numChannels (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#457)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ECTools.recoverSigner uses assembly (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#54-83)
	- /unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#70-76
ECTools.uintToBytes32 uses assembly (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#126-130)
	- /unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#130
LedgerChannel._isContained uses assembly (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858)
	- /unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#846-848
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
HumanStandardToken.version should be constant (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#234-236)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#201-204) should be declared external
Token.balanceOf (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#20-22) should be declared external
Token.transfer (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#26-28) should be declared external
StandardToken.transfer (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#176-187) should be declared external
StandardToken.transferFrom (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#187-201) should be declared external
Token.transferFrom (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#33-35) should be declared external
Token.approve (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#39-41) should be declared external
StandardToken.approve (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#204-212) should be declared external
StandardToken.allowance (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#212-220) should be declared external
Token.allowance (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#44-46) should be declared external
ECTools.isSignedBy (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#83-90) should be declared external
ECTools.toEthereumSignedMessage (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#133-140) should be declared external
HumanStandardToken.approveAndCall (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#248-265) should be declared external
LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383-419) should be declared external
LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) should be declared external
LedgerChannel.joinChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#437-461) should be declared external
LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463-495) should be declared external
LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497-552) should be declared external
LedgerChannel.updateLCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#553-620) should be declared external
LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#621-665) should be declared external
LedgerChannel.settleVC (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#668-726) should be declared external
LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-757) should be declared external
LedgerChannel.byzantineCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#759-837) should be declared external
LedgerChannel.getChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#859-886) should be declared external
LedgerChannel.getVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol:
	- pragma solidity^0.4.23 (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in HumanStandardToken.approveAndCall (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#248-265):
	-require(bool)(_spender.call(bytes4(bytes32(keccak256()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData)) /unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#259-264
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_hashedMsg' of ECTools.recoverSigner (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#54-55) is not in mixedCase
Parameter '_sig' of ECTools.recoverSigner (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#55) is not in mixedCase
Parameter '_hashedMsg' of ECTools.isSignedBy (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#84) is not in mixedCase
Parameter '_sig' of ECTools.isSignedBy (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#84-86) is not in mixedCase
Parameter '_addr' of ECTools.isSignedBy (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#86) is not in mixedCase
Parameter '_hexstr' of ECTools.hexstrToBytes (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#92) is not in mixedCase
Parameter '_char' of ECTools.parseInt16Char (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#110) is not in mixedCase
Parameter '_msg' of ECTools.toEthereumSignedMessage (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#134) is not in mixedCase
Parameter '_uint' of ECTools.uintToString (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#143-144) is not in mixedCase
Parameter '_str' of ECTools.substring (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#161-162) is not in mixedCase
Parameter '_startIndex' of ECTools.substring (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#162) is not in mixedCase
Parameter '_endIndex' of ECTools.substring (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#162-163) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#202) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#176) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#176) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#188) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#188) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#188) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#207) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#207) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#212) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#212-215) is not in mixedCase
Parameter '_initialAmount' of HumanStandardToken. (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#237) is not in mixedCase
Parameter '_tokenName' of HumanStandardToken. (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#237) is not in mixedCase
Parameter '_decimalUnits' of HumanStandardToken. (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#237) is not in mixedCase
Parameter '_tokenSymbol' of HumanStandardToken. (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#238) is not in mixedCase
Parameter '_spender' of HumanStandardToken.approveAndCall (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#248) is not in mixedCase
Parameter '_value' of HumanStandardToken.approveAndCall (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#248) is not in mixedCase
Parameter '_extraData' of HumanStandardToken.approveAndCall (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#248) is not in mixedCase
Parameter '_lcID' of LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#384) is not in mixedCase
Parameter '_partyI' of LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#384) is not in mixedCase
Parameter '_confirmTime' of LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#384) is not in mixedCase
Parameter '_token' of LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#385) is not in mixedCase
Parameter '_balances' of LedgerChannel.createChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#385-386) is not in mixedCase
Function 'LedgerChannel.LCOpenTimeout' (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420-437) is not in mixedCase
Parameter '_lcID' of LedgerChannel.LCOpenTimeout (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#420) is not in mixedCase
Parameter '_lcID' of LedgerChannel.joinChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#438-439) is not in mixedCase
Parameter '_balances' of LedgerChannel.joinChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#439) is not in mixedCase
Parameter '_lcID' of LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463) is not in mixedCase
Parameter '_balance' of LedgerChannel.deposit (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#463) is not in mixedCase
Parameter '_lcID' of LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#497) is not in mixedCase
Parameter '_sequence' of LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#498) is not in mixedCase
Parameter '_balances' of LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#498) is not in mixedCase
Parameter '_sigA' of LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#498) is not in mixedCase
Parameter '_sigI' of LedgerChannel.consensusCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#499) is not in mixedCase
Parameter '_lcID' of LedgerChannel.updateLCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#553) is not in mixedCase
Parameter '_VCroot' of LedgerChannel.updateLCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#556) is not in mixedCase
Parameter '_sigA' of LedgerChannel.updateLCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#556-557) is not in mixedCase
Parameter '_sigI' of LedgerChannel.updateLCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#559) is not in mixedCase
Parameter '_lcID' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#621) is not in mixedCase
Parameter '_vcID' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#622) is not in mixedCase
Parameter '_proof' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#622) is not in mixedCase
Parameter '_partyA' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#623) is not in mixedCase
Parameter '_partyB' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#623) is not in mixedCase
Parameter '_bond' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#623-624) is not in mixedCase
Parameter '_balances' of LedgerChannel.initVCstate (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#624-625) is not in mixedCase
Parameter '_lcID' of LedgerChannel.settleVC (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#668) is not in mixedCase
Parameter '_vcID' of LedgerChannel.settleVC (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#669) is not in mixedCase
Parameter '_partyA' of LedgerChannel.settleVC (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#669-670) is not in mixedCase
Parameter '_partyB' of LedgerChannel.settleVC (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#671-672) is not in mixedCase
Parameter '_lcID' of LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#726-727) is not in mixedCase
Parameter '_vcID' of LedgerChannel.closeVirtualChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#727) is not in mixedCase
Parameter '_lcID' of LedgerChannel.byzantineCloseChannel (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#759-760) is not in mixedCase
Function 'LedgerChannel._isContained' (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#838-858) is not in mixedCase
Parameter '_hash' of LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#839-841) is not in mixedCase
Parameter '_proof' of LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#841) is not in mixedCase
Parameter '_root' of LedgerChannel._isContained (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#841) is not in mixedCase
Variable 'LedgerChannel.Channels' (/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol#383) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/4/0xf91546835f756da0c10cfa0cda95b15577b84aa7.sol analyzed (5 contracts), 120 result(s) found