INFO:Slither:Compilation warnings/errors on /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:26:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SplitterEtcToEth() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:32:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value < lowLimit) throw;
                                  ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:36:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(msg.value)) throw;
                                             ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:42:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!intermediate.send(msg.value)) throw;
                                                   ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:48:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!intermediate.send(upLimit)) throw;
                                                 ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:49:60: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!msg.sender.send(msg.value - upLimit)) throw;
                                                           ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:58:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:63:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:67:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:71:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract AmIOnTheFork {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:24:46: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x2BD2326c993DFaeF84f696526064FF22eba5b362'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    AmIOnTheFork amIOnTheFork = AmIOnTheFork(0x2bd2326c993dfaef84f696526064ff22eba5b362);
                                             ^----------------------------------------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:45:17: Warning: Invoking events without "emit" prefix is deprecated.
                OnReceive(id);
                ^-----------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:52:17: Warning: Invoking events without "emit" prefix is deprecated.
                OnReceive(idp);
                ^------------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:2:5: Warning: No visibility specified. Defaulting to "public". 
    function forked() constant returns(bool);
    ^---------------------------------------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function SplitterEtcToEth() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:30:5: Warning: No visibility specified. Defaulting to "public". 
    function() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:32:13: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
        if (msg.value < lowLimit) throw;
            ^-------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:36:34: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
            if (!msg.sender.send(msg.value)) throw;
                                 ^-------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:41:17: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
            if (msg.value <= upLimit) {
                ^-------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:42:40: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
                if (!intermediate.send(msg.value)) throw;
                                       ^-------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:44:53: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
                received[id] = Received(msg.sender, msg.value);
                                                    ^-------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:49:38: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
                if (!msg.sender.send(msg.value - upLimit)) throw;
                                     ^-------^
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function processed(uint64 _id) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function setIntermediate(address _intermediate) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function setUpLimit(uint _limit) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function setLowLimit(uint _limit) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
SplitterEtcToEth.fallback (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#31-58) sends eth to arbitrary user
	Dangerous calls:
	- ! intermediate.send(upLimit) (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#49)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#34:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#38:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#43-44:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#49:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#51:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#62:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
AmIOnTheFork.forked (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#2-3) should be declared external
SplitterEtcToEth.fallback (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#31-58) should be declared external
SplitterEtcToEth.processed (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#58-63) should be declared external
SplitterEtcToEth.setIntermediate (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#63-67) should be declared external
SplitterEtcToEth.setUpLimit (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#67-71) should be declared external
SplitterEtcToEth.setLowLimit (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#71-75) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'SplitterEtcToEth.SplitterEtcToEth' (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#26-31) is not in mixedCase
Parameter '_id' of SplitterEtcToEth.processed (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#59) is not in mixedCase
Parameter '_intermediate' of SplitterEtcToEth.setIntermediate (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#63-64) is not in mixedCase
Parameter '_limit' of SplitterEtcToEth.setUpLimit (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#68) is not in mixedCase
Parameter '_limit' of SplitterEtcToEth.setLowLimit (/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol#72) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/31/0x488b7b5ed8ee6fa28c0cb3a0ee7351573070601d.sol analyzed (2 contracts), 21 result(s) found