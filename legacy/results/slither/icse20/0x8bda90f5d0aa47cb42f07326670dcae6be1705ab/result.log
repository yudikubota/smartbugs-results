INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:41:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:297:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:700:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function AllocatedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMathLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:61:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:383:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:415:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:422:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:422:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:507:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:519:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:529:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:548:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:599:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:3:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:9:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:14:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:110:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:119:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:152:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:297:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:323:3: Warning: No visibility specified. Defaulting to "public". 
  function() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:494:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:505:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:516:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:527:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:542:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:556:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:642:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:681:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:700:3: Warning: No visibility specified. Defaulting to "public". 
  function AllocatedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:707:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:707:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:707:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:707:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:3:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:9:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:14:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:102:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:110:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:119:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:140:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol:647:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#493-506):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#504-505)
	State variables written after the call(s):
	- finalized (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#505-506)
Reentrancy in Crowdsale.investInternal (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#342-395):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#350-357)
	- getState() == State.Funding (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#353-357)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#363-367)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#380-382)
	- weiRaised (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#377-380)
Reentrancy in Crowdsale.investInternal (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#342-395):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#350-357)
	- getState() == State.Funding (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#353-357)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#363-367)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#382-387)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#383-387)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#305-333):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#327-329)
	State variables written after the call(s):
	- endsAt (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#330)
	- minimumFundingGoal (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#332-333)
	- multisigWallet (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#329)
	- startsAt (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#330)
Reentrancy in Crowdsale.investInternal (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#342-395):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#350-357)
	- getState() == State.Funding (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#353-357)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#363-367)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#371-375)
	- investorCount (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#370-371)
	- tokenAmountOf (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#375-377)
Reentrancy in Crowdsale.preallocate (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#409-429):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#412-414)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#421-422)
	- tokenAmountOf (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#422-424)
	- tokensSold (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#421)
	- weiRaised (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#419-421)
Reentrancy in Crowdsale.setFinalizeAgent (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#511-516):
	External calls:
	- require(bool)(addr.isFinalizeAgent()) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#516)
	State variables written after the call(s):
	- finalizeAgent (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#516)
Reentrancy in Crowdsale.setPricingStrategy (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#570-579):
	External calls:
	- require(bool)(_pricingStrategy.isPricingStrategy()) (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#573-579)
	State variables written after the call(s):
	- pricingStrategy (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#579)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#638-671) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#655-671)
	- block.timestamp < startsAt (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#655-671)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#207-210)
ERC20Basic.totalSupply should be constant (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#170)
FractionalERC20.decimals should be constant (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#200-202)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#3-9) should be declared external
SafeMathLib.minus (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#9-14) should be declared external
SafeMathLib.plus (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#14-26) should be declared external
Ownable.transferOwnership (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#59-71) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#106-108) should be declared external
PricingStrategy.isSane (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#115-116) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#124-127) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#134-144) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#144-146) should be declared external
FinalizeAgent.isSane (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#152-163) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#164-166) should be declared external
ERC20Basic.balanceOf (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#170-176) should be declared external
ERC20Basic.transfer (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#176-178) should be declared external
ERC20.allowance (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#182-183) should be declared external
ERC20.transferFrom (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#183-188) should be declared external
ERC20.approve (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#188-190) should be declared external
Crowdsale.fallback (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#334-336) should be declared external
Crowdsale.preallocate (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#409-429) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#465-474) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#474-476) should be declared external
Crowdsale.buy (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#482-484) should be declared external
Crowdsale.finalize (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#493-506) should be declared external
Crowdsale.setFinalizeAgent (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#511-516) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#519-527) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#532-538) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#544-549) should be declared external
Crowdsale.setEndsAt (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#560-567) should be declared external
Crowdsale.setMultisig (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#591-595) should be declared external
Crowdsale.loadRefund (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#600-606) should be declared external
Crowdsale.refund (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#613-625) should be declared external
Crowdsale.isFinalizerSane (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#631-633) should be declared external
Crowdsale.isPricingSane (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#634-635) should be declared external
Crowdsale.setOwnerTestValue (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#672-674) should be declared external
Crowdsale.isCrowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#674-675) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#42-47) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#305-333) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#307) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#307-309) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#309-311) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#311) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#311) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#311-312) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#533) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#570-573) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#207-210) is not in mixedCase
Function 'AllocatedCrowdsale.AllocatedCrowdsale' (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#716-729) is not in mixedCase
Parameter '_beneficiary' of AllocatedCrowdsale.AllocatedCrowdsale (/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol#723) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/15/0x8bda90f5d0aa47cb42f07326670dcae6be1705ab.sol analyzed (10 contracts), 57 result(s) found