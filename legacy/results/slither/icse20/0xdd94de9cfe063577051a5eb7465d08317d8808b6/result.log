INFO:Slither:Compilation warnings/errors on /unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:280:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function IndividualityTokenRoot(address _devcon2Token) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:341:17: Warning: Use of the "var" keyword is deprecated.
                var tokenID = bytes32(devcon2Token.balanceOf(_owner));
                ^---------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:359:9: Warning: Use of the "var" keyword is deprecated.
        var approvedTokenID = approvals[_owner][_spender];
        ^-----------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:396:9: Warning: Use of the "var" keyword is deprecated.
        var tokenID = ownerToToken[msg.sender];
        ^---------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:447:9: Warning: Use of the "var" keyword is deprecated.
        var tokenID = ownerToToken[_from];
        ^---------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:489:9: Warning: Use of the "var" keyword is deprecated.
        var tokenID = ownerToToken[msg.sender];
        ^---------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:516:17: Warning: Use of the "var" keyword is deprecated.
                var tokenID = bytes32(devcon2Token.balanceOf(_owner));
                ^---------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:574:9: Warning: Use of the "var" keyword is deprecated.
        var tokenID = bytes32(devcon2Token.balanceOf(msg.sender));
        ^---------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:182:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _tokenID);
        ^----------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:186:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(_owner, _spender, _tokenID);
        ^----------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:406:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, 1);
        ^--------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:460:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, 1);
        ^---------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:492:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, 1);
        ^-------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:597:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(msg.sender, tokenID);
        ^-----------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:634:33: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 signatureHash = sha3(address(this), _owner, _newOwner);
                                ^------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:634:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 signatureHash = sha3(address(this), _owner, _newOwner);
                                ^------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:648:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_newOwner, tokenID);
        ^----------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:667:33: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x0a43eDfE106D295e7C1e591A4B04B5598AF9474C'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
         IndividualityTokenRoot(0x0a43edfe106d295e7c1e591a4b04b5598af9474c) {
                                ^----------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:34:5: Warning: No visibility specified. Defaulting to "public". 
    function ecrecovery(bytes32 hash, bytes sig) returns (bool, address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:74:5: Warning: No visibility specified. Defaulting to "public". 
    function ecverify(bytes32 hash, bytes sig, address signer) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 supply);
    ^-------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:136:5: Warning: No visibility specified. Defaulting to "public". 
    function isTokenOwner(address _owner) constant returns (bool);
    ^------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:140:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerOf(bytes32 _tokenID) constant returns (address owner);
    ^------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:144:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenId(address _owner) constant returns (bytes32 tokenID);
    ^------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:161:5: Warning: No visibility specified. Defaulting to "public". 
    function upgradeCount() constant returns (uint256 amount);
    ^--------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:165:5: Warning: No visibility specified. Defaulting to "public". 
    function isTokenUpgraded(bytes32 _tokenID) constant returns (bool isUpgraded);
    ^----------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:208:5: Warning: No visibility specified. Defaulting to "public". 
    function mint(address _to, string _identity) returns (bool success);
    ^------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:212:5: Warning: No visibility specified. Defaulting to "public". 
    function destroy(bytes32 _id) returns (bool success);
    ^---------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:216:5: Warning: No visibility specified. Defaulting to "public". 
    function addMinter(address who) returns (bool);
    ^---------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:220:5: Warning: No visibility specified. Defaulting to "public". 
    function removeMinter(address who) returns (bool);
    ^------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:227:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() returns (uint supply);
    ^-------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:232:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:233:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, bytes32 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:239:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:240:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, bytes32 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:245:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:246:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, bytes32 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:253:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:258:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:265:5: Warning: No visibility specified. Defaulting to "public". 
    function isTokenOwner(address _owner) constant returns (bool);
    ^------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:269:5: Warning: No visibility specified. Defaulting to "public". 
    function identityOf(bytes32 _id) constant returns (string identity);
    ^------------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:273:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerOf(bytes32 _id) constant returns (address owner);
    ^-------------------------------------------------------------^
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:280:5: Warning: No visibility specified. Defaulting to "public". 
    function IndividualityTokenRoot(address _devcon2Token) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:327:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:333:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:357:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner,
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:509:5: Warning: No visibility specified. Defaulting to "public". 
    function isTokenOwner(address _owner) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:532:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerOf(bytes32 _tokenID) constant returns (address owner) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:544:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenId(address _owner) constant returns (bytes32 tokenID) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:654:5: Warning: No visibility specified. Defaulting to "public". 
    function upgradeCount() constant returns (uint256 _amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:660:5: Warning: No visibility specified. Defaulting to "public". 
    function isTokenUpgraded(bytes32 _tokenID) constant returns (bool isUpgraded) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:298:5: Warning: Function state mutability can be restricted to view
    function isEligibleForUpgrade(address _owner) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:328:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return devcon2Token.totalSupply();
               ^------------------------^

INFO:Detectors:[93m
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-542) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-542) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#619-668) uses a dangerous strict equality:
	- tokenID == 0x0
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-542) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#619-668) uses a dangerous strict equality:
	- tokenID == 0x0
IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#383-420) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-542) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#619-668) uses a dangerous strict equality:
	- tokenID == 0x0
IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#383-420) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#431-474) uses a dangerous strict equality:
	- ownerToToken[_from] == 0x0
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#486-511) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-542) uses a dangerous strict equality:
	- ownerToToken[_owner] == 0x0
IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#619-668) uses a dangerous strict equality:
	- tokenID == 0x0
IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#383-420) uses a dangerous strict equality:
	- ownerToToken[msg.sender] == 0x0
IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#431-474) uses a dangerous strict equality:
	- ownerToToken[_from] == 0x0
IndividualityTokenRoot.upgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#580-609) uses a dangerous strict equality:
	- tokenID == 0x0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in IndividualityTokenRoot.silentUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#331-333):
	External calls:
	- isEligibleForUpgrade(msg.sender) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#331-333)
	- upgrade() (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#333)
	State variables written after the call(s):
	- ownerToToken (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#333)
	- tokenToOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#333)
Reentrancy in IndividualityTokenRoot.upgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#580-609):
	External calls:
	- ! devcon2Token.isTokenOwner(msg.sender) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#581-586)
	- tokenID = bytes32(devcon2Token.balanceOf(msg.sender)) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#589-591)
	State variables written after the call(s):
	- ownerToToken (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#604-605)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#619-668):
	External calls:
	- ! devcon2Token.isTokenOwner(_owner) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#626-629)
	- tokenID = bytes32(devcon2Token.balanceOf(_owner)) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#629-630)
	State variables written after the call(s):
	- _upgradeCount (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#667-668)
	- ownerToToken (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#663-666)
	- tokenToOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#661)
Reentrancy in IndividualityTokenRoot.upgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#580-609):
	External calls:
	- ! devcon2Token.isTokenOwner(msg.sender) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#581-586)
	- tokenID = bytes32(devcon2Token.balanceOf(msg.sender)) (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#589-591)
	State variables written after the call(s):
	- _upgradeCount (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#607-608)
	- tokenToOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#605-606)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ECVerifyLib.safer_ecrecover uses assembly (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#7-34)
	- /unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#19-34
ECVerifyLib.ecrecovery uses assembly (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#34-74)
	- /unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#46-69
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#656-658:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ECVerifyLib.ecverify (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#74-87) should be declared external
IndividualityTokenInterface.totalSupply (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#98-99) should be declared external
IndividualityTokenRoot.totalSupply (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#334-337) should be declared external
IndividualityTokenInterface.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#102-103) should be declared external
IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#339-359) should be declared external
IndividualityTokenRoot.allowance (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#365-378) should be declared external
IndividualityTokenInterface.allowance (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#108-111) should be declared external
IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#423-425) should be declared external
IndividualityTokenInterface.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#117-118) should be declared external
IndividualityTokenInterface.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#124-125) should be declared external
IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#478-482) should be declared external
IndividualityTokenInterface.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#134-135) should be declared external
IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#513-516) should be declared external
IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-542) should be declared external
IndividualityTokenInterface.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#139-140) should be declared external
IndividualityTokenInterface.ownerOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#142-143) should be declared external
IndividualityTokenRoot.ownerOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#545-552) should be declared external
IndividualityTokenRoot.tokenId (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#556-578) should be declared external
IndividualityTokenInterface.tokenId (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#148-150) should be declared external
IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#619-668) should be declared external
IndividualityTokenRootInterface.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#160-163) should be declared external
IndividualityTokenRoot.upgradeCount (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol) should be declared external
IndividualityTokenRootInterface.upgradeCount (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#164-165) should be declared external
TokenEventLib._Transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#185-193) should be declared external
TokenEventLib._Approval (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#194-197) should be declared external
TokenInterface.mint (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#212-215) should be declared external
TokenInterface.destroy (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#218-219) should be declared external
TokenInterface.addMinter (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#223-225) should be declared external
TokenInterface.removeMinter (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#229) should be declared external
TokenInterface.totalSupply (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#232) should be declared external
TokenInterface.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#235-237) should be declared external
TokenInterface.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#237-238) should be declared external
TokenInterface.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#242-244) should be declared external
TokenInterface.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#244-245) should be declared external
TokenInterface.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#251-252) should be declared external
TokenInterface.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#252-253) should be declared external
TokenInterface.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#257-258) should be declared external
TokenInterface.allowance (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#265-267) should be declared external
TokenInterface.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#271-272) should be declared external
TokenInterface.identityOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#277-278) should be declared external
TokenInterface.ownerOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#281-285) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol:
	- pragma solidity^0.4.0 (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ECVerifyLib.safer_ecrecover' (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#7-34) is not in mixedCase
Function 'TokenEventLib._Transfer' (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#185-193) is not in mixedCase
Parameter '_from' of TokenEventLib._Transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#185-186) is not in mixedCase
Parameter '_to' of TokenEventLib._Transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#186) is not in mixedCase
Parameter '_tokenID' of TokenEventLib._Transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#186) is not in mixedCase
Function 'TokenEventLib._Approval' (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#194-197) is not in mixedCase
Parameter '_owner' of TokenEventLib._Approval (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#195) is not in mixedCase
Parameter '_spender' of TokenEventLib._Approval (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#195) is not in mixedCase
Parameter '_tokenID' of TokenEventLib._Approval (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#195-196) is not in mixedCase
Parameter '_owner' of IndividualityTokenRoot.balanceOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#340) is not in mixedCase
Parameter '_owner' of IndividualityTokenRoot.allowance (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#366) is not in mixedCase
Parameter '_spender' of IndividualityTokenRoot.allowance (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#368) is not in mixedCase
Parameter '_to' of IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#383-384) is not in mixedCase
Parameter '_value' of IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#384-385) is not in mixedCase
Parameter '_to' of IndividualityTokenRoot.transfer (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#423-424) is not in mixedCase
Parameter '_from' of IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#432) is not in mixedCase
Parameter '_to' of IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#433) is not in mixedCase
Parameter '_value' of IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#434) is not in mixedCase
Parameter '_from' of IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#479) is not in mixedCase
Parameter '_to' of IndividualityTokenRoot.transferFrom (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#479) is not in mixedCase
Parameter '_spender' of IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#489) is not in mixedCase
Parameter '_value' of IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#489-490) is not in mixedCase
Parameter '_spender' of IndividualityTokenRoot.approve (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#514) is not in mixedCase
Parameter '_owner' of IndividualityTokenRoot.isTokenOwner (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#519-520) is not in mixedCase
Parameter '_tokenID' of IndividualityTokenRoot.ownerOf (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#545-546) is not in mixedCase
Parameter '_owner' of IndividualityTokenRoot.tokenId (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#556) is not in mixedCase
Parameter '_owner' of IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#620) is not in mixedCase
Parameter '_newOwner' of IndividualityTokenRoot.proxyUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#621-622) is not in mixedCase
Parameter '_tokenID' of IndividualityTokenRoot.isTokenUpgraded (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol) is not in mixedCase
Function 'IndividualityTokenRoot.IndividualityTokenRoot' (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#290-296) is not in mixedCase
Parameter '_devcon2Token' of IndividualityTokenRoot.IndividualityTokenRoot (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#291) is not in mixedCase
Parameter '_owner' of IndividualityTokenRoot.isEligibleForUpgrade (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#304-305) is not in mixedCase
Variable 'IndividualityTokenRoot._upgradeCount' (/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol#302-303) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/16/0xdd94de9cfe063577051a5eb7465d08317d8808b6.sol analyzed (7 contracts), 89 result(s) found