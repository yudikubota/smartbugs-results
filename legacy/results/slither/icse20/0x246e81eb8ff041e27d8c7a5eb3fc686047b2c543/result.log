INFO:Slither:Compilation warnings/errors on /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:37:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:67:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Minhuiyu(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:83:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:84:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:85:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:86:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:95:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:106:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:107:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:108:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:109:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:110:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:119:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:120:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:35:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:89:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:114:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:123:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:134:9: Warning: Invoking events without "emit" prefix is deprecated.
        ownerBurn(_to,0);
        ^--------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:143:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:152:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:160:9: Warning: Invoking events without "emit" prefix is deprecated.
        ownerFreeze(_to, _value);
        ^----------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:168:9: Warning: Invoking events without "emit" prefix is deprecated.
        ownerUnfreeze(_to, _value);
        ^------------------------^
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function Minhuiyu(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:118:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function Ownerburn(uint256 _value,address _to)onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:138:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function OwnerFreeze(uint256 _value,address _to) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:163:5: Warning: No visibility specified. Defaulting to "public". 
    function OwnerUnfreeze(uint256 _value,address _to)onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:173:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount)onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:176:2: Warning: No visibility specified. Defaulting to "public". 
	function MakeOver(address _to)onlyOwner{
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:180:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol:35:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Minhuiyu.withdrawEther (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#180-182) sends eth to arbitrary user
	Dangerous calls:
	- owner.transfer(amount) (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Minhuiyu (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#42-182) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#83-93)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#35-42) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#110-111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#121:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#121:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Minhuiyu.transfer (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#83-93) should be declared external
Minhuiyu.approve (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#95-104) should be declared external
Minhuiyu.transferFrom (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#106-119) should be declared external
Minhuiyu.burn (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#119-128) should be declared external
Minhuiyu.Ownerburn (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#128-141) should be declared external
Minhuiyu.freeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#141-150) should be declared external
Minhuiyu.unfreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#150-158) should be declared external
Minhuiyu.OwnerFreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#158-166) should be declared external
Minhuiyu.OwnerUnfreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#166-178) should be declared external
Minhuiyu.withdrawEther (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#180-182) should be declared external
Minhuiyu.MakeOver (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol) should be declared external
Minhuiyu.fallback (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Event 'Minhuiyu.ownerBurn' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#60-61) is not in CapWords
Event 'Minhuiyu.ownerFreeze' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#63-64) is not in CapWords
Event 'Minhuiyu.ownerUnfreeze' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#66) is not in CapWords
Function 'Minhuiyu.Minhuiyu' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#69-83) is not in mixedCase
Parameter '_to' of Minhuiyu.transfer (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#83) is not in mixedCase
Parameter '_value' of Minhuiyu.transfer (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#83) is not in mixedCase
Parameter '_spender' of Minhuiyu.approve (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#95-96) is not in mixedCase
Parameter '_value' of Minhuiyu.approve (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#96) is not in mixedCase
Parameter '_from' of Minhuiyu.transferFrom (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#106) is not in mixedCase
Parameter '_to' of Minhuiyu.transferFrom (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#106) is not in mixedCase
Parameter '_value' of Minhuiyu.transferFrom (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#106) is not in mixedCase
Parameter '_value' of Minhuiyu.burn (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#119) is not in mixedCase
Function 'Minhuiyu.Ownerburn' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#128-141) is not in mixedCase
Parameter '_value' of Minhuiyu.Ownerburn (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#129) is not in mixedCase
Parameter '_to' of Minhuiyu.Ownerburn (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#129) is not in mixedCase
Parameter '_value' of Minhuiyu.freeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#141) is not in mixedCase
Parameter '_value' of Minhuiyu.unfreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#150) is not in mixedCase
Function 'Minhuiyu.OwnerFreeze' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#158-166) is not in mixedCase
Parameter '_value' of Minhuiyu.OwnerFreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#158) is not in mixedCase
Parameter '_to' of Minhuiyu.OwnerFreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#158) is not in mixedCase
Function 'Minhuiyu.OwnerUnfreeze' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#166-178) is not in mixedCase
Parameter '_value' of Minhuiyu.OwnerUnfreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#166) is not in mixedCase
Parameter '_to' of Minhuiyu.OwnerUnfreeze (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#166) is not in mixedCase
Function 'Minhuiyu.MakeOver' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol) is not in mixedCase
Parameter '_to' of Minhuiyu.MakeOver (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol) is not in mixedCase
Variable 'Minhuiyu.OwnerfreezeOf' (/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol#51-52) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/47/0x246e81eb8ff041e27d8c7a5eb3fc686047b2c543.sol analyzed (2 contracts), 54 result(s) found