INFO:Slither:Compilation warnings/errors on /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:174:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len);
        ^-----^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:192:9: Warning: Use of the "var" keyword is deprecated.
        var ptr = self._ptr - 31;
        ^-----^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:193:9: Warning: Use of the "var" keyword is deprecated.
        var end = ptr + self._len;
        ^-----^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:236:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr;
        ^---------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:237:9: Warning: Use of the "var" keyword is deprecated.
        var otherptr = other._ptr;
        ^----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:248:17: Warning: Use of the "var" keyword is deprecated.
                var diff = (a & mask) - (b & mask);
                ^------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:337:9: Warning: Use of the "var" keyword is deprecated.
        var b = word / divisor;
        ^---^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:447:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:475:9: Warning: Use of the "var" keyword is deprecated.
        var selfptr = self._ptr + self._len - needle._len;
        ^---------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:705:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(self._len + other._len);
        ^-----^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:729:9: Warning: Use of the "var" keyword is deprecated.
        var ret = new string(length);
        ^-----^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1510:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1626:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1629:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1647:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (prefix.length != n_random_bytes) throw;
	                                     ^---^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1705:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1905:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Etheraffle(address _freeLOT, address _dsbrs, address _msig, address _ethRelief) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:2168:9: Warning: Use of the "var" keyword is deprecated.
        var str    = _string.toSlice();
        ^-----^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:2169:9: Warning: Use of the "var" keyword is deprecated.
        var delim  = ",".toSlice();
        ^-------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:2170:9: Warning: Use of the "var" keyword is deprecated.
        var parts  = new string[](str.count(delim) + 1);
        ^-------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:283:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:190:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint l) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:506:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:506:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:507:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:509:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^-------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:511:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:511:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:543:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    loop:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:543:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    loop:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:544:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^-----------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:546:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^-----------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:548:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    jump(exit)
                    ^--------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:549:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    ret:
                    ^-^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:549:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    ret:
                    ^-^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:551:21: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
                    exit:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:551:21: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
                    exit:
                    ^--^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1550:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1550:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^--------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1582:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1585:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1600:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1662:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1662:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1662:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1662:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1662:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1680:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1680:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:2061:51: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            raffle[_week].winAmts[matches - 3] <= this.balance
                                                  ^----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:2518:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance >= amt);
                ^----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:779:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:780:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:781:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:782:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:783:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:784:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:785:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:786:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:787:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:788:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:789:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:790:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:791:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:794:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:830:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:866:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:869:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:869:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:869:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:869:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1806:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function mint(address _to, uint _amt) external {}
                  ^---------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1806:32: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function mint(address _to, uint _amt) external {}
                               ^-------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1807:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function destroy(address _from, uint _amt) external {}
                     ^-----------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1807:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function destroy(address _from, uint _amt) external {}
                                    ^-------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1808:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function balanceOf(address who) constant public returns (uint) {}
                       ^---------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1905:5: Warning: No visibility specified. Defaulting to "public". 
    function Etheraffle(address _freeLOT, address _dsbrs, address _msig, address _ethRelief) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:2139:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 _myID, string _result) onlyIfNotPaused {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:78:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:102:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:115:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:164:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:190:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint l) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:218:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:231:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:275:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:326:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:375:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:387:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:413:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:442:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:470:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:869:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1280:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1300:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1318:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1345:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1380:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1398:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1415:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1457:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1505:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1644:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix, uint n_random_bytes) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1700:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1806:5: Warning: Function state mutability can be restricted to pure
    function mint(address _to, uint _amt) external {}
    ^-----------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1807:5: Warning: Function state mutability can be restricted to pure
    function destroy(address _from, uint _amt) external {}
    ^----------------------------------------------------^
/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:1808:5: Warning: Function state mutability can be restricted to pure
    function balanceOf(address who) constant public returns (uint) {}
    ^---------------------------------------------------------------^

INFO:Detectors:[91m
Etheraffle.disburseFunds (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2139-2154) sends eth to arbitrary user
	Dangerous calls:
	- ReceiverInterface(disburseAddr).receiveEther.value(half)() (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2147)
	- ReceiverInterface(ethRelief).receiveEther.value(profit - half)() (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2147-2149)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	External calls sending eth:
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	State variables written after the call(s):
	- raffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2190-2192)
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	- query = oraclize_query(matchesDelay,nested,strConcat(apiStr1,uint2str(qID[_myID].weekNo),apiStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
	External calls sending eth:
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	- query = oraclize_query(matchesDelay,nested,strConcat(apiStr1,uint2str(qID[_myID].weekNo),apiStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
	State variables written after the call(s):
	- OAR (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
	- oraclize (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2196)
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	- query = oraclize_query(delay,nested,strConcat(randomStr1,uint2str(getWeek()),randomStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2202-2205)
	External calls sending eth:
	- query = oraclize_query(delay,nested,strConcat(randomStr1,uint2str(getWeek()),randomStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2202-2205)
	State variables written after the call(s):
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2207)
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2207-2208)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
Etheraffle.week (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1844) shadows:
	- usingOraclize.week (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#820)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1310-1318) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Etheraffle.upgradeContract (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol) uses a dangerous strict equality:
	- require(bool)(upgraded == 0 && upgradeAddr == address(0))
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:
	Contract ReceiverInterface has payable functions:
	 - receiveEther (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1839)
	But does not have a function to withdraw the ether
Contract locking ether found in /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:
	Contract EtheraffleUpgrade has payable functions:
	 - addToPrizePool (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1839-1840)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#837-842):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#839-841)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#841)
	State variables written after the call(s):
	- oraclize (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#841)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
profit in Etheraffle.disburseFunds (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2142-2143) is a local variable never initialiazed
matches in Etheraffle.getMatches (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2336) is a local variable never initialiazed
ret in strings.len (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#119-120) is a local variable never initialiazed
total in Etheraffle.setPayOuts (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2301-2302) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
strings.memcpy.len (local variable @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#80) shadows:
	- strings.len (function @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#118-144)
	- strings.len (function @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#193-218)
strings.nextRune.len (local variable @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#291-292) shadows:
	- strings.len (function @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#118-144)
	- strings.len (function @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#193-218)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Etheraffle.Etheraffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1952-1968):
	External calls:
	- query = oraclize_query(delay,nested,strConcat(randomStr1,uint2str(getWeek()),randomStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1963-1965)
	State variables written after the call(s):
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1965)
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1965-1968)
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	State variables written after the call(s):
	- paused (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2199)
	- paused (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2199)
	- prizePool (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2188-2189)
	- prizePool (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2199)
	- raffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2199)
	- raffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2199)
	- week (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2199)
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	External calls sending eth:
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	State variables written after the call(s):
	- paused (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	- query = oraclize_query(matchesDelay,nested,strConcat(apiStr1,uint2str(qID[_myID].weekNo),apiStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
	External calls sending eth:
	- disburseFunds(qID[_myID].weekNo) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2189-2190)
	- query = oraclize_query(matchesDelay,nested,strConcat(apiStr1,uint2str(qID[_myID].weekNo),apiStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2193-2196)
Reentrancy in Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress() || msg.sender == etheraffle) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184-2185)
	- query = oraclize_query(delay,nested,strConcat(randomStr1,uint2str(getWeek()),randomStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2202-2205)
	External calls sending eth:
	- query = oraclize_query(delay,nested,strConcat(randomStr1,uint2str(getWeek()),randomStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2202-2205)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2202-2205)
Reentrancy in Etheraffle.enterFreeRaffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2038-2043):
	External calls:
	- freeLOT.destroy(msg.sender,1) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2040)
	State variables written after the call(s):
	- prizePool (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2041-2043)
	- raffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2040)
	- raffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2041-2043)
Reentrancy in Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2370-2389):
	External calls:
	- query = oraclize_query(_delay,nested,strConcat(randomStr1,weekNumStr,randomStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2380-2383)
	State variables written after the call(s):
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2383)
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2383-2384)
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2384)
Reentrancy in Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2370-2389):
	External calls:
	- query = oraclize_query(_delay,nested,strConcat(apiStr1,weekNumStr,apiStr2),gasAmt) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2385-2386)
	State variables written after the call(s):
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2386)
	- qID (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2387)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1540-1594):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1544-1545)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1559)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1559)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1559)
	- oraclize_randomDS_args (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1592-1594)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
strings.memcpy uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#79-99)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#84-89
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#92-99
strings.toSlice uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#105-112)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#108-111
strings.toSliceB32 uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#149-162)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#154-162
strings.toString uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#178-185)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#183-184
strings.len uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#193-218)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#202-204
strings.compare uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#237-264)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#247-250
strings.nextRune uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#285-318)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#297-299
strings.ord uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#338-382)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#348-352
strings.keccak uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#385-389)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#387-389
strings.startsWith uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#400-415)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#408-415
strings.beyond uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#424-447)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#437-442
strings.endsWith uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#457-475)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#467-475
strings.until uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#481-502)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#494-500
strings.findPtr uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#504-541)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#511-527
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#531-532
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#536-538
strings.rfindPtr uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#544-584)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#550-568
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#573-574
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#577-579
strings.concat uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#721-733)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#726-727
strings.join uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#747-767)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#755-756
usingOraclize.getCodeSize uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1310-1318)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1313-1318
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1540-1594)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1545-1550
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1550-1554
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1561-1593
usingOraclize.verifySig uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1602-1625)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1612-1616
usingOraclize.copyBytes uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1745-1767)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1762-1765
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1771-1806)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1784-1806
usingOraclize.ecrecovery uses assembly (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1808-1839)
	- /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1822-1838
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Etheraffle.gasPrc should be constant (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1863-1865)
Etheraffle.matchesDelay should be constant (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1859-1862)
Etheraffle.oracCost should be constant (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1867-1871)
Etheraffle.resultsDelay should be constant (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1857-1859)
OraclizeI.cbAddress should be constant (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#785)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1542:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1592-1594:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1617-1625:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1624:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1679:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1690-1691:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1718-1725:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1753:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1665:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1667:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#785-787) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#787-790) should be declared external
OraclizeI.query2 (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#790-793) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#793-798) should be declared external
OraclizeI.queryN (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#798-801) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#801-804) should be declared external
OraclizeI.getPrice (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#804-805) should be declared external
OraclizeI.getPrice (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#805-807) should be declared external
OraclizeI.useCoupon (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#807-808) should be declared external
OraclizeI.setProofType (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#808-809) should be declared external
OraclizeI.setConfig (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#809-810) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#810-812) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#814-816) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#816-817) should be declared external
usingOraclize.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#887-889) should be declared external
Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209) should be declared external
FreeLOTInterface.balanceOf (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1841) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol:
	- pragma solidity^0.4.21 (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#35): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'strings' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#75-767) is not in CapWords
Struct 'strings.slice' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#78-79) is not in CapWords
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#787-790) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#793-798) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#801-804) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#814-816) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#817-1839) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#844-887) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#887-889) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#889-890) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#890-891) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#892-894) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#894-896) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#896-900) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#900-905) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#905-911) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#911-916) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#916-920) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#920-925) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#925-931) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#932-937) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#937-942) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#942-948) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#948-958) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#958-964) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#964-970) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#970-975) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#975-981) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#981-987) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#987-993) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#993-1000) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1000-1007) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1007-1012) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1013-1019) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1019-1028) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1028-1036) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1036-1044) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1044-1051) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1051-1060) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1060-1069) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1069-1077) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1077-1085) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1085-1093) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1093-1100) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1100-1106) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1106-1111) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1111-1119) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1119-1125) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1126-1135) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1135-1141) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1141-1145) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1145-1151) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1151-1157) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1157-1163) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1163-1169) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1169-1176) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1176-1181) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1182-1189) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1190-1197) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1197-1205) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1205-1212) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1212-1220) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1220-1229) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1229-1238) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1238-1247) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1247-1257) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1257-1266) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1266-1280) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1280-1291) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1291-1293) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1294-1297) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1297-1302) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1302-1305) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1305-1310) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1318) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1338) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1338) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1354) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1354) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1379) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1379-1380) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1380) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1380) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1380) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1406) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1406-1407) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1407) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1407-1408) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1412) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1412-1413) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1415) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1418) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1418) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1421) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1423) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1423) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1538-1539) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1539) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1539-1540) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1540-1594) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1541) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1541) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1541) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1594-1599) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1625-1661) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1668-1675) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1668) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1668) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1668-1670) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1676-1677) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1681-1741) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1685) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1771-1806) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#819-820) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#820) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#820-824) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#824-825) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#825-826) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#826-830) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#830) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#830-831) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#831) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#831-832) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#832) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#832-833) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#833-834) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#834-836) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#836) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1537-1538) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1599-1601) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1601-1602) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1661-1668) is not in mixedCase
Struct 'Etheraffle.rafStruct' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1887-1889) is not in CapWords
Struct 'Etheraffle.qIDStruct' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1889) is not in CapWords
Function 'Etheraffle.__callback' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2209) is not in mixedCase
Parameter '_myID' of Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2182-2183) is not in mixedCase
Parameter '_result' of Etheraffle.__callback (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2184) is not in mixedCase
Function 'Etheraffle.Etheraffle' (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1952-1968) is not in mixedCase
Parameter '_freeLOT' of Etheraffle.Etheraffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1952-1953) is not in mixedCase
Parameter '_dsbrs' of Etheraffle.Etheraffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1953) is not in mixedCase
Parameter '_msig' of Etheraffle.Etheraffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1954) is not in mixedCase
Parameter '_ethRelief' of Etheraffle.Etheraffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1954) is not in mixedCase
Parameter '_id' of Etheraffle.pauseContract (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#1993) is not in mixedCase
Parameter '_cNums' of Etheraffle.enterRaffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2000-2001) is not in mixedCase
Parameter '_affID' of Etheraffle.enterRaffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2001) is not in mixedCase
Parameter '_cNums' of Etheraffle.enterOnBehalfOf (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2020) is not in mixedCase
Parameter '_affID' of Etheraffle.enterOnBehalfOf (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2021-2022) is not in mixedCase
Parameter '_onBehalfOf' of Etheraffle.enterOnBehalfOf (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2022) is not in mixedCase
Parameter '_cNums' of Etheraffle.enterFreeRaffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2039) is not in mixedCase
Parameter '_affID' of Etheraffle.enterFreeRaffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2039) is not in mixedCase
Parameter '_cNums' of Etheraffle.buyTicket (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2064) is not in mixedCase
Parameter '_entrant' of Etheraffle.buyTicket (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2064-2065) is not in mixedCase
Parameter '_value' of Etheraffle.buyTicket (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2065) is not in mixedCase
Parameter '_affID' of Etheraffle.buyTicket (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2065) is not in mixedCase
Parameter '_week' of Etheraffle.withdrawWinnings (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2091-2093) is not in mixedCase
Parameter '_entryNum' of Etheraffle.withdrawWinnings (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2093-2094) is not in mixedCase
Parameter '_week' of Etheraffle.winFreeGo (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2121) is not in mixedCase
Parameter '_entryNum' of Etheraffle.winFreeGo (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2121) is not in mixedCase
Parameter '_week' of Etheraffle.disburseFunds (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2140) is not in mixedCase
Parameter '_string' of Etheraffle.stringToArray (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2214) is not in mixedCase
Parameter '_week' of Etheraffle.setWinningNumbers (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2234) is not in mixedCase
Parameter '_result' of Etheraffle.setWinningNumbers (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2234) is not in mixedCase
Parameter '_numWinners' of Etheraffle.oddsTotal (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2246) is not in mixedCase
Parameter '_matchesIndex' of Etheraffle.oddsTotal (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2246) is not in mixedCase
Parameter '_numWinners' of Etheraffle.splitsTotal (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2255) is not in mixedCase
Parameter '_matchesIndex' of Etheraffle.splitsTotal (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2255-2256) is not in mixedCase
Parameter '_matchesIndex' of Etheraffle.oddsSingle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2264) is not in mixedCase
Parameter '_numWinners' of Etheraffle.splitsSingle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2272-2273) is not in mixedCase
Parameter '_matchesIndex' of Etheraffle.splitsSingle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2273) is not in mixedCase
Parameter '_week' of Etheraffle.setPayOuts (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2296) is not in mixedCase
Parameter '_result' of Etheraffle.setPayOuts (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2296) is not in mixedCase
Parameter '_week' of Etheraffle.getMatches (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2335) is not in mixedCase
Parameter '_entrant' of Etheraffle.getMatches (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2335) is not in mixedCase
Parameter '_entryNum' of Etheraffle.getMatches (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2335) is not in mixedCase
Parameter '_week' of Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2370) is not in mixedCase
Parameter '_delay' of Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2371) is not in mixedCase
Parameter '_isRandom' of Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2373) is not in mixedCase
Parameter '_isManual' of Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2373) is not in mixedCase
Parameter '_status' of Etheraffle.manuallyMakeOraclizeCall (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2373) is not in mixedCase
Parameter '_newRandomHalfOne' of Etheraffle.setOraclizeString (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2412) is not in mixedCase
Parameter '_newRandomHalfTwo' of Etheraffle.setOraclizeString (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2412) is not in mixedCase
Parameter '_newEtheraffleHalfOne' of Etheraffle.setOraclizeString (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2413-2415) is not in mixedCase
Parameter '_newEtheraffleHalfTwo' of Etheraffle.setOraclizeString (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2415) is not in mixedCase
Parameter '_newPrice' of Etheraffle.setTktPrice (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2427) is not in mixedCase
Parameter '_newTake' of Etheraffle.setTake (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2436) is not in mixedCase
Parameter '_week' of Etheraffle.setPayouts (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2452) is not in mixedCase
Parameter '_numMatches' of Etheraffle.setPayouts (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2452-2454) is not in mixedCase
Parameter '_newAddr' of Etheraffle.setFreeLOT (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2463) is not in mixedCase
Parameter '_newAddr' of Etheraffle.setEthRelief (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2474) is not in mixedCase
Parameter '_newAddr' of Etheraffle.setDisbursingAddr (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2482-2483) is not in mixedCase
Parameter '_newAddr' of Etheraffle.setEtheraffle (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2490) is not in mixedCase
Parameter '_newTime' of Etheraffle.setRafEnd (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2499) is not in mixedCase
Parameter '_newTime' of Etheraffle.setWithdrawBeforeTime (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2507-2508) is not in mixedCase
Parameter '_status' of Etheraffle.setPaused (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2515-2516) is not in mixedCase
Parameter '_newPoP' of Etheraffle.setPercentOfPool (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2524) is not in mixedCase
Parameter '_entrant' of Etheraffle.getUserNumEntries (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2528) is not in mixedCase
Parameter '_week' of Etheraffle.getUserNumEntries (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2528) is not in mixedCase
Parameter '_entrant' of Etheraffle.getChosenNumbers (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2542) is not in mixedCase
Parameter '_week' of Etheraffle.getChosenNumbers (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2542) is not in mixedCase
Parameter '_entryNum' of Etheraffle.getChosenNumbers (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#2542-2543) is not in mixedCase
Parameter '_week' of Etheraffle.getWinningDetails (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol) is not in mixedCase
Parameter '_newAddr' of Etheraffle.upgradeContract (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#819-820) is never used in Etheraffle
usingOraclize.month (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#820-824) is never used in Etheraffle
usingOraclize.proofType_NONE (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#824-825) is never used in Etheraffle
usingOraclize.proofType_TLSNotary (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#825-826) is never used in Etheraffle
usingOraclize.proofType_Android (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#826-830) is never used in Etheraffle
usingOraclize.proofType_Ledger (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#830) is never used in Etheraffle
usingOraclize.proofType_Native (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#830-831) is never used in Etheraffle
usingOraclize.proofStorage_IPFS (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#831) is never used in Etheraffle
usingOraclize.networkID_mainnet (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#832) is never used in Etheraffle
usingOraclize.networkID_testnet (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#832-833) is never used in Etheraffle
usingOraclize.networkID_morden (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#833-834) is never used in Etheraffle
usingOraclize.networkID_consensys (/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol#834-836) is never used in Etheraffle
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/12/0x45c58bbd535b8661110ef5296e6987573d0c8276.sol analyzed (8 contracts), 280 result(s) found