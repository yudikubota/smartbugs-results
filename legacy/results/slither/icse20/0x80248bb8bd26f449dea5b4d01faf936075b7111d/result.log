INFO:Slither:Compilation warnings/errors on /unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:37:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 public sigDestinationTransfer = keccak256(
                                            ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:46:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 public sigDestinationTransferFrom = keccak256(
                                                ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:56:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 public sigDestinationApprove = keccak256(
                                           ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:65:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 public sigDestinationApproveAndCall = keccak256( // `approveAndCallViaSignature`
                                                  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:138:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                    keccak256(
                    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:153:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "32", data), v, r, s) // Geth-adopted
                                    ^-------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:155:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x20", data), v, r, s) // Trezor-adopted
                                    ^---------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:159:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "64", hexToString(data)), v, r, s) // Geth
                                    ^--------------------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:161:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                signer == ecrecover(keccak256(ethSignedMessagePrefix, "\x40", hexToString(data)), v, r, s) // Trezor
                                    ^----------------------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:218:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, to, value, fee, deadline, sigId),
            ^-------------------------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:264:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, fee, deadline, sigId),
            ^------------------------------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:306:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), signer, from, to, value, fee, deadline, sigId),
            ^---------------------------------------------------------------------^
/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:354:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(address(this), from, spender, value, extraData, fee, deadline, sigId),
            ^-----------------------------------------------------------------------------^

INFO:Detectors:[93m
Pasadena.rescueTokens (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#425-430) does not use the value returned by external calls:
	-tokenContract.approve(rescueAccount,value) (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Pasadena.approveAndCallViaSignature (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#353-368):
	External calls:
	- tokenRecipient(spender).receiveApproval(from,value,this,extraData) (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#366-367)
	State variables written after the call(s):
	- balanceOf (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#368)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Pasadena.requireSignature (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#122-171) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp <= deadline && ! usedSigIds[signer][sigId]) (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#135)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Pasadena.requireSignature uses assembly (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#122-171)
	- /unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#129-134
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Pasadena.decimals should be constant (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#23)
Pasadena.ethSignedMessagePrefix should be constant (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#34-35)
Pasadena.sigDestinationApprove should be constant (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#57-64)
Pasadena.sigDestinationApproveAndCall should be constant (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#65-74)
Pasadena.sigDestinationTransfer should be constant (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#37-45)
Pasadena.sigDestinationTransferFrom should be constant (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#46-55)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Pasadena.transfer (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#191-192) should be declared external
Pasadena.transferFrom (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#283-290) should be declared external
Pasadena.approveAndCall (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#331-333) should be declared external
Pasadena.rescueTokens (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#425-430) should be declared external
Pasadena.changeRescueAccount (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol:
	- pragma solidity^0.4.23 (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#3-7) is not in CapWords
Enum 'Pasadena.sigStandard' (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#35-36) is not in CapWords
Enum 'Pasadena.sigDestination' (/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol#36-37) is not in CapWords
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/24/0x80248bb8bd26f449dea5b4d01faf936075b7111d.sol analyzed (2 contracts), 14 result(s) found