INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:858:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:861:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:935:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1091:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Superbowl() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:782:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:782:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:814:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:817:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:832:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:892:15: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
              ^-----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:892:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                                    ^---------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:892:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:892:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:892:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;
                               ^---------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:910:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:910:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1111:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
        ^----------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1111:9: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
        ^----------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1111:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
                                    ^---------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1111:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    if (keccak256(TEAM_NAMES[0]) == keccak256(result)) { 
                                    ^---------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1114:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
             ^----------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1114:14: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
             ^----------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1114:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
                                         ^---------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1114:42: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    else if (keccak256(TEAM_NAMES[1]) == keccak256(result)) {
                                         ^---------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1141:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint storedBalance = this.balance;
                         ^----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1178:5: Warning: Invoking events without "emit" prefix is deprecated.
    BetMade(); // Trigger event
    ^-------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1187:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint losingChunk = this.balance - totalAmountsBet[uint(winningTeam)];
                       ^----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:52:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:88:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:124:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:127:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:127:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:127:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:127:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1105:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function __callback(bytes32 queryId, string result, bytes proof) public {
                      ^-------------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:1105:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function __callback(bytes32 queryId, string result, bytes proof) public {
                                                      ^---------^
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:127:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:538:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:558:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:576:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:603:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:638:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:656:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:673:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:715:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:763:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:876:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix, uint n_random_bytes) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:930:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#548-551) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#74-83):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#78-83)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#82-83)
	State variables written after the call(s):
	- oraclize (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#82-83)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Superbowl.releaseBets has external calls inside a loop:
	- betters[k].transfer(totalBet * storedBalance / totalBetAmount) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1177-1178)
Superbowl.performPayout has external calls inside a loop:
	- betters[k].transfer(payout) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Superbowl.__callback (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1138-1163):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress()) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1142-1143)
	State variables written after the call(s):
	- winningTeam (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1144-1148)
	- winningTeam (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1149-1150)
Reentrancy in Superbowl.__callback (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1138-1163):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress()) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1142-1143)
	- pingOracle(PAYOUT_ATTEMPT_INTERVAL) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1161-1162)
	External calls sending eth:
	- pingOracle(PAYOUT_ATTEMPT_INTERVAL) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1161-1162)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1161-1162)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#781-807):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#787-791)
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#802-803)
	External calls sending eth:
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#802-803)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#802-803)
	- oraclize_randomDS_args (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#803-805)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#548-551)
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#550-551
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#781-807)
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#791-801
usingOraclize.verifySig uses assembly (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#816-836)
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#828-831
usingOraclize.copyBytes uses assembly (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#956-974)
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#968-971
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#980-1006)
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#996-1006
usingOraclize.ecrecovery uses assembly (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1010-1045)
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1021-1045
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#37)
Superbowl.scheduledPayout should be constant (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1093)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:
	- Version used: ['^0.4.0', '^0.4.11']
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1 declares pragma solidity^0.4.11
	- /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#33 declares pragma solidity^0.4.0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#782:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#803-805:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#833-836:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#835-836:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#906-907:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#928-930:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#959:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#879:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#886:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#37-38) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#38-39) should be declared external
OraclizeI.query2 (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#39-40) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#40-41) should be declared external
OraclizeI.queryN (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#41-42) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#42-43) should be declared external
OraclizeI.getPrice (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#43-44) should be declared external
OraclizeI.getPrice (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#44-46) should be declared external
OraclizeI.useCoupon (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#46) should be declared external
OraclizeI.setProofType (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#47-48) should be declared external
OraclizeI.setConfig (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#48) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#49) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#49-52) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#54-55) should be declared external
usingOraclize.__callback (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#127-130) should be declared external
Superbowl.getUserBets (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1165-1167) should be declared external
Superbowl.triggerPayout (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1188-1191) should be declared external
Superbowl.bet (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1192-1207) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol:
	- pragma solidity^0.4.11 (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#33): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#38-39) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#40-41) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#42-43) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#49-52) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#55-1045) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#89-127) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#127-130) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#130-134) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#134-135) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#136-139) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#139-143) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#143-148) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#148-153) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#153-158) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#158-163) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#163-168) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#168-173) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#173-178) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#178-184) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#184-190) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#190-195) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#195-202) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#202-209) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#209-214) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#214-218) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#219-224) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#224-231) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#231-236) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#237-242) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#242-249) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#249-256) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#256-262) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#262-269) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#269-277) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#277-285) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#286-293) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#293-301) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#301-310) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#310-319) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#319-327) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#328-336) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#336-346) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#346-352) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#352-358) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#358-364) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#364-370) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#370-378) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#378-382) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#382-387) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#387-394) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#394-399) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#400-405) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#405-411) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#411-418) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#418-424) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#424-431) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#431-438) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#438-447) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#447-454) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#454-462) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#462-470) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#470-479) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#479-487) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#487-496) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#496-505) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#505-517) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#518-528) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#528-529) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#529-534) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#534-539) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#539-544) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#544-548) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#551) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#576) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#576) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#591) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#591) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#614) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#614) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#614) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#614-615) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#615) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#639) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#639) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#639-640) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#640) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#643) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#643) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#643) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#647) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#648) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#651-652) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#657) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#657) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#776-778) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#776-777) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#778-781) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#781-807) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#781) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#781) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#781-782) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#807-813) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#836-871) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#886-894) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#886-888) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#888) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#888) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#895-897) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#898-954) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#900) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#980-1006) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#56-57) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#57-58) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#58-59) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#59-60) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#60-61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#61-62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#62-63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#63-64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#64-65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#66-67) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#67-68) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#68-70) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#70-73) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#73-74) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#776) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#813-814) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#814-816) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#871-886) is not in mixedCase
Function 'Superbowl.__callback' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1138-1163) is not in mixedCase
Function 'Superbowl.Superbowl' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1120-1123) is not in mixedCase
Variable 'Superbowl.BOOKIES' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1048-1054) is not in mixedCase
Variable 'Superbowl.TEAM_NAMES' (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#1055-1058) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#56-57) is never used in Superbowl
usingOraclize.week (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#57-58) is never used in Superbowl
usingOraclize.month (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#58-59) is never used in Superbowl
usingOraclize.proofType_NONE (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#59-60) is never used in Superbowl
usingOraclize.proofType_TLSNotary (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#60-61) is never used in Superbowl
usingOraclize.proofType_Android (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#61-62) is never used in Superbowl
usingOraclize.proofType_Ledger (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#62-63) is never used in Superbowl
usingOraclize.proofType_Native (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#63-64) is never used in Superbowl
usingOraclize.proofStorage_IPFS (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#64-65) is never used in Superbowl
usingOraclize.networkID_mainnet (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#66-67) is never used in Superbowl
usingOraclize.networkID_testnet (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#67-68) is never used in Superbowl
usingOraclize.networkID_morden (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#68-70) is never used in Superbowl
usingOraclize.networkID_consensys (/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol#70-73) is never used in Superbowl
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/11/0xca896d11e43c4927b2041a97eba1505e1ff26f8c.sol analyzed (4 contracts), 178 result(s) found