INFO:Slither:Compilation warnings/errors on /unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:37:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:111:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function HasNoEther() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:222:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:352:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function BearCoin() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:90:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:98:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:125:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    assert(owner.send(this.balance));
                      ^----------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:149:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:230:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:248:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:278:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(burner, _value);
        ^------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:305:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:306:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0x0, _to, _amount);
    ^-------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:316:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:395:3: Warning: Invoking events without "emit" prefix is deprecated.
		Tethered(a, nameByAddress[a], _currency, amount, price, count - 1, now, m);
		^------------------------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:400:3: Warning: Invoking events without "emit" prefix is deprecated.
		Untethered(a, nameByAddress[a], _bytes5ToString(tether.currency), tether.amount, tether.price, finalPrice, outcome, tetherID, now);
		^--------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:405:3: Warning: Invoking events without "emit" prefix is deprecated.
		Mint(_to, _amount);
		^----------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:406:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(0x0, _to, _amount);
		^-------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:414:3: Warning: Invoking events without "emit" prefix is deprecated.
		Burn(_from, _value);
		^-----------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:427:3: Warning: Invoking events without "emit" prefix is deprecated.
		NameRegistered(a, id, n, now);
		^---------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:439:3: Warning: Invoking events without "emit" prefix is deprecated.
		NameChanged(a, id, n, old, now);
		^-----------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:475:10: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return keccak256(nameByAddress[a]) != keccak256('');
		       ^-------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:475:10: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
		return keccak256(nameByAddress[a]) != keccak256('');
		       ^-------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:480:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return bytes(s).length != 0 && keccak256(s) != keccak256(genesis) && bytes(s).length <= 32;
		                               ^----------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:480:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		return bytes(s).length != 0 && keccak256(s) != keccak256(genesis) && bytes(s).length <= 32;
		                               ^----------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:480:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return bytes(s).length != 0 && keccak256(s) != keccak256(genesis) && bytes(s).length <= 32;
		                                               ^----------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:480:50: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		return bytes(s).length != 0 && keccak256(s) != keccak256(genesis) && bytes(s).length <= 32;
		                                               ^----------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:37:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:55:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:111:3: Warning: No visibility specified. Defaulting to "public". 
  function HasNoEther() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:131:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:132:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:146:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:158:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:165:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:166:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:167:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:186:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) canTransfer(msg.sender, _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:196:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) canTransfer(_from, _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:205:47: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferableTokens(address holder, uint64 time) constant public returns (uint256) {
                                              ^---------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:221:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:239:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:258:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:302:3: Warning: No visibility specified. Defaulting to "public". 
  function mint(address _to, uint256 _amount) onlyOwner canMint returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:314:3: Warning: No visibility specified. Defaulting to "public". 
  function finishMinting() onlyOwner returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:352:2: Warning: No visibility specified. Defaulting to "public". 
	function BearCoin() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:385:2: Warning: No visibility specified. Defaulting to "public". 
	function setController(address a) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:454:2: Warning: No visibility specified. Defaulting to "public". 
	function getAddressById(uint256 id) returns (address) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:457:2: Warning: No visibility specified. Defaulting to "public". 
	function getIdByName(string n) returns (uint256) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:460:2: Warning: No visibility specified. Defaulting to "public". 
	function getNameByAddress(address a) returns (string) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:463:2: Warning: No visibility specified. Defaulting to "public". 
	function getAddressCount() returns (uint256) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:474:2: Warning: No visibility specified. Defaulting to "public". 
	function isRegistered(address a) returns (bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:508:2: Warning: No visibility specified. Defaulting to "public". 
	function _finneyToWei(uint32 _n) returns (uint256) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:513:2: Warning: No visibility specified. Defaulting to "public". 
	function _weiToFinney(uint256 n) returns (uint32) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:4:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:10:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:17:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:22:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:371:41: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
				tetheredTokens = tetheredTokens.add(_finneyToWei(currentTethers[holder][i].amount));
				                                    ^--------------------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:445:11: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
 ... _bytes5ToString(tether.currency) ... 
     ^------------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:445:45: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
 ... _finneyToWei(tether.amount) ... 
     ^-------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:449:11: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		return (_finneyToWei(tether.amount), tether.price, tether.startBlock, tether.endBlock);
		        ^-------------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:454:2: Warning: Function state mutability can be restricted to view
	function getAddressById(uint256 id) returns (address) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:460:2: Warning: Function state mutability can be restricted to view
	function getNameByAddress(address a) returns (string) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:463:2: Warning: Function state mutability can be restricted to view
	function getAddressCount() returns (uint256) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:469:50: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
		return currentTethers[a][tetherID].currency == _stringToBytes5(currency);
		                                               ^-----------------------^
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:474:2: Warning: Function state mutability can be restricted to view
	function isRegistered(address a) returns (bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:479:2: Warning: Function state mutability can be restricted to pure
	function _nameValid(string s) internal returns (bool) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:482:2: Warning: Function state mutability can be restricted to pure
	function _bytes5ToString(bytes5 b) internal returns (string memory s) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:489:2: Warning: Function state mutability can be restricted to pure
	function _stringToBytes5(string memory s) internal returns (bytes5 b) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:494:2: Warning: Function state mutability can be restricted to pure
	function _toLower(string str) internal returns (string) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:508:2: Warning: Function state mutability can be restricted to view
	function _finneyToWei(uint32 _n) returns (uint256) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:513:2: Warning: Function state mutability can be restricted to view
	function _weiToFinney(uint256 n) returns (uint32) {
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
BearCoin._stringToBytes5 uses assembly (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#503-509)
	- /unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#508-509
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#55-64) should be declared external
Pausable.pause (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#93-96) should be declared external
Pausable.unpause (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#102-106) should be declared external
ERC20.allowance (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#167-168) should be declared external
StandardToken.allowance (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#268-275) should be declared external
ERC20.approve (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#171-174) should be declared external
StandardToken.approve (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#243-256) should be declared external
BurnableToken.burn (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#281-292) should be declared external
MintableToken.mint (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#311-321) should be declared external
MintableToken.finishMinting (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#327-332) should be declared external
BearCoin.setController (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#394) should be declared external
BearCoin.getTether (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#447-455) should be declared external
BearCoin.getTetherInts (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#455-467) should be declared external
BearCoin.getAddressById (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#468-469) should be declared external
BearCoin.getNameByAddress (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#471-474) should be declared external
BearCoin.getAddressCount (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#474-475) should be declared external
BearCoin.verifyTetherCurrency (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#478-482) should be declared external
BearCoin.verifyTetherLoss (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#482-487) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol:
	- pragma solidity^0.4.13 (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#38-43) is not in mixedCase
Function 'HasNoEther.HasNoEther' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#116-118) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#165) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#148-149) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#149) is not in mixedCase
Parameter '_to' of LimitedTransferToken.transfer (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#191) is not in mixedCase
Parameter '_value' of LimitedTransferToken.transfer (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#191-192) is not in mixedCase
Parameter '_from' of LimitedTransferToken.transferFrom (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#201) is not in mixedCase
Parameter '_to' of LimitedTransferToken.transferFrom (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#201) is not in mixedCase
Parameter '_value' of LimitedTransferToken.transferFrom (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#201) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#268) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#269-270) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#225) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#225) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#225-227) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#243) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#243-244) is not in mixedCase
Parameter '_value' of BurnableToken.burn (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#281) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#312) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#312) is not in mixedCase
Function 'BearCoin.BearCoin' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#362-369) is not in mixedCase
Parameter '_currency' of BearCoin.addTether (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#395) is not in mixedCase
Parameter '_to' of BearCoin.controlledMint (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#412) is not in mixedCase
Parameter '_amount' of BearCoin.controlledMint (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#412-413) is not in mixedCase
Parameter '_from' of BearCoin.controlledBurn (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#422) is not in mixedCase
Parameter '_value' of BearCoin.controlledBurn (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#422-423) is not in mixedCase
Function 'BearCoin._nameValid' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#494-497) is not in mixedCase
Function 'BearCoin._bytes5ToString' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#497-503) is not in mixedCase
Function 'BearCoin._stringToBytes5' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#503-509) is not in mixedCase
Function 'BearCoin._toLower' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#509-519) is not in mixedCase
Function 'BearCoin._finneyToWei' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol) is not in mixedCase
Parameter '_n' of BearCoin._finneyToWei (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol) is not in mixedCase
Function 'BearCoin._weiToFinney' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol) is not in mixedCase
Constant 'BearCoin.genesis' (/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol#348) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/41/0xd16c5175c90c8730d365d3616d36148ff43c110c.sol analyzed (12 contracts), 54 result(s) found