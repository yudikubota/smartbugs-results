INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:314:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                        throw;
                        ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:325:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function Badge(
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:346:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                        throw;
                        ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:358:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!safeToSubtract(a, b)) throw;
                                           ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:432:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!seller[msg.sender]) throw;
                                         ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:437:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (msg.sender != owner) throw;
                                         ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:442:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (msg.sender != dao) throw;
                                       ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:450:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function Token(address _config) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:464:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                        throw;
                        ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:476:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!safeToSubtract(a, b)) throw;
                                           ^---^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:370:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(msg.sender, _to, _value);
                        ^-------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:383:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(_from, _to, _value);
                        ^--------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:392:17: Warning: Invoking events without "emit" prefix is deprecated.
                Approval(msg.sender, _spender, _value);
                ^------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:405:17: Warning: Invoking events without "emit" prefix is deprecated.
                Mint(_owner, _amount);
                ^-------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:488:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(msg.sender, _to, _value);
                        ^-------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:501:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(_from, _to, _value);
                        ^--------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:510:17: Warning: Invoking events without "emit" prefix is deprecated.
                Approval(msg.sender, _spender, _value);
                ^------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:14:9: Warning: No visibility specified. Defaulting to "public". 
        function setConfigAddress(bytes32 _key, address _val) returns(bool success);
        ^--------------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:20:9: Warning: No visibility specified. Defaulting to "public". 
        function setConfigBool(bytes32 _key, bool _val) returns(bool success);
        ^--------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:26:9: Warning: No visibility specified. Defaulting to "public". 
        function setConfigBytes(bytes32 _key, bytes32 _val) returns(bool success);
        ^------------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:32:9: Warning: No visibility specified. Defaulting to "public". 
        function setConfigUint(bytes32 _key, uint256 _val) returns(bool success);
        ^-----------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:37:9: Warning: No visibility specified. Defaulting to "public". 
        function getConfigAddress(bytes32 _key) returns(address val);
        ^-----------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:42:9: Warning: No visibility specified. Defaulting to "public". 
        function getConfigBool(bytes32 _key) returns(bool val);
        ^-----------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:47:9: Warning: No visibility specified. Defaulting to "public". 
        function getConfigBytes(bytes32 _key) returns(bytes32 val);
        ^---------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:52:9: Warning: No visibility specified. Defaulting to "public". 
        function getConfigUint(bytes32 _key) returns(uint256 val);
        ^--------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:56:9: Warning: No visibility specified. Defaulting to "public". 
        function addAdmin(address _admin) returns(bool success);
        ^------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:61:9: Warning: No visibility specified. Defaulting to "public". 
        function removeAdmin(address _admin) returns(bool success);
        ^---------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:82:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address _owner) constant returns(uint256 balance);
        ^-------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:88:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address _to, uint256 _value) returns(bool success);
        ^-------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:95:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address _from, address _to, uint256 _value) returns(bool success);
        ^--------------------------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:101:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address _spender, uint256 _value) returns(bool success);
        ^-----------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:106:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address _owner, address _spender) constant returns(uint256 remaining);
        ^---------------------------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:112:9: Warning: No visibility specified. Defaulting to "public". 
        function mint(address _owner, uint256 _amount) returns(bool success);
        ^-------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:118:9: Warning: No visibility specified. Defaulting to "public". 
        function mintBadge(address _owner, uint256 _amount) returns(bool success);
        ^------------------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:120:9: Warning: No visibility specified. Defaulting to "public". 
        function registerDao(address _dao) returns(bool success);
        ^-------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:122:9: Warning: No visibility specified. Defaulting to "public". 
        function registerSeller(address _tokensales) returns(bool success);
        ^-----------------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:199:9: Warning: No visibility specified. Defaulting to "public". 
        function proxyPurchase(address _user) returns(bool success);
        ^----------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:239:9: Warning: No visibility specified. Defaulting to "public". 
        function claimFor(address _user) returns(bool success);
        ^-----------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:242:9: Warning: No visibility specified. Defaulting to "public". 
        function claim() returns(bool success);
        ^-------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:244:9: Warning: No visibility specified. Defaulting to "public". 
        function claimFounders() returns(bool success);
        ^---------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:279:9: Warning: No visibility specified. Defaulting to "public". 
        function regProxy(address _payout) returns(bool success);
        ^-------------------------------------------------------^
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:325:9: Warning: No visibility specified. Defaulting to "public". 
        function Badge(
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:340:9: Warning: No visibility specified. Defaulting to "public". 
        function safeToAdd(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:344:9: Warning: No visibility specified. Defaulting to "public". 
        function addSafely(uint a, uint b) returns(uint result) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:353:9: Warning: No visibility specified. Defaulting to "public". 
        function safeToSubtract(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:357:9: Warning: No visibility specified. Defaulting to "public". 
        function subtractSafely(uint a, uint b) returns(uint) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:362:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address _owner) constant returns(uint256 balance) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:366:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address _to, uint256 _value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:378:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:390:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address _spender, uint256 _value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:397:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address _owner, address _spender) constant returns(uint256 remaining) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:402:9: Warning: No visibility specified. Defaulting to "public". 
        function mint(address _owner, uint256 _amount) ifOwner returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:409:9: Warning: No visibility specified. Defaulting to "public". 
        function setOwner(address _owner) ifOwner returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:450:9: Warning: No visibility specified. Defaulting to "public". 
        function Token(address _config) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:458:9: Warning: No visibility specified. Defaulting to "public". 
        function safeToAdd(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:462:9: Warning: No visibility specified. Defaulting to "public". 
        function addSafely(uint a, uint b) returns(uint result) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:471:9: Warning: No visibility specified. Defaulting to "public". 
        function safeToSubtract(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:475:9: Warning: No visibility specified. Defaulting to "public". 
        function subtractSafely(uint a, uint b) returns(uint) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:480:9: Warning: No visibility specified. Defaulting to "public". 
        function balanceOf(address _owner) constant returns(uint256 balance) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:484:9: Warning: No visibility specified. Defaulting to "public". 
        function transfer(address _to, uint256 _value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:496:9: Warning: No visibility specified. Defaulting to "public". 
        function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:508:9: Warning: No visibility specified. Defaulting to "public". 
        function approve(address _spender, uint256 _value) returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:515:9: Warning: No visibility specified. Defaulting to "public". 
        function allowance(address _owner, address _spender) constant returns(uint256 remaining) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:520:9: Warning: No visibility specified. Defaulting to "public". 
        function mint(address _owner, uint256 _amount) ifSales returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:526:9: Warning: No visibility specified. Defaulting to "public". 
        function mintBadge(address _owner, uint256 _amount) ifSales returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:531:9: Warning: No visibility specified. Defaulting to "public". 
        function registerDao(address _dao) ifOwner returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:538:9: Warning: No visibility specified. Defaulting to "public". 
        function setDao(address _newdao) ifDao returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:543:9: Warning: No visibility specified. Defaulting to "public". 
        function isSeller(address _query) returns(bool isseller) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:547:9: Warning: No visibility specified. Defaulting to "public". 
        function registerSeller(address _tokensales) ifDao returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:552:9: Warning: No visibility specified. Defaulting to "public". 
        function unregisterSeller(address _tokensales) ifDao returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:557:9: Warning: No visibility specified. Defaulting to "public". 
        function setOwner(address _newowner) ifDao returns(bool success) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:340:9: Warning: Function state mutability can be restricted to pure
        function safeToAdd(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:353:9: Warning: Function state mutability can be restricted to pure
        function safeToSubtract(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:458:9: Warning: Function state mutability can be restricted to pure
        function safeToAdd(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:471:9: Warning: Function state mutability can be restricted to pure
        function safeToSubtract(uint a, uint b) returns(bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:543:9: Warning: Function state mutability can be restricted to view
        function isSeller(address _query) returns(bool isseller) {
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Token.badgeLedger (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#437-438) is never initialized. It is used in:
	- mintBadge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#540-547)
	- setOwner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[92m
Reentrancy in Token.Token (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#462-472):
	External calls:
	- _initseller = ConfigInterface(_config).getConfigAddress(sale1:address) (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#466-468)
	State variables written after the call(s):
	- locked (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#471-472)
	- seller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#471)
Reentrancy in Token.setOwner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol):
	External calls:
	- Badge(badgeLedger).setOwner(_newowner) (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol)
	State variables written after the call(s):
	- owner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Badge.locked should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#306)
Badge.version should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#316-317)
ConfigInterface.owner should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#3-4)
Token.badgeLedger should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#437-438)
TokenInterface.badgeLedger should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#77-78)
TokenInterface.config should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#74)
TokenInterface.dao should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#77)
TokenInterface.locked should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#78)
TokenInterface.owner should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#74-75)
TokenInterface.totalSupply should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#80)
TokenSalesInterface.config should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#179)
TokenSalesInterface.ethToCents should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#181)
TokenSalesInterface.locked should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#181)
TokenSalesInterface.owner should be constant (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#181)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#358:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#368:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#323:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#480:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#487:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#448:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#451:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#453:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ConfigInterface.setConfigAddress (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#14-16) should be declared external
ConfigInterface.setConfigBool (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#20-22) should be declared external
ConfigInterface.setConfigBytes (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#26-28) should be declared external
ConfigInterface.setConfigUint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#32-34) should be declared external
ConfigInterface.getConfigAddress (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#37-39) should be declared external
ConfigInterface.getConfigBool (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#42-44) should be declared external
ConfigInterface.getConfigBytes (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#47-49) should be declared external
ConfigInterface.getConfigUint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#52-54) should be declared external
ConfigInterface.addAdmin (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#56-58) should be declared external
ConfigInterface.removeAdmin (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#62-67) should be declared external
TokenInterface.balanceOf (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#84-85) should be declared external
TokenInterface.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#90) should be declared external
TokenInterface.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#97-98) should be declared external
TokenInterface.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#103-104) should be declared external
TokenInterface.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#108-109) should be declared external
TokenInterface.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#114-115) should be declared external
TokenInterface.mintBadge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#120-122) should be declared external
TokenInterface.registerDao (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#122-124) should be declared external
TokenInterface.registerSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#124-125) should be declared external
TokenSalesInterface.ppb (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#189-190) should be declared external
TokenSalesInterface.calcShare (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#195-197) should be declared external
TokenSalesInterface.weiToCents (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#201-203) should be declared external
TokenSalesInterface.proxyPurchase (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#203-204) should be declared external
TokenSalesInterface.userInfo (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#215-217) should be declared external
TokenSalesInterface.myInfo (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#219-222) should be declared external
TokenSalesInterface.totalWei (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#224-226) should be declared external
TokenSalesInterface.totalCents (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#228) should be declared external
TokenSalesInterface.claimFor (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#242-244) should be declared external
TokenSalesInterface.claim (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#249-250) should be declared external
TokenSalesInterface.claimFounders (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#250) should be declared external
TokenSalesInterface.goalReached (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#250-251) should be declared external
TokenSalesInterface.getPeriod (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#255-257) should be declared external
TokenSalesInterface.startDate (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#259-261) should be declared external
TokenSalesInterface.periodTwo (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#263-265) should be declared external
TokenSalesInterface.periodThree (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#269-270) should be declared external
TokenSalesInterface.endDate (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#274-275) should be declared external
TokenSalesInterface.isEnded (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#278-279) should be declared external
TokenSalesInterface.sendFunds (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#281-283) should be declared external
TokenSalesInterface.regProxy (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#286-287) should be declared external
TokenSalesInterface.getProxy (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#287-289) should be declared external
TokenSalesInterface.getPayout (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#289) should be declared external
TokenSalesInterface.unlock (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#289-291) should be declared external
TokenSalesInterface.getSaleStatus (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#291) should be declared external
TokenSalesInterface.getSaleInfo (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#291-293) should be declared external
TokenSalesInterface.getSaleConfig (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#294-300) should be declared external
Badge.balanceOf (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#369-370) should be declared external
Badge.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#371-382) should be declared external
Badge.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#382-398) should be declared external
Badge.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#398-404) should be declared external
Badge.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#404-410) should be declared external
Badge.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#411-426) should be declared external
Badge.setOwner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#426-431) should be declared external
Token.balanceOf (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#488-492) should be declared external
Token.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#492-501) should be declared external
Token.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#501-520) should be declared external
Token.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#520-526) should be declared external
Token.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#526-531) should be declared external
Token.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#531-539) should be declared external
Token.mintBadge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#540-547) should be declared external
Token.registerDao (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#547-553) should be declared external
Token.setDao (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#553-558) should be declared external
Token.isSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#558-560) should be declared external
Token.registerSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#560-567) should be declared external
Token.unregisterSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol) should be declared external
Token.setOwner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol:
	- pragma solidity^0.4.11 (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Badge.Badge' (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#333-349) is not in mixedCase
Parameter '_initialAmount' of Badge.Badge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#333) is not in mixedCase
Parameter '_tokenName' of Badge.Badge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#333-334) is not in mixedCase
Parameter '_decimalUnits' of Badge.Badge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#334) is not in mixedCase
Parameter '_tokenSymbol' of Badge.Badge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#334) is not in mixedCase
Parameter '_owner' of Badge.balanceOf (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#369) is not in mixedCase
Parameter '_to' of Badge.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#371) is not in mixedCase
Parameter '_value' of Badge.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#371-372) is not in mixedCase
Parameter '_from' of Badge.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#382) is not in mixedCase
Parameter '_to' of Badge.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#382) is not in mixedCase
Parameter '_value' of Badge.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#382) is not in mixedCase
Parameter '_spender' of Badge.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#398-399) is not in mixedCase
Parameter '_value' of Badge.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#399) is not in mixedCase
Parameter '_owner' of Badge.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#405) is not in mixedCase
Parameter '_spender' of Badge.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#405) is not in mixedCase
Parameter '_owner' of Badge.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#411-412) is not in mixedCase
Parameter '_amount' of Badge.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#412-416) is not in mixedCase
Parameter '_owner' of Badge.setOwner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#426) is not in mixedCase
Function 'Token.Token' (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#462-472) is not in mixedCase
Parameter '_config' of Token.Token (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#463) is not in mixedCase
Parameter '_owner' of Token.balanceOf (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#489) is not in mixedCase
Parameter '_to' of Token.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#493) is not in mixedCase
Parameter '_value' of Token.transfer (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#493-494) is not in mixedCase
Parameter '_from' of Token.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#502) is not in mixedCase
Parameter '_to' of Token.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#502) is not in mixedCase
Parameter '_value' of Token.transferFrom (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#503) is not in mixedCase
Parameter '_spender' of Token.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#520) is not in mixedCase
Parameter '_value' of Token.approve (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#520-521) is not in mixedCase
Parameter '_owner' of Token.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#526-527) is not in mixedCase
Parameter '_spender' of Token.allowance (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#527) is not in mixedCase
Parameter '_owner' of Token.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#531-532) is not in mixedCase
Parameter '_amount' of Token.mint (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#532) is not in mixedCase
Parameter '_owner' of Token.mintBadge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#540-541) is not in mixedCase
Parameter '_amount' of Token.mintBadge (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#541-543) is not in mixedCase
Parameter '_dao' of Token.registerDao (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#547-548) is not in mixedCase
Parameter '_newdao' of Token.setDao (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#554) is not in mixedCase
Parameter '_query' of Token.isSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#558) is not in mixedCase
Parameter '_tokensales' of Token.registerSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol#561-562) is not in mixedCase
Parameter '_tokensales' of Token.unregisterSeller (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol) is not in mixedCase
Parameter '_newowner' of Token.setOwner (/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0x79f782858e4fa9ada67db285d048d7c3a372f8e8.sol analyzed (5 contracts), 118 result(s) found