INFO:Slither:Compilation warnings/errors on /unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:60:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ERC20Token(string _name, string _symbol, uint8 _decimals) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:105:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Owned() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:162:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SerenityToken() ERC20Token("SERENITY INVEST", "SERENITY", 18) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:301:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:75:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:84:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:91:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:217:5: Warning: Invoking events without "emit" prefix is deprecated.
    Lock(this, _to, _value, _end);
    ^---------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:230:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(this, msg.sender, allocations[msg.sender].value);
    ^-------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:231:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unlock(this, msg.sender, allocations[msg.sender].value);
    ^-----------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:253:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(this, fundingWallet, 0);
    ^------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:254:5: Warning: Invoking events without "emit" prefix is deprecated.
    Finalize(msg.sender, totalSupply);
    ^-------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:262:5: Warning: Invoking events without "emit" prefix is deprecated.
    DisableTransfers(msg.sender);
    ^--------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:382:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenPurchase(msg.sender, beneficiary, finneyAmount * 1 finney, tokens);
    ^---------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:8:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:21:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:26:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:34:3: Warning: Function state mutability can be restricted to pure
  function name() public constant returns (string) { name; }
  ^--------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:35:3: Warning: Function state mutability can be restricted to pure
  function symbol() public constant returns (string) { symbol; }
  ^------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:36:3: Warning: Function state mutability can be restricted to pure
  function decimals() public constant returns (uint8) { decimals; }
  ^---------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:37:3: Warning: Function state mutability can be restricted to pure
  function totalSupply() public constant returns (uint256) { totalSupply; }
  ^-----------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:38:3: Warning: Function state mutability can be restricted to pure
  function balanceOf(address _owner) public constant returns (uint256 balance) { _owner; balance; }
  ^-----------------------------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:39:3: Warning: Function state mutability can be restricted to pure
  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) { _owner; _spender; remaining; }
  ^-------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:98:3: Warning: Function state mutability can be restricted to pure
  function owner() public constant returns (address) { owner; }
  ^-----------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:127:3: Warning: Function state mutability can be restricted to pure
  function initialSupply () public constant returns (uint256) { initialSupply; }
  ^----------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:129:3: Warning: Function state mutability can be restricted to pure
  function totalSoldTokens () public constant returns (uint256) { totalSoldTokens; }
  ^--------------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:130:3: Warning: Function state mutability can be restricted to pure
  function totalProjectToken() public constant returns (uint256) { totalProjectToken; }
  ^-----------------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:132:3: Warning: Function state mutability can be restricted to pure
  function fundingEnabled() public constant returns (bool) { fundingEnabled; }
  ^--------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:133:3: Warning: Function state mutability can be restricted to pure
  function transfersEnabled() public constant returns (bool) { transfersEnabled; }
  ^------------------------------------------------------------------------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:323:3: Warning: Function state mutability can be restricted to view
  function getTimeDiscount() internal returns(uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:332:3: Warning: Function state mutability can be restricted to view
  function getTotalSoldDiscount() internal returns(uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:359:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      uint8 timeDiscount = getTimeDiscount();
                           ^---------------^
/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:360:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      uint8 totalSoldDiscount = getTotalSoldDiscount();
                                ^--------------------^

INFO:Detectors:[91m
Crowdsale.icoStartTime (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#294) is never initialized. It is used in:
	- getTimeDiscount (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#333-343)
	- getTotalSoldDiscount (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#343-369)
	- validPurchase (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
SerenityToken.lock (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#205-228) uses a dangerous strict equality:
	- require(bool)(allocations[_to].value == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Crowdsale.buyTokens (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#379-401) does not use the value returned by external calls:
	-token.autoTransfer(beneficiary,tokens) (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#394-397)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.buyTokens (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#379-401):
	External calls:
	- discountPercents = getDiscount() (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#387)
	State variables written after the call(s):
	- weiRaised (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#391-393)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.ethRaised should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#303-304)
Crowdsale.finneyPerToken should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#299-302)
Crowdsale.icoStartTime should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#294)
Crowdsale.preEndTime should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#292-294)
Crowdsale.preStartTime should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#290-291)
Crowdsale.wallet should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#296-298)
ERC20Token.standard should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#50-51)
ERC20Token.totalSupply should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#54-55)
SerenityToken.initialSupply should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#145-146)
SerenityToken.maxSaleToken should be constant (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#144-145)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
IERC20Token.name (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#34-35) should be declared external
IERC20Token.symbol (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#35-36) should be declared external
IERC20Token.decimals (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#36-37) should be declared external
IERC20Token.totalSupply (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#37-38) should be declared external
IERC20Token.balanceOf (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#38-39) should be declared external
IERC20Token.allowance (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#39-41) should be declared external
ERC20Token.approve (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#88-99) should be declared external
IERC20Token.approve (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#43-47) should be declared external
IOwned.owner (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#99-103) should be declared external
IOwned.transferOwnership (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#103-106) should be declared external
Owned.transferOwnership (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#119-129) should be declared external
ISerenityToken.initialSupply (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#129-130) should be declared external
ISerenityToken.totalSoldTokens (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#130-132) should be declared external
ISerenityToken.totalProjectToken (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#132-133) should be declared external
ISerenityToken.fundingEnabled (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#133-136) should be declared external
ISerenityToken.transfersEnabled (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#136-140) should be declared external
SerenityToken.autoTransfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#197-201) should be declared external
Crowdsale.fallback (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#330-332) should be declared external
Crowdsale.activeteICO (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#401-407) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol:
	- pragma solidity^0.4.18 (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_to' of ERC20Token.transfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#73) is not in mixedCase
Parameter '_value' of ERC20Token.transfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#73) is not in mixedCase
Parameter '_from' of ERC20Token.transferFrom (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#80-81) is not in mixedCase
Parameter '_to' of ERC20Token.transferFrom (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#81) is not in mixedCase
Parameter '_value' of ERC20Token.transferFrom (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#81) is not in mixedCase
Parameter '_spender' of ERC20Token.approve (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#89) is not in mixedCase
Parameter '_value' of ERC20Token.approve (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#89) is not in mixedCase
Function 'ERC20Token.ERC20Token' (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#60-68) is not in mixedCase
Parameter '_name' of ERC20Token.ERC20Token (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#61) is not in mixedCase
Parameter '_symbol' of ERC20Token.ERC20Token (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#61) is not in mixedCase
Parameter '_decimals' of ERC20Token.ERC20Token (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#61) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#121-126) is not in mixedCase
Function 'Owned.Owned' (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#110-113) is not in mixedCase
Struct 'SerenityToken.allocationLock' (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#158-159) is not in CapWords
Parameter '_to' of SerenityToken.transfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#193) is not in mixedCase
Parameter '_value' of SerenityToken.transfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#193) is not in mixedCase
Parameter '_from' of SerenityToken.transferFrom (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#201) is not in mixedCase
Parameter '_to' of SerenityToken.transferFrom (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#201) is not in mixedCase
Parameter '_value' of SerenityToken.transferFrom (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#201) is not in mixedCase
Function 'SerenityToken.SerenityToken' (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#166-181) is not in mixedCase
Parameter '_to' of SerenityToken.autoTransfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#197) is not in mixedCase
Parameter '_value' of SerenityToken.autoTransfer (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#197) is not in mixedCase
Parameter '_to' of SerenityToken.lock (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#205-206) is not in mixedCase
Parameter '_value' of SerenityToken.lock (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#206) is not in mixedCase
Parameter '_end' of SerenityToken.lock (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#206) is not in mixedCase
Parameter '_address' of SerenityToken.disableFundingWallets (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#278-280) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#312-316) is not in mixedCase
Parameter '_icoEndTime' of Crowdsale.activeteICO (/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol#402) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/35/0xcc107ff75835081dd7b31aa073f74f8d5bc7e9a5.sol analyzed (8 contracts), 53 result(s) found