INFO:Slither:Compilation warnings/errors on /unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:40:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:274:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MultiOwners() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:430:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function McFlyCrowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:60:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:89:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:133:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:149:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:172:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:184:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:211:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:212:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0x0, _to, _amount);
    ^-------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:222:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:244:9: Warning: Invoking events without "emit" prefix is deprecated.
        AllowTransfer(from);
        ^-----------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:257:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, 0x0, balances[from]);
        ^---------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:258:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(from, balances[from]);
        ^------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:295:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccessGrant(_owner);
        ^-----------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:303:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccessRevoke(_owner);
        ^------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:563:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetFundMintingAgent(agent);
        ^------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:577:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetStartTimeTLP2(_at);
        ^-------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:590:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetStartTimeTLP1(_at);
        ^-------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:605:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundMinting(to, amount);
        ^---------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:728:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenPurchase(contributor, ethers, amount);
        ^----------------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:733:13: Warning: Invoking events without "emit" prefix is deprecated.
            TransferOddEther(contributor, odd_ethers);
            ^---------------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:754:9: Warning: Invoking events without "emit" prefix is deprecated.
        TeamVesting(teamWallet, currentPeriod, tokenAvailable);
        ^----------------------------------------------------^
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:40:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:169:3: Warning: No visibility specified. Defaulting to "public". 
  function increaseApproval (address _spender, uint _addedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:176:3: Warning: No visibility specified. Defaulting to "public". 
  function decreaseApproval (address _spender, uint _subtractedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:243:5: Warning: No visibility specified. Defaulting to "public". 
    function allowTransfer(address from) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:248:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) canTransfer returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:252:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) canTransfer returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:256:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(address from) onlyOwner returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:274:5: Warning: No visibility specified. Defaulting to "public". 
    function MultiOwners() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:284:5: Warning: No visibility specified. Defaulting to "public". 
    function isOwner() constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:288:5: Warning: No visibility specified. Defaulting to "public". 
    function checkOwner(address maybe_owner) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:293:5: Warning: No visibility specified. Defaulting to "public". 
    function grant(address _owner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:298:5: Warning: No visibility specified. Defaulting to "public". 
    function revoke(address _owner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:430:5: Warning: No visibility specified. Defaulting to "public". 
    function McFlyCrowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:553:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:561:5: Warning: No visibility specified. Defaulting to "public". 
    function setFundMintingAgent(address agent) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:570:5: Warning: No visibility specified. Defaulting to "public". 
    function setStartTimeTLP2(uint256 _at) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:584:5: Warning: No visibility specified. Defaulting to "public". 
    function setStartTimeTLP1(uint256 _at) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:598:5: Warning: No visibility specified. Defaulting to "public". 
    function fundMinting(address to, uint256 amount) stopInEmergency {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:4:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:10:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:17:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:22:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in McFlyCrowdsale.fundMinting (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#613-627):
	External calls:
	- require(bool)(token.totalSupply() + amount <= mintCapInTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#620-622)
	State variables written after the call(s):
	- fundTotalSupply (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#622-624)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
discount in McFlyCrowdsale.calcAmountAt (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#638) is a local variable never initialiazed
price in McFlyCrowdsale.calcAmountAt (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#638) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#443-489) does not use the value returned by external calls:
	-token.mint(wavesAgent,wavesTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#486)
McFlyCrowdsale.fundMinting (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#613-627) does not use the value returned by external calls:
	-token.mint(to,amount) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#626)
McFlyCrowdsale.buyTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#734-759) does not use the value returned by external calls:
	-token.mint(contributor,amount) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#748)
McFlyCrowdsale.teamWithdraw (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#759-775) does not use the value returned by external calls:
	-token.transfer(teamWallet,tokenAvailable) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775)
McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784) does not use the value returned by external calls:
	-token.mint(this,_teamTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	-token.mint(reservedWallet,_reservedTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	-token.mint(advisoryWallet,_advisoryTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	-token.mint(bountyOfflineWallet,_bountyOfflineTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	-token.mint(bountyOnlineWallet,_bountyOnlineTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	-token.finishMinting() (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in McFlyCrowdsale.buyTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#734-759):
	External calls:
	- (amount,odd_ethers) = calcAmountAt(msg.value,block.timestamp,token.totalSupply()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#742-744)
	- require(bool)(amount + token.totalSupply() <= mintCapInTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#745-746)
	- token.mint(contributor,amount) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#748)
	State variables written after the call(s):
	- totalETH (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#750)
Reentrancy in McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784):
	External calls:
	- require(bool)(now > endTimeTLP2 || mintCapInTokens == token.totalSupply()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#776-778)
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#778)
	- _totalSupply = token.totalSupply() (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#779)
	State variables written after the call(s):
	- _teamTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#781-784)
Reentrancy in McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784):
	External calls:
	- require(bool)(now > endTimeTLP2 || mintCapInTokens == token.totalSupply()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#776-778)
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#778)
	- _totalSupply = token.totalSupply() (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#779)
	- token.mint(this,_teamTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	State variables written after the call(s):
	- _reservedTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
Reentrancy in McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784):
	External calls:
	- require(bool)(now > endTimeTLP2 || mintCapInTokens == token.totalSupply()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#776-778)
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#778)
	- _totalSupply = token.totalSupply() (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#779)
	- token.mint(this,_teamTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	- token.mint(reservedWallet,_reservedTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	State variables written after the call(s):
	- _advisoryTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
Reentrancy in McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784):
	External calls:
	- require(bool)(now > endTimeTLP2 || mintCapInTokens == token.totalSupply()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#776-778)
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#778)
	- _totalSupply = token.totalSupply() (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#779)
	- token.mint(this,_teamTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	- token.mint(reservedWallet,_reservedTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	- token.mint(advisoryWallet,_advisoryTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	State variables written after the call(s):
	- _bountyOfflineTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
Reentrancy in McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784):
	External calls:
	- require(bool)(now > endTimeTLP2 || mintCapInTokens == token.totalSupply()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#776-778)
	- require(bool)(! token.mintingFinished()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#778)
	- _totalSupply = token.totalSupply() (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#779)
	- token.mint(this,_teamTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	- token.mint(reservedWallet,_reservedTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	- token.mint(advisoryWallet,_advisoryTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	- token.mint(bountyOfflineWallet,_bountyOfflineTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
	State variables written after the call(s):
	- _bountyOnlineTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol)
Reentrancy in McFlyCrowdsale.teamWithdraw (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#759-775):
	External calls:
	- require(bool)(token.mintingFinished()) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#760)
	State variables written after the call(s):
	- teamTotalSupply (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#772-773)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#443-489) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_startTimeTLP1 >= block.timestamp) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#453-455)
McFlyCrowdsale.setStartTimeTLP2 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#585-598) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < startTimeTLP2) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#585-586)
	- require(bool)(block.timestamp < _at) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#586-588)
McFlyCrowdsale.setStartTimeTLP1 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#599-610) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < startTimeTLP1) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#600-601)
	- require(bool)(block.timestamp < _at) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#602)
McFlyCrowdsale.fundMinting (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#613-627) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp <= startTimeTLP2) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#615-618)
McFlyCrowdsale.calcAmountAt (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#631-732) uses timestamp for comparisons
	Dangerous comparisons:
	- at < startTimeTLP1 + 1036800 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#659-661)
	- at >= startTimeTLP1 && at <= endTimeTLP1 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#638-720)
	- at < startTimeTLP2 + 1296000 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#700-719)
	- at >= startTimeTLP2 && at <= endTimeTLP2 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#661-720)
	- at < startTimeTLP2 + 259200 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#684-719)
	- at < startTimeTLP2 + 518400 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#687-719)
	- at < startTimeTLP2 + 1555200 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#705-719)
	- at < startTimeTLP1 + 259200 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#655-661)
	- at < startTimeTLP2 + 777600 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#690-719)
	- at < startTimeTLP1 + 518400 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#656-661)
	- at < startTimeTLP2 + 1814400 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#708-719)
	- at < startTimeTLP2 + 2073600 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#715-719)
	- at < startTimeTLP2 + 1036800 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#696-719)
	- at < startTimeTLP1 + 777600 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#658-661)
McFlyCrowdsale.buyTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#734-759) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(amount + token.totalSupply() <= mintCapInTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#745-746)
	- require(bool)(odd_ethers < msg.value) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#752)
	- odd_ethers > 0 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#750-755)
McFlyCrowdsale.teamWithdraw (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#759-775) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(teamTotalSupply + tokenAvailable <= _teamTokens) (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#770-772)
	- currentPeriod > teamVestingPeriodsCount (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#766-767)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
McFlyCrowdsale.advisoryPercents should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#378)
McFlyCrowdsale.bountyOfflinePercents should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#377-378)
McFlyCrowdsale.bountyOnlinePercents should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#375-377)
McFlyCrowdsale.daysTLP1 should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#366-367)
McFlyCrowdsale.daysTLP2 should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#372-374)
McFlyCrowdsale.fundPercents should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#374-375)
McFlyCrowdsale.hardCapInTokens should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#379-380)
McFlyCrowdsale.minimalWeiTLP1 should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#346-349)
McFlyCrowdsale.minimalWeiTLP2 should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#352-353)
McFlyCrowdsale.priceTLP1 should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#349-350)
McFlyCrowdsale.priceTLP2 should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#353-354)
McFlyCrowdsale.reservedPercents should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#375)
McFlyCrowdsale.teamPercents should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#375)
McFlyCrowdsale.teamVestingPeriodInSeconds should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#402-405)
McFlyCrowdsale.teamVestingPeriodsCount should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#405-406)
McFlyCrowdsale.wavesTokens should be constant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#398-400)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#58-68) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#69) should be declared external
BasicToken.balanceOf (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#99-105) should be declared external
ERC20.allowance (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#106-107) should be declared external
StandardToken.allowance (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#164-165) should be declared external
ERC20.approve (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#108-111) should be declared external
StandardToken.approve (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#149-155) should be declared external
StandardToken.increaseApproval (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#171-179) should be declared external
StandardToken.decreaseApproval (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#179-197) should be declared external
MintableToken.mint (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#212-222) should be declared external
MintableToken.finishMinting (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#230-235) should be declared external
McFlyToken.allowTransfer (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#249-253) should be declared external
McFlyToken.burn (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#267-276) should be declared external
MultiOwners.checkOwner (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#298-303) should be declared external
MultiOwners.grant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#303-311) should be declared external
MultiOwners.revoke (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#311-321) should be declared external
McFlyCrowdsale.running (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#500-503) should be declared external
McFlyCrowdsale.teamTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#503-510) should be declared external
McFlyCrowdsale.bountyOnlineTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#510-517) should be declared external
McFlyCrowdsale.bountyOfflineTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#517-525) should be declared external
McFlyCrowdsale.advisoryTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#525-528) should be declared external
McFlyCrowdsale.reservedTokens (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#528-536) should be declared external
McFlyCrowdsale.stageName (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#539-571) should be declared external
McFlyCrowdsale.fallback (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#572) should be declared external
McFlyCrowdsale.setFundMintingAgent (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#576-582) should be declared external
McFlyCrowdsale.setStartTimeTLP2 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#585-598) should be declared external
McFlyCrowdsale.setStartTimeTLP1 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#599-610) should be declared external
McFlyCrowdsale.fundMinting (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#613-627) should be declared external
McFlyCrowdsale.teamWithdraw (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#759-775) should be declared external
McFlyCrowdsale.finishCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#775-784) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol:
	- pragma solidity^0.4.15 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#41-46) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#104) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#84-86) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#86) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#164) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#164) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#125) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#125) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#125-127) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#150) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#151-154) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#172) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#172) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#180) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#180-182) is not in mixedCase
Parameter '_to' of MintableToken.mint (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#212) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#212-213) is not in mixedCase
Function 'MultiOwners.MultiOwners' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#285-289) is not in mixedCase
Parameter 'maybe_owner' of MultiOwners.checkOwner (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#299-300) is not in mixedCase
Parameter '_owner' of MultiOwners.grant (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#307) is not in mixedCase
Parameter '_owner' of MultiOwners.revoke (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#312-314) is not in mixedCase
Function 'McFlyCrowdsale.McFlyCrowdsale' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#443-489) is not in mixedCase
Parameter '_startTimeTLP1' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#444) is not in mixedCase
Parameter '_startTimeTLP2' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#445) is not in mixedCase
Parameter '_wallet' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#446) is not in mixedCase
Parameter '_wavesAgent' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#446-447) is not in mixedCase
Parameter '_fundMintingAgent' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#447-448) is not in mixedCase
Parameter '_teamWallet' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#448) is not in mixedCase
Parameter '_bountyOnlineWallet' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#448-449) is not in mixedCase
Parameter '_bountyOfflineWallet' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#449-450) is not in mixedCase
Parameter '_advisoryWallet' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#450-451) is not in mixedCase
Parameter '_reservedWallet' of McFlyCrowdsale.McFlyCrowdsale (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#451-453) is not in mixedCase
Parameter '_at' of McFlyCrowdsale.setStartTimeTLP2 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#585) is not in mixedCase
Parameter '_at' of McFlyCrowdsale.setStartTimeTLP1 (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#600) is not in mixedCase
Parameter '_totalSupply' of McFlyCrowdsale.calcAmountAt (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#633-635) is not in mixedCase
Variable 'McFlyCrowdsale._teamTokens' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#406-408) is not in mixedCase
Variable 'McFlyCrowdsale._bountyOnlineTokens' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#413) is not in mixedCase
Variable 'McFlyCrowdsale._bountyOfflineTokens' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#414-415) is not in mixedCase
Variable 'McFlyCrowdsale._advisoryTokens' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#416) is not in mixedCase
Variable 'McFlyCrowdsale._reservedTokens' (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#417-418) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
McFlyCrowdsale.fundPercents (/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol#374-375) is never used in McFlyCrowdsale
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0x6b21d79987d97bd653de52b407f0121bfb07d414.sol analyzed (11 contracts), 95 result(s) found