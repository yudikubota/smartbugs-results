INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:50:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:176:4: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
   function AnimalFactory(address _walletOwner,address _tokenAddress) public 
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:78:6: Warning: Functions in interfaces should be declared external.
     function totalSupply() public view returns (uint256);
     ^---------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:79:6: Warning: Functions in interfaces should be declared external.
     function safeTransferFrom(address _from, address _to, uint256 _tokenId);
     ^----------------------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:80:6: Warning: Functions in interfaces should be declared external.
     function burnToken(address tokenOwner, uint256 tid) ;
     ^---------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:81:6: Warning: Functions in interfaces should be declared external.
     function sendToken(address sendTo, uint tid, string tmeta) ;
     ^----------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:82:6: Warning: Functions in interfaces should be declared external.
     function getTotalTokensAgainstAddress(address ownerAddress) public constant returns (uint totalAnimals);
     ^------------------------------------------------------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:83:6: Warning: Functions in interfaces should be declared external.
     function getAnimalIdAgainstAddress(address ownerAddress) public constant returns (uint[] listAnimals);
     ^----------------------------------------------------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:84:6: Warning: Functions in interfaces should be declared external.
     function balanceOf(address _owner) public view returns (uint256 _balance);
     ^------------------------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:85:6: Warning: Functions in interfaces should be declared external.
     function ownerOf(uint256 _tokenId) public view returns (address _owner);
     ^----------------------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:86:6: Warning: Functions in interfaces should be declared external.
     function setAnimalMeta(uint tid, string tmeta);
     ^---------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:79:6: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
     function safeTransferFrom(address _from, address _to, uint256 _tokenId);
     ^----------------------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:80:6: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
     function burnToken(address tokenOwner, uint256 tid) ;
     ^---------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:81:6: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
     function sendToken(address sendTo, uint tid, string tmeta) ;
     ^----------------------------------------------------------^
/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:86:6: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
     function setAnimalMeta(uint tid, string tmeta);
     ^---------------------------------------------^

INFO:Detectors:[93m
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) uses a dangerous strict equality:
	- animalAgainstId[aid].eggPhase == true
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) uses a dangerous strict equality:
	- animalAgainstId[aid].eggPhase == true
AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[parent1Id].upForMating == true)
	- require(bool)(animalAgainstId[parent1Id].isSpecial == false)
	- require(bool)(animalAgainstId[parent2Id].isSpecial == false)
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) uses a dangerous strict equality:
	- animalAgainstId[aid].eggPhase == true
AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[parent1Id].upForMating == true)
	- require(bool)(animalAgainstId[parent1Id].isSpecial == false)
	- require(bool)(animalAgainstId[parent2Id].isSpecial == false)
AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].isSpecial == false)
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) uses a dangerous strict equality:
	- animalAgainstId[aid].eggPhase == true
AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[parent1Id].upForMating == true)
	- require(bool)(animalAgainstId[parent1Id].isSpecial == false)
	- require(bool)(animalAgainstId[parent2Id].isSpecial == false)
AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].isSpecial == false)
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.putSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#542-574) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) uses a dangerous strict equality:
	- animalAgainstId[aid].eggPhase == true
AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[parent1Id].upForMating == true)
	- require(bool)(animalAgainstId[parent1Id].isSpecial == false)
	- require(bool)(animalAgainstId[parent2Id].isSpecial == false)
AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].isSpecial == false)
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.putSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#542-574) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.withdrawMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#637-656) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForMating == true)
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[aId].costumeId == 0)
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) uses a dangerous strict equality:
	- animalAgainstId[aid].eggPhase == true
AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[parent1Id].upForMating == true)
	- require(bool)(animalAgainstId[parent1Id].isSpecial == false)
	- require(bool)(animalAgainstId[parent2Id].isSpecial == false)
AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].isSpecial == false)
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.putSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#542-574) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].eggPhase == false)
	- require(bool)(animalAgainstId[animalId].upForSale == false)
	- require(bool)(animalAgainstId[animalId].upForMating == false)
AnimalFactory.withdrawMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#637-656) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForMating == true)
AnimalFactory.withdrawSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#577-602) uses a dangerous strict equality:
	- require(bool)(animalAgainstId[animalId].upForSale == true)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in AnimalFactory.buyAnimalsFromUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#367-415):
	External calls:
	- prevOwner = token.ownerOf(animalId) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#370)
	- token.safeTransferFrom(prevOwner,msg.sender,animalId) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#390-393)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#394-396)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#396-397)
Reentrancy in AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517):
	External calls:
	- require(bool)(token.ownerOf(parent2Id) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#425-428)
	- require(bool)(token.ownerOf(parent2Id) != token.ownerOf(parent1Id)) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#429-432)
	- token.sendToken(msg.sender,uniqueAnimalId,animalName) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#479-481)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#482-484)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#501-504)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#506-507)
Reentrancy in AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634):
	External calls:
	- require(bool)(token.ownerOf(animalId) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#613)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#626-627)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#627-629)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in AnimalFactory.buyAnimalsFromAnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#304-364):
	External calls:
	- token.sendToken(msg.sender,uniqueAnimalId,animalName) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#350-351)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#359-360)
	- totalBunniesCreated (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#361)
Reentrancy in AnimalFactory.buyAnimalsFromUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#367-415):
	External calls:
	- prevOwner = token.ownerOf(animalId) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#370)
	- token.safeTransferFrom(prevOwner,msg.sender,animalId) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#390-393)
	State variables written after the call(s):
	- upForSaleList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#402)
Reentrancy in AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836):
	External calls:
	- require(bool)(token.ownerOf(aId) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#825)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#828-833)
	- animalIdsWithPendingCostumes (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#833)
Reentrancy in AnimalFactory.claimFreeAnimalFromAnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#258-300):
	External calls:
	- require(bool)(token.getTotalTokensAgainstAddress(msg.sender) < freeAnimalsLimit) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#269-272)
	State variables written after the call(s):
	- animalObject (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#277-294)
	- uniqueAnimalId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#275)
Reentrancy in AnimalFactory.claimFreeAnimalFromAnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#258-300):
	External calls:
	- require(bool)(token.getTotalTokensAgainstAddress(msg.sender) < freeAnimalsLimit) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#269-272)
	- token.sendToken(msg.sender,uniqueAnimalId,animalName) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#294-296)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#298-299)
	- totalBunniesCreated (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#299-300)
Reentrancy in AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517):
	External calls:
	- require(bool)(token.ownerOf(parent2Id) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#425-428)
	- require(bool)(token.ownerOf(parent2Id) != token.ownerOf(parent1Id)) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#429-432)
	State variables written after the call(s):
	- animalObject (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#467-478)
	- uniqueAnimalId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#465)
Reentrancy in AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517):
	External calls:
	- require(bool)(token.ownerOf(parent2Id) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#425-428)
	- require(bool)(token.ownerOf(parent2Id) != token.ownerOf(parent1Id)) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#429-432)
	- token.sendToken(msg.sender,uniqueAnimalId,animalName) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#479-481)
	State variables written after the call(s):
	- childrenIdAgainstAnimalId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#490-492)
	- childrenIdAgainstAnimalId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#492-493)
	- eggPhaseAnimalIds (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#486-488)
	- upForMatingList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#498-499)
Reentrancy in AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634):
	External calls:
	- require(bool)(token.ownerOf(animalId) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#613)
	State variables written after the call(s):
	- upForMatingList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#629)
Reentrancy in AnimalFactory.putSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#542-574):
	External calls:
	- require(bool)(token.ownerOf(animalId) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#551-552)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#567-569)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#569-570)
	- upForSaleList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#570)
Reentrancy in AnimalFactory.updateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol):
	External calls:
	- require(bool)(msg.sender == token.ownerOf(animalId)) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol)
Reentrancy in AnimalFactory.updateAnimalSpecial (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol):
	External calls:
	- require(bool)(msg.sender == token.ownerOf(animalId)) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol)
Reentrancy in AnimalFactory.withdrawMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#637-656):
	External calls:
	- require(bool)(token.ownerOf(animalId) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#641)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#645-646)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#647-651)
	- upForMatingList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#654)
Reentrancy in AnimalFactory.withdrawSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#577-602):
	External calls:
	- require(bool)(token.ownerOf(animalId) == msg.sender) (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#585-586)
	State variables written after the call(s):
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#593)
	- animalAgainstId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#593-594)
	- upForSaleList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#601)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#69-77) should be declared external
ERC721Interface.totalSupply (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#79) should be declared external
ERC721Interface.safeTransferFrom (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#80-81) should be declared external
ERC721Interface.burnToken (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#81-82) should be declared external
ERC721Interface.sendToken (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#82) should be declared external
ERC721Interface.getTotalTokensAgainstAddress (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#82-83) should be declared external
ERC721Interface.getAnimalIdAgainstAddress (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#83-85) should be declared external
ERC721Interface.balanceOf (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#85-86) should be declared external
ERC721Interface.ownerOf (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#86-90) should be declared external
ERC721Interface.setAnimalMeta (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#90-92) should be declared external
AnimalFactory.getAnimalById (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#196-221) should be declared external
AnimalFactory.getAnimalByIdVisibility (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#221-244) should be declared external
AnimalFactory.getOwnerByAnimalId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#244-247) should be declared external
AnimalFactory.getAllAnimalsByAddress (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#252-257) should be declared external
AnimalFactory.claimFreeAnimalFromAnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#258-300) should be declared external
AnimalFactory.buyAnimalsFromAnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#304-364) should be declared external
AnimalFactory.buyAnimalsFromUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#367-415) should be declared external
AnimalFactory.mateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#418-517) should be declared external
AnimalFactory.TransferAnimalToAnotherUser (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) should be declared external
AnimalFactory.putSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#542-574) should be declared external
AnimalFactory.withdrawSaleRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#577-602) should be declared external
AnimalFactory.putMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#604-634) should be declared external
AnimalFactory.withdrawMatingRequest (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#637-656) should be declared external
AnimalFactory.showMyAnimalBalance (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#678-681) should be declared external
AnimalFactory.setPriceRate (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#686-690) should be declared external
AnimalFactory.setMateAdvertisementRate (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#694-700) should be declared external
AnimalFactory.setSaleAdvertisementRate (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#707-713) should be declared external
AnimalFactory.setBuyingCostumeRate (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#716-723) should be declared external
AnimalFactory.getAllMatingAnimals (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#725-729) should be declared external
AnimalFactory.getAllSaleAnimals (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#732-734) should be declared external
AnimalFactory.changeFreeAnimalsLimit (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#741-743) should be declared external
AnimalFactory.changeOwnerSharePerThousandForBuying (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#750-754) should be declared external
AnimalFactory.changeOwnerSharePerThousandForMating (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#758-762) should be declared external
AnimalFactory.pauseContract (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#766-773) should be declared external
AnimalFactory.removeFromEggPhase (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#778-798) should be declared external
AnimalFactory.getChildrenAgainstAnimalId (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#801-804) should be declared external
AnimalFactory.getEggPhaseList (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#806-812) should be declared external
AnimalFactory.getAnimalIdsWithPendingCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#815-819) should be declared external
AnimalFactory.buyCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#821-836) should be declared external
AnimalFactory.approvePendingCostume (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#842-859) should be declared external
AnimalFactory.addMember (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#867-869) should be declared external
AnimalFactory.listMembers (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#871-877) should be declared external
AnimalFactory.deleteMember (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#881-886) should be declared external
AnimalFactory.updateAnimal (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol) should be declared external
AnimalFactory.updateAnimalSpecial (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol:
	- pragma solidity^0.4.23 (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#10-13): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#51-56) is not in mixedCase
Function 'AnimalFactory.AnimalFactory' (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#180-193) is not in mixedCase
Parameter '_walletOwner' of AnimalFactory.AnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#181) is not in mixedCase
Parameter '_tokenAddress' of AnimalFactory.AnimalFactory (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#181-182) is not in mixedCase
Function 'AnimalFactory.TransferAnimalToAnotherUser' (/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol#521-540) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0x807cc051df938f4b7a3abf15dd8d89066cca50ed.sol analyzed (4 contracts), 75 result(s) found