INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:20:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:53:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (nonce < invalidOrder[user]) throw;
                                    ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:73:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (expiry > 1000000) throw;
                          ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:78:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Exchange(address feeAccount_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:89:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != owner && !admins[msg.sender]) throw;
                                                    ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:94:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:100:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!Token(token).transferFrom(msg.sender, this, amount)) throw;
                                                              ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:111:93: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (safeSub(block.number, lastActiveTransaction[msg.sender]) < inactivityReleasePeriod) throw;
                                                                                            ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:112:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[token][msg.sender] < amount) throw;
                                            ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:115:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!msg.sender.send(amount)) throw;
                                    ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:117:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!Token(token).transfer(msg.sender, amount)) throw;
                                                      ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:124:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (withdrawn[hash]) throw;
                         ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:126:90: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw;
                                                                                         ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:128:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[token][user] < amount) throw;
                                      ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:133:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!user.send(amount)) throw;
                              ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:135:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!Token(token).transfer(user, amount)) throw;
                                                ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:162:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (invalidOrder[tradeAddresses[2]] > tradeValues[3]) throw;
                                                          ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:164:119: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) != tradeAddresses[2]) throw;
                                                                                                                      ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:166:119: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", tradeHash), v[1], rs[2], rs[3]) != tradeAddresses[3]) throw;
                                                                                                                      ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:167:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (traded[tradeHash]) throw;
                           ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:171:74: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (safeAdd(orderFills[orderHash], tradeValues[4]) > tradeValues[0]) throw;
                                                                         ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:172:72: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[tradeAddresses[0]][tradeAddresses[3]] < tradeValues[4]) throw;
                                                                       ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:173:116: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[tradeAddresses[1]][tradeAddresses[2]] < (safeMul(tradeValues[1], tradeValues[4]) / tradeValues[0])) throw;
                                                                                                                   ^---^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:19:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:46:5: Warning: Invoking events without "emit" prefix is deprecated.
    SetOwner(owner, newOwner);
    ^-----------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:101:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:107:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(address(0), msg.sender, msg.value, tokens[address(0)][msg.sender]);
    ^------------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:119:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:123:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, token, amount, user, nonce);
                   ^-----------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:126:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw;
                  ^-------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:138:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, user, amount, tokens[token][user]);
    ^------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:163:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(this, tradeAddresses[0], tradeValues[0], tradeAddresses[1], tradeValues[1], tradeValues[2], tradeValues[3], tradeAddresses[2]) ... 
     ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:164:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) != tradeAddresses[2]) throw;
                  ^------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:165:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 tradeHash = keccak256(orderHash, tradeValues[4], tradeAddresses[3], tradeValues[5]); 
                        ^---------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:166:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", tradeHash), v[1], rs[2], rs[3]) != tradeAddresses[3]) throw;
                  ^------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:12:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success);
    ^-------------------------------------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:19:3: Warning: No visibility specified. Defaulting to "public". 
  function assert(bool assertion) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function safeMul(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:28:3: Warning: No visibility specified. Defaulting to "public". 
  function safeSub(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function safeAdd(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:45:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwner(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:49:3: Warning: No visibility specified. Defaulting to "public". 
  function getOwner() returns (address out) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:52:3: Warning: No visibility specified. Defaulting to "public". 
  function invalidateOrdersBefore(address user, uint256 nonce) onlyAdmin {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function setInactivityReleasePeriod(uint256 expiry) onlyAdmin returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:78:3: Warning: No visibility specified. Defaulting to "public". 
  function Exchange(address feeAccount_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:84:3: Warning: No visibility specified. Defaulting to "public". 
  function setAdmin(address admin, bool isAdmin) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:97:3: Warning: No visibility specified. Defaulting to "public". 
  function depositToken(address token, uint256 amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:104:3: Warning: No visibility specified. Defaulting to "public". 
  function deposit() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:110:3: Warning: No visibility specified. Defaulting to "public". 
  function withdraw(address token, uint256 amount) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:110:61: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function withdraw(address token, uint256 amount) returns (bool success) {
                                                            ^----------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:122:3: Warning: No visibility specified. Defaulting to "public". 
  function adminWithdraw(address token, uint256 amount, address user, uint256 nonce, uint8 v, bytes32 r, bytes32 s, uint256 feeWithdrawal) onlyAdmin returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:122:159: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bool success ... 
     ^----------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:141:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address token, address user) constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:145:3: Warning: No visibility specified. Defaulting to "public". 
  function trade(uint256[8] tradeValues, address[4] tradeAddresses, uint8[2] v, bytes32[4] rs) onlyAdmin returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:145:115: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function trade(uint256[8] tradeValues, address[4] tradeAddresses, uint8[2] v, bytes32[4] rs) onlyAdmin returns (bool success) {
                                                                                                                  ^----------^
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:19:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:49:3: Warning: Function state mutability can be restricted to view
  function getOwner() returns (address out) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Exchange.assert (function @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#19-22) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Exchange.adminWithdraw (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#122-145):
	External calls:
	- ! Token(token).transfer(user,amount) (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#138-141)
	External calls sending eth:
	- ! user.send(amount) (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#137-138)
	State variables written after the call(s):
	- lastActiveTransaction (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#141)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.allowTransactions should be constant (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#9-10)
Token.decimals should be constant (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#8-9)
Token.name should be constant (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#5-6)
Token.standard should be constant (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#4-5)
Token.symbol should be constant (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#6-7)
Token.totalSupply should be constant (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#7-8)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#22:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#57:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#114-115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#119:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#129:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#141:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#163:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#170-171:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#173:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#174:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#175:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.transfer (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#12-13) should be declared external
Token.approveAndCall (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#13-14) should be declared external
Token.approve (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#14-15) should be declared external
Token.transferFrom (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#15-18) should be declared external
Exchange.setOwner (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#45-50) should be declared external
Exchange.getOwner (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#50-52) should be declared external
Exchange.invalidateOrdersBefore (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#52-57) should be declared external
Exchange.setInactivityReleasePeriod (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#72-80) should be declared external
Exchange.setAdmin (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#85-90) should be declared external
Exchange.depositToken (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#98-105) should be declared external
Exchange.deposit (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#105-111) should be declared external
Exchange.withdraw (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#111-122) should be declared external
Exchange.adminWithdraw (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#122-145) should be declared external
Exchange.balanceOf (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#145-146) should be declared external
Exchange.trade (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#146-184) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol:
	- pragma solidity^0.4.16 (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Exchange.Exchange' (/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol#80-85) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/1/0x2a0c0dbecc7e4d658f48e01e3fa353f44050c208.sol analyzed (2 contracts), 42 result(s) found