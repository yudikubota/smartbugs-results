INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:115:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BAToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:133:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (isFinalized) throw;
                       ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:134:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number < fundingStartBlock) throw;
                                            ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:135:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number > fundingEndBlock) throw;
                                          ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:136:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.value == 0) throw;
                          ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:142:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (tokenCreationCap < checkedSupply) throw;  // odd fractions won't be found
                                            ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:151:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (isFinalized) throw;
                       ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:152:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != ethFundDeposit) throw; // locks finalize to the ultimate ETH owner
                                        ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:153:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(totalSupply < tokenCreationMin) throw;      // have to sell minimum to move to operational
                                         ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:154:78: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(block.number <= fundingEndBlock && totalSupply != tokenCreationCap) throw;
                                                                             ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:157:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(!ethFundDeposit.send(this.balance)) throw;  // send the eth to Brave International
                                             ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:162:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(isFinalized) throw;                       // prevents refund if operational
                      ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:163:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number <= fundingEndBlock) throw; // prevents refund until sale period is over
                                           ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:164:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(totalSupply >= tokenCreationMin) throw;  // no refunds if we sold enough
                                          ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:165:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(msg.sender == batFundDeposit) throw;    // Brave Intl not entitled to a refund
                                       ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:167:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (batVal == 0) throw;
                       ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:172:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!msg.sender.send(ethVal)) throw;       // if you're using a contract; make sure it works with .send gas limits
                                    ^---^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:51:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:63:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:76:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:128:7: Warning: Invoking events without "emit" prefix is deprecated.
      CreateBAT(batFundDeposit, batFund);  // logs Brave Intl fund
      ^--------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:146:7: Warning: Invoking events without "emit" prefix is deprecated.
      CreateBAT(msg.sender, tokens);  // logs token creation
      ^---------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:157:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if(!ethFundDeposit.send(this.balance)) throw;  // send the eth to Brave International
                              ^----------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:171:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogRefund(msg.sender, ethVal);               // log it 
      ^---------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:34:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:35:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:58:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:74:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:115:5: Warning: No visibility specified. Defaulting to "public". 
    function BAToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:12:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:18:5: Warning: Function state mutability can be restricted to pure
    function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:24:5: Warning: Function state mutability can be restricted to pure
    function safeMult(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
BAToken.version should be constant (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#97)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#153:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#155:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#157-158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#161:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#164:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#165:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#70-74) should be declared external
Token.balanceOf (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#34-35) should be declared external
Token.transfer (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#35-36) should be declared external
StandardToken.transfer (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#47-58) should be declared external
Token.transferFrom (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#36-37) should be declared external
StandardToken.transferFrom (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#58-70) should be declared external
StandardToken.approve (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#74-80) should be declared external
Token.approve (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#37-38) should be declared external
Token.allowance (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#38-39) should be declared external
StandardToken.allowance (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#80-85) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol:
	- pragma solidity^0.4.10 (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#71) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#47-48) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#48) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#58-59) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#59) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#59) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#75) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#75) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#81) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#81) is not in mixedCase
Function 'BAToken.BAToken' (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#118-133) is not in mixedCase
Parameter '_ethFundDeposit' of BAToken.BAToken (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#119-121) is not in mixedCase
Parameter '_batFundDeposit' of BAToken.BAToken (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#121) is not in mixedCase
Parameter '_fundingStartBlock' of BAToken.BAToken (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#121) is not in mixedCase
Parameter '_fundingEndBlock' of BAToken.BAToken (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#122) is not in mixedCase
Constant 'BAToken.batFund' (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#104-105) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BAToken.tokenExchangeRate' (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#106) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BAToken.tokenCreationCap' (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#107-111) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BAToken.tokenCreationMin' (/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol#111-112) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/1/0x0d8775f648430679a709e98d2b0cb6250d2887ef.sol analyzed (4 contracts), 47 result(s) found