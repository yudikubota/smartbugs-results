INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;       
                                 ^---^
[91m/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:8:24: Error: Modifier body does not contain '_'.[0m
    modifier onlyOwner {
                       ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:36:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GSIToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:53:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:54:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:55:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:64:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:65:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:66:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:67:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:94:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:101:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:105:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:132:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:154:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
		function GSI() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:174:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if(freeReadings[msg.sender]==0) throw;
				                                ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:177:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<lastReading[msg.sender].value) throw;
			                                           ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:178:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<requestReading[msg.sender].value) throw;
			                                              ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:179:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(now<lastReading[msg.sender].timestamp+secondsBetweenReadings) throw;
			                                                                 ^---^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:58:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:71:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:78:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:79:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:84:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:97:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:107:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:182:4: Warning: Invoking events without "emit" prefix is deprecated.
			OracleRequest(msg.sender);
			^-----------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:183:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(msg.value);
			^-------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:203:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
			if(this.balance>0) {
			   ^----------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:204:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				owner.send(this.balance);
				           ^----------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:204:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(this.balance);
				^----------------------^
/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol:215:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(msg.value);
				^-------------------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/30/0x65bbc91459aaad9603ef1345c6bb6396dd6772b9.sol analyzed (0 contracts), 0 result(s) found