INFO:Slither:Compilation warnings/errors on /unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:65:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function NYXAccount(bytes32 resqueAccountHash, address authorityAccount, bytes32 kwHash, bytes32[10] photoHshs) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:81:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(keccak256(msg.sender) == resqueHash);
                ^-------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:81:17: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        require(keccak256(msg.sender) == resqueHash);
                ^-------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:94:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(keccak256(keywordPhrase, msg.sender) == emergencyHash);
                ^----------------------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:114:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(amount <= this.balance);
                          ^----------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:141:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        msg.sender.transfer(this.balance);
                            ^----------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:156:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if(photoHashes[x] == keccak256(photoHash))
                                 ^------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:156:34: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            if(photoHashes[x] == keccak256(photoHash))
                                 ^------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:177:11: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		require(keccak256(keyword) == keywordHash);
		        ^----------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:177:11: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		require(keccak256(keyword) == keywordHash);
		        ^----------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:180:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		msg.sender.transfer(this.balance);
		                    ^----------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:194:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			require(keccak256(resqueAccount) == resqueHash);
			        ^----------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:194:12: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
			require(keccak256(resqueAccount) == resqueHash);
			        ^----------------------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:196:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		recipient.transfer(this.balance);			
		                   ^----------^
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function NYXAccount(bytes32 resqueAccountHash, address authorityAccount, bytes32 kwHash, bytes32[10] photoHshs) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:99:2: Warning: No visibility specified. Defaulting to "public". 
	function toggleLastChance(bool useResqueAccountAddress) onlyByOwner()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function transferByOwner(address recipient, uint amount) onlyByOwner() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:124:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawByResque() onlyByResque() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:149:5: Warning: No visibility specified. Defaulting to "public". 
    function setEmergencyAccount(bytes32 emergencyAccountHash, bytes32 photoHash) onlyByAuthority() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:174:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawByEmergency(string keyword) onlyByEmergency(keyword)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:187:2: Warning: No visibility specified. Defaulting to "public". 
	function lastChance(address recipient, address resqueAccount)
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:200:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
NYXAccount.withdrawByResque (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#126-146) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#146)
NYXAccount.withdrawByEmergency (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#178-186) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(this.balance) (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#185)
NYXAccount.lastChance (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#190-205) sends eth to arbitrary user
	Dangerous calls:
	- recipient.transfer(this.balance) (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#203-205)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
NYXAccount.toggleLastChance (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#101-110) should be declared external
NYXAccount.transferByOwner (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#111-124) should be declared external
NYXAccount.withdrawByResque (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#126-146) should be declared external
NYXAccount.setEmergencyAccount (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#150-175) should be declared external
NYXAccount.withdrawByEmergency (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#178-186) should be declared external
NYXAccount.lastChance (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#190-205) should be declared external
NYXAccount.fallback (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol:
	- pragma solidity^0.4.15 (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#4-6): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'NYXAccount.NYXAccount' (/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol#65-81) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/29/0xd64e5b228561225b437dc38b81891c15fe98cfee.sol analyzed (1 contracts), 12 result(s) found