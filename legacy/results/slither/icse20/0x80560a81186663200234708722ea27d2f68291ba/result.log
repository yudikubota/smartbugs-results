INFO:Slither:Compilation warnings/errors on /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:64:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BNB(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:80:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:81:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:82:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:83:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:94:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:101:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:102:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:103:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:104:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:105:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:114:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:115:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:123:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:124:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:132:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:133:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:142:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:109:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:118:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:127:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:136:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:152:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), msg.sender, tokens);
        ^--------------------------------------^
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:64:5: Warning: No visibility specified. Defaulting to "public". 
    function BNB(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:92:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:122:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:131:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:141:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BNB (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#38-158) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#80-92)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#103-104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#106:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#134-135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#150:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BNB.transfer (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#80-92) should be declared external
BNB.approve (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#94-100) should be declared external
BNB.transferFrom (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#101-114) should be declared external
BNB.burn (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#114-123) should be declared external
BNB.freeze (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#123-132) should be declared external
BNB.unfreeze (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#132-145) should be declared external
BNB.withdrawEther (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#147-150) should be declared external
BNB.fallback (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#151-158) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol:
	- pragma solidity^0.4.8 (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BNB.BNB' (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#66-79) is not in mixedCase
Parameter '_to' of BNB.transfer (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#80) is not in mixedCase
Parameter '_value' of BNB.transfer (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#80) is not in mixedCase
Parameter '_spender' of BNB.approve (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#94-95) is not in mixedCase
Parameter '_value' of BNB.approve (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#95) is not in mixedCase
Parameter '_from' of BNB.transferFrom (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#101) is not in mixedCase
Parameter '_to' of BNB.transferFrom (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#101) is not in mixedCase
Parameter '_value' of BNB.transferFrom (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#101) is not in mixedCase
Parameter '_value' of BNB.burn (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#114) is not in mixedCase
Parameter '_value' of BNB.freeze (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#123) is not in mixedCase
Parameter '_value' of BNB.unfreeze (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#132-133) is not in mixedCase
Variable 'BNB._totalSupply' (/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol#43-45) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/44/0x80560a81186663200234708722ea27d2f68291ba.sol analyzed (2 contracts), 41 result(s) found