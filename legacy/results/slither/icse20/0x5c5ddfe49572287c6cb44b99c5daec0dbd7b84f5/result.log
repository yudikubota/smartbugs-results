INFO:Detectors:[91m
Revolution.sendDividends (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#597-600) sends eth to arbitrary user
	Dangerous calls:
	- addr.send(value) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol)
Revolution.sendDividendsWithRefBonus (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol) sends eth to arbitrary user
	Dangerous calls:
	- addr.send(value + refBonus) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Revolution.payout (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#519-569):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#528-533)
	- size = m_investors.size() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#537)
	- investorAddr = m_investors.keyFromIndex(i) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#545-546)
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#546-551)
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#556-559)
	External calls sending eth:
	- sendDividendsWithRefBonus(investorAddr,value,refBonus) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#559-561)
	- sendDividends(investorAddr,value) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#563)
	State variables written after the call(s):
	- m_nextWave (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#553-554)
	- m_paysys (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#568)
Reentrancy in Revolution.payout (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#519-569):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#528-533)
	- size = m_investors.size() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#537)
	- investorAddr = m_investors.keyFromIndex(i) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#545-546)
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#546-551)
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#556-559)
	- m_paysys.latestKeyIndex = m_investors.iterStart() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#567)
	External calls sending eth:
	- sendDividendsWithRefBonus(investorAddr,value,refBonus) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#559-561)
	- sendDividends(investorAddr,value) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#563)
	State variables written after the call(s):
	- m_paysys (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#567)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
ToAddress.toAddr (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#329-332) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Revolution.doInvest (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#472-519) uses a dangerous strict equality:
	- m_paysys.mode == Paymode.Pull
Revolution.doInvest (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#472-519) uses a dangerous strict equality:
	- m_paysys.mode == Paymode.Pull
Revolution.payout (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#519-569) uses a dangerous strict equality:
	- m_paysys.latestKeyIndex == m_investors.iterStart()
	- i == size
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Revolution.doInvest (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#472-519):
	External calls:
	- notZeroNotSender(refs[0]) && m_investors.contains(refs[0]) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#479-501)
	- assert(bool)(m_investors.addRefBonus(refs[0],reward)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#481)
	State variables written after the call(s):
	- m_referrals (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#481-482)
Reentrancy in Revolution.getMyDividends (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#440-472):
	External calls:
	- investor = getMemInvestor(msg.sender) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#444)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,m_paysys.latestTime)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#448-449)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#458-460)
	- nextWave() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
	State variables written after the call(s):
	- m_investors (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
	- m_paysys (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
Reentrancy in Revolution.payout (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#519-569):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#528-533)
	State variables written after the call(s):
	- m_paysys (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#532-533)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
refs in Revolution.fallback (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#406-408) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Revolution.payout has external calls inside a loop:
	- investorAddr = m_investors.keyFromIndex(i) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#545-546)
Revolution.payout has external calls inside a loop:
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#546-551)
Revolution.payout has external calls inside a loop:
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#556-559)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Revolution.constructor (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#385-399):
	External calls:
	- nextWave() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#395)
	State variables written after the call(s):
	- waveStartup (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#396-399)
Reentrancy in Revolution.doInvest (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#472-519):
	External calls:
	- notZeroNotSender(refs[0]) && m_investors.contains(refs[0]) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#479-501)
	- assert(bool)(m_investors.addRefBonus(refs[0],reward)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#481)
	- notZeroNotSender(refs[1]) && m_investors.contains(refs[1]) && refs[0] != refs[1] (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#489-501)
	- assert(bool)(m_investors.addRefBonus(refs[1],reward)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#492-493)
	- notZeroNotSender(refs[2]) && m_investors.contains(refs[2]) && refs[0] != refs[2] && refs[1] != refs[2] (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#494-501)
	- assert(bool)(m_investors.addRefBonus(refs[2],reward)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#497-500)
	- m_investors.contains(msg.sender) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#507-514)
	- assert(bool)(m_investors.addValue(msg.sender,value)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#509-513)
	- assert(bool)(m_investors.insert(msg.sender,value)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#513)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#515)
	External calls sending eth:
	- adminAddr.transfer(m_adminPercent.mul(msg.value)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#503-504)
	- payerAddr.transfer(m_payerPercent.mul(msg.value)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#504-507)
	State variables written after the call(s):
	- investmentsNum (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#516-517)
Reentrancy in Revolution.getMyDividends (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#440-472):
	External calls:
	- investor = getMemInvestor(msg.sender) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#444)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,m_paysys.latestTime)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#448-449)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#458-460)
	- nextWave() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
	State variables written after the call(s):
	- investmentsNum (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
	- m_nextWave (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
	- waveStartup (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#465)
Reentrancy in Revolution.nextWave (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol):
	External calls:
	- m_paysys.latestKeyIndex = m_investors.iterStart() (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol)
	State variables written after the call(s):
	- investmentsNum (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol)
	- m_nextWave (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol)
	- waveStartup (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ToAddress.toAddr uses assembly (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#329-332)
	- /unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#331-332
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
InvestorsStorage.insert (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#80-89) should be declared external
InvestorsStorage.investorFullInfo (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#90-99) should be declared external
InvestorsStorage.investorBaseInfo (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#100-108) should be declared external
InvestorsStorage.investorShortInfo (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#108-114) should be declared external
InvestorsStorage.addRefBonus (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#114-120) should be declared external
InvestorsStorage.addValue (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#120-126) should be declared external
InvestorsStorage.setPaymentTime (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#126-132) should be declared external
InvestorsStorage.setRefBonus (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#132-141) should be declared external
InvestorsStorage.keyFromIndex (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#141-145) should be declared external
InvestorsStorage.contains (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#145-150) should be declared external
InvestorsStorage.size (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#151-156) should be declared external
InvestorsStorage.iterStart (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#156-157) should be declared external
Accessibility.provideAccess (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#249-262) should be declared external
Accessibility.access (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#263-267) should be declared external
PaymentSystem.paymode (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#284-285) should be declared external
Revolution.fallback (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#399-409) should be declared external
Revolution.investorsNumber (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#409-413) should be declared external
Revolution.balanceETH (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#413-416) should be declared external
Revolution.payerPercent (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#416-420) should be declared external
Revolution.dividendsPercent (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#420-424) should be declared external
Revolution.adminPercent (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#424-429) should be declared external
Revolution.referrerPercent (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#429-433) should be declared external
Revolution.investorInfo (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#434-438) should be declared external
Revolution.latestPayout (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#438-439) should be declared external
Revolution.payout (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#519-569) should be declared external
Revolution.setAdminAddr (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#571-573) should be declared external
Revolution.setPayerAddr (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#576-581) should be declared external
Revolution.setPullPaymode (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#581-584) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol:
	- pragma solidity^0.4.23 (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Struct 'InvestorsStorage.investor' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#59-64) is not in CapWords
Struct 'InvestorsStorage.itmap' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#64-69) is not in CapWords
Parameter '_a' of SafeMath.mul (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#158) is not in mixedCase
Parameter '_b' of SafeMath.mul (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#158) is not in mixedCase
Parameter '_a' of SafeMath.div (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#173) is not in mixedCase
Parameter '_b' of SafeMath.div (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#173) is not in mixedCase
Parameter '_a' of SafeMath.sub (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#185) is not in mixedCase
Parameter '_b' of SafeMath.sub (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#185-186) is not in mixedCase
Parameter '_a' of SafeMath.add (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#192) is not in mixedCase
Parameter '_b' of SafeMath.add (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#193) is not in mixedCase
Struct 'Percent.percent' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#213) is not in CapWords
Variable 'Accessibility.m_admins' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#239) is not in mixedCase
Variable 'PaymentSystem.m_paysys' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#278-281) is not in mixedCase
Variable 'Revolution.m_investors' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#340) is not in mixedCase
Variable 'Revolution.m_referrals' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#340-341) is not in mixedCase
Variable 'Revolution.m_nextWave' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#341) is not in mixedCase
Constant 'Revolution.minInvesment' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#345-346) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution.maxBalance' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#346) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution.pauseOnNextWave' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#346-347) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Revolution.m_dividendsPercent' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#347-350) is not in mixedCase
Variable 'Revolution.m_adminPercent' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#350-351) is not in mixedCase
Variable 'Revolution.m_payerPercent' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#351-352) is not in mixedCase
Variable 'Revolution.m_refPercent' (/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol#353) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/11/0x5c5ddfe49572287c6cb44b99c5daec0dbd7b84f5.sol analyzed (8 contracts), 71 result(s) found