INFO:Slither:Compilation warnings/errors on /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:1292:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));
                                                 ^-------------------------------------------------------------^
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:1404:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                              ^---------------------------^
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:1404:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:1404:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        if (!(keccak256(keyhash) == keccak256(sha256(context_name, queryId)))) return false;
                                    ^--------------------------------------^
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:1422:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == keccak256(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^--------------------------------------------^
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:1659:54: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function __callback(bytes32 myid, string result, bytes proof) public {
                                                     ^---------^
/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:673:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) public {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1659-1660)
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1665-1666)
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1674)
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1679-1683)
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1687-1689)
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
BettingController.owner (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1743-1746) shadows:
	- oraclizeController.owner (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1594)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
Buffer.init (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#408-427) is declared view but contains assembly code
Buffer.append (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#443-485) is declared view but contains assembly code
Buffer.append (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#490-509) is declared view but contains assembly code
Buffer.appendInt (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#515-537) is declared view but contains assembly code
usingOraclize.getCodeSize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1103-1107) is declared view but contains assembly code
usingOraclize.copyBytes (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1477-1498) is declared view but contains assembly code
usingOraclize.safeMemoryCleaner (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1587-1593) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in oraclizeController.constructor (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1618-1623):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1618)
	- oraclize_setCustomGasPrice(30000000000) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1619)
	State variables written after the call(s):
	- OAR (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1619)
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1619)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#635-640):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#636-639)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#637-639)
	State variables written after the call(s):
	- oraclize (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#637-639)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
buf in usingOraclize.ba2cbor (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1261) is a local variable never initialiazed
buf in usingOraclize.stra2cbor (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1254-1255) is a local variable never initialiazed
winning_bet_total in Race.calculateReward (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#280-281) is a local variable never initialiazed
coinPostPrice in Race.getCoinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#317) is a local variable never initialiazed
coinPrePrice in Race.getCoinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#316) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
CBOR.encodeType (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#547-570) does not use the value returned by external calls:
	-buf.appendInt(value,1) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#555)
	-buf.appendInt(value,2) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#559)
	-buf.appendInt(value,4) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#563-564)
	-buf.appendInt(value,8) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#566-567)
CBOR.encodeBytes (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#585-589) does not use the value returned by external calls:
	-buf.append(value) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#589)
CBOR.encodeString (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#589-601) does not use the value returned by external calls:
	-buf.append(bytes(value)) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#600)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in oraclizeController.__callback (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1691-1726):
	External calls:
	- require(bool)(msg.sender == oraclize_cbAddress()) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1691-1695)
	State variables written after the call(s):
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1716)
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1721-1723)
Reentrancy in oraclizeController.constructor (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1618-1623):
	External calls:
	- oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1618)
	- oraclize_setCustomGasPrice(30000000000) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1619)
	State variables written after the call(s):
	- horses (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1619)
	- horses (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1620-1621)
	- horses (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1621)
	- horses (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1622-1623)
	- horses (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1623)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1619)
	- owner (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1621-1622)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1274-1331):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1282-1283)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1293-1296)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1293-1296)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1293-1296)
	- oraclize_randomDS_args (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1327-1331)
Reentrancy in Race.reward (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#203-273):
	External calls:
	- P3DContract_.buyTokens.value(p3d_fee)() (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#228)
	External calls sending eth:
	- house_takeout.transfer(house_fee) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#221-222)
	- P3DContract_.buyTokens.value(p3d_fee)() (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#228)
	State variables written after the call(s):
	- chronus (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#272-273)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#232-234)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#236-238)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#240-241)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#246-247)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#249-251)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#254-255)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#258)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#263)
	- winnerPoolTotal (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#270-271)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#232)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#236)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#238-239)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#239-240)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#245)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#249)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#252-253)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#253-254)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#257-258)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#261)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#262)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#264-266)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#266-269)
	- winner_horse (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#269-270)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	State variables written after the call(s):
	- coinIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1651-1652)
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1649-1651)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1651)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1654-1658)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1658-1659)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1663-1664)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1664-1665)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1671-1672)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1672-1673)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1677-1678)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1678)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
Reentrancy in oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1689):
	External calls:
	- oraclize_getPrice(URL,horses.customPreGasLimit) * 3 + oraclize_getPrice(URL,horses.customPostGasLimit) * 3 > address(this).balance (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1643-1689)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
	External calls sending eth:
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1647-1649)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1652-1654)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPreGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1660-1662)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1027/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1669-1671)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/2/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1675-1677)
	- temp_ID = oraclize_query(delay,URL,json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price,horses.customPostGasLimit) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1685-1687)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1687)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1683-1685)
Reentrancy in BettingController.spawnRaceManual (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol):
	External calls:
	- RaceDeployed(address(race),race.owner(),_bettingDuration,_raceDuration,now) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
	State variables written after the call(s):
	- isOraclizeEnabled (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
Reentrancy in BettingController.spawnRaceManual (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol):
	External calls:
	- RaceDeployed(address(race),race.owner(),_bettingDuration,_raceDuration,now) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
	- setupRace(_bettingDuration,_raceDuration,address(race)) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
	External calls sending eth:
	- setupRace(_bettingDuration,_raceDuration,address(race)) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
	State variables written after the call(s):
	- oraclizeIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
	- oraclizeInverseIndex (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
	- oraclize_network_name (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Race.priceCallback (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#139-173) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(! chronus.race_end) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#142-143)
	- now >= chronus.starting_time + chronus.race_duration + 3600 (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#154-170)
	- now >= chronus.starting_time + chronus.betting_duration + 3600 (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#146-152)
Race.refund (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#334-341) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((chronus.betting_open && ! chronus.race_start) || (chronus.race_start && ! chronus.race_end)) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#338-339)
	- require(bool)(now > chronus.starting_time + chronus.race_duration) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#337-338)
Race.recovery (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#347-350) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((chronus.race_end && now > chronus.starting_time + chronus.race_duration + (2592000)) || (chronus.voided_bet && now > chronus.voided_timestamp + (2592000))) (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#348-349)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Buffer.init uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#408-427)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#419-427
Buffer.append uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#443-485)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#449-472
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#473-475
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#479-485
Buffer.append uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#490-509)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#498-509
Buffer.appendInt uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#515-537)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#525-537
usingOraclize.getCodeSize uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1103-1107)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1105-1107
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1274-1331)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1283-1287
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1287-1288
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1297-1331
usingOraclize.verifySig uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1338-1358)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1351-1352
usingOraclize.copyBytes uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1477-1498)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1492-1494
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1504-1530)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1517-1530
usingOraclize.ecrecovery uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1536-1587)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1554-1578
usingOraclize.safeMemoryCleaner uses assembly (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1587-1593)
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1588-1593
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#350)
Race.house_takeout should be constant (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#38-41)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:
	- Version used: ['^0.4.20', '^0.4.21']
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1 declares pragma solidity^0.4.20
	- /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#3-4 declares pragma solidity^0.4.21
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
OraclizeI.query2 (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#352-353) should be declared external
OraclizeI.queryN (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#355-356) should be declared external
OraclizeI.getPrice (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#361-362) should be declared external
OraclizeI.getPrice (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#362-368) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#376) should be declared external
usingOraclize.__callback (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#686-688) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol:
	- pragma solidity^0.4.20 (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1): it allows old versions
	- pragma solidity^0.4.21 (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#3-4): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Struct 'Race.chronus_info' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#45-56) is not in CapWords
Struct 'Race.horses_info' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#56-65) is not in CapWords
Struct 'Race.bet_info' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#65-70) is not in CapWords
Struct 'Race.coin_info' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#70-76) is not in CapWords
Struct 'Race.voter_info' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#76-81) is not in CapWords
Parameter '_newOwner' of Race.changeOwnership (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#138) is not in mixedCase
Parameter 'coin_pointer' of Race.priceCallback (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#140) is not in mixedCase
Parameter '_bettingDuration' of Race.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#192-193) is not in mixedCase
Parameter '_raceDuration' of Race.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#193) is not in mixedCase
Function 'Race.claim_reward' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#299-310) is not in mixedCase
Function 'Race.reward_total' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#329-332) is not in mixedCase
Variable 'Race.house_takeout' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#38-41) is not in mixedCase
Variable 'Race.P3DContract_' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#41-42) is not in mixedCase
Constant 'Race.version' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#42-45) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Race.total_reward' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#86) is not in mixedCase
Variable 'Race.total_bettors' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#89-90) is not in mixedCase
Variable 'Race.winner_horse' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#90) is not in mixedCase
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#351-352) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#353-355) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#357-358) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#374-375) is not in mixedCase
Struct 'Buffer.buffer' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#406-408) is not in CapWords
Parameter '_capacity' of Buffer.init (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#412) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#611-1593) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#641-645) is not in mixedCase
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#645-686) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#686-688) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#688-691) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#691-693) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#693-696) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#696-699) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#699-704) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#704-711) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#711-716) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#716-719) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#719-724) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#724-730) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#730-736) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#736-742) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#742-747) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#747-755) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#755-763) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#763-767) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#767-773) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#774-780) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#780-784) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#785-790) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#790-796) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#796-804) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#804-810) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#810-816) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#816-825) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#825-833) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#833-840) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#840-848) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#848-856) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#856-865) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#866-874) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#874-883) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#883-892) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#892-899) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#899-905) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#905-910) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#910-916) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#916-924) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#924-931) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#931-937) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#937-943) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#943-949) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#949-955) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#955-961) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#961-968) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#968-975) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#975-980) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#980-987) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#987-996) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#996-1004) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1004-1011) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1011-1018) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1018-1027) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1027-1036) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1037-1044) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1044-1052) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1052-1064) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1065-1075) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1075-1089) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1089-1091) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1091-1093) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1093-1099) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1099-1103) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1108) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1132) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1132) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1149) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1149) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1169) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1169) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1169) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1169-1170) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1170) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1197) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1197) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1197) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1197) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1202) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1202-1203) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1203) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1208) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1208) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1215) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1218-1219) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1219) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1266-1271) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1267-1268) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1271-1274) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1274-1331) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1275) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1275) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1275) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1331-1335) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1358-1398) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1406-1413) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1407) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1407) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1407) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1413) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1419-1472) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1421) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1504-1530) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#613-615) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#615-617) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#617) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#617-618) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#618-620) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#620-621) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#621-623) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#624-625) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#626) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#627-630) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#630) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#630-631) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#632) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#632-634) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#634) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1265-1266) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1335) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1335-1338) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1398-1406) is not in mixedCase
Contract 'oraclizeController' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1593-1742) is not in CapWords
Struct 'oraclizeController.horsesInfo' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1597-1602) is not in CapWords
Struct 'oraclizeController.coinInfo' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1603-1605) is not in CapWords
Event 'oraclizeController.newOraclizeQuery' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1594-1595) is not in CapWords
Function 'oraclizeController.__callback' (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1691-1726) is not in mixedCase
Parameter '_newGasPrice' of oraclizeController.changeOraclizeGasPrice (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1639) is not in mixedCase
Parameter 'locking_duration' of oraclizeController.setupRace (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1641-1642) is not in mixedCase
Parameter 'coin_pointer' of oraclizeController.ethorseOracle (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#1727) is not in mixedCase
Parameter '_bettingDuration' of BettingController.spawnRaceManual (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_raceDuration' of BettingController.spawnRaceManual (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_isOraclizeUsed' of BettingController.spawnRaceManual (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_race' of BettingController.enableRefund (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_race' of BettingController.manualRecovery (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_race' of BettingController.changeRaceOwnership (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_newOwner' of BettingController.changeRaceOwnership (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Parameter '_amount' of BettingController.extractFund (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#613-615) is never used in BettingController
usingOraclize.week (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#615-617) is never used in BettingController
usingOraclize.month (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#617) is never used in BettingController
usingOraclize.proofType_NONE (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#617-618) is never used in BettingController
usingOraclize.proofType_Ledger (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#620-621) is never used in BettingController
usingOraclize.proofType_Android (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#621-623) is never used in BettingController
usingOraclize.proofType_Native (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#624-625) is never used in BettingController
usingOraclize.networkID_mainnet (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#630) is never used in BettingController
usingOraclize.networkID_testnet (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#630-631) is never used in BettingController
usingOraclize.networkID_morden (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#632) is never used in BettingController
usingOraclize.networkID_consensys (/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol#632-634) is never used in BettingController
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/7/0x028377b5d7efc17c8450c70444c17ab317109f5f.sol analyzed (10 contracts), 223 result(s) found