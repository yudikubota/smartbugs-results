INFO:Slither:Compilation warnings/errors on /unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:99:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ILF(address _ILFManager){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:27:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:44:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:63:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:111:9: Warning: Invoking events without "emit" prefix is deprecated.
        Emission(emitTo, amount);
        ^----------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:121:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(burnFrom, amount);
        ^--------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:138:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(msg.sender, _to, _value);
                ^-------------------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:158:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(_from, _to, _value);
                ^--------------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:192:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        assert(sha3(minterAddress)==_hash);
               ^-----------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:192:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        assert(sha3(minterAddress)==_hash);
               ^-----------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:192:16: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        assert(sha3(minterAddress)==_hash);
               ^-----------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:208:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        assert(sha3(burnerAddress)==_hash);
               ^-----------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:208:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        assert(sha3(burnerAddress)==_hash);
               ^-----------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:208:16: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        assert(sha3(burnerAddress)==_hash);
               ^-----------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:215:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        assert(sha3(ILFManager)==_hash);
               ^--------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:215:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        assert(sha3(ILFManager)==_hash);
               ^--------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:215:16: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        assert(sha3(ILFManager)==_hash);
               ^--------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:236:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        assert(sha3(key) == ILFManagerCandidateKeyHash);
               ^-------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:236:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        assert(sha3(key) == ILFManagerCandidateKeyHash);
               ^-------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:236:16: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        assert(sha3(key) == ILFManagerCandidateKeyHash);
               ^-------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function burnILF(address , uint ) {}
    ^----------------------------------^
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:23:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:54:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:61:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function ILF(address _ILFManager){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:106:5: Warning: No visibility specified. Defaulting to "public". 
    function emitToken(address emitTo, uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:128:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function sealMinter(bytes32 _hash) onlyILFManager {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:207:5: Warning: No visibility specified. Defaulting to "public". 
    function sealBurner(bytes32 _hash) onlyILFManager {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:214:5: Warning: No visibility specified. Defaulting to "public". 
    function disableManualEmission(bytes32 _hash) onlyILFManager {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:5:5: Warning: Function state mutability can be restricted to pure
    function burnILF(address , uint ) {}
    ^----------------------------------^

INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#197-198:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#213:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#225-226:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Burner.burnILF (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#5-8) should be declared external
StandardToken.transfer (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#23-35) should be declared external
ILF.transfer (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#129-148) should be declared external
ILF.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#148-169) should be declared external
StandardToken.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#39-52) should be declared external
StandardToken.balanceOf (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#54-58) should be declared external
StandardToken.approve (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#61-68) should be declared external
StandardToken.allowance (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#71-79) should be declared external
ILF.emitToken (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#108-115) should be declared external
ILF.sealMinter (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#196-199) should be declared external
ILF.sealBurner (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#212-214) should be declared external
ILF.disableManualEmission (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#220-230) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol:
	- pragma solidity^0.4.10 (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '' of Burner.burnILF (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#5) is not in mixedCase
Parameter '_scope_0' of Burner.burnILF (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#5) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#23) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#23) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#39) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#39) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#39-40) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#55) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#62) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#62) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#71-72) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#72) is not in mixedCase
Parameter '_to' of ILF.transfer (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#129) is not in mixedCase
Parameter '_value' of ILF.transfer (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#129-131) is not in mixedCase
Parameter '_from' of ILF.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#148-150) is not in mixedCase
Parameter '_to' of ILF.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#150) is not in mixedCase
Parameter '_value' of ILF.transferFrom (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#150) is not in mixedCase
Function 'ILF.ILF' (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#103-104) is not in mixedCase
Parameter '_ILFManager' of ILF.ILF (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#103) is not in mixedCase
Parameter '_minterAddress' of ILF.changeMinter (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#189) is not in mixedCase
Parameter '_hash' of ILF.sealMinter (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#197) is not in mixedCase
Parameter '_burnerAddress' of ILF.changeBurner (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#202-205) is not in mixedCase
Parameter '_hash' of ILF.sealBurner (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#212) is not in mixedCase
Parameter '_hash' of ILF.disableManualEmission (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#224) is not in mixedCase
Variable 'ILF.ILFManager' (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#91) is not in mixedCase
Variable 'ILF.ILFManagerCandidate' (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#92-93) is not in mixedCase
Variable 'ILF.ILFManagerCandidateKeyHash' (/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol#93-94) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x0766315fc8257f890b683b5f9faa9875c7846b4d.sol analyzed (3 contracts), 44 result(s) found