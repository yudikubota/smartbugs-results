INFO:Slither:Compilation warnings/errors on /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:48:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:77:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Crowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:146:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CrypTollBoothToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:162:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:163:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:164:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:165:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:174:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:182:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:183:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:184:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:185:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:186:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:195:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:196:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:204:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:205:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:213:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:214:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:223:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:21:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:46:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:55:5: Warning: Functions in interfaces should be declared external.
    function transfer(address receiver, uint amount);
    ^-----------------------------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:102:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundTransfer(msg.sender, amount, true);
        ^------------------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:115:13: Warning: Invoking events without "emit" prefix is deprecated.
            GoalReached(beneficiary, amountRaised);
            ^------------------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:168:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:190:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:199:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:208:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:217:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:55:5: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
    function transfer(address receiver, uint amount);
    ^-----------------------------------------------^
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function Crowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function checkGoalReached() afterDeadline {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function CrypTollBoothToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:161:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:172:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:181:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:194:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:203:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:212:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:222:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:228:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:46:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#55-60) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#58-59)
CrypTollBoothToken (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#125-230) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#162-174)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:
	Contract Crowdsale has payable functions:
	 - fallback (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#99-109)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#47-55) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#55:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#164:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#165:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#167:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#181:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#184:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#185:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#186:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#187:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#188:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#197:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#198:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#206:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#207:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#217:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
token.transfer (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#58-59) should be declared external
Crowdsale.fallback (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#99-109) should be declared external
Crowdsale.checkGoalReached (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#114-124) should be declared external
CrypTollBoothToken.transfer (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#162-174) should be declared external
CrypTollBoothToken.approve (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#176-182) should be declared external
CrypTollBoothToken.transferFrom (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#182-197) should be declared external
CrypTollBoothToken.burn (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#197-206) should be declared external
CrypTollBoothToken.freeze (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#206-215) should be declared external
CrypTollBoothToken.unfreeze (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#215-230) should be declared external
CrypTollBoothToken.withdrawEther (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol) should be declared external
CrypTollBoothToken.fallback (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Contract 'token' (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#55-60) is not in CapWords
Function 'Crowdsale.Crowdsale' (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#79-94) is not in mixedCase
Function 'CrypTollBoothToken.CrypTollBoothToken' (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#151-162) is not in mixedCase
Parameter '_to' of CrypTollBoothToken.transfer (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#163) is not in mixedCase
Parameter '_value' of CrypTollBoothToken.transfer (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#163-164) is not in mixedCase
Parameter '_spender' of CrypTollBoothToken.approve (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#178-180) is not in mixedCase
Parameter '_value' of CrypTollBoothToken.approve (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#180) is not in mixedCase
Parameter '_from' of CrypTollBoothToken.transferFrom (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#182-183) is not in mixedCase
Parameter '_to' of CrypTollBoothToken.transferFrom (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#183) is not in mixedCase
Parameter '_value' of CrypTollBoothToken.transferFrom (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#183-184) is not in mixedCase
Parameter '_value' of CrypTollBoothToken.burn (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#197) is not in mixedCase
Parameter '_value' of CrypTollBoothToken.freeze (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#206) is not in mixedCase
Parameter '_value' of CrypTollBoothToken.unfreeze (/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol#215) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x01dd3a4ab1141c15ac91fbc7d5cf167f45b27d09.sol analyzed (4 contracts), 46 result(s) found