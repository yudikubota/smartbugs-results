INFO:Slither:Compilation warnings/errors on /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:70:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CCICoin() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:104:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:105:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:106:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:107:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:117:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:125:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:126:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:127:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:128:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:129:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:138:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;                                           // Check if the sender has enough
                                            ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:139:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:147:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;                                       // Check if the sender has enough
                                            ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:148:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:156:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;                                       // Check if the sender has enough
                                           ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:157:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:166:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:173:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.sender != owner)throw;
                               ^---^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:110:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:133:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:142:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:151:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:160:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:70:5: Warning: No visibility specified. Defaulting to "public". 
    function CCICoin() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:103:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:115:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:124:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:146:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:155:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:165:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:172:5: Warning: No visibility specified. Defaulting to "public". 
    function mint(uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:183:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
CCICoin (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#38-185) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#104-115)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
CCICoin.decimalUnits should be constant (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#63)
CCICoin.tokenName should be constant (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#62-63)
CCICoin.tokenSymbol should be constant (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#63-64)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#105:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#107:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#140:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#141:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#149:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#150:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#159:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#175:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#176:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
CCICoin.transfer (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#104-115) should be declared external
CCICoin.approve (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#118-124) should be declared external
CCICoin.transferFrom (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#125-138) should be declared external
CCICoin.burn (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#138-147) should be declared external
CCICoin.freeze (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#147-156) should be declared external
CCICoin.unfreeze (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#156-172) should be declared external
CCICoin.withdrawEther (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#173-176) should be declared external
CCICoin.mint (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#176-185) should be declared external
CCICoin.fallback (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'CCICoin.CCICoin' (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#71-82) is not in mixedCase
Parameter '_to' of CCICoin.transfer (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#104) is not in mixedCase
Parameter '_value' of CCICoin.transfer (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#104) is not in mixedCase
Parameter '_spender' of CCICoin.approve (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#118) is not in mixedCase
Parameter '_value' of CCICoin.approve (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#118-119) is not in mixedCase
Parameter '_from' of CCICoin.transferFrom (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#125) is not in mixedCase
Parameter '_to' of CCICoin.transferFrom (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#125) is not in mixedCase
Parameter '_value' of CCICoin.transferFrom (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#125) is not in mixedCase
Parameter '_value' of CCICoin.burn (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#138) is not in mixedCase
Parameter '_value' of CCICoin.freeze (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#147) is not in mixedCase
Parameter '_value' of CCICoin.unfreeze (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#156-157) is not in mixedCase
Parameter '_value' of CCICoin.mint (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#176) is not in mixedCase
Variable 'CCICoin.mined_coin_supply' (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#64-65) is not in mixedCase
Variable 'CCICoin.pre_mined_supply' (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#65-66) is not in mixedCase
Variable 'CCICoin.circulating_supply' (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#66-67) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CCICoin.tokenName (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#62-63) is never used in CCICoin
CCICoin.decimalUnits (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#63) is never used in CCICoin
CCICoin.tokenSymbol (/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol#63-64) is never used in CCICoin
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0x89746892b782efe54aa797ef5179f5165931e772.sol analyzed (2 contracts), 48 result(s) found