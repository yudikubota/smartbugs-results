INFO:Slither:Compilation warnings/errors on /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:11:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:38:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:53:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:54:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:55:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:80:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:81:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:82:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:83:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:92:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:100:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                // Check if the sender has enough
                                       ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:101:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;    // Check allowance
                                                   ^---^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:58:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:87:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:95:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:104:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:110:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:111:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:2:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:6:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function MyToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:52:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:91:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:107:9: Warning: No visibility specified. Defaulting to "public". 
        function mintToken(address target, uint256 mintedAmount) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
MyToken (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#19-113) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#53-61)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
MyToken.standard should be constant (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#21-22)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#12:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#53:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#55:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#56:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
tokenRecipient.receiveApproval (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#2) should be declared external
owned.transferOwnership (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#15-19) should be declared external
MyToken.transfer (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#53-61) should be declared external
MyToken.approveAndCall (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#69-79) should be declared external
MyToken.transferFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#79-92) should be declared external
MyToken.burn (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#92-100) should be declared external
MyToken.burnFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#100-108) should be declared external
MyToken.mintToken (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#108-113) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol:
	- pragma solidity^0.4.8 (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#2-3) is not in CapWords
Contract 'owned' (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#3-19) is not in CapWords
Function 'MyToken.MyToken' (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#39-52) is not in mixedCase
Parameter '_to' of MyToken.transfer (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#53) is not in mixedCase
Parameter '_value' of MyToken.transfer (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#53) is not in mixedCase
Parameter '_spender' of MyToken.approve (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#63-64) is not in mixedCase
Parameter '_value' of MyToken.approve (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#64) is not in mixedCase
Parameter '_spender' of MyToken.approveAndCall (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#70) is not in mixedCase
Parameter '_value' of MyToken.approveAndCall (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#71) is not in mixedCase
Parameter '_extraData' of MyToken.approveAndCall (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#71) is not in mixedCase
Parameter '_from' of MyToken.transferFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#80) is not in mixedCase
Parameter '_to' of MyToken.transferFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#80) is not in mixedCase
Parameter '_value' of MyToken.transferFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#80) is not in mixedCase
Parameter '_value' of MyToken.burn (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#92) is not in mixedCase
Parameter '_from' of MyToken.burnFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#100) is not in mixedCase
Parameter '_value' of MyToken.burnFrom (/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol#100) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/25/0x1f83e17ddf26d4168f5802d519d1b073a8843506.sol analyzed (3 contracts), 38 result(s) found