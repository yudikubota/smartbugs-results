INFO:Slither:Compilation warnings/errors on /unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:17:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function WineMarket(address _wallet) public{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:77:43: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(msg.value <= SafeMath.sub(this.balance,msg.value));
                                          ^----------^
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:81:70: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint256 wineBought = calculateWineBuy(buyValue, SafeMath.sub(this.balance, buyValue));
                                                                     ^----------^
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:92:54: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateTrade(wine, marketWineValue, this.balance);
                                                     ^----------^
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:96:49: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateTrade(wine, marketWine, this.balance);
                                                ^----------^
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:104:37: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateWineBuy(eth,this.balance);
                                    ^----------^
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:119:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:123:42: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
 ... vineyardContract.wineInCellar(msg.sender) ... 
     ^---------------------------------------^

INFO:Detectors:[93m
WineMarket.seedMarket (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#113-122) uses a dangerous strict equality:
	- require(bool)(marketWine == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in WineMarket.transferWineFromVineyardCellar (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#35-43):
	External calls:
	- require(bool)(vineyardContract.wineInCellar(msg.sender) > totalWineTransferredFromVineyard[msg.sender]) (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#36-37)
	- wineToTransfer = SafeMath.sub(vineyardContract.wineInCellar(msg.sender),totalWineTransferredFromVineyard[msg.sender]) (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#38-39)
	State variables written after the call(s):
	- totalWineTransferredFromVineyard (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#40-43)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in WineMarket.transferWineFromVineyardCellar (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#35-43):
	External calls:
	- require(bool)(vineyardContract.wineInCellar(msg.sender) > totalWineTransferredFromVineyard[msg.sender]) (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#36-37)
	- wineToTransfer = SafeMath.sub(vineyardContract.wineInCellar(msg.sender),totalWineTransferredFromVineyard[msg.sender]) (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#38-39)
	State variables written after the call(s):
	- currentWineAmount (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#39-40)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
WineMarket.transferWalletOwnership (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#24-30) should be declared external
WineMarket.transferWineFromVineyardCellar (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#35-43) should be declared external
WineMarket.consumeWine (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#43-54) should be declared external
WineMarket.sellWine (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#54-77) should be declared external
WineMarket.buyWine (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#77-87) should be declared external
WineMarket.calculateWineSell (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#91-96) should be declared external
WineMarket.calculateWineBuySimple (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#104-108) should be declared external
WineMarket.seedMarket (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#113-122) should be declared external
WineMarket.getBalance (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#122-123) should be declared external
WineMarket.getMyWine (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#123-127) should be declared external
WineMarket.getMyTransferredWine (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#128-135) should be declared external
WineMarket.getMyAvailableWine (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#135-142) should be declared external
VineyardInterface.wineInCellar (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#142-144) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'WineMarket.WineMarket' (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#17-24) is not in mixedCase
Parameter '_wallet' of WineMarket.WineMarket (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#17-18) is not in mixedCase
Parameter 'Balance' of WineMarket.calculateTrade (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#88) is not in mixedCase
Parameter '' of VineyardInterface.wineInCellar (/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol#144) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x55d722827c8e12504db5b4f3837bff2f43c9f232.sol analyzed (3 contracts), 21 result(s) found