INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:18:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ProofOfIdleness() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:26:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:36:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:43:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:52:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:64:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:67:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:29:7: Warning: Invoking events without "emit" prefix is deprecated.
      Pinged(msg.sender, now);
      ^---------------------^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:40:9: Warning: Invoking events without "emit" prefix is deprecated.
        Pinged(msg.sender, now);
        ^---------------------^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:56:7: Warning: Invoking events without "emit" prefix is deprecated.
      Eliminated(a);
      ^-----------^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:66:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if (!msg.sender.send(this.balance))
                           ^----------^
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:18:5: Warning: No visibility specified. Defaulting to "public". 
    function ProofOfIdleness() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:24:5: Warning: No visibility specified. Defaulting to "public". 
    function idle() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:34:5: Warning: No visibility specified. Defaulting to "public". 
    function join() payable { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function eliminate(address a) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function claimReward() {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ProofOfIdleness.claimReward (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#63-69) uses a dangerous strict equality:
	- lastPing[msg.sender] == 0 || countRemaining != 1
ProofOfIdleness.claimReward (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#63-69) uses a dangerous strict equality:
	- lastPing[msg.sender] == 0 || countRemaining != 1
ProofOfIdleness.eliminate (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#51-60) uses a dangerous strict equality:
	- lastPing[a] == 0 || now <= lastPing[a] + 97200
ProofOfIdleness.claimReward (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#63-69) uses a dangerous strict equality:
	- lastPing[msg.sender] == 0 || countRemaining != 1
ProofOfIdleness.eliminate (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#51-60) uses a dangerous strict equality:
	- lastPing[a] == 0 || now <= lastPing[a] + 97200
ProofOfIdleness.idle (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#25-33) uses a dangerous strict equality:
	- lastPing[msg.sender] == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#28:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#38:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#48:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#55:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#67:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ProofOfIdleness.idle (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#25-33) should be declared external
ProofOfIdleness.join (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#35-48) should be declared external
ProofOfIdleness.eliminate (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#51-60) should be declared external
ProofOfIdleness.claimReward (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#63-69) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol:
	- pragma solidity^0.4.9 (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ProofOfIdleness.ProofOfIdleness' (/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol#18-23) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/13/0x019d7e5ae8d2ba9a292244311dc7355058ab1b08.sol analyzed (1 contracts), 15 result(s) found