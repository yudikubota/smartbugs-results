INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:108:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CelebrityToken() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:544:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CelebrityBreederToken() public { 
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:591:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person;
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:611:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person;
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:789:6: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
     Person person; //@Artyom reference
     ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:818:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person; //@Artyom reference
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:872:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person; //@Artyom reference
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:927:8: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
       Person person; //@Artyom reference
       ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:954:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person withperson; //@Artyom reference
    ^---------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1093:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      Person person;
      ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1113:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person; 
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1139:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person; 
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1162:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person;
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1177:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person;
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:128:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _to, _tokenId);
    ^---------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:236:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenSold(_tokenId, sellingPrice, personIndexToPrice[_tokenId], oldOwner, newOwner, persons[_tokenId].name);
    ^---------------------------------------------------------------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:367:5: Warning: Invoking events without "emit" prefix is deprecated.
    Birth(newPersonId, _name, _owner);
    ^-------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:384:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      ceoAddress.transfer(this.balance);
                          ^----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:386:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      _to.transfer(this.balance);
                   ^----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:405:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _tokenId);
    ^----------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:470:64: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xDAb64Dc4A02225F76FccCe35aB9bA53B3735C684'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  CelebrityBreederToken private CelBetta=CelebrityBreederToken(0xdab64dc4a02225f76fccce35ab9ba53b3735c684); //@Artyom Pointing to betta 
                                                               ^----------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:582:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _to, _tokenId);
    ^---------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:591:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person;
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:611:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person;
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:670:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenSold(_tokenId, sellingPrice, personIndexToPriceGen1[_tokenId], oldOwner, newOwner, PersonsGen1[_tokenId].name);
    ^-----------------------------------------------------------------------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:696:5: Warning: Invoking events without "emit" prefix is deprecated.
    SellingPriceEvent(msg.sender,_tokenId,true,_price);
    ^------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:789:6: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
     Person person; //@Artyom reference
     ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:810:5: Warning: Invoking events without "emit" prefix is deprecated.
    GenesInitialisedEvent(msg.sender,tokenId,generation,newgene);
    ^----------------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:818:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person; //@Artyom reference
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:872:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person; //@Artyom reference
    ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:927:8: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
       Person person; //@Artyom reference
       ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:942:8: Warning: Invoking events without "emit" prefix is deprecated.
       SiringPriceEvent(msg.sender,_mypersonid,_mypersongeneration,_siringprice);
       ^-----------------------------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:954:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory withperson'?
    Person withperson; //@Artyom reference
    ^---------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1005:5: Warning: Invoking events without "emit" prefix is deprecated.
    Birth(newPersonId, _name, msg.sender);
    ^-----------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1021:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
           _rand=uint64(keccak256(block.blockhash(block.number), i, now,_mypersonid,_withpersonid))%10000;
                        ^------------------------------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1055:58: Warning: The type of "int_const 11" was inferred as uint8. This is probably not desired. Use an explicit type to silence this warning.
      if(uint64(keccak256(block.blockhash(block.number), 11, now,_mypersonid,_withpersonid))%2>0)
                                                         ^^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1055:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      if(uint64(keccak256(block.blockhash(block.number), 11, now,_mypersonid,_withpersonid))%2>0)
                ^-------------------------------------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1070:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    DevAddress.transfer((this.balance/10)*3);
                         ^----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1071:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    CeoAddress.transfer((this.balance/10)*7); 
                         ^----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1090:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _tokenId);
    ^----------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1093:7: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
      Person person;
      ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1113:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person; 
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1132:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trained(msg.sender, personid, persongeneration);
    ^---------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1139:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person; 
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1157:5: Warning: Invoking events without "emit" prefix is deprecated.
    Beaten(msg.sender, personid, persongeneration);    
    ^--------------------------------------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1162:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person;
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1177:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person;
         ^-----------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1021:35: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
           _rand=uint64(keccak256(block.blockhash(block.number), i, now,_mypersonid,_withpersonid))%10000;
                                  ^-------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1055:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
      if(uint64(keccak256(block.blockhash(block.number), 11, now,_mypersonid,_withpersonid))%2>0)
                          ^-------------^
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1161:5: Warning: No visibility specified. Defaulting to "public". 
    function checkTrainingPrice(uint256 personid, bool persongeneration) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1176:5: Warning: No visibility specified. Defaulting to "public". 
    function checkBeatingPrice(uint256 personid, bool persongeneration) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1008:3: Warning: Function state mutability can be restricted to view
  function _generateGene(uint64 _genes1,uint64 _genes2,uint256 _mypersonid,uint256 _withpersonid) private returns(uint64,bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
CelebrityToken.purchase (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#203-246) sends eth to arbitrary user
	Dangerous calls:
	- oldOwner.transfer(payment) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#241)
CelebrityToken._payout (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#392-397) sends eth to arbitrary user
	Dangerous calls:
	- ceoAddress.transfer(this.balance) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#395-397)
	- _to.transfer(this.balance) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#397)
CelebrityBreederToken.purchase (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#658-699) sends eth to arbitrary user
	Dangerous calls:
	- oldOwner.transfer(sellingPrice) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#690-691)
CelebrityBreederToken._payout (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1097-1102) sends eth to arbitrary user
	Dangerous calls:
	- DevAddress.transfer((this.balance / 10) * 3) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1100-1101)
	- CeoAddress.transfer((this.balance / 10) * 7) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1101)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
ERC721 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#7-29) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#9-10)
	-transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#15-16)
	-transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#16-18)
CelebrityToken (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#29-425) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#124-133)
	-transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#346-352)
	-transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#329-332)
CelebrityBreederToken (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#461-1190) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590-596)
	-transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#785-789)
	-transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#779-783)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in CelebrityBreederToken.allowexternalContract (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#568-590):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,_tokengeneration)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#576)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#586-587)
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#580)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#582-584)
Reentrancy in CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#834-878):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#841-844)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- personIndexToOwnerGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
Reentrancy in CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#878-943):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#887-888)
	- owneroffather = CelGen0.ownerOf(_withpersonid) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#913)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#935)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#936-938)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#938-940)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#941)
	- personIndexToOwnerGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- personIndexToSiringPrice0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
Reentrancy in CelebrityBreederToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#779-783):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#782-783)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
	- personIndexToOwnerGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
Reentrancy in CelebrityBreederToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#785-789):
	External calls:
	- require(bool)(_owns(_from,_tokenId,true)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#787)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
	- personIndexToOwnerGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
CelebrityBreederToken.masscreate.name (local variable @ /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#551) shadows:
	- CelebrityBreederToken.name (function @ /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#650-652)
CelebrityBreederToken.getPerson.name (local variable @ /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#606) shadows:
	- CelebrityBreederToken.name (function @ /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#650-652)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
CelebrityBreederToken.masscreate has external calls inside a loop:
	- (name,surname,genes,None,None,None,None,None,gender) = CelBetta.getPerson(i,false) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#555-557)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in CelebrityBreederToken.SetGene (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#813-833):
	External calls:
	- require(bool)(_owns(msg.sender,tokenId,generation) || msg.sender == CeoAddress) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#813)
	State variables written after the call(s):
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#831)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#831)
Reentrancy in CelebrityBreederToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590-596):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590-592)
	State variables written after the call(s):
	- personIndexToApprovedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#593-594)
Reentrancy in CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#834-878):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#841-844)
	State variables written after the call(s):
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#866)
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#866)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#870)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#872-874)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#874-877)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#877-878)
	- ownershipTokenCountGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- personIndexToApprovedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- personIndexToPriceGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- personIndexToSiringPrice0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
	- personIndexToSiringPrice1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#869-870)
Reentrancy in CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#878-943):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#887-888)
	- owneroffather = CelGen0.ownerOf(_withpersonid) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#913)
	State variables written after the call(s):
	- ownershipTokenCountGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- personIndexToApprovedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- personIndexToPriceGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
	- personIndexToSiringPrice1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#930-933)
Reentrancy in CelebrityBreederToken.masscreate (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#549-560):
	External calls:
	- (name,surname,genes,None,None,None,None,None,gender) = CelBetta.getPerson(i,false) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#555-557)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- ExternalAllowdContractGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- ownershipTokenCountGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- personIndexToApprovedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- personIndexToOwnerGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- personIndexToPriceGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- personIndexToSiringPrice0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
	- personIndexToSiringPrice1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#557-559)
Reentrancy in CelebrityBreederToken.prepareToBreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#946-973):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#948)
	State variables written after the call(s):
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#964-970)
	- PersonsGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#970-973)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#964-970)
	- PersonsGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#970-973)
	- personIndexToSiringPrice0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#951-954)
	- personIndexToSiringPrice1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#959-963)
Reentrancy in CelebrityBreederToken.setprice (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#713-723):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#715)
	State variables written after the call(s):
	- personIndexToPriceGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#717-718)
	- personIndexToPriceGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#720-721)
Reentrancy in CelebrityBreederToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#779-783):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#782-783)
	State variables written after the call(s):
	- ownershipTokenCountGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
	- personIndexToApprovedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
	- personIndexToSiringPrice0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
	- personIndexToSiringPrice1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783)
Reentrancy in CelebrityBreederToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#785-789):
	External calls:
	- require(bool)(_owns(_from,_tokenId,true)) (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#787)
	State variables written after the call(s):
	- ownershipTokenCountGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
	- personIndexToApprovedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
	- personIndexToSiringPrice0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
	- personIndexToSiringPrice1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CelebrityBreederToken.initialBeating should be constant (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#486)
CelebrityBreederToken.initialTraining should be constant (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#485-486)
CelebrityToken.firstStepLimit should be constant (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#52)
CelebrityToken.secondStepLimit should be constant (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#54-56)
CelebrityToken.startingPrice should be constant (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#50)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1058-1060:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1082-1084:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
CelebrityBreederToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590-596) should be declared external
ERC721.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#9-10) should be declared external
CelebrityToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#124-133) should be declared external
CelebrityToken.implementsERC721 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#179-183) should be declared external
CelebrityBreederToken.implementsERC721 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#646-649) should be declared external
ERC721.implementsERC721 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#11-12) should be declared external
CelebrityToken.ownerOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#194-200) should be declared external
ERC721.ownerOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#12-13) should be declared external
CelebrityBreederToken.ownerOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#653-658) should be declared external
CelebrityToken.takeOwnership (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#276-285) should be declared external
CelebrityBreederToken.takeOwnership (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#735-750) should be declared external
ERC721.takeOwnership (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#13-14) should be declared external
ERC721.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#15-16) should be declared external
CelebrityToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#346-352) should be declared external
CelebrityBreederToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#785-789) should be declared external
CelebrityToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#329-332) should be declared external
CelebrityBreederToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#779-783) should be declared external
ERC721.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#16-18) should be declared external
CelebrityToken.createPromoPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#140-157) should be declared external
CelebrityToken.createContractPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#160-162) should be declared external
CelebrityToken.getPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#167-178) should be declared external
CelebrityToken.name (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#184-186) should be declared external
CelebrityToken.payout (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#200-201) should be declared external
CelebrityToken.purchase (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#203-246) should be declared external
CelebrityToken.priceOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#246-250) should be declared external
CelebrityToken.setCEO (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#254-258) should be declared external
CelebrityToken.setCOO (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#266-267) should be declared external
CelebrityToken.symbol (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#268-270) should be declared external
CelebrityToken.tokensOfOwner (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#293-315) should be declared external
CelebrityBreederToken.allowexternalContract (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#568-590) should be declared external
CelebrityBreederToken.getPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#604-626) should be declared external
CelebrityBreederToken.getPersonParents (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#628-644) should be declared external
CelebrityBreederToken.name (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#650-652) should be declared external
CelebrityBreederToken.purchase (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#658-699) should be declared external
CelebrityBreederToken.priceOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#700-706) should be declared external
CelebrityBreederToken.setprice (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#713-723) should be declared external
CelebrityBreederToken.symbol (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#729-731) should be declared external
CelebrityBreederToken.tokensOfOwner (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#751-771) should be declared external
CelebrityBreederToken.SetGene (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#813-833) should be declared external
CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#834-878) should be declared external
CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#878-943) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:
	- pragma solidity^0.4.18 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_to' of CelebrityToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#125-126) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#126) is not in mixedCase
Parameter '_owner' of CelebrityToken.balanceOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#138) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.ownerOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#194) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.takeOwnership (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#277) is not in mixedCase
Parameter '_from' of CelebrityToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#347) is not in mixedCase
Parameter '_to' of CelebrityToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#347) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#347) is not in mixedCase
Parameter '_to' of CelebrityToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#329-330) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#330) is not in mixedCase
Function 'CelebrityToken.CelebrityToken' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#113-114) is not in mixedCase
Parameter '_owner' of CelebrityToken.createPromoPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#142) is not in mixedCase
Parameter '_name' of CelebrityToken.createPromoPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#143) is not in mixedCase
Parameter '_price' of CelebrityToken.createPromoPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#143) is not in mixedCase
Parameter '_name' of CelebrityToken.createContractPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#160) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.getPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#168) is not in mixedCase
Parameter '_to' of CelebrityToken.payout (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#200) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.purchase (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#205) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.priceOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#247) is not in mixedCase
Parameter '_newCEO' of CelebrityToken.setCEO (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#255) is not in mixedCase
Parameter '_newCOO' of CelebrityToken.setCOO (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#266) is not in mixedCase
Parameter '_owner' of CelebrityToken.tokensOfOwner (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#294) is not in mixedCase
Function 'CelebrityToken._addressNotNull' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#357-359) is not in mixedCase
Parameter '_to' of CelebrityToken._addressNotNull (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#357) is not in mixedCase
Function 'CelebrityToken._approved' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#361-364) is not in mixedCase
Parameter '_to' of CelebrityToken._approved (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#363) is not in mixedCase
Parameter '_tokenId' of CelebrityToken._approved (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#363) is not in mixedCase
Function 'CelebrityToken._createPerson' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#365-386) is not in mixedCase
Parameter '_name' of CelebrityToken._createPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#365-367) is not in mixedCase
Parameter '_owner' of CelebrityToken._createPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#367) is not in mixedCase
Parameter '_price' of CelebrityToken._createPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#367) is not in mixedCase
Function 'CelebrityToken._owns' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#390-392) is not in mixedCase
Parameter '_tokenId' of CelebrityToken._owns (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#390-391) is not in mixedCase
Function 'CelebrityToken._payout' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#392-397) is not in mixedCase
Parameter '_to' of CelebrityToken._payout (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#393) is not in mixedCase
Function 'CelebrityToken._transfer' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#399-425) is not in mixedCase
Parameter '_from' of CelebrityToken._transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#400) is not in mixedCase
Parameter '_to' of CelebrityToken._transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#400) is not in mixedCase
Parameter '_tokenId' of CelebrityToken._transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#400) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.approve (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#590) is not in mixedCase
Parameter '_owner' of CelebrityBreederToken.balanceOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#601-602) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.ownerOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#655) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.takeOwnership (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#735) is not in mixedCase
Parameter '_from' of CelebrityBreederToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#786) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#786) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.transferFrom (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#786) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#780) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#780) is not in mixedCase
Function 'CelebrityBreederToken.CelebrityBreederToken' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#560-565) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.allowexternalContract (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#568-569) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.allowexternalContract (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#569-574) is not in mixedCase
Parameter '_tokengeneration' of CelebrityBreederToken.allowexternalContract (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#574-575) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.getPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#605) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.getPersonParents (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#629) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.purchase (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#659) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.priceOf (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#700-702) is not in mixedCase
Parameter '_newCEO' of CelebrityBreederToken.setCEO (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#706-707) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.setprice (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#714) is not in mixedCase
Parameter '_price' of CelebrityBreederToken.setprice (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#714) is not in mixedCase
Parameter '_newDEV' of CelebrityBreederToken.setDEV (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#726) is not in mixedCase
Parameter '_owner' of CelebrityBreederToken.tokensOfOwner (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#751) is not in mixedCase
Function 'CelebrityBreederToken._addressNotNull' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#790-794) is not in mixedCase
Parameter '_to' of CelebrityBreederToken._addressNotNull (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#791) is not in mixedCase
Function 'CelebrityBreederToken._approvedGen1' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#798-804) is not in mixedCase
Parameter '_to' of CelebrityBreederToken._approvedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#799) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken._approvedGen1 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#799-801) is not in mixedCase
Parameter '_name' of CelebrityBreederToken.createPersonGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#807) is not in mixedCase
Parameter '_surname' of CelebrityBreederToken.createPersonGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#807) is not in mixedCase
Parameter '_genes' of CelebrityBreederToken.createPersonGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#807-808) is not in mixedCase
Parameter '_gender' of CelebrityBreederToken.createPersonGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#808-809) is not in mixedCase
Function 'CelebrityBreederToken.SetGene' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#813-833) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#835) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#835-837) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#837-840) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#840) is not in mixedCase
Parameter '_boyname' of CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#840) is not in mixedCase
Parameter '_girlname' of CelebrityBreederToken.breed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#840) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#881) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#881) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#881-883) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#883-884) is not in mixedCase
Parameter '_boyname' of CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#884-885) is not in mixedCase
Parameter '_girlname' of CelebrityBreederToken.breedOnAuction (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#885) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.prepareToBreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#946) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.prepareToBreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#946) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.prepareToBreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#946) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.prepareToBreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#946) is not in mixedCase
Parameter '_siringprice' of CelebrityBreederToken.prepareToBreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#946) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.readyTobreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#974) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.readyTobreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#974-975) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.readyTobreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#976) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.readyTobreed (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#976-977) is not in mixedCase
Function 'CelebrityBreederToken._birthPerson' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1000-1042) is not in mixedCase
Parameter '_name' of CelebrityBreederToken._birthPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1003-1005) is not in mixedCase
Parameter '_surname' of CelebrityBreederToken._birthPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1005) is not in mixedCase
Parameter '_genes' of CelebrityBreederToken._birthPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1005) is not in mixedCase
Parameter '_gender' of CelebrityBreederToken._birthPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1005-1006) is not in mixedCase
Parameter '_generation' of CelebrityBreederToken._birthPerson (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1006-1008) is not in mixedCase
Function 'CelebrityBreederToken._generateGene' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1042-1085) is not in mixedCase
Parameter '_genes1' of CelebrityBreederToken._generateGene (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1043-1044) is not in mixedCase
Parameter '_genes2' of CelebrityBreederToken._generateGene (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1044) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken._generateGene (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1044-1045) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken._generateGene (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1045-1047) is not in mixedCase
Function 'CelebrityBreederToken._owns' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1085-1097) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken._owns (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1086) is not in mixedCase
Parameter '_tokengeneration' of CelebrityBreederToken._owns (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1086-1089) is not in mixedCase
Function 'CelebrityBreederToken._payout' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1097-1102) is not in mixedCase
Function 'CelebrityBreederToken._transfer' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1103-1122) is not in mixedCase
Parameter '_from' of CelebrityBreederToken._transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1104-1105) is not in mixedCase
Parameter '_to' of CelebrityBreederToken._transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1105) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken._transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1105-1106) is not in mixedCase
Parameter '_personid' of CelebrityBreederToken.blankbreedingdata (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1122-1123) is not in mixedCase
Parameter '_persongeneration' of CelebrityBreederToken.blankbreedingdata (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1123-1124) is not in mixedCase
Variable 'CelebrityBreederToken.CelGen0' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#476-478) is not in mixedCase
Variable 'CelebrityBreederToken.CelBetta' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#479-482) is not in mixedCase
Constant 'CelebrityBreederToken.CreationLimitGen0' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#486-487) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CelebrityBreederToken.CreationLimitGen1' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#487-488) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CelebrityBreederToken.MaxValue' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#488-489) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'CelebrityBreederToken.ExternalAllowdContractGen0' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#500-503) is not in mixedCase
Variable 'CelebrityBreederToken.ExternalAllowdContractGen1' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#503-505) is not in mixedCase
Variable 'CelebrityBreederToken.CeoAddress' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#513) is not in mixedCase
Variable 'CelebrityBreederToken.DevAddress' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#514-517) is not in mixedCase
Variable 'CelebrityBreederToken.PersonsGen0' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#531-536) is not in mixedCase
Variable 'CelebrityBreederToken.PersonsGen1' (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#536) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CelebrityToken (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#29-425) does not mark important ERC20 parameters as 'indexed':
	-Transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#41-45) does not index parameter 'from'
	-Transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#41-45) does not index parameter 'to'
CelebrityBreederToken (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#461-1190) does not mark important ERC20 parameters as 'indexed':
	-Transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#467-469) does not index parameter 'from'
	-Transfer (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#467-469) does not index parameter 'to'
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unindexed-erc20-event-parameters[0m
INFO:Detectors:[92m
CelebrityBreederToken.CreationLimitGen0 (/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#486-487) is never used in CelebrityBreederToken
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/10/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol analyzed (4 contracts), 197 result(s) found