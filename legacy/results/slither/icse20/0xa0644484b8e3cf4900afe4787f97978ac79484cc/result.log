INFO:Slither:Compilation warnings/errors on /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:22:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!assertion) throw;
                        ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:84:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner && !admins[msg.sender]) throw;
                                                        ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:90:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!futuresContracts[msg.sender]) throw;
                                           ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:95:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:162:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (expiry > 1000000) throw;
                              ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:170:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Exchange(address feeAccount_, uint256 makerFee_, uint256 takerFee_) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:196:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!Token(token).transferFrom(msg.sender, this, amount)) throw; // attempts to transfer the token to this contract, if fails throws an error
                                                                  ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:249:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, user) < amount) throw; 
                                                      ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:300:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, user) < amount) throw; 
                                                      ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:320:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!Token(token).transferFrom(msg.sender, this, amount)) throw; // attempts to transfer the token to this contract, if fails throws an error
                                                                  ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:338:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, msg.sender) < amount) throw;
                                                            ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:344:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(amount)) throw; // send ETH
                                          ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:346:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!Token(token).transfer(msg.sender, amount)) throw; // Send token
                                                            ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:363:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (withdrawn[hash]) throw; // checks if the withdrawal was already executed, if true, throws an error
                             ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:365:94: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw; // checks that the provided signature is valid
                                                                                             ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:370:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (availableBalanceOf(token, user) < amount) throw; // checks that user has enough balance
                                                      ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:382:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!user.send(amount)) throw; // sends ETH
                                    ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:384:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!Token(token).transfer(user, amount)) throw; // sends tokens
                                                      ^---^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:21:5: Warning: This declaration shadows a builtin symbol.
    function assert(bool assertion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:61:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetOwner(owner, newOwner);
        ^-----------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:362:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, token, amount, user, nonce); // creates the hash for the withdrawal request
                       ^-----------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:365:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) != user) throw; // checks that the provided signature is valid
                      ^-------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:505:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(this, tradeAddresses[0], tradeValues[0], tradeAddresses[1], tradeValues[1], tradeValues[2], tradeAddresses[2]) ... 
     ^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:506:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(this, tradeAddresses[3], tradeValues[3], tradeAddresses[4], tradeValues[4], tradeValues[5], tradeAddresses[5]) ... 
     ^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:510:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", t.makerOrderHash), v[0], rs[0], rs[1]) != t.maker)
                      ^-------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:517:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", t.takerOrderHash), v[1], rs[2], rs[3]) != t.taker)
                      ^-------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:744:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 orderHash = keccak256(
                            ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:748:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) == cancelAddresses[2]);
                          ^------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:751:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 cancelHash = keccak256(this, orderHash, cancelAddresses[3], cancelValues[3]);
                             ^-------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:752:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", cancelHash), v[1], rs[2], rs[3]) == cancelAddresses[3]);
                          ^-------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success);
    ^-------------------------------------------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:21:5: Warning: No visibility specified. Defaulting to "public". 
    function assert(bool assertion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function safeMul(uint a, uint b) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function safeSub(uint a, uint b) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function safeAdd(uint a, uint b) returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:60:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function getOwner() returns (address out) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function setAdmin(address admin, bool isAdmin) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function setFuturesContract(address futuresContract, bool isFuturesContract) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:161:5: Warning: No visibility specified. Defaulting to "public". 
    function setInactivityReleasePeriod(uint256 expiry) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:170:5: Warning: No visibility specified. Defaulting to "public". 
    function Exchange(address feeAccount_, uint256 makerFee_, uint256 takerFee_) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:179:5: Warning: No visibility specified. Defaulting to "public". 
    function setFees(uint256 makerFee_, uint256 takerFee_) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:190:5: Warning: No visibility specified. Defaulting to "public". 
    function depositToken(address token, uint128 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:225:5: Warning: No visibility specified. Defaulting to "public". 
    function decodeBalanceAndReserve (address token, address user) returns (uint256[2])
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:235:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address token, address user) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:247:5: Warning: No visibility specified. Defaulting to "public". 
    function setReserve(address token, address user, uint256 amount) onlyFuturesContract returns (bool success) { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function setBalance(address token, address user, uint256 amount) onlyFuturesContract returns (bool success)     {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:262:5: Warning: No visibility specified. Defaulting to "public". 
    function subBalanceAddReserve(address token, address user, uint256 subBalance, uint256 addReserve) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:267:5: Warning: No visibility specified. Defaulting to "public". 
    function addBalanceSubReserve(address token, address user, uint256 addBalance, uint256 subReserve) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:272:5: Warning: No visibility specified. Defaulting to "public". 
    function subBalanceSubReserve(address token, address user, uint256 subBalance, uint256 subReserve) onlyFuturesContract returns (bool)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:281:5: Warning: No visibility specified. Defaulting to "public". 
    function availableBalanceOf(address token, address user) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:286:5: Warning: No visibility specified. Defaulting to "public". 
    function getInactivityReleasePeriod() view returns (uint256)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:292:5: Warning: No visibility specified. Defaulting to "public". 
    function addBalance(address token, address user, uint256 amount)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:298:5: Warning: No visibility specified. Defaulting to "public". 
    function subBalance(address token, address user, uint256 amount)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:306:5: Warning: No visibility specified. Defaulting to "public". 
    function deposit() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:315:5: Warning: No visibility specified. Defaulting to "public". 
    function depositTokenFor(address token, uint128 amount, address destinationUser)  returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:326:5: Warning: No visibility specified. Defaulting to "public". 
    function depositFor(address destinationUser) payable  returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:335:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw(address token, uint256 amount) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:335:63: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function withdraw(address token, uint256 amount) returns (bool success) {
                                                              ^----------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:352:5: Warning: No visibility specified. Defaulting to "public". 
    function adminWithdraw(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:361:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    ) onlyAdmin returns (bool success) {
                         ^----------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:390:5: Warning: No visibility specified. Defaulting to "public". 
    function batchAdminWithdraw(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:417:5: Warning: No visibility specified. Defaulting to "public". 
    function getMakerTakerBalances(address token, address maker, address taker) view returns (uint256[4])
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:460:5: Warning: No visibility specified. Defaulting to "public". 
    function trade(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:693:5: Warning: No visibility specified. Defaulting to "public". 
    function batchOrderTrade(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:21:5: Warning: Function state mutability can be restricted to pure
    function assert(bool assertion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:66:5: Warning: Function state mutability can be restricted to view
    function getOwner() returns (address out) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:225:5: Warning: Function state mutability can be restricted to view
    function decodeBalanceAndReserve (address token, address user) returns (uint256[2])
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:237:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return decodeBalanceAndReserve(token, user)[0];
               ^----------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:243:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return decodeBalanceAndReserve(token, user)[1];
               ^----------------------------------^
/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:282:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return safeSub(balanceOf(token, user), getReserve(token, user));
               ^------------------------------------------------------^

INFO:Detectors:[92m
Exchange.assert (function @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#21-25) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Exchange.subBalanceAddReserve.subBalance (local variable @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#267) shadows:
	- Exchange.subBalance (function @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#307-308)
Exchange.addBalanceSubReserve.addBalance (local variable @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#272) shadows:
	- Exchange.addBalance (function @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#300-306)
Exchange.subBalanceSubReserve.subBalance (local variable @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#277) shadows:
	- Exchange.subBalance (function @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#307-308)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Exchange.adminWithdraw (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#359-397):
	External calls:
	- ! Token(token).transfer(user,amount) (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#392)
	External calls sending eth:
	- ! user.send(amount) (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#390-391)
	State variables written after the call(s):
	- lastActiveTransaction (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#393-394)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Exchange.EtmTokenAddress should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#108)
Token.allowTransactions should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#10-11)
Token.decimals should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#9-10)
Token.name should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#6-7)
Token.standard should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#5-6)
Token.symbol should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#7-8)
Token.totalSupply should be constant (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#8-9)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#25:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#198-200:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#255:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#308:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#326:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#344:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#353:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#354:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#366:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#370-372:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#375:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#391:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#392:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#88-89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.transfer (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#13-14) should be declared external
Token.approveAndCall (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#14-15) should be declared external
Token.approve (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#15-16) should be declared external
Token.transferFrom (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#16-19) should be declared external
Exchange.setOwner (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#61-66) should be declared external
Exchange.getOwner (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#67-71) should be declared external
Exchange.setAdmin (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#72-77) should be declared external
Exchange.setFuturesContract (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#77-84) should be declared external
Exchange.setInactivityReleasePeriod (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#163-170) should be declared external
Exchange.setFees (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#181-191) should be declared external
Exchange.depositToken (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#192-203) should be declared external
Exchange.setReserve (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#250-257) should be declared external
Exchange.setBalance (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#262-264) should be declared external
Exchange.subBalanceAddReserve (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#264-269) should be declared external
Exchange.addBalanceSubReserve (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#269-277) should be declared external
Exchange.subBalanceSubReserve (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#277-285) should be declared external
Exchange.getInactivityReleasePeriod (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#294-298) should be declared external
Exchange.deposit (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#310-317) should be declared external
Exchange.depositTokenFor (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#317-328) should be declared external
Exchange.depositFor (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#328-338) should be declared external
Exchange.withdraw (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#338-357) should be declared external
Exchange.batchAdminWithdraw (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#397-431) should be declared external
Exchange.getMakerTakerBalances (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#431-435) should be declared external
Exchange.batchOrderTrade (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#730-746) should be declared external
Exchange.cancelOrder (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#748-781) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol:
	- pragma solidity^0.4.19 (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Exchange.Exchange' (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#173-180) is not in mixedCase
Variable 'Exchange.EtmTokenAddress' (/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol#108) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/23/0xa0644484b8e3cf4900afe4787f97978ac79484cc.sol analyzed (2 contracts), 51 result(s) found