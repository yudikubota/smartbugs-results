INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:32:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSAuth() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:265:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTokenBase(uint supply) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:329:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSToken(bytes32 symbol_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:499:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiLPC(ERC20 ref_, ERC20 alt_, DSValue pip_, DSToken lps_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:595:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LPCReserveWrapper(KyberReserveInterface reserve_, WETH weth_, ERC20 dai_, SaiLPC lpc_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:34:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(msg.sender);
        ^---------------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:42:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(owner);
        ^----------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:50:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetAuthority(authority);
        ^------------------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:184:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);
        ^---------------------------------------------------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:295:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:303:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, guy, wad);
        ^----------------------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:356:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:380:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(guy, wad);
        ^------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:389:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(guy, wad);
        ^------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:418:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:418:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:573:5: Warning: Functions in interfaces should be declared external.
    function() payable;
    ^-----------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:632:13: Warning: Using contract member "transfer" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).transfer" instead.
            reserve.transfer(amount);
            ^--------------^
/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:573:5: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
    function() payable;
    ^-----------------^

INFO:Detectors:[91m
LPCReserveWrapper.withdrawFromReserve (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#635-646) sends eth to arbitrary user
	Dangerous calls:
	- weth.deposit.value(amount)() (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#643-644)
LPCReserveWrapper.transferToReserve (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#646-651) sends eth to arbitrary user
	Dangerous calls:
	- reserve.transfer(amount) (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#649)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
DSMath.mul (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#92-96) uses a dangerous strict equality:
	- require(bool)(y == 0 || (z = x * y) / y == x)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
SaiLPC.pool (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#548-558) does not use the value returned by external calls:
	-gem.transferFrom(msg.sender,this,wad) (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#558)
SaiLPC.exit (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#559-574) does not use the value returned by external calls:
	-gem.transfer(msg.sender,wad) (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#572-573)
SaiLPC.take (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#575-587) does not use the value returned by external calls:
	-pay.transferFrom(msg.sender,this,jam) (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#582-585)
	-gem.transfer(msg.sender,wad) (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#585-587)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
DSToken.decimals should be constant (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#336-337)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DSAuthority.canCall (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#18-23) should be declared external
DSAuth.setOwner (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#38-45) should be declared external
DSAuth.setAuthority (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#45-54) should be declared external
DSStop.stop (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#224-225) should be declared external
DSStop.start (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#225-226) should be declared external
ERC20.totalSupply (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#238-239) should be declared external
DSTokenBase.totalSupply (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#277-280) should be declared external
DSTokenBase.balanceOf (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#280-284) should be declared external
ERC20.balanceOf (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#239-240) should be declared external
ERC20.allowance (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#240-242) should be declared external
DSTokenBase.allowance (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#284-289) should be declared external
DSTokenBase.transfer (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#289-292) should be declared external
ERC20.transfer (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#247-248) should be declared external
DSToken.approve (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#346-350) should be declared external
DSToken.push (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#372-377) should be declared external
DSToken.pull (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#377-378) should be declared external
DSToken.move (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#378-382) should be declared external
DSToken.mint (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#382-383) should be declared external
DSToken.burn (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#383-384) should be declared external
DSToken.setName (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#407-408) should be declared external
DSValue.read (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#461-463) should be declared external
DSValue.poke (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#463-466) should be declared external
DSValue.void (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#466-468) should be declared external
SaiLPC.jump (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#527-531) should be declared external
SaiLPC.pool (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#548-558) should be declared external
SaiLPC.exit (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#559-574) should be declared external
SaiLPC.take (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#575-587) should be declared external
KyberReserveInterface.fallback (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#588) should be declared external
LPCReserveWrapper.switchLPC (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#624-629) should be declared external
LPCReserveWrapper.switchReserve (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#629-634) should be declared external
LPCReserveWrapper.fallback (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#634) should be declared external
LPCReserveWrapper.approveToken (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#651-655) should be declared external
LPCReserveWrapper.take (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#655-665) should be declared external
LPCReserveWrapper.withdraw (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol:
	- pragma solidity^0.4.21 (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'DSAuth.DSAuth' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#33-37) is not in mixedCase
Function 'DSTokenBase.DSTokenBase' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#273-276) is not in mixedCase
Variable 'DSTokenBase._supply' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#266-270) is not in mixedCase
Variable 'DSTokenBase._balances' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#270-271) is not in mixedCase
Variable 'DSTokenBase._approvals' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#271-273) is not in mixedCase
Function 'DSToken.DSToken' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#340-341) is not in mixedCase
Function 'DSThing.S' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#430-431) is not in mixedCase
Function 'SaiLPC.SaiLPC' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#520-527) is not in mixedCase
Function 'LPCReserveWrapper.LPCReserveWrapper' (/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol#614-624) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/13/0x0c9cce04224171b03f3b36d576500c0ace70e651.sol analyzed (17 contracts), 51 result(s) found