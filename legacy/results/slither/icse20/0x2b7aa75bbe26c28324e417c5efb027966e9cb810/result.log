INFO:Slither:Compilation warnings/errors on /unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:134:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function SecureERC20Token(
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:424:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function GilgameshToken()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:538:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function GilgameshTokenSale(
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:230:3: Warning: Invoking events without "emit" prefix is deprecated.
		Approval(msg.sender, _spender, _value);
		^------------------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:298:3: Warning: Invoking events without "emit" prefix is deprecated.
		MinterOwnershipTransferred(minter, newMinter);
		^-------------------------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:309:3: Warning: Invoking events without "emit" prefix is deprecated.
		AdminOwnershipTransferred(admin, newAdmin);
		^----------------------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:334:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(0x0, msg.sender, _amount);
		^--------------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:337:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(msg.sender, _owner, _amount);
		^-----------------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:348:3: Warning: Invoking events without "emit" prefix is deprecated.
		TransferStatus(msg.sender, isTransferEnabled);
		^-------------------------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:382:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value);
		^--------------------------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:593:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogTokenSaleInitialized(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:770:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogContribution(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:869:6: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(this.balance > 0) {
		   ^----------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:871:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
			if (!fundOwnerWallet.send(this.balance)) revert();
			                          ^----------^
/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:881:3: Warning: Invoking events without "emit" prefix is deprecated.
		LogFinalized(tokenOwnerWallet, teamTokens);
		^----------------------------------------^

INFO:Detectors:[91m
Reentrancy in GilgameshTokenSale.deposit (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#746-798):
	External calls:
	- token.totalSupply() + userAssignedTokens > tokenCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#763-766)
	- ! token.mint(userAddress,userAssignedTokens) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#772-775)
	External calls sending eth:
	- ! fundOwnerWallet.send(msg.value) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#767-769)
	State variables written after the call(s):
	- totalRaised (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#780)
Reentrancy in GilgameshTokenSale.doFinalizeSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#893-919):
	External calls:
	- teamTokens = safeMul(token.totalSupply(),teamTokenRatio) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#900-902)
	- ! token.mint(tokenOwnerWallet,teamTokens) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#906-908)
	External calls sending eth:
	- ! fundOwnerWallet.send(this.balance) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#910-911)
	State variables written after the call(s):
	- saleFinalized (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#912-913)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[92m
Reentrancy in GilgameshTokenSale.deposit (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#746-798):
	External calls:
	- token.totalSupply() + userAssignedTokens > tokenCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#763-766)
	- ! token.mint(userAddress,userAssignedTokens) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#772-775)
	External calls sending eth:
	- ! fundOwnerWallet.send(msg.value) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#767-769)
	State variables written after the call(s):
	- isCapReached (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#782)
	- paymentsByAddress (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#795)
	- paymentsByUserId (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#792-793)
	- totalParticipants (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#790)
Reentrancy in GilgameshTokenSale.deposit (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#746-798):
	External calls:
	- token.totalSupply() + userAssignedTokens > tokenCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#763-766)
	- ! token.mint(userAddress,userAssignedTokens) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#772-775)
	- token.totalSupply() >= tokenCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#786-787)
	External calls sending eth:
	- ! fundOwnerWallet.send(msg.value) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#767-769)
	State variables written after the call(s):
	- isCapReached (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#787)
Reentrancy in GilgameshTokenSale.doFinalizeSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#893-919):
	External calls:
	- teamTokens = safeMul(token.totalSupply(),teamTokenRatio) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#900-902)
	- ! token.mint(tokenOwnerWallet,teamTokens) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#906-908)
	External calls sending eth:
	- ! fundOwnerWallet.send(this.balance) (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#910-911)
	State variables written after the call(s):
	- saleStopped (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#916)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
GilgameshTokenSale.teamTokenRatio should be constant (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#528-530)
SecureERC20Token.version should be constant (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#119-120)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
SecureERC20Token.totalSupply (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#164-166) should be declared external
ERC20Token.totalSupply (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#50-52) should be declared external
ERC20Token.balanceOf (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#55-57) should be declared external
SecureERC20Token.balanceOf (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#170-172) should be declared external
ERC20Token.allowance (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#60-66) should be declared external
SecureERC20Token.allowance (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#250-254) should be declared external
SecureERC20Token.transfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#176-184) should be declared external
ERC20Token.transfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#70-72) should be declared external
SecureERC20Token.transferFrom (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#189-203) should be declared external
ERC20Token.transferFrom (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#77-79) should be declared external
SecureERC20Token.approve (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#210-239) should be declared external
ERC20Token.approve (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#85-92) should be declared external
SecureERC20Token.lockAccount (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#263-269) should be declared external
SecureERC20Token.unlockAccount (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#272-276) should be declared external
SecureERC20Token.burnUserTokens (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#284-298) should be declared external
SecureERC20Token.changeMinter (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#303-310) should be declared external
SecureERC20Token.changeAdmin (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#315-321) should be declared external
SecureERC20Token.mint (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#325-348) should be declared external
SecureERC20Token.enableTransfers (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#354-357) should be declared external
GilgameshTokenSale.emergencyStopSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#630-634) should be declared external
GilgameshTokenSale.restartSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#639-647) should be declared external
GilgameshTokenSale.changeFundOwnerWalletAddress (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#654-659) should be declared external
GilgameshTokenSale.changeTokenOwnerWalletAddress (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#666-674) should be declared external
GilgameshTokenSale.finalizeSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#678-679) should be declared external
GilgameshTokenSale.changeCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#683-692) should be declared external
GilgameshTokenSale.changeMinimumCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#697-698) should be declared external
GilgameshTokenSale.removeContract (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#706-711) should be declared external
GilgameshTokenSale.changeOwner (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#715-721) should be declared external
GilgameshTokenSale.depositForMySelf (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#737-741) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol:
	- pragma solidity^0.4.19 (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of SecureERC20Token.balanceOf (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#170-171) is not in mixedCase
Parameter '_owner' of SecureERC20Token.allowance (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#252) is not in mixedCase
Parameter '_spender' of SecureERC20Token.allowance (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#252) is not in mixedCase
Parameter '_to' of SecureERC20Token.transfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#178) is not in mixedCase
Parameter '_value' of SecureERC20Token.transfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#178-179) is not in mixedCase
Parameter '_from' of SecureERC20Token.transferFrom (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#191) is not in mixedCase
Parameter '_to' of SecureERC20Token.transferFrom (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#191) is not in mixedCase
Parameter '_value' of SecureERC20Token.transferFrom (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#191) is not in mixedCase
Parameter '_spender' of SecureERC20Token.approve (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#212) is not in mixedCase
Parameter '_value' of SecureERC20Token.approve (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#212) is not in mixedCase
Function 'SecureERC20Token.SecureERC20Token' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#140-159) is not in mixedCase
Parameter '_name' of SecureERC20Token.SecureERC20Token (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#142) is not in mixedCase
Parameter '_symbol' of SecureERC20Token.SecureERC20Token (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#142) is not in mixedCase
Parameter '_decimals' of SecureERC20Token.SecureERC20Token (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#144) is not in mixedCase
Parameter '_isTransferEnabled' of SecureERC20Token.SecureERC20Token (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#144) is not in mixedCase
Parameter '_owner' of SecureERC20Token.lockAccount (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#264) is not in mixedCase
Parameter '_owner' of SecureERC20Token.unlockAccount (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#273) is not in mixedCase
Parameter '_owner' of SecureERC20Token.burnUserTokens (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#285) is not in mixedCase
Parameter '_owner' of SecureERC20Token.mint (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#326-327) is not in mixedCase
Parameter '_amount' of SecureERC20Token.mint (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#327) is not in mixedCase
Parameter '_isTransferEnabled' of SecureERC20Token.enableTransfers (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#355) is not in mixedCase
Parameter '_from' of SecureERC20Token.doTransfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#369) is not in mixedCase
Parameter '_to' of SecureERC20Token.doTransfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#369) is not in mixedCase
Parameter '_value' of SecureERC20Token.doTransfer (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#369-371) is not in mixedCase
Modifier 'SecureERC20Token.validate_address' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#424-428) is not in mixedCase
Modifier 'SecureERC20Token.is_not_locked' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#428-435) is not in mixedCase
Modifier 'SecureERC20Token.is_locked' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#438-442) is not in mixedCase
Function 'GilgameshToken.GilgameshToken' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#446-453) is not in mixedCase
Function 'GilgameshTokenSale.GilgameshTokenSale' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#545-624) is not in mixedCase
Parameter '_startBlock' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#545-546) is not in mixedCase
Parameter '_endBlock' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#546) is not in mixedCase
Parameter '_fundOwnerWallet' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#547) is not in mixedCase
Parameter '_tokenOwnerWallet' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#551-554) is not in mixedCase
Parameter '_totalStages' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#557) is not in mixedCase
Parameter '_stageMaxBonusPercentage' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#558-559) is not in mixedCase
Parameter '_tokenPrice' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#560-561) is not in mixedCase
Parameter '_gilgameshToken' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#562-563) is not in mixedCase
Parameter '_minimumCap' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#564-565) is not in mixedCase
Parameter '_tokenCap' of GilgameshTokenSale.GilgameshTokenSale (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#566) is not in mixedCase
Parameter '_fundOwnerWallet' of GilgameshTokenSale.changeFundOwnerWalletAddress (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#654-655) is not in mixedCase
Parameter '_tokenOwnerWallet' of GilgameshTokenSale.changeTokenOwnerWalletAddress (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#669) is not in mixedCase
Parameter '_cap' of GilgameshTokenSale.changeCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#683-684) is not in mixedCase
Parameter '_cap' of GilgameshTokenSale.changeMinimumCap (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#697) is not in mixedCase
Parameter '_newOwner' of GilgameshTokenSale.changeOwner (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#716-717) is not in mixedCase
Parameter '_blockNumber' of GilgameshTokenSale.getStageByBlockNumber (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#853) is not in mixedCase
Parameter '_blockNumber' of GilgameshTokenSale.isDuringSalePeriod (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#880-881) is not in mixedCase
Constant 'GilgameshTokenSale.minimumInvestment' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#478-481) is not in UPPER_CASE_WITH_UNDERSCORES
Modifier 'GilgameshTokenSale.only_sale_stopped' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#926-927) is not in mixedCase
Modifier 'GilgameshTokenSale.validate_address' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#932-934) is not in mixedCase
Modifier 'GilgameshTokenSale.only_during_sale_period' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol#938-943) is not in mixedCase
Modifier 'GilgameshTokenSale.only_sale_active' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol) is not in mixedCase
Modifier 'GilgameshTokenSale.minimum_contribution' (/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x2b7aa75bbe26c28324e417c5efb027966e9cb810.sol analyzed (5 contracts), 88 result(s) found