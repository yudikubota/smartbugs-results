INFO:Slither:Compilation warnings/errors on /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:67:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:80:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:98:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isPool(newPool)) throw;
                             ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:105:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isPool(pool)) throw;
                           ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:142:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BPToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:262:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (safeSub(balances[msg.sender],value) < shouldHadBalance(msg.sender)) throw;
                                                                                ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:272:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:297:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:306:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (safeSub(balances[msg.sender],value) < shouldHadBalance(msg.sender)) throw;
                                                                                ^---^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:328:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ownedPool() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:354:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function AssetPool(address _bpTokenAddress, uint _baseLockPercent, uint _startLockTime, uint _stopLockTime, uint _linearRelease) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:65:5: Warning: This declaration shadows a builtin symbol.
    function assert(bool assertion) internal {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:269:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, to, value);
            ^-----------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:294:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(from, to, value);
            ^-----------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:310:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, value);
        ^----------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:10:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint);
    ^------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint);
    ^-------------------------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value) returns (bool ok);
    ^----------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint value) returns (bool ok);
    ^----------------------------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint value) returns (bool ok);
    ^--------------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function addPool(address newPool) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:103:5: Warning: No visibility specified. Defaulting to "public". 
    function removePool(address pool) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:142:5: Warning: No visibility specified. Defaulting to "public". 
    function BPToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:157:5: Warning: No visibility specified. Defaulting to "public". 
    function shouldHadBalance(address who) constant returns (uint256){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:227:5: Warning: No visibility specified. Defaulting to "public". 
    function getBalance() constant returns(uint){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:231:5: Warning: No visibility specified. Defaulting to "public". 
    function setPoolAndAmount(address who, uint256 amount) onlyPool returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:250:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:261:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:284:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:305:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:317:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:354:5: Warning: No visibility specified. Defaulting to "public". 
    function AssetPool(address _bpTokenAddress, uint _baseLockPercent, uint _startLockTime, uint _stopLockTime, uint _linearRelease) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:369:5: Warning: No visibility specified. Defaulting to "public". 
    function setRule(uint _baseLockPercent, uint _startLockTime, uint _stopLockTime, uint _linearRelease) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:385:5: Warning: No visibility specified. Defaulting to "public". 
    function assign(address to, uint256 amount) onlyOwner returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:395:5: Warning: No visibility specified. Defaulting to "public". 
    function getPoolBalance() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:399:5: Warning: No visibility specified. Defaulting to "public". 
    function getStartLockTime() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:403:5: Warning: No visibility specified. Defaulting to "public". 
    function getStopLockTime() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:407:5: Warning: No visibility specified. Defaulting to "public". 
    function getBaseLockPercent() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:411:5: Warning: No visibility specified. Defaulting to "public". 
    function getLinearRelease() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:49:5: Warning: Function state mutability can be restricted to pure
    function max64(uint64 a, uint64 b) internal constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:53:5: Warning: Function state mutability can be restricted to pure
    function min64(uint64 a, uint64 b) internal constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:57:5: Warning: Function state mutability can be restricted to pure
    function max256(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:61:5: Warning: Function state mutability can be restricted to pure
    function min256(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:65:5: Warning: Function state mutability can be restricted to pure
    function assert(bool assertion) internal {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:116:5: Warning: Function state mutability can be restricted to view
    function isPool(address pool) internal returns (bool ok){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:158:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        if (isPool(who)) return 0;
            ^---------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:160:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        address apAddress = getAssetPoolAddress(who);
                            ^----------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:161:31: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 baseAmount  = getBaseAmount(who);
                              ^----------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:181:42: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 baseLockAmount = safeDiv(safeMul(baseAmount, ap.getBaseLockPercent()),100);
                                         ^------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:181:34: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 baseLockAmount = safeDiv(safeMul(baseAmount, ap.getBaseLockPercent()),100);
                                 ^-------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:201:34: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint lockMonth = safeDiv(safeSub(stopLockTime,startLockTime),perMonthSecond);
                                 ^---------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:201:26: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint lockMonth = safeDiv(safeSub(stopLockTime,startLockTime),perMonthSecond);
                         ^---------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:211:37: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 monthUnlockAmount = safeDiv(baseLockAmount,lockMonth);
                                    ^-------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:214:37: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint hadPassMonth = safeDiv(safeSub(block.timestamp,startLockTime),perMonthSecond);
                                    ^------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:214:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint hadPassMonth = safeDiv(safeSub(block.timestamp,startLockTime),perMonthSecond);
                            ^------------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:216:39: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return safeSub(baseLockAmount,safeMul(hadPassMonth,monthUnlockAmount));
                                      ^-------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:216:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return safeSub(baseLockAmount,safeMul(hadPassMonth,monthUnlockAmount));
               ^-------------------------------------------------------------^
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:219:5: Warning: Function state mutability can be restricted to view
    function getAssetPoolAddress(address who) internal returns(address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:223:5: Warning: Function state mutability can be restricted to view
    function getBaseAmount(address who) internal returns(uint256){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#66-77) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
BPToken.allowance.owner (local variable @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#333-335) shadows:
	- Owned.owner (state variable @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#82)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
SafeMath.safeSub (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#38-43) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(b <= a) (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#41-43)
BPToken.shouldHadBalance (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#160-224) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < startLockTime + perMonthSecond (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#201-204)
	- block.timestamp > stopLockTime (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#180-181)
	- block.timestamp < stopLockTime (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#196-198)
	- block.timestamp >= stopLockTime (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#211-214)
	- block.timestamp < startLockTime (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#188-190)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
BPToken.perMonthSecond should be constant (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#157-158)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#76-77:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#268:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#280-281:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#304-305:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#315:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20.balanceOf (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#10-11) should be declared external
BPToken.balanceOf (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#256-258) should be declared external
ERC20.allowance (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#11-13) should be declared external
BPToken.allowance (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#333-343) should be declared external
BPToken.transfer (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#266-281) should be declared external
ERC20.transfer (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#13-14) should be declared external
BPToken.transferFrom (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#289-305) should be declared external
ERC20.transferFrom (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#14-15) should be declared external
ERC20.approve (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#15-16) should be declared external
BPToken.approve (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#311-318) should be declared external
Owned.transferOwnership (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#127-135) should be declared external
BPToken.getBalance (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#234-238) should be declared external
BPToken.setPoolAndAmount (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#238-255) should be declared external
ownedPool.transferOwnership (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#354) should be declared external
AssetPool.setRule (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#378-387) should be declared external
AssetPool.assign (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#398-407) should be declared external
AssetPool.getPoolBalance (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#411-413) should be declared external
AssetPool.getStartLockTime (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol) should be declared external
AssetPool.getStopLockTime (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol) should be declared external
AssetPool.getBaseLockPercent (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol) should be declared external
AssetPool.getLinearRelease (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol:
	- pragma solidity^0.4.20 (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#83-90) is not in mixedCase
Function 'BPToken.BPToken' (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#147-151) is not in mixedCase
Contract 'ownedPool' (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#343-354) is not in CapWords
Function 'AssetPool.AssetPool' (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#362-376) is not in mixedCase
Parameter '_bpTokenAddress' of AssetPool.AssetPool (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#362-363) is not in mixedCase
Parameter '_baseLockPercent' of AssetPool.AssetPool (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#363) is not in mixedCase
Parameter '_startLockTime' of AssetPool.AssetPool (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#363-365) is not in mixedCase
Parameter '_stopLockTime' of AssetPool.AssetPool (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#365) is not in mixedCase
Parameter '_linearRelease' of AssetPool.AssetPool (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#366-368) is not in mixedCase
Parameter '_baseLockPercent' of AssetPool.setRule (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#379) is not in mixedCase
Parameter '_startLockTime' of AssetPool.setRule (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#379) is not in mixedCase
Parameter '_stopLockTime' of AssetPool.setRule (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#379-380) is not in mixedCase
Parameter '_linearRelease' of AssetPool.setRule (/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol#380) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x01db18f6a474840db3480a6a35227d4d0dfcca37.sol analyzed (6 contracts), 47 result(s) found