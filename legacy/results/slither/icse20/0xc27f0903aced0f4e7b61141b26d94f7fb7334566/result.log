INFO:Slither:Compilation warnings/errors on /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:23:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:38:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:39:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:40:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:66:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:67:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:68:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:69:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:78:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:86:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                // Check if the sender has enough
                                       ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:87:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;    // Check allowance
                                                   ^---^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:43:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:73:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:90:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:2:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:23:5: Warning: No visibility specified. Defaulting to "public". 
    function MyToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
MyToken.standard should be constant (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#6-7)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#38:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#39:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#68:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#69:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#79:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
tokenRecipient.receiveApproval (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#2) should be declared external
MyToken.transfer (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#37-47) should be declared external
MyToken.approveAndCall (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#55-65) should be declared external
MyToken.transferFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#65-78) should be declared external
MyToken.burn (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#78-86) should be declared external
MyToken.burnFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#86-93) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#2-3) is not in CapWords
Function 'MyToken.MyToken' (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#24-37) is not in mixedCase
Parameter '_to' of MyToken.transfer (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#37) is not in mixedCase
Parameter '_value' of MyToken.transfer (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#37-38) is not in mixedCase
Parameter '_spender' of MyToken.approve (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#49) is not in mixedCase
Parameter '_value' of MyToken.approve (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#49-50) is not in mixedCase
Parameter '_spender' of MyToken.approveAndCall (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#56) is not in mixedCase
Parameter '_value' of MyToken.approveAndCall (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#56-57) is not in mixedCase
Parameter '_extraData' of MyToken.approveAndCall (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#57) is not in mixedCase
Parameter '_from' of MyToken.transferFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#65-66) is not in mixedCase
Parameter '_to' of MyToken.transferFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#66) is not in mixedCase
Parameter '_value' of MyToken.transferFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#66) is not in mixedCase
Parameter '_value' of MyToken.burn (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#78) is not in mixedCase
Parameter '_from' of MyToken.burnFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#86) is not in mixedCase
Parameter '_value' of MyToken.burnFrom (/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol#86) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xc27f0903aced0f4e7b61141b26d94f7fb7334566.sol analyzed (2 contracts), 33 result(s) found