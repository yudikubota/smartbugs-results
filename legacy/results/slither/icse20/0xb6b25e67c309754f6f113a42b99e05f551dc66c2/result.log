INFO:Slither:Compilation warnings/errors on /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:62:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ElectronicMusic() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:69:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:70:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:71:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:72:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:81:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:89:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:90:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:91:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:92:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:93:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:102:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:103:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:111:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:112:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:120:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:121:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value <= 0) throw; 
                         ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:130:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.sender != owner)throw;
                               ^---^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:75:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:97:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:106:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:115:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:124:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function ElectronicMusic() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:101:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function freeze(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function unfreeze(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:129:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawEther(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:135:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ElectronicMusic (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#37-137) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#69-79)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#31-37) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
ElectronicMusic.decimals should be constant (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#41)
ElectronicMusic.name should be constant (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#38-40)
ElectronicMusic.symbol should be constant (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#40-41)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#69:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#71:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#72:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#73:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#84-85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#89-90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#92:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#94:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#104:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ElectronicMusic.transfer (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#69-79) should be declared external
ElectronicMusic.approve (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#80-88) should be declared external
ElectronicMusic.transferFrom (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#88-102) should be declared external
ElectronicMusic.burn (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#102-111) should be declared external
ElectronicMusic.freeze (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#111-120) should be declared external
ElectronicMusic.unfreeze (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#120-131) should be declared external
ElectronicMusic.withdrawEther (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#134-137) should be declared external
ElectronicMusic.fallback (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol:
	- pragma solidity^0.4.18 (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ElectronicMusic.ElectronicMusic' (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#63-68) is not in mixedCase
Parameter '_to' of ElectronicMusic.transfer (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#69) is not in mixedCase
Parameter '_value' of ElectronicMusic.transfer (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#69) is not in mixedCase
Parameter '_spender' of ElectronicMusic.approve (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#81) is not in mixedCase
Parameter '_value' of ElectronicMusic.approve (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#81-82) is not in mixedCase
Parameter '_from' of ElectronicMusic.transferFrom (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#89) is not in mixedCase
Parameter '_to' of ElectronicMusic.transferFrom (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#89) is not in mixedCase
Parameter '_value' of ElectronicMusic.transferFrom (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#89) is not in mixedCase
Parameter '_value' of ElectronicMusic.burn (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#102) is not in mixedCase
Parameter '_value' of ElectronicMusic.freeze (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#111) is not in mixedCase
Parameter '_value' of ElectronicMusic.unfreeze (/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol#120) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/42/0xb6b25e67c309754f6f113a42b99e05f551dc66c2.sol analyzed (2 contracts), 41 result(s) found