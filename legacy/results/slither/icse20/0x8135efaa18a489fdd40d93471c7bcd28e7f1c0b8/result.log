INFO:Slither:Compilation warnings/errors on /unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:62:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            manifests[keccak256(registrant, name, version)].name == bytes32(0x0)
                      ^----------------------------------^
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:136:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    bytes32 manifestId = keccak256(msg.sender, name, version);
	                         ^----------------------------------^
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:139:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    bytes32 registrantNameIndex = keccak256(msg.sender, name);
	                                  ^-------------------------^
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:174:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    bytes32 manifestId = keccak256(registrant, name, version);
	                         ^----------------------------------^
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:231:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    bytes32 registrantNameIndex = keccak256(registrant, name);
	                                  ^-------------------------^
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:293:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    bytes32 registrantNameIndex = keccak256(registrant, name);
	                                  ^-------------------------^
/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:305:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
	    bytes32 manifestId = keccak256(registrant, name, version);
	                         ^----------------------------------^

INFO:Detectors:[93m
IngressRegistrar.manifestIsValid (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#56-71) uses a dangerous strict equality:
	- require(bool)(name != bytes32(0x0) && version != bytes32(0x0) && hashTypes[hashTypeIdLookup[hashTypeName]].active == true && bytes(checksum).length != 0 && registrant != address(0x0) && manifests[keccak256()(registrant,name,version)].name == bytes32(0x0))
	- require(bool)(name != bytes32(0x0) && version != bytes32(0x0) && hashTypes[hashTypeIdLookup[hashTypeName]].active == true && bytes(checksum).length != 0 && registrant != address(0x0) && manifests[keccak256()(registrant,name,version)].name == bytes32(0x0))
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
IngressRegistrar.setActiveHashType (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#101-109) should be declared external
IngressRegistrar.kill (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#113-116) should be declared external
IngressRegistrar.setPaused (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#120-122) should be declared external
IngressRegistrar.register (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#133-160) should be declared external
IngressRegistrar.getManifest (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#173-192) should be declared external
IngressRegistrar.getManifestById (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#204-219) should be declared external
IngressRegistrar.getLatestManifestByName (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#231-252) should be declared external
IngressRegistrar.getLatestManifest (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#263-282) should be declared external
IngressRegistrar.getManifestIdsByRegistrant (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#288-292) should be declared external
IngressRegistrar.getManifestIdsByName (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#298-302) should be declared external
IngressRegistrar.getManifestId (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol:
	- pragma solidity^0.4.23 (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_paused' of IngressRegistrar.setPaused (/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol#121) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/26/0x8135efaa18a489fdd40d93471c7bcd28e7f1c0b8.sol analyzed (1 contracts), 14 result(s) found