INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:11:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:44:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:64:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:65:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:90:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:91:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:92:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:102:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:123:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CCindexToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^------------------------------------------------------------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:127:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:128:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:129:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:181:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen
                                  ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:182:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:183:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:184:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:211:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:218:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:222:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:68:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:96:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:132:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:167:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(0, holder, reward);
            ^-------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:188:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:195:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:196:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:201:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:214:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:224:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:6:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:20:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:101:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function CCindexToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^------------------------------------------------------------------------------------^
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:149:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddresses() constant returns (address[]){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:157:5: Warning: No visibility specified. Defaulting to "public". 
    function distributeTokens(uint startIndex,uint endIndex) onlyOwner returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:180:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:199:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:204:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:209:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:217:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#23-111) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#64-71)
CCindexToken (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#111-227) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#127-151)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
CCindexToken.tokenName should be constant (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#123)
CCindexToken.tokenSymbol should be constant (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#123-125)
token.standard should be constant (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#24-25)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#12:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#65:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#92:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#130-131:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#184:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#185:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#186:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#213:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#220:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#225-226:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#15-20) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#20-22) should be declared external
CCindexToken.transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#127-151) should be declared external
token.transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#64-71) should be declared external
token.approveAndCall (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#80-89) should be declared external
token.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#89-101) should be declared external
CCindexToken.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#182-195) should be declared external
token.fallback (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#106-109) should be declared external
CCindexToken.getAddresses (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#151-159) should be declared external
CCindexToken.distributeTokens (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#159-179) should be declared external
CCindexToken.mintToken (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#196-204) should be declared external
CCindexToken.freezeAccount (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#204-210) should be declared external
CCindexToken.setPrices (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#210-211) should be declared external
CCindexToken.buy (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#212-219) should be declared external
CCindexToken.sell (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#219-227) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol:
	- pragma solidity^0.4.17 (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#2-3): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#3-20) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#20-23) is not in CapWords
Contract 'token' (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#23-111) is not in CapWords
Parameter '_to' of token.transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#64) is not in mixedCase
Parameter '_value' of token.transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#64) is not in mixedCase
Parameter '_spender' of token.approve (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#74) is not in mixedCase
Parameter '_value' of token.approve (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#74) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#80-81) is not in mixedCase
Parameter '_value' of token.approveAndCall (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#81) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#81) is not in mixedCase
Parameter '_from' of token.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#90) is not in mixedCase
Parameter '_to' of token.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#90) is not in mixedCase
Parameter '_value' of token.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#90) is not in mixedCase
Parameter '_to' of CCindexToken.transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#127) is not in mixedCase
Parameter '_value' of CCindexToken.transfer (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#127) is not in mixedCase
Parameter '_from' of CCindexToken.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#182) is not in mixedCase
Parameter '_to' of CCindexToken.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#182) is not in mixedCase
Parameter '_value' of CCindexToken.transferFrom (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#182) is not in mixedCase
Function 'CCindexToken.CCindexToken' (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#125-127) is not in mixedCase
Constant 'CCindexToken.initialSupply' (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#121-122) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CCindexToken.decimalUnits' (/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol#122-123) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/11/0xab3a93b317def7426c8345538690036cb92a11e6.sol analyzed (4 contracts), 57 result(s) found