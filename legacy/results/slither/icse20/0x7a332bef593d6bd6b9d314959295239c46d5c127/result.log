INFO:Slither:Compilation warnings/errors on /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:
/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:95:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        data_hash=keccak256(channelId, nonce, sender, receiver, lockPeriod, lockAmount,lockHash);
                  ^----------------------------------------------------------------------------^
/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:147:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        data_hash=keccak256(channelId, nonce, addressA, balanceA, addressB, balanceB);
                  ^-----------------------------------------------------------------^
/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:596:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(lockHash == keccak256(secret), "verify hash");
                            ^---------------^
/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:596:29: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        require(lockHash == keccak256(secret), "verify hash");
                            ^---------------^
/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:715:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(lockHash == keccak256(secret), "verify hash");
                            ^---------------^
/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:715:29: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        require(lockHash == keccak256(secret), "verify hash");
                            ^---------------^

INFO:Detectors:[93m
VerifySignature.signatureSplit (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#169-180) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[92m
VerifySignature.signatureSplit uses assembly (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#169-180)
	- /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#173-177
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Owner.unpause (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#60-66) should be declared external
TrinityContractCore.closeChannel (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#402-453) should be declared external
TrinityContractCore.fallback (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol:
	- pragma solidity^0.4.18 (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in TrinityContractCore.deposit (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#248-284):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(depositData(bytes32,address,uint256,address,uint256))),channelId,funderAddress,funderAmount,partnerAddress,partnerAmount) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#270-280
Low level call in TrinityContractCore.updateDeposit (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#284-310):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(updateDeposit(bytes32,address,uint256,address,uint256))),channelId,funderAddress,funderAmount,partnerAddress,partnerAmount) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#296-307
Low level call in TrinityContractCore.withdrawBalance (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#311-348):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(withdrawBalance(bytes32,address,uint256,address,uint256))),channelId,funder,funderBalance,partner,partnerBalance) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#334-345
Low level call in TrinityContractCore.quickCloseChannel (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#348-386):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(quickCloseChannel(bytes32,address,uint256,address,uint256))),channelId,funder,funderBalance,partner,partnerBalance) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#371-382
Low level call in TrinityContractCore.closeChannel (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#402-453):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(closeChannel(bytes32,uint256,address,uint256,address,uint256))),channelId,nonce,founder,founderBalance,partner,partnerBalance) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#428-439
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(closeChannel(bytes32,uint256,address,uint256,address,uint256))),channelId,nonce,partner,partnerBalance,founder,founderBalance) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#441-452
Low level call in TrinityContractCore.verifyUpdateTransaction (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#504-556):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(closingSettle(bytes32,address,uint256,address,uint256))),channelId,channelCloser,closerBalance,channelSettler,settlerBalance) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#536-550
Low level call in TrinityContractCore.settleTransaction (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#560-588):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(closingSettle(bytes32,address,uint256,address,uint256))),channelId,channelCloser,closerBalance,channelSettler,settlerBalance) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#574-586
Low level call in TrinityContractCore.withdraw (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#588-640):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(withdrawLocks(bytes32,uint256,uint256,uint256,bytes32))),channelId,nonce,lockAmount,lockTime,lockHash) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#610-617
	-result = address(trinityDataContract).call(bytes4(keccak256()(withdrawPartners(bytes32,address,address,bytes32))),channelId,sender,receiver,lockHash) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#621-631
Low level call in TrinityContractCore.verifyWithdrawUpdate (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#676-723):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(withdrawSettle(bytes32,address,uint256,uint256,bytes32))),channelId,withdrawer,lockAmount,channelTotalBalance,lockHash) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#692-702
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(withdrawSettle(bytes32,address,uint256,uint256,bytes32))),channelId,withdrawVerifier,channelTotalBalance,0,lockHash) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#705-717
Low level call in TrinityContractCore.withdrawSettle (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#723-741):
	-callResult = address(trinityDataContract).call(bytes4(keccak256()(withdrawSettle(bytes32,address,uint256,uint256,bytes32))),channelId,msg.sender,lockAmount,_channelTotalBalance,lockHash) /unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract 'trinityData' (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#3-16) is not in CapWords
Function 'VerifySignature._recoverAddressFromSignature' (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#156-169) is not in mixedCase
Parameter '_dataAddress' of TrinityContractCore. (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#213) is not in mixedCase
Parameter '_dataContract' of TrinityContractCore.setDataContract (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#231) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
TrinityContractCore.LOCKING (/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol#212) is never used in TrinityContractCore
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/17/0x7a332bef593d6bd6b9d314959295239c46d5c127.sol analyzed (6 contracts), 21 result(s) found