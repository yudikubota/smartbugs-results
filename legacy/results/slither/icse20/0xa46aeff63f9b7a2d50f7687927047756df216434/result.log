INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:8:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:126:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Jingle() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:308:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Sample(address _sampleStorage) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:417:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CryptoJingles(address _sample, address _jingle) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:512:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Marketplace(address _jingle) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:19:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:138:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, 0, _jingleId);
        ^--------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:139:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _jingleId);
        ^----------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:150:13: Warning: Invoking events without "emit" prefix is deprecated.
            Approval(msg.sender, _to, _jingleId);
            ^----------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:165:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(_from, 0, _jingleId);
        ^---------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:166:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _jingleId);
        ^-----------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:181:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        uniqueJingles[keccak256(jingles)] = true;
                      ^----------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:181:23: Warning: The provided argument of type uint256[5] memory is not implicitly convertible to expected type bytes memory.
        uniqueJingles[keccak256(jingles)] = true;
                      ^----------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:200:9: Warning: Invoking events without "emit" prefix is deprecated.
        Composed(numOfJingles, _owner, jingles, jingleTypes, name, author);
        ^----------------------------------------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:210:9: Warning: Invoking events without "emit" prefix is deprecated.
        EffectAdded(_jingleId, _effectParams);
        ^-----------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:318:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_owner, numOfSamples);
        ^------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:435:9: Warning: Invoking events without "emit" prefix is deprecated.
        Purchased(_to, block.number, _numSamples, numOfPurchases);
        ^-------------------------------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:441:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(jingleContract.uniqueJingles(keccak256(samples)) == false);
                                             ^----------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:441:46: Warning: The provided argument of type uint256[5] memory is not implicitly convertible to expected type bytes memory.
        require(jingleContract.uniqueJingles(keccak256(samples)) == false);
                                             ^----------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:470:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (uint(keccak256(blockHash, block.timestamp, numOfPurchases, seed )) % NUM_SAMPLE_RANGE);
                     ^----------------------------------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:475:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(_amount <= this.balance);
                           ^----------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:538:9: Warning: Invoking events without "emit" prefix is deprecated.
        SellOrder(_owner, _jingleId, _amount);
        ^-----------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:565:9: Warning: Invoking events without "emit" prefix is deprecated.
        Bought(_jingleId, msg.sender, msg.value);
        ^--------------------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:582:9: Warning: Invoking events without "emit" prefix is deprecated.
        Canceled(msg.sender, _jingleId);
        ^-----------------------------^
/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:429:33: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            bytes32 blockHash = block.blockhash(block.number - 1);
                                ^-------------^

INFO:Detectors:[91m
Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558-586) sends eth to arbitrary user
	Dangerous calls:
	- sellOrders[_jingleId].seller.transfer(price - threePercent) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#579-581)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
ERC721 (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#26-37) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#30-31)
	-transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#31-32)
	-transfer (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#32-33)
Jingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#95-296) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#145-156)
	-transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#156-173)
	-transfer (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#131-145)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558-586) uses a dangerous strict equality:
	- require(bool)(sellOrders[_jingleId].exists == true)
Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558-586) uses a dangerous strict equality:
	- require(bool)(sellOrders[_jingleId].exists == true)
Marketplace.cancel (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#586-604) uses a dangerous strict equality:
	- require(bool)(sellOrders[_jingleId].exists == true)
	- require(bool)(sellOrders[_jingleId].seller == msg.sender)
Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558-586) uses a dangerous strict equality:
	- require(bool)(sellOrders[_jingleId].exists == true)
Marketplace.cancel (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#586-604) uses a dangerous strict equality:
	- require(bool)(sellOrders[_jingleId].exists == true)
	- require(bool)(sellOrders[_jingleId].seller == msg.sender)
Marketplace.sell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#534-558) uses a dangerous strict equality:
	- require(bool)(sellOrders[_jingleId].exists == false)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
sampleTypes in CryptoJingles.composeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#461-464) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
CryptoJingles.buySamples has external calls inside a loop:
	- sampleContract.mint(_to,randomNum) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#445)
CryptoJingles.composeJingle has external calls inside a loop:
	- sampleTypes[j] = sampleContract.tokenType(samples[j]) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#467-469)
CryptoJingles.composeJingle has external calls inside a loop:
	- sampleContract.removeSample(msg.sender,samples[j]) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#469-470)
CryptoJingles.composeJingle has external calls inside a loop:
	- isOwner = sampleContract.isTokenOwner(samples[i],msg.sender) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#456-457)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558-586):
	External calls:
	- jingleContract.transfer(msg.sender,_jingleId) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#570-572)
	External calls sending eth:
	- sellOrders[_jingleId].seller.transfer(price - threePercent) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#579-581)
	State variables written after the call(s):
	- ownerBalance (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#582)
Reentrancy in CryptoJingles.composeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#449-474):
	External calls:
	- require(bool)(jingleContract.uniqueJingles(keccak256()(samples)) == false) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#452-454)
	- isOwner = sampleContract.isTokenOwner(samples[i],msg.sender) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#456-457)
	State variables written after the call(s):
	- isAlreadyUsed (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#461)
Reentrancy in Sample.mint (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#323-327):
	External calls:
	- sampleType = sampleStorage.getType(_randomNum) (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#325)
	State variables written after the call(s):
	- numOfSamples (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#327)
	- tokenPosInArr (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#325-326)
	- tokenType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#325-326)
	- tokensForOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#325-326)
	- tokensOwned (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#325-326)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CryptoJingles.MAX_SAMPLES_PER_PURCHASE should be constant (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#423)
CryptoJingles.NUM_SAMPLE_RANGE should be constant (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#424-425)
CryptoJingles.SAMPLES_PER_JINGLE should be constant (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#424)
CryptoJingles.SAMPLE_PRICE should be constant (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#423)
Marketplace.OWNERS_CUT should be constant (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#519)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#441-443:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#17-25) should be declared external
Jingle.implementsERC721 (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#221-222) should be declared external
ERC721.implementsERC721 (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#26-27) should be declared external
Jingle.totalSupply (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#222-226) should be declared external
ERC721.totalSupply (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#27-28) should be declared external
ERC721.balanceOf (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#28-29) should be declared external
Jingle.balanceOf (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#226-229) should be declared external
Jingle.transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#156-173) should be declared external
ERC721.transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#31-32) should be declared external
Jingle.transfer (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#131-145) should be declared external
ERC721.transfer (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#32-33) should be declared external
SampleStorage.addNewSampleType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#53-73) should be declared external
SampleStorage.getType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#74-94) should be declared external
Jingle.approveAndSell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#173-179) should be declared external
Jingle.composeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#179-210) should be declared external
Jingle.setCryptoJinglesContract (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#281-289) should be declared external
Jingle.setMarketplaceContract (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#289-296) should be declared external
Sample.mint (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#323-327) should be declared external
Sample.removeSample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#332-349) should be declared external
Sample.getSamplesForOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#350-353) should be declared external
Sample.getTokenType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#353-356) should be declared external
Sample.isTokenOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#356-361) should be declared external
Sample.getAllSamplesForOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#362-379) should be declared external
Sample.setCryptoJinglesContract (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#400-403) should be declared external
CryptoJingles.buySamples (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#432-448) should be declared external
CryptoJingles.composeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#449-474) should be declared external
CryptoJingles.setAuthorName (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#475-482) should be declared external
CryptoJingles.withdraw (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#496-500) should be declared external
Marketplace.sell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#534-558) should be declared external
Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558-586) should be declared external
Marketplace.cancel (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#586-604) should be declared external
Marketplace.withdraw (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol:
	- pragma solidity^0.4.18 (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#8-12) is not in mixedCase
Parameter '_ipfsHash' of SampleStorage.addNewSampleType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#53-55) is not in mixedCase
Parameter '_rarityType' of SampleStorage.addNewSampleType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#55) is not in mixedCase
Parameter '_randomNum' of SampleStorage.getType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#75-76) is not in mixedCase
Parameter '_owner' of Jingle.balanceOf (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#226-228) is not in mixedCase
Parameter '_jingleId' of Jingle.ownerOf (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#230) is not in mixedCase
Parameter '_to' of Jingle.approve (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#145-146) is not in mixedCase
Parameter '_jingleId' of Jingle.approve (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#146) is not in mixedCase
Parameter '_from' of Jingle.transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#156-157) is not in mixedCase
Parameter '_to' of Jingle.transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#157) is not in mixedCase
Parameter '_jingleId' of Jingle.transferFrom (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#157) is not in mixedCase
Parameter '_to' of Jingle.transfer (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#131) is not in mixedCase
Parameter '_jingleId' of Jingle.transfer (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#131-132) is not in mixedCase
Function 'Jingle.Jingle' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#130-131) is not in mixedCase
Parameter '_jingleId' of Jingle.approveAndSell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#173-176) is not in mixedCase
Parameter '_amount' of Jingle.approveAndSell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#176) is not in mixedCase
Parameter '_owner' of Jingle.composeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#180-181) is not in mixedCase
Parameter '_jingleId' of Jingle.addSoundEffect (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#210-211) is not in mixedCase
Parameter '_effectParams' of Jingle.addSoundEffect (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#212-213) is not in mixedCase
Parameter '_owner' of Jingle.tokenOfOwnerByIndex (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#234) is not in mixedCase
Parameter '_index' of Jingle.tokenOfOwnerByIndex (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#234-237) is not in mixedCase
Parameter '_jingleId' of Jingle.getSamplesForJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#241) is not in mixedCase
Parameter '_owner' of Jingle.getAllJingles (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#242) is not in mixedCase
Parameter '_jingleId' of Jingle.getMetaInfo (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#246) is not in mixedCase
Function 'Jingle._getApproved' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#252-256) is not in mixedCase
Parameter '_jingleId' of Jingle._getApproved (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#252) is not in mixedCase
Parameter '_owner' of Jingle.addJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#259) is not in mixedCase
Parameter '_jingleId' of Jingle.addJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#259) is not in mixedCase
Parameter '_owner' of Jingle.removeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#267) is not in mixedCase
Parameter '_jingleId' of Jingle.removeJingle (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#267-269) is not in mixedCase
Parameter '_cryptoJingles' of Jingle.setCryptoJinglesContract (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#282-283) is not in mixedCase
Parameter '_marketplace' of Jingle.setMarketplaceContract (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#290) is not in mixedCase
Function 'Sample.Sample' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#316-323) is not in mixedCase
Parameter '_sampleStorage' of Sample.Sample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#316-318) is not in mixedCase
Parameter '_owner' of Sample.mint (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#324) is not in mixedCase
Parameter '_randomNum' of Sample.mint (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#324) is not in mixedCase
Parameter '_owner' of Sample.removeSample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#334) is not in mixedCase
Parameter '_sampleId' of Sample.removeSample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#334-335) is not in mixedCase
Parameter '_owner' of Sample.getSamplesForOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#350) is not in mixedCase
Parameter '_sampleId' of Sample.getTokenType (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#354) is not in mixedCase
Parameter '_tokenId' of Sample.isTokenOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#358) is not in mixedCase
Parameter '_user' of Sample.isTokenOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#358-359) is not in mixedCase
Parameter '_owner' of Sample.getAllSamplesForOwner (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#362) is not in mixedCase
Parameter '_owner' of Sample.addSample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#383) is not in mixedCase
Parameter '_sampleType' of Sample.addSample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#383) is not in mixedCase
Parameter '_sampleId' of Sample.addSample (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#383) is not in mixedCase
Parameter '_cryptoJingles' of Sample.setCryptoJinglesContract (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#400) is not in mixedCase
Function 'CryptoJingles.CryptoJingles' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#427-432) is not in mixedCase
Parameter '_sample' of CryptoJingles.CryptoJingles (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#428-429) is not in mixedCase
Parameter '_jingle' of CryptoJingles.CryptoJingles (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#429) is not in mixedCase
Parameter '_numSamples' of CryptoJingles.buySamples (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#433-434) is not in mixedCase
Parameter '_to' of CryptoJingles.buySamples (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#435) is not in mixedCase
Parameter '_name' of CryptoJingles.setAuthorName (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#477) is not in mixedCase
Parameter '_amount' of CryptoJingles.withdraw (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#497) is not in mixedCase
Variable 'CryptoJingles.MAX_SAMPLES_PER_PURCHASE' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#423) is not in mixedCase
Variable 'CryptoJingles.SAMPLE_PRICE' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#423) is not in mixedCase
Variable 'CryptoJingles.SAMPLES_PER_JINGLE' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#424) is not in mixedCase
Variable 'CryptoJingles.NUM_SAMPLE_RANGE' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#424-425) is not in mixedCase
Function 'Marketplace.Marketplace' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#530-533) is not in mixedCase
Parameter '_jingle' of Marketplace.Marketplace (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#531) is not in mixedCase
Parameter '_owner' of Marketplace.sell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#534-535) is not in mixedCase
Parameter '_jingleId' of Marketplace.sell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#535) is not in mixedCase
Parameter '_amount' of Marketplace.sell (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#535) is not in mixedCase
Parameter '_jingleId' of Marketplace.buy (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#558) is not in mixedCase
Parameter '_jingleId' of Marketplace.cancel (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#587) is not in mixedCase
Parameter '_jingleId' of Marketplace.removeOrder (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol) is not in mixedCase
Parameter '_amount' of Marketplace.withdraw (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol) is not in mixedCase
Variable 'Marketplace.OWNERS_CUT' (/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol#519) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/11/0xa46aeff63f9b7a2d50f7687927047756df216434.sol analyzed (7 contracts), 117 result(s) found