INFO:Slither:Compilation warnings/errors on /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:
/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:2430:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomNumber = uint(keccak256(result)) % query.range;
                                    ^---------------^
/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:2430:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
                randomNumber = uint(keccak256(result)) % query.range;
                                    ^---------------^
/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:2463:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomNumber = uint(keccak256(result)) % bonusToken.ethLotteryBank();
                                ^---------------^
/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:2463:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            randomNumber = uint(keccak256(result)) % bonusToken.ethLotteryBank();
                                ^---------------^
/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:2498:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomNumber = uint(keccak256(result)) % bonusToken.tokensLotteryBank();
                                ^---------------^
/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:2498:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            randomNumber = uint(keccak256(result)) % bonusToken.tokensLotteryBank();
                                ^---------------^

INFO:Detectors:[91m
InvestToken.sellTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2010-2019) sends eth to arbitrary user
	Dangerous calls:
	- seller.transfer(weiAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2017)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- sendTokensWin(query.gamer,query.amount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2479)
	- sendTokensWin(query.gamer,query.prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2484-2486)
	- sendTokensWin(query.gamer,query.prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2497)
	External calls sending eth:
	- sendEthWin(query.gamer,query.amount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2477-2478)
	- sendEthWin(query.gamer,query.prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2487-2488)
	- sendEthWin(query.gamer,query.prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2498)
	State variables written after the call(s):
	- queries (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2508)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2527-2530)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
	State variables written after the call(s):
	- ethLotteryStage (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2527-2530)
	- updateEthLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534-2535)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
	State variables written after the call(s):
	- maxEthRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534-2535)
	- minEthRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534-2535)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2527-2530)
	- updateEthLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534-2535)
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2536-2537)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
	State variables written after the call(s):
	- ethLotterySize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2541)
	- ethLotteryStage (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2541-2545)
	- holdersInEthLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2540)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2527-2530)
	- updateEthLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534-2535)
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2536-2537)
	- ethLotteryQueryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
	- ethLotteryQueryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
	State variables written after the call(s):
	- OAR (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
	- ethLotteryQueryId (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
	- oraclize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
	- oraclize_network_name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2547-2548)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Buffer.init (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#142-156) is declared view but contains assembly code
Buffer.append (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#175-217) is declared view but contains assembly code
Buffer.append (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#226-243) is declared view but contains assembly code
Buffer.appendInt (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#250-273) is declared view but contains assembly code
usingOraclize.getCodeSize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#840-845) is declared view but contains assembly code
usingOraclize.copyBytes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1213-1237) is declared view but contains assembly code
usingOraclize.safeMemoryCleaner (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1332-1334) is declared view but contains assembly code
InvestToken.bytesToAddress (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2191-2196) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2550-2552)
	- sendTokensWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2577)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2578-2580)
	State variables written after the call(s):
	- tokensLotteryStage (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2581)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2550-2552)
	- sendTokensWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2577)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2578-2580)
	- updateTokensLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2581-2582)
	State variables written after the call(s):
	- maxTokensRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2581-2582)
	- minTokensRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2581-2582)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2550-2552)
	- sendTokensWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2577)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2578-2580)
	- updateTokensLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2581-2582)
	- bonusToken.updateTokensLotteryBank(bonusToken.tokensLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2582-2583)
	State variables written after the call(s):
	- holdersInTokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2590)
	- tokensLotterySize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2590)
	- tokensLotteryStage (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2590-2591)
Reentrancy in usingOraclize.oraclizeAPI (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#371-376):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#373-375)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#375)
	State variables written after the call(s):
	- oraclize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#375)
Reentrancy in Game.refundTokensPrize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2436-2444):
	External calls:
	- require(bool)(investToken.balanceOf(address(this)) >= waitingTokensPrizes[msg.sender]) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2438-2441)
	State variables written after the call(s):
	- waitingTokensPrizes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2442-2443)
Reentrancy in Game.sendBonusTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2395-2429):
	External calls:
	- bonusToken.buyTokens(player,tokensAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2423)
	State variables written after the call(s):
	- playersIndex (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2425)
Reentrancy in InvestToken.swapTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2019-2027):
	External calls:
	- require(bool,string)(bonusToken.balanceOf(msg.sender) >= tokensAmountToBurn,Not enough bonus tokens.) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2022-2023)
	- bonusToken.swapTokens(msg.sender,tokensAmountToBurn) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2023)
	State variables written after the call(s):
	- swapTokensLimit (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2024-2026)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
winChance in Game.placeBet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2302-2303) is a local variable never initialiazed
isWin in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2481) is a local variable never initialiazed
referrer in InvestToken.fallback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1982) is a local variable never initialiazed
range in Game.placeBet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2302) is a local variable never initialiazed
buf in usingOraclize.stra2cbor (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#993-994) is a local variable never initialiazed
buf in usingOraclize.ba2cbor (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1001) is a local variable never initialiazed
i in Game.sendBonusTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2409) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
CBOR.encodeType (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#282-303) does not use the value returned by external calls:
	-buf.appendInt(value,1) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#289)
	-buf.appendInt(value,2) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#291-295)
	-buf.appendInt(value,4) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#296)
	-buf.appendInt(value,8) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#300)
CBOR.encodeBytes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#317-322) does not use the value returned by external calls:
	-buf.append(value) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#322)
CBOR.encodeString (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#324-329) does not use the value returned by external calls:
	-buf.append(bytes(value)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#329)
Game.placeBet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2288-2350) does not use the value returned by external calls:
	-investToken.sendToGame(msg.sender,tokensAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2297-2298)
Game.refundTokensPrize (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2436-2444) does not use the value returned by external calls:
	-investToken.transfer(msg.sender,tokensAmountToSend) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2443-2444)
Game.fee (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol) does not use the value returned by external calls:
	-investToken.transfer(beneficiar,beneficiarFee) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
Game.sendTokensWin (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol) does not use the value returned by external calls:
	-investToken.transfer(winner,tokensAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Detailed.constructor.name (local variable @ /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1445-1446) shadows:
	- ERC20Detailed.name (function @ /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1453-1454)
ERC20Detailed.constructor.symbol (local variable @ /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1446-1447) shadows:
	- ERC20Detailed.symbol (function @ /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1456-1460)
ERC20Detailed.constructor.decimals (local variable @ /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1447) shadows:
	- ERC20Detailed.decimals (function @ /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1461-1463)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Game.__callback has external calls inside a loop:
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2527-2530)
Game.__callback has external calls inside a loop:
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2536-2537)
Game.__callback has external calls inside a loop:
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2578-2580)
Game.__callback has external calls inside a loop:
	- bonusToken.updateTokensLotteryBank(bonusToken.tokensLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2582-2583)
Game.ethLottery has external calls inside a loop:
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2361-2363)
Game.tokensLottery has external calls inside a loop:
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2383-2387)
Game.sendBonusTokens has external calls inside a loop:
	- bonusToken.buyTokens(player,tokensAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2423)
Game.updateEthLotteryRanges has external calls inside a loop:
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2601-2603)
Game.updateTokensLotteryRanges has external calls inside a loop:
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2614-2615)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	State variables written after the call(s):
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2476-2507)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2510-2511)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2549-2550)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2476-2507)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2510-2511)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2549-2550)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	External calls sending eth:
	- sendEthWin(query.gamer,query.amount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2477-2478)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2477-2478)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	External calls sending eth:
	- sendEthWin(query.gamer,query.prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2487-2488)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2487-2488)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	External calls sending eth:
	- sendEthWin(query.gamer,query.prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2498)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2498)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	State variables written after the call(s):
	- holdersInEthLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2525)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2511-2512)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2527-2530)
	- updateEthLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2534-2535)
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2536-2537)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2526-2527)
	State variables written after the call(s):
	- lastEthLotteryTime (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2545)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2550-2552)
	State variables written after the call(s):
	- holdersInTokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2575-2576)
Reentrancy in Game.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2469-2470)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2550-2552)
	- sendTokensWin(tokensHolder,prize) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2577)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2578-2580)
	- updateTokensLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2581-2582)
	- bonusToken.updateTokensLotteryBank(bonusToken.tokensLotteryBalances(tokensHolder)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2582-2583)
	State variables written after the call(s):
	- lastTokensLotteryTime (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2591-2592)
Reentrancy in Game.constructor (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2267-2269):
	External calls:
	- oraclize_setCustomGasPrice(5000000000) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2268)
	State variables written after the call(s):
	- beneficiar (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2269)
	- callbackGas (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2268-2269)
Reentrancy in Game.ethLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2350-2371):
	External calls:
	- require(bool)(bonusToken.ethLotteryBank() > 0) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2352-2353)
	- lotteryParticipants = bonusToken.ethLotteryParticipants() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2354-2355)
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2361-2363)
	State variables written after the call(s):
	- holdersInEthLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2367-2368)
Reentrancy in Game.ethLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2350-2371):
	External calls:
	- require(bool)(bonusToken.ethLotteryBank() > 0) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2352-2353)
	- lotteryParticipants = bonusToken.ethLotteryParticipants() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2354-2355)
	- updateEthLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2369)
	State variables written after the call(s):
	- ethLotteryRound (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2369)
	- maxEthRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2369)
	- minEthRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2369)
Reentrancy in Game.ethLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2350-2371):
	External calls:
	- require(bool)(bonusToken.ethLotteryBank() > 0) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2352-2353)
	- ! bonusToken.isEthLottery() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2353-2370)
	- lotteryParticipants = bonusToken.ethLotteryParticipants() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2354-2355)
	- updateEthLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2369)
	- bonusToken.startEthLottery() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2370)
	- ethLotteryQueryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2370-2371)
	External calls sending eth:
	- ethLotteryQueryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2370-2371)
	State variables written after the call(s):
	- ethLotteryQueryId (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2370-2371)
	- oraclize_network_name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2370-2371)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2370-2371)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1011-1071):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1025-1026)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1032-1033)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1032-1033)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1032-1033)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1065-1069)
Reentrancy in Game.placeBet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2288-2350):
	External calls:
	- payAmount = fee(msg.value,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2293)
	- investToken.sendToGame(msg.sender,tokensAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2297-2298)
	- payAmount = fee(tokensAmount,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2298-2299)
	External calls sending eth:
	- payAmount = fee(msg.value,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2293)
	- payAmount = fee(tokensAmount,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2298-2299)
	State variables written after the call(s):
	- isBet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2334)
	- players (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2333-2334)
Reentrancy in Game.placeBet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2288-2350):
	External calls:
	- payAmount = fee(msg.value,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2293)
	- investToken.sendToGame(msg.sender,tokensAmount) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2297-2298)
	- payAmount = fee(tokensAmount,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2298-2299)
	- queryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2337)
	External calls sending eth:
	- payAmount = fee(msg.value,false) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2293)
	- payAmount = fee(tokensAmount,true) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2298-2299)
	- queryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2337)
	State variables written after the call(s):
	- betsBalances (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2339-2340)
	- oraclize_network_name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2337)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2337)
	- queries (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2340-2341)
	- queries (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2341-2342)
	- queries (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2343-2345)
	- queries (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2346-2347)
	- queries (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2347-2348)
Reentrancy in Game.random (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol):
	External calls:
	- require(bool)(address(this).balance >= oraclize_getPrice(random,callbackGas)) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
	- queryId = oraclize_newRandomDSQuery(0,4,callbackGas) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
	External calls sending eth:
	- queryId = oraclize_newRandomDSQuery(0,4,callbackGas) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol)
Reentrancy in InvestToken.swapTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2019-2027):
	External calls:
	- require(bool,string)(bonusToken.balanceOf(msg.sender) >= tokensAmountToBurn,Not enough bonus tokens.) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2022-2023)
	- bonusToken.swapTokens(msg.sender,tokensAmountToBurn) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2023)
	State variables written after the call(s):
	- _balances (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2026-2027)
	- _totalSupply (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2026-2027)
	- priceCoeff (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2026)
Reentrancy in Game.tokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2371-2395):
	External calls:
	- require(bool)(bonusToken.tokensLotteryBank() > 0) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2376)
	- lotteryParticipants = bonusToken.tokensLotteryParticipants() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2378-2379)
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2383-2387)
	State variables written after the call(s):
	- holdersInTokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2388-2391)
Reentrancy in Game.tokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2371-2395):
	External calls:
	- require(bool)(bonusToken.tokensLotteryBank() > 0) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2376)
	- lotteryParticipants = bonusToken.tokensLotteryParticipants() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2378-2379)
	- updateTokensLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2391)
	State variables written after the call(s):
	- maxTokensRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2391)
	- minTokensRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2391)
	- tokensLotteryRound (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2391-2392)
Reentrancy in Game.tokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2371-2395):
	External calls:
	- require(bool)(bonusToken.tokensLotteryBank() > 0) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2376)
	- ! bonusToken.isEthLottery() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2377-2392)
	- lotteryParticipants = bonusToken.tokensLotteryParticipants() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2378-2379)
	- updateTokensLotteryRanges() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2391)
	- bonusToken.startTokensLottery() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2393-2395)
	- tokensLotteryQueryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2395)
	External calls sending eth:
	- tokensLotteryQueryId = random() (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2395)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2395)
	- oraclize_randomDS_args (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2395)
	- tokensLotteryQueryId (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2395)
Reentrancy in Game.updateEthLotteryRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2596-2608):
	External calls:
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2601-2603)
	State variables written after the call(s):
	- maxEthRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2606-2607)
	- minEthRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2605)
Reentrancy in Game.updateTokensLotteryRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2608-2621):
	External calls:
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2614-2615)
	State variables written after the call(s):
	- maxTokensRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2618-2621)
	- minTokensRanges (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2616-2617)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Buffer.init uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#142-156)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#149-156
Buffer.append uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#175-217)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#185-202
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#203-206
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#213-217
Buffer.append uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#226-243)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#230-243
Buffer.appendInt uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#250-273)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#256-272
usingOraclize.getCodeSize uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#840-845)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#844-845
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1011-1071)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1026-1030
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1030-1031
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1037-1068
usingOraclize.verifySig uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1079-1097)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1089-1090
usingOraclize.copyBytes uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1213-1237)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1229-1232
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1240-1267)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1256-1267
usingOraclize.ecrecovery uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1269-1331)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1290-1325
usingOraclize.safeMemoryCleaner uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1332-1334)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1332-1334
InvestToken.bytesToAddress uses assembly (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2191-2196)
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2193-2196
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#95)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:
	- Version used: ['>=0.4.22<0.5', '^0.4.24']
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1 declares pragma solidity^0.4.24
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#91 declares pragma solidity>=0.4.22<0.5
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1334-1335 declares pragma solidity^0.4.24
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1407 declares pragma solidity^0.4.24
	- /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1434 declares pragma solidity^0.4.24
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
OraclizeI.query2 (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#97-98) should be declared external
OraclizeI.queryN (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#99-100) should be declared external
OraclizeI.getPrice (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#102-103) should be declared external
OraclizeI.getPrice (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#103-104) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#114-116) should be declared external
usingOraclize.__callback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#419-420) should be declared external
Ownable.owner (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1355-1356) should be declared external
Ownable.renounceOwnership (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1378-1382) should be declared external
Ownable.transferOwnership (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1390-1391) should be declared external
ERC20Detailed.name (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1453-1454) should be declared external
ERC20Detailed.symbol (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1456-1460) should be declared external
modERC20.allowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1789-1792) should be declared external
ERC20.allowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1499-1501) should be declared external
IERC20.allowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1421-1423) should be declared external
IERC20.transfer (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1426-1429) should be declared external
modERC20.transfer (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1795-1800) should be declared external
ERC20.transfer (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1505-1506) should be declared external
modERC20.approve (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1812-1819) should be declared external
IERC20.approve (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1429-1430) should be declared external
ERC20.approve (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1521-1526) should be declared external
ERC20.transferFrom (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1537-1543) should be declared external
modERC20.transferFrom (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1829-1837) should be declared external
IERC20.transferFrom (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1431) should be declared external
ERC20.increaseAllowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1557-1566) should be declared external
ERC20.decreaseAllowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1580-1588) should be declared external
BonusToken.buyTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1674-1678) should be declared external
BonusToken.startEthLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1678-1679) should be declared external
BonusToken.startTokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1679-1682) should be declared external
BonusToken.restartEthLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1683-1690) should be declared external
BonusToken.restartTokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1690-1699) should be declared external
BonusToken.updateEthLotteryBank (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1699-1703) should be declared external
BonusToken.updateTokensLotteryBank (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1703-1707) should be declared external
BonusToken.swapTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1707-1715) should be declared external
BonusToken.sendToEthLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1715-1733) should be declared external
BonusToken.sendToTokensLottery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1733-1748) should be declared external
BonusToken.ethLotteryParticipants (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1749-1750) should be declared external
BonusToken.tokensLotteryParticipants (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1750-1752) should be declared external
modERC20.getHolders (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1770-1771) should be declared external
modERC20.increaseAllowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1851-1859) should be declared external
modERC20.decreaseAllowance (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1873-1881) should be declared external
InvestToken.fallback (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1981-1987) should be declared external
InvestToken.sellTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2010-2019) should be declared external
InvestToken.swapTokens (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2019-2027) should be declared external
InvestToken.reinvest (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2027-2037) should be declared external
InvestToken.withdraw (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2037-2046) should be declared external
InvestToken.sendDividendsToHolders (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2046-2086) should be declared external
InvestToken.setGameAddress (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2086-2089) should be declared external
InvestToken.sendToGame (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2089-2094) should be declared external
InvestToken.gameDividends (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2094-2096) should be declared external
InvestToken.price (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2097-2101) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol:
	- pragma solidity>=0.4.22<0.5 (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#91): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#96-97) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#98-99) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#100-102) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#108-113) is not in mixedCase
Struct 'Buffer.buffer' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#141-142) is not in CapWords
Parameter '_capacity' of Buffer.init (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#143) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#346-1334) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#377-381) is not in mixedCase
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#381-419) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#419-420) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#420-432) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#432-434) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#434-436) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#437-441) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#441-446) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#446-451) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#451-456) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#456-461) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#461-466) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#466-471) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#471-477) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#477-483) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#483-489) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#489-495) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#495-503) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#503-508) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#508-513) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#513-520) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#520-526) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#526-530) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#531-536) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#537-544) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#544-550) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#551-556) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#556-563) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#563-573) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#573-580) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#581-587) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#587-595) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#595-605) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#605-613) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#614-621) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#622-630) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#631-639) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#639-646) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#646-651) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#651-657) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#657-666) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#666-672) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#672-676) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#676-682) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#683-689) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#689-694) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#694-700) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#700-706) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#706-713) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#713-720) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#720-727) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#727-735) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#735-743) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#743-751) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#751-758) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#759-767) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#767-776) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#776-785) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#785-792) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#792-801) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#801-814) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#814-826) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#826-830) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#831-834) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#834-836) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#836-839) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#846) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#868) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#868-869) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#889) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#889) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#906) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#906-907) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#907) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#907) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#907) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#932) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#932) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#932-933) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#933) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#936) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#936-937) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#937-938) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#942-943) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#943) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#949-950) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#954) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#954-955) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1006-1008) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1007) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1008-1011) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1011-1071) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1012-1013) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1013) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1013) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1071-1076) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1097-1134) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1146-1154) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1147-1148) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1148) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1148) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1155) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1158-1212) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1160) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1240-1267) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#347) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#348) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#349) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#350) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#351-352) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#352-353) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#354-356) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#356-358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#358-359) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#359-361) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#361-362) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#362-364) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#364-366) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#367) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1006) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1076) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1076-1078) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1136-1146) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1398-1407) is not in mixedCase
Function 'ERC20._transfer' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1598-1605) is not in mixedCase
Function 'ERC20._mint' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1619-1627) is not in mixedCase
Function 'ERC20._burn' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1636-1644) is not in mixedCase
Contract 'modERC20' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1764-1922) is not in CapWords
Function 'modERC20._transfer' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1890-1902) is not in mixedCase
Function 'modERC20._mint' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1912-1915) is not in mixedCase
Function 'modERC20._burn' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1917-1922) is not in mixedCase
Parameter '_bonusToken' of InvestToken. (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1973-1976) is not in mixedCase
Constant 'InvestToken.a' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#1953-1954) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Game.__callback' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2468-2596) is not in mixedCase
Constant 'Game.GAME_COIN_FlIP' (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#2206) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#347) is never used in Game
usingOraclize.week (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#348) is never used in Game
usingOraclize.month (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#349) is never used in Game
usingOraclize.proofType_NONE (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#350) is never used in Game
usingOraclize.proofType_TLSNotary (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#351-352) is never used in Game
usingOraclize.proofType_Ledger (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#352-353) is never used in Game
usingOraclize.proofType_Android (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#354-356) is never used in Game
usingOraclize.proofType_Native (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#356-358) is never used in Game
usingOraclize.proofStorage_IPFS (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#358) is never used in Game
usingOraclize.networkID_mainnet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#359-361) is never used in Game
usingOraclize.networkID_testnet (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#361-362) is never used in Game
usingOraclize.networkID_morden (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#362-364) is never used in Game
usingOraclize.networkID_consensys (/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol#364-366) is never used in Game
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/47/0x2704979baf77722a1ed87f718d5535230b576682.sol analyzed (14 contracts), 279 result(s) found