INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol:
/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol:805:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw; // solium-disable-line security/no-throw
    ^---^
/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol:70:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return keccak256(
           ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ECRecovery.recover (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#20-60) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#633-646) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#633-646) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.close (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#713-723) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#633-646) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.close (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#713-723) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.closeDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#690-705) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
	- require(bool)(sellerInfo[seller].status == DataResponseStatus.DataResponseAdded)
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.addNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#633-646) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.close (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#713-723) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
DataOrder.closeDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#690-705) uses a dangerous strict equality:
	- require(bool)(transactionCompletedAt == 0)
	- require(bool)(sellerInfo[seller].status == DataResponseStatus.DataResponseAdded)
DataOrder.getDataResponseStatusAsString (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#821-840) uses a dangerous strict equality:
	- drs == DataResponseStatus.DataResponseAdded
	- drs == DataResponseStatus.RefundedToBuyer
	- drs == DataResponseStatus.TransactionCompleted
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DataExchange.chargeBuyer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1587-1604):
	External calls:
	- buyer = order.buyer() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1588-1589)
	- notary = order.getNotaryForSeller(seller) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1589-1591)
	- orderPrice = order.price() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1592)
	- (notarizationFee) = order.getNotaryInfo(notary) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1592-1594)
	State variables written after the call(s):
	- buyerRemainingBudgetForAudits (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1598-1600)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
TokenDestructible.destroy (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#170-186) does not use the value returned by external calls:
	-token.transfer(owner,balance) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#182)
DataExchange.newOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1248-1273) does not use the value returned by external calls:
	-token.transferFrom(msg.sender,this,initialBudgetForAudits) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1261-1263)
DataExchange.addNotaryToOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1299-1331) does not use the value returned by external calls:
	-openOrders.insert(orderAddr) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1323-1325)
DataExchange.closeOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1476-1503) does not use the value returned by external calls:
	-openOrders.remove(orderAddr) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1498)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in DataExchange.addDataResponseToOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1360-1374):
	External calls:
	- buyer = order.buyer() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1364)
	- require(bool)(order.hasNotaryBeenAdded(notary)) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1367)
	- okay = order.addDataResponse(seller,notary,dataHash) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1370-1371)
	- chargeBuyer(order,seller) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1372)
	State variables written after the call(s):
	- ordersBySeller (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1372-1373)
Reentrancy in DataExchange.addNotaryToOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1299-1331):
	External calls:
	- buyer = order.buyer() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1304-1305)
	- require(bool)(! order.hasNotaryBeenAdded(notary)) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1305-1306)
	- okay = order.addNotary(notary,responsesPercentage,notarizationFee,notarizationTermsOfService) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1315-1321)
	State variables written after the call(s):
	- ordersByNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1326-1327)
Reentrancy in DataExchange.chargeBuyer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1587-1604):
	External calls:
	- buyer = order.buyer() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1588-1589)
	- notary = order.getNotaryForSeller(seller) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1589-1591)
	- orderPrice = order.price() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1592)
	- (notarizationFee) = order.getNotaryInfo(notary) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1592-1594)
	- require(bool)(token.transferFrom(buyer,this,finalCharges)) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1600-1601)
	State variables written after the call(s):
	- buyerBalance (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol)
Reentrancy in DataExchange.closeOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1476-1503):
	External calls:
	- buyer = order.buyer() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1485-1486)
	- okay = order.close() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1487)
	State variables written after the call(s):
	- buyerRemainingBudgetForAudits (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1494-1495)
Reentrancy in DataExchange.newOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1248-1273):
	External calls:
	- require(bool)(token.allowance(msg.sender,this) >= initialBudgetForAudits) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1254-1257)
	- token.transferFrom(msg.sender,this,initialBudgetForAudits) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1261-1263)
	State variables written after the call(s):
	- buyerRemainingBudgetForAudits (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1263-1266)
	- orders (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1269)
	- ordersByBuyer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1266-1269)
Reentrancy in DataExchange.payPlayers (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol):
	External calls:
	- orderPrice = order.price() (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol)
	- (notarizationFee) = order.getNotaryInfo(notary) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol)
	State variables written after the call(s):
	- buyerBalance (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DataOrder.addNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#633-646) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(transactionCompletedAt == 0) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#637-638)
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(transactionCompletedAt == 0) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#670)
DataOrder.closeDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#690-705) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(sellerInfo[seller].status == DataResponseStatus.DataResponseAdded) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#696-697)
	- require(bool)(transactionCompletedAt == 0) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#694)
DataOrder.close (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#713-723) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(transactionCompletedAt == 0) (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#715-717)
DataOrder.hasSellerBeenAccepted (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#727-734) uses timestamp for comparisons
	Dangerous comparisons:
	- sellerInfo[seller].createdAt != 0 (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#731-734)
DataOrder.hasNotaryBeenAdded (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#743-751) uses timestamp for comparisons
	Dangerous comparisons:
	- notaryInfo[notary].addedAt != 0 (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#750-751)
DataOrder.getDataResponseStatusAsString (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#821-840) uses timestamp for comparisons
	Dangerous comparisons:
	- drs == DataResponseStatus.DataResponseAdded (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#826-828)
	- drs == DataResponseStatus.RefundedToBuyer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#828-833)
	- drs == DataResponseStatus.TransactionCompleted (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#833-839)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
ECRecovery.recover uses assembly (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#20-60)
	- /unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#39-49
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#839:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#84-85) should be declared external
BasicToken.totalSupply (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#323-326) should be declared external
ERC20Basic.balanceOf (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#85-86) should be declared external
BasicToken.balanceOf (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#351-354) should be declared external
ERC20Basic.transfer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#86-90) should be declared external
BasicToken.transfer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#331-344) should be declared external
Ownable.renounceOwnership (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#130-131) should be declared external
TokenDestructible.destroy (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#170-186) should be declared external
Pausable.pause (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#218-227) should be declared external
Pausable.unpause (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#232-234) should be declared external
StandardToken.allowance (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#437-440) should be declared external
ERC20.allowance (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#359-365) should be declared external
ERC20.transferFrom (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#365-367) should be declared external
StandardToken.transferFrom (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#394-404) should be declared external
ERC20.approve (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#367) should be declared external
StandardToken.approve (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#418-427) should be declared external
StandardToken.increaseApproval (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#458-463) should be declared external
StandardToken.decreaseApproval (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#487-494) should be declared external
DataOrder.addNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#633-646) should be declared external
DataOrder.addDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#666-678) should be declared external
DataOrder.closeDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#690-705) should be declared external
DataOrder.close (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#713-723) should be declared external
DataOrder.getNotaryInfo (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#759-779) should be declared external
DataOrder.getSellerInfo (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#785-802) should be declared external
DataOrder.getNotaryForSeller (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#813-821) should be declared external
MultiMap.get (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#858-864) should be declared external
MultiMap.insert (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#892-902) should be declared external
MultiMap.removeAt (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#909-915) should be declared external
MultiMap.length (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#943-947) should be declared external
CryptoUtils.isNotaryAdditionValid (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#994-1014) should be declared external
CryptoUtils.isDataResponseValid (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1023-1051) should be declared external
CryptoUtils.isNotaryVeredictValid (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1061-1070) should be declared external
DataExchange.registerNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1183-1197) should be declared external
DataExchange.unregisterNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1201-1204) should be declared external
DataExchange.setMinimumInitialBudgetForAudits (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1217-1223) should be declared external
DataExchange.newOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1248-1273) should be declared external
DataExchange.addNotaryToOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1299-1331) should be declared external
DataExchange.addDataResponseToOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1360-1374) should be declared external
DataExchange.closeDataResponse (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1428-1464) should be declared external
DataExchange.closeOrder (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1476-1503) should be declared external
DataExchange.getOrdersForNotary (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1507-1510) should be declared external
DataExchange.getOrdersForSeller (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1522-1525) should be declared external
DataExchange.getOrdersForBuyer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1528-1533) should be declared external
DataExchange.getOpenOrders (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1537-1540) should be declared external
DataExchange.getAllowedNotaries (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1543-1545) should be declared external
DataExchange.getNotaryInfo (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1550-1557) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Ownable.transferOwnership (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#138-139) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#143-152) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#145-150) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#351) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#333) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#333) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#438) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#439) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#394-395) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#395) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#395-396) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#419) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#419) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#459) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#459) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#487-488) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#488) is not in mixedCase
Parameter '_buyer' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#599) is not in mixedCase
Parameter '_filters' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#599-601) is not in mixedCase
Parameter '_dataRequest' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#603) is not in mixedCase
Parameter '_price' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#603) is not in mixedCase
Parameter '_termsAndConditions' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#604) is not in mixedCase
Parameter '_buyerURL' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#604-605) is not in mixedCase
Parameter '_buyerPublicKey' of DataOrder. (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#605) is not in mixedCase
Parameter '_key' of MultiMap.exist (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#879) is not in mixedCase
Parameter '_key' of MultiMap.insert (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#893) is not in mixedCase
Parameter '_key' of MultiMap.remove (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#927) is not in mixedCase
Parameter '_minimumInitialBudgetForAudits' of DataExchange.setMinimumInitialBudgetForAudits (/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol#1218) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/1/0xd077c09a7e65c4cca490a776d5e395fb4fe7179a.sol analyzed (15 contracts), 100 result(s) found