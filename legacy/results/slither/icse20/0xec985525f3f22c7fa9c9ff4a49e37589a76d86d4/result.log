INFO:Slither:Compilation warnings/errors on /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:27:4: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			throw; 
			^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:55:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function SGCC() public {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:66:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead 
		                ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:67:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:68:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough
		                                    ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:69:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows 
		                                              ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:77:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:84:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_to == 0x0) throw; // Prevent transfer to 0x0 address. Use burn() instead
		                ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:85:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:86:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balanceOf[_from] < _value) throw; // Check if the sender has enough 
		                               ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:87:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
		                                              ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:88:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value > allowance[_from][msg.sender]) throw; // Check allowance 
		                                           ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:98:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough
		                                    ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:99:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:108:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (balanceOf[msg.sender] < _value) throw; // Check if the sender has enough
		                                    ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:109:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:118:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (freezeOf[msg.sender] < _value) throw; // Check if the sender has enough
		                                   ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:119:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw;
		                 ^---^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:25:2: Warning: This declaration shadows a builtin symbol.
	function assert(bool assertion) internal {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:72:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place
		^-------------------------------^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:92:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(_from, _to, _value); // emit event
		^--------------------------^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:102:3: Warning: Invoking events without "emit" prefix is deprecated.
		Burn(msg.sender, _value); // emit event
		^----------------------^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:112:3: Warning: Invoking events without "emit" prefix is deprecated.
		Freeze(msg.sender, _value); // emit event
		^------------------------^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:122:3: Warning: Invoking events without "emit" prefix is deprecated.
		Unfreeze(msg.sender, _value); // emit event
		^--------------------------^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:126:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function withdrawEther(uint256 amount) public {
	                       ^------------^
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:25:2: Warning: Function state mutability can be restricted to pure
	function assert(bool assertion) internal {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:126:2: Warning: Function state mutability can be restricted to pure
	function withdrawEther(uint256 amount) public {
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
SGCC (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#34-130) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#66-75)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:
	Contract SGCC has payable functions:
	 - fallback (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#25-33) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#32:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#67:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#68:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#69:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#85-86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#89:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#110-111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#120:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#120-121:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SGCC.transfer (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#66-75) should be declared external
SGCC.approve (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#76-82) should be declared external
SGCC.transferFrom (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#83-97) should be declared external
SGCC.burn (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#98-107) should be declared external
SGCC.freeze (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#108-117) should be declared external
SGCC.unfreeze (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#118-130) should be declared external
SGCC.withdrawEther (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol) should be declared external
SGCC.fallback (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol:
	- pragma solidity^0.4.8 (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'SGCC.SGCC' (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#57-65) is not in mixedCase
Parameter '_to' of SGCC.transfer (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#66) is not in mixedCase
Parameter '_value' of SGCC.transfer (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#66) is not in mixedCase
Parameter '_spender' of SGCC.approve (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#77) is not in mixedCase
Parameter '_value' of SGCC.approve (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#78) is not in mixedCase
Parameter '_from' of SGCC.transferFrom (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#84) is not in mixedCase
Parameter '_to' of SGCC.transferFrom (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#84) is not in mixedCase
Parameter '_value' of SGCC.transferFrom (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#84) is not in mixedCase
Parameter '_value' of SGCC.burn (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#98) is not in mixedCase
Parameter '_value' of SGCC.freeze (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#108) is not in mixedCase
Parameter '_value' of SGCC.unfreeze (/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol#118-119) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/2/0xec985525f3f22c7fa9c9ff4a49e37589a76d86d4.sol analyzed (2 contracts), 40 result(s) found