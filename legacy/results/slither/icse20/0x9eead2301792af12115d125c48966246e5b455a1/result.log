INFO:Slither:Compilation warnings/errors on /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:36:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(records[node].owner != msg.sender) throw;
                                              ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:43:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:87:9: Warning: Use of the "var" keyword is deprecated.
        var subnode = sha3(node, label);
        ^---------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:126:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != registrar) throw;
                                     ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:131:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!active) throw;
                     ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:135:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Deed(address _owner) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:144:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newOwner == 0) throw;
                           ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:156:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (value < newValue) throw;
                              ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:159:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!owner.send(this.balance - newValue) && throwOnFailure) throw;
                                                                    ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:168:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (! burn.send(((1000 - refundRatio) * this.balance)/1000)) throw;
                                                                     ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:177:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (active) throw;
                    ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:225:9: Warning: Use of the "var" keyword is deprecated.
        var entry = _entries[_hash];
        ^-------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:245:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(state(_hash) != _state) throw;
                                   ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:250:87: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (state(_hash) != Mode.Owned || msg.sender != _entries[_hash].deed.owner()) throw;
                                                                                      ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:255:111: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(now < registryStarted  || now > registryStarted + 4 years || ens.owner(rootNode) != address(this)) throw;
                                                                                                              ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:269:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Registrar(AbstractENS _ens, bytes32 _rootNode, uint _startDate) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:379:9: Warning: Use of the "var" keyword is deprecated.
        var mode = state(_hash);
        ^------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:381:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(mode != Mode.Open) throw;
                              ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:425:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (address(sealedBids[msg.sender][sealedBid]) > 0 ) throw;
                                                             ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:426:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value < minPrice) throw;
                                  ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:455:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (address(bid) == 0 ) throw;
                                ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:461:9: Warning: Use of the "var" keyword is deprecated.
        var auctionState = state(_hash);
        ^--------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:468:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:513:73: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            || now < bid.creationDate() + totalAuctionLength + 2 weeks) throw;
                                                                        ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:543:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newOwner == 0) throw;
                           ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:558:88: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(now < h.registrationDate + 1 years && ens.owner(rootNode) == address(this)) throw;
                                                                                       ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:578:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (strlen(unhashedName) > 6 ) throw;
                                       ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:611:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(labels.length == 0) throw;
                               ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:612:60: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(state(labels[labels.length - 1]) == Mode.Owned) throw;
                                                           ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:620:13: Warning: Use of the "var" keyword is deprecated.
            var node = sha3(rootNode, label);
            ^------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:646:9: Warning: Use of the "var" keyword is deprecated.
        var registrar = ens.owner(rootNode);
        ^-----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:648:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:686:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:7:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner);
                                    ^-----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:4:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns(address);
    ^-----------------------------------------------------^

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:8:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner);
                                                          ^-----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:4:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns(address);
    ^-----------------------------------------------------^

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:9:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver);
                                       ^--------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:5:5: The shadowed declaration is here:
    function resolver(bytes32 node) constant returns(address);
    ^--------------------------------------------------------^

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:10:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl);
                                  ^--------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:6:5: The shadowed declaration is here:
    function ttl(bytes32 node) constant returns(uint64);
    ^--------------------------------------------------^

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:74:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner) only_owner(node) {
                                    ^-----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:50:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:86:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
                                                          ^-----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:50:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:97:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver) only_owner(node) {
                                       ^--------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:57:5: The shadowed declaration is here:
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:107:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
                                  ^--------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:64:5: The shadowed declaration is here:
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:225:9: Warning: This declaration shadows an existing declaration.
        var entry = _entries[_hash];
        ^-------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:211:5: The shadowed declaration is here:
    struct entry {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:281:61: Warning: This declaration shadows an existing declaration.
    function max(uint a, uint b) internal constant returns (uint max) {
                                                            ^------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:281:5: The shadowed declaration is here:
    function max(uint a, uint b) internal constant returns (uint max) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:294:61: Warning: This declaration shadows an existing declaration.
    function min(uint a, uint b) internal constant returns (uint min) {
                                                            ^------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:294:5: The shadowed declaration is here:
    function min(uint a, uint b) internal constant returns (uint min) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:428:9: Warning: This declaration shadows an existing declaration.
        Deed newBid = (new Deed).value(msg.value)(msg.sender);
        ^---------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:424:5: The shadowed declaration is here:
    function newBid(bytes32 sealedBid) payable {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:260:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[_hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:383:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry newAuction = _entries[_hash];
        ^--------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[_hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:527:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[_hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[_hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:556:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[_hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:581:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:651:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        entry h = _entries[_hash];
        ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:44:17: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        records[0].owner = msg.sender;
                ^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:75:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(node, owner);
        ^-------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:87:23: Warning: "sha3" has been deprecated in favour of "keccak256"
        var subnode = sha3(node, label);
                      ^---------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:87:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        var subnode = sha3(node, label);
                      ^---------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:88:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewOwner(node, label, owner);
        ^--------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:98:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewResolver(node, resolver);
        ^-------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:108:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewTTL(node, ttl);
        ^---------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:147:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerChanged(newOwner);
        ^--------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:159:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (!owner.send(this.balance - newValue) && throwOnFailure) throw;
                        ^----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:168:49: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (! burn.send(((1000 - refundRatio) * this.balance)/1000)) throw;
                                                ^----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:169:9: Warning: Invoking events without "emit" prefix is deprecated.
        DeedClosed();
        ^----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:182:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if(owner.send(this.balance)) {
                      ^----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:255:62: Warning: Using "years" as a unit denomination is deprecated.
        if(now < registryStarted  || now > registryStarted + 4 years || ens.owner(rootNode) != address(this)) throw;
                                                             ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:387:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionStarted(_hash, newAuction.registrationDate);
        ^------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:408:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        return sha3(hash, owner, value, salt);
               ^----------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:408:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return sha3(hash, owner, value, salt);
               ^----------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:430:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewBid(sealedBid, msg.sender, msg.value);
        ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:465:13: Warning: Invoking events without "emit" prefix is deprecated.
            BidRevealed(_hash, msg.sender, value, 1);
            ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:472:13: Warning: Invoking events without "emit" prefix is deprecated.
            BidRevealed(_hash, msg.sender, value, 0);
            ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:486:13: Warning: Invoking events without "emit" prefix is deprecated.
            BidRevealed(_hash, msg.sender, value, 2);
            ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:491:13: Warning: Invoking events without "emit" prefix is deprecated.
            BidRevealed(_hash, msg.sender, value, 3);
            ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:495:13: Warning: Invoking events without "emit" prefix is deprecated.
            BidRevealed(_hash, msg.sender, value, 4);
            ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        BidRevealed(seal, bidder, 0, 5);
        ^-----------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:534:9: Warning: Invoking events without "emit" prefix is deprecated.
        HashRegistered(_hash, h.deed.owner(), h.value, h.registrationDate);
        ^----------------------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:558:39: Warning: Using "years" as a unit denomination is deprecated.
        if(now < h.registrationDate + 1 years && ens.owner(rootNode) == address(this)) throw;
                                      ^-----^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:566:9: Warning: Invoking events without "emit" prefix is deprecated.
        HashReleased(_hash, h.value);        
        ^--------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:577:58: Warning: "sha3" has been deprecated in favour of "keccak256"
    function invalidateName(string unhashedName) inState(sha3(unhashedName), Mode.Owned) {
                                                         ^----------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:577:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function invalidateName(string unhashedName) inState(sha3(unhashedName), Mode.Owned) {
                                                         ^----------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:577:58: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function invalidateName(string unhashedName) inState(sha3(unhashedName), Mode.Owned) {
                                                         ^----------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:579:24: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 hash = sha3(unhashedName);
                       ^----------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:579:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha3(unhashedName);
                       ^----------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:579:24: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 hash = sha3(unhashedName);
                       ^----------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:594:9: Warning: Invoking events without "emit" prefix is deprecated.
        HashInvalidated(hash, unhashedName, h.value, h.registrationDate);
        ^--------------------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:620:24: Warning: "sha3" has been deprecated in favour of "keccak256"
            var node = sha3(rootNode, label);
                       ^-------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:620:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            var node = sha3(rootNode, label);
                       ^-------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:629:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        node = sha3(node, labels[idx]);
               ^---------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:629:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        node = sha3(node, labels[idx]);
               ^---------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:704:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:732:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistedAddressAdded(addr);
      ^---------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:760:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistedAddressRemoved(addr);
      ^-----------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:841:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bids_[keccak256(_hash, this, _value, _salt)].hash = _hash;
              ^-----------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:849:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 node = keccak256(registrar_.rootNode(), b.hash);
                       ^--------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:4:5: Warning: No visibility specified. Defaulting to "public". 
    function owner(bytes32 node) constant returns(address);
    ^-----------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function resolver(bytes32 node) constant returns(address);
    ^--------------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:6:5: Warning: No visibility specified. Defaulting to "public". 
    function ttl(bytes32 node) constant returns(uint64);
    ^--------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(bytes32 node, address owner);
    ^---------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:8:5: Warning: No visibility specified. Defaulting to "public". 
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner);
    ^-------------------------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function setResolver(bytes32 node, address resolver);
    ^---------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:10:5: Warning: No visibility specified. Defaulting to "public". 
    function setTTL(bytes32 node, uint64 ttl);
    ^----------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:64:5: Warning: No visibility specified. Defaulting to "public". 
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:74:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(bytes32 node, address owner) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:97:5: Warning: No visibility specified. Defaulting to "public". 
    function setResolver(bytes32 node, address resolver) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:107:5: Warning: No visibility specified. Defaulting to "public". 
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:135:5: Warning: No visibility specified. Defaulting to "public". 
    function Deed(address _owner) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:143:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(address newOwner) onlyRegistrar {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:150:5: Warning: No visibility specified. Defaulting to "public". 
    function setRegistrar(address newRegistrar) onlyRegistrar {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function setBalance(uint newValue, bool throwOnFailure) onlyRegistrar onlyActive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:166:5: Warning: No visibility specified. Defaulting to "public". 
    function closeDeed(uint refundRatio) onlyRegistrar onlyActive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:176:5: Warning: No visibility specified. Defaulting to "public". 
    function destroyDeed() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:224:5: Warning: No visibility specified. Defaulting to "public". 
    function state(bytes32 _hash) constant returns (Mode) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:259:5: Warning: No visibility specified. Defaulting to "public". 
    function entries(bytes32 _hash) constant returns (Mode, address, uint, uint, uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:269:5: Warning: No visibility specified. Defaulting to "public". 
    function Registrar(AbstractENS _ens, bytes32 _rootNode, uint _startDate) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:344:5: Warning: No visibility specified. Defaulting to "public". 
    function isAllowed(bytes32 _hash, uint _timestamp) constant returns (bool allowed){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:353:5: Warning: No visibility specified. Defaulting to "public". 
    function getAllowedTime(bytes32 _hash) constant returns (uint timestamp) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:378:5: Warning: No visibility specified. Defaulting to "public". 
    function startAuction(bytes32 _hash) registryOpen() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:394:5: Warning: No visibility specified. Defaulting to "public". 
    function startAuctions(bytes32[] _hashes)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:407:5: Warning: No visibility specified. Defaulting to "public". 
    function shaBid(bytes32 hash, address owner, uint value, bytes32 salt) constant returns (bytes32 sealedBid) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:424:5: Warning: No visibility specified. Defaulting to "public". 
    function newBid(bytes32 sealedBid) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:441:5: Warning: No visibility specified. Defaulting to "public". 
    function startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:452:5: Warning: No visibility specified. Defaulting to "public". 
    function unsealBid(bytes32 _hash, uint _value, bytes32 _salt) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:503:5: Warning: No visibility specified. Defaulting to "public". 
    function cancelBid(address bidder, bytes32 seal) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:526:5: Warning: No visibility specified. Defaulting to "public". 
    function finalizeAuction(bytes32 _hash) onlyOwner(_hash) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:542:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(bytes32 _hash, address newOwner) onlyOwner(_hash) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:555:5: Warning: No visibility specified. Defaulting to "public". 
    function releaseDeed(bytes32 _hash) onlyOwner(_hash) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:577:5: Warning: No visibility specified. Defaulting to "public". 
    function invalidateName(string unhashedName) inState(sha3(unhashedName), Mode.Owned) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:610:5: Warning: No visibility specified. Defaulting to "public". 
    function eraseNode(bytes32[] labels) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:645:5: Warning: No visibility specified. Defaulting to "public". 
    function transferRegistrars(bytes32 _hash) onlyOwner(_hash) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:671:5: Warning: No visibility specified. Defaulting to "public". 
    function acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate) {}
    ^---------------------------------------------------------------------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:671:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate) {}
                                     ^----------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:671:52: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate) {}
                                                   ^-------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:671:63: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate) {}
                                                              ^-------------------^
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:281:5: Warning: Function state mutability can be restricted to pure
    function max(uint a, uint b) internal constant returns (uint max) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:294:5: Warning: Function state mutability can be restricted to pure
    function min(uint a, uint b) internal constant returns (uint min) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:306:5: Warning: Function state mutability can be restricted to pure
    function strlen(string s) internal constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:407:5: Warning: Function state mutability can be restricted to pure
    function shaBid(bytes32 hash, address owner, uint value, bytes32 salt) constant returns (bytes32 sealedBid) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:671:5: Warning: Function state mutability can be restricted to pure
    function acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate) {}
    ^---------------------------------------------------------------------------------^

INFO:Detectors:[91m
Deed.destroyDeed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#180-193) sends eth to arbitrary user
	Dangerous calls:
	- owner.send(this.balance) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#192-193)
BedOracleV1.bid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#853-858) sends eth to arbitrary user
	Dangerous calls:
	- registrar_.newBid.value(b.value)(_shaBid) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#856-858)
BedOracleV1.withdraw (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(balance_) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in BedOracleV1.forfeit (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#898-903):
	External calls:
	- require(bool)(registrar_.state(b.hash) == Registrar.Mode.Owned) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
	External calls sending eth:
	- b.owner.transfer(b.value) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
	State variables written after the call(s):
	- bids_ (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
	- bids_ (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
Deed.destroyDeed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#180-193) allows anyone to destruct the contract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#suicidal[0m
INFO:Detectors:[93m
Registrar.strlen (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#314-344) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Registrar.cancelBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#511-534):
	External calls:
	- bid.setOwner(msg.sender) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#530-531)
	- bid.closeDeed(5) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#531-533)
	State variables written after the call(s):
	- sealedBids (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#533)
Reentrancy in BedOracleV1.finalize (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#873-897):
	External calls:
	- node = keccak256()(registrar_.rootNode(),b.hash) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#876-879)
	- registrar_.finalizeAuction(b.hash) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#879-881)
	- ENS(registrar_.ens()).setResolver(node,address(0)) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#886-887)
	- registrar_.transfer(b.hash,b.owner) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#888-889)
	State variables written after the call(s):
	- bids_ (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#893)
	- bids_ (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#894)
Reentrancy in Registrar.invalidateName (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#594-608):
	External calls:
	- _tryEraseSingleNode(hash) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#602-603)
	State variables written after the call(s):
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#604-605)
Reentrancy in Registrar.invalidateName (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#594-608):
	External calls:
	- _tryEraseSingleNode(hash) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#602-603)
	- h.deed.setBalance(h.value / 2,false) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#605)
	- h.deed.setOwner(msg.sender) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#605-606)
	- h.deed.closeDeed(1000) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#606)
	State variables written after the call(s):
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#607)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#607-608)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#608)
Reentrancy in Registrar.transferRegistrars (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#665-683):
	External calls:
	- registrar = ens.owner(rootNode) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#666-667)
	- h.deed.setRegistrar(registrar) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#669)
	- Registrar(registrar).acceptRegistrarTransfer(_hash,h.deed,h.registrationDate) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#671-676)
	State variables written after the call(s):
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#679)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#679)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#682-683)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#683)
Reentrancy in Registrar.unsealBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#462-509):
	External calls:
	- value = min(_value,bid.value()) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#469)
	- bid.setBalance(value,true) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#470)
	- previousWinner.closeDeed(995) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#489-490)
	State variables written after the call(s):
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#495)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#500-501)
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#501)
Reentrancy in Registrar.unsealBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#462-509):
	External calls:
	- value = min(_value,bid.value()) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#469)
	- bid.setBalance(value,true) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#470)
	State variables written after the call(s):
	- _entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#506)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
AbstractENS.setOwner.owner (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#7-8) shadows:
	- AbstractENS.owner (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#4-5)
AbstractENS.setSubnodeOwner.owner (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#8-9) shadows:
	- AbstractENS.owner (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#4-5)
AbstractENS.setResolver.resolver (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#9-10) shadows:
	- AbstractENS.resolver (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#5-6)
AbstractENS.setTTL.ttl (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#10-12) shadows:
	- AbstractENS.ttl (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#6-7)
ENS.setOwner.owner (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#76) shadows:
	- ENS.owner (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#50-55)
	- AbstractENS.owner (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#4-5)
ENS.setSubnodeOwner.owner (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#88) shadows:
	- ENS.owner (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#50-55)
	- AbstractENS.owner (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#4-5)
ENS.setResolver.resolver (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#99) shadows:
	- ENS.resolver (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#57-62)
	- AbstractENS.resolver (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#5-6)
ENS.setTTL.ttl (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#113-114) shadows:
	- ENS.ttl (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#65-69)
	- AbstractENS.ttl (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#6-7)
Registrar.max.max (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#292-293) shadows:
	- Registrar.max (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#291-295)
Registrar.min.min (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#306) shadows:
	- Registrar.min (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#304-307)
Registrar.newBid.newBid (local variable @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#439) shadows:
	- Registrar.newBid (function @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#434-442)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in BedOracleV1.finalize (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#873-897):
	External calls:
	- node = keccak256()(registrar_.rootNode(),b.hash) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#876-879)
	- registrar_.finalizeAuction(b.hash) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#879-881)
	- ENS(registrar_.ens()).setResolver(node,address(0)) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#886-887)
	- registrar_.transfer(b.hash,b.owner) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#888-889)
	State variables written after the call(s):
	- balance_ (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#893-894)
Reentrancy in BedOracleV1.forfeit (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#898-903):
	External calls:
	- require(bool)(registrar_.state(b.hash) == Registrar.Mode.Owned) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
	External calls sending eth:
	- b.owner.transfer(b.value) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
	State variables written after the call(s):
	- balance_ (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol)
Reentrancy in Registrar.startAuctionsAndBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#453-456):
	External calls:
	- startAuctions(hashes) (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#454-455)
	State variables written after the call(s):
	- sealedBids (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#455)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Registrar.strlen uses assembly (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#314-344)
	- /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#320-323
	- /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#326-328
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#89-91:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#41:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#147:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#160-162:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#176:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#180-181:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#138:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#392:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#416-417:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#436:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#437:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#466-467:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#478:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#529:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#558-560:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#574-575:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#598:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#599-602:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#628:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#629:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#641:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#647-648:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#668:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#255:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#265:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ENS.owner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#50-55) should be declared external
AbstractENS.owner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#4-5) should be declared external
AbstractENS.resolver (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#5-6) should be declared external
ENS.resolver (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#57-62) should be declared external
AbstractENS.ttl (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#6-7) should be declared external
ENS.ttl (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#65-69) should be declared external
AbstractENS.setOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#7-8) should be declared external
ENS.setOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#75-80) should be declared external
AbstractENS.setSubnodeOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#8-9) should be declared external
ENS.setSubnodeOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#86-94) should be declared external
ENS.setResolver (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#98-105) should be declared external
AbstractENS.setResolver (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#9-10) should be declared external
ENS.setTTL (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#109-116) should be declared external
AbstractENS.setTTL (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#10-12) should be declared external
Deed.setOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#145-154) should be declared external
Deed.setRegistrar (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#154-156) should be declared external
Deed.setBalance (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#156-166) should be declared external
Deed.closeDeed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#169-179) should be declared external
Registrar.entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#265-269) should be declared external
Registrar.startAuctionsAndBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#453-456) should be declared external
Registrar.unsealBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#462-509) should be declared external
Registrar.cancelBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#511-534) should be declared external
Registrar.finalizeAuction (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#539-552) should be declared external
Registrar.transfer (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#557-565) should be declared external
Registrar.releaseDeed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#571-581) should be declared external
Registrar.invalidateName (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#594-608) should be declared external
Registrar.eraseNode (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#626-633) should be declared external
Registrar.transferRegistrars (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#665-683) should be declared external
Registrar.acceptRegistrarTransfer (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#700-702) should be declared external
Ownable.transferOwnership (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#729-732) should be declared external
Whitelist.addAddressesToWhitelist (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#767-771) should be declared external
Whitelist.removeAddressesFromWhitelist (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#798-805) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol:
	- pragma solidity^0.4.13 (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ENS.ENS' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#44-48) is not in mixedCase
Modifier 'ENS.only_owner' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#35-41) is not in mixedCase
Function 'Deed.Deed' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#139-145) is not in mixedCase
Parameter '_owner' of Deed.Deed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#140) is not in mixedCase
Constant 'Deed.burn' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#118-119) is not in UPPER_CASE_WITH_UNDERSCORES
Struct 'Registrar.entry' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#220-223) is not in CapWords
Parameter '_hash' of Registrar.state (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#230) is not in mixedCase
Parameter '_hash' of Registrar.entries (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#265) is not in mixedCase
Function 'Registrar.Registrar' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#277-282) is not in mixedCase
Parameter '_ens' of Registrar.Registrar (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#277-278) is not in mixedCase
Parameter '_rootNode' of Registrar.Registrar (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#278) is not in mixedCase
Parameter '_startDate' of Registrar.Registrar (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#278-279) is not in mixedCase
Parameter '_hash' of Registrar.isAllowed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#354) is not in mixedCase
Parameter '_timestamp' of Registrar.isAllowed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#354) is not in mixedCase
Parameter '_hash' of Registrar.getAllowedTime (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#361-362) is not in mixedCase
Parameter '_hash' of Registrar.trySetSubnodeOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#371) is not in mixedCase
Parameter '_newOwner' of Registrar.trySetSubnodeOwner (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#371) is not in mixedCase
Parameter '_hash' of Registrar.startAuction (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#388-390) is not in mixedCase
Parameter '_hashes' of Registrar.startAuctions (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#405-407) is not in mixedCase
Parameter '_hash' of Registrar.unsealBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#463) is not in mixedCase
Parameter '_value' of Registrar.unsealBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#463) is not in mixedCase
Parameter '_salt' of Registrar.unsealBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#463) is not in mixedCase
Parameter '_hash' of Registrar.finalizeAuction (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#540) is not in mixedCase
Parameter '_hash' of Registrar.transfer (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#558) is not in mixedCase
Parameter '_hash' of Registrar.releaseDeed (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#571-572) is not in mixedCase
Function 'Registrar._tryEraseSingleNode' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#633-642) is not in mixedCase
Function 'Registrar._eraseNodeHierarchy' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#642-657) is not in mixedCase
Parameter '_hash' of Registrar.transferRegistrars (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#666) is not in mixedCase
Variable 'Registrar._entries' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#197) is not in mixedCase
Constant 'Registrar.totalAuctionLength' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#202-204) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Registrar.revealPeriod' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#204) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Registrar.launchLength' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#205) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Registrar.minPrice' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#205-206) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Ownable.Ownable' (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#714-717) is not in mixedCase
Parameter '_registrar' of BedOracleV1. (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#824-825) is not in mixedCase
Parameter '_shaBid' of BedOracleV1.add (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#829) is not in mixedCase
Parameter '_cypherBid' of BedOracleV1.add (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#829-830) is not in mixedCase
Parameter '_gasPrices' of BedOracleV1.add (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#830) is not in mixedCase
Parameter '_shaBid' of BedOracleV1.bid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#853-854) is not in mixedCase
Parameter '_hash' of BedOracleV1.reveal (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#865-866) is not in mixedCase
Parameter '_value' of BedOracleV1.reveal (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#866-868) is not in mixedCase
Parameter '_salt' of BedOracleV1.reveal (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#868) is not in mixedCase
Parameter '_shaBid' of BedOracleV1.finalize (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#873) is not in mixedCase
Parameter '_shaBid' of BedOracleV1.forfeit (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol#898) is not in mixedCase
Parameter '_shaBid' of BedOracleV1.getBid (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol) is not in mixedCase
Parameter '_newRegistrar' of BedOracleV1.setRegistrar (/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x9eead2301792af12115d125c48966246e5b455a1.sol analyzed (7 contracts), 135 result(s) found