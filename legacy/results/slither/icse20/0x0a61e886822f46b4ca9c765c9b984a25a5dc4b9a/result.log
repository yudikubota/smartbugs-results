INFO:Slither:Compilation warnings/errors on /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:19:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:274:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Upgradable(address _prevVersion) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:366:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TaskRegister(address _ec, address _token, address _prevVersion) public Upgradable(_prevVersion) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:37:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:125:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes20 publicKeyPart = ripemd160(sha256(byte(0x04), publicXPoint, publicYPoint));
                                          ^--------------------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:125:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes20 publicKeyPart = ripemd160(sha256(byte(0x04), publicXPoint, publicYPoint));
                                ^-------------------------------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:125:33: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        bytes20 publicKeyPart = ripemd160(sha256(byte(0x04), publicXPoint, publicYPoint));
                                ^-------------------------------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:126:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 publicKeyCheckCode = sha256(sha256(byte(0x00), publicKeyPart));
                                            ^-------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:126:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 publicKeyCheckCode = sha256(sha256(byte(0x00), publicKeyPart));
                                     ^---------------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:126:38: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        bytes32 publicKeyCheckCode = sha256(sha256(byte(0x00), publicKeyPart));
                                     ^---------------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:281:13: Warning: Invoking events without "emit" prefix is deprecated.
            Initialized(_prevVersion);
            ^-----------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:291:9: Warning: Invoking events without "emit" prefix is deprecated.
        Upgrading(msg.sender);
        ^-------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:301:13: Warning: Invoking events without "emit" prefix is deprecated.
            Upgraded(upgradableState.nextVersion);
            ^-----------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:307:13: Warning: Invoking events without "emit" prefix is deprecated.
            Initialized(upgradableState.prevVersion);
            ^--------------------------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:443:9: Warning: Invoking events without "emit" prefix is deprecated.
        TaskPayed(taskId);
        ^---------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:484:9: Warning: Invoking events without "emit" prefix is deprecated.
        TaskCreated(nextTaskId);
        ^---------------------^
/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:532:9: Warning: Invoking events without "emit" prefix is deprecated.
        TaskSolved(taskId);
        ^----------------^

INFO:Detectors:[93m
VanityLib.bytesToBytes32 (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#79-85) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in TaskRegister.createBitcoinAddressPrefixTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#460-496):
	External calls:
	- token.transferFrom(tx.origin,this,reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#476-477)
	- reward = token.balanceOf(this) - totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#478-479)
	State variables written after the call(s):
	- totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#479-480)
Reentrancy in TaskRegister.payForTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#446-454):
	External calls:
	- token.transferFrom(tx.origin,this,reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#452)
	- reward = token.balanceOf(this) - totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#453)
	State variables written after the call(s):
	- totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#453)
Reentrancy in TaskRegister.solveTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#496-548):
	External calls:
	- (answerPublicXPoint,answerPublicYPoint) = ec.publicKey(answerPrivateKey) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#517-519)
	- (publicXPoint,publicYPoint,z) = ec._ecAdd(task.requestPublicXPoint,task.requestPublicYPoint,1,answerPublicXPoint,answerPublicYPoint,1) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#519-523)
	- z = ec._inverse(z) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#528)
	State variables written after the call(s):
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#541-543)
Reentrancy in TaskRegister.solveTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#496-548):
	External calls:
	- (answerPublicXPoint,answerPublicYPoint) = ec.publicKey(answerPrivateKey) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#517-519)
	- (publicXPoint,publicYPoint,z) = ec._ecAdd(task.requestPublicXPoint,task.requestPublicYPoint,1,answerPublicXPoint,answerPublicYPoint,1) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#519-523)
	- z = ec._inverse(z) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#528)
	- token.transfer(msg.sender,task.reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#545)
	State variables written after the call(s):
	- indexOfTaskId (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#546-547)
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#546-547)
Reentrancy in TaskRegister.upgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#377-431):
	External calls:
	- nextTaskId = TaskRegister(upgradableState.prevVersion).nextTaskId() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#384-385)
	- totalReward = token.balanceOf(upgradableState.prevVersion) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#385-386)
	- tasksCount = TaskRegister(upgradableState.prevVersion).tasksCount() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#390-392)
	State variables written after the call(s):
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#396-397)
Reentrancy in TaskRegister.upgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#377-431):
	External calls:
	- nextTaskId = TaskRegister(upgradableState.prevVersion).nextTaskId() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#384-385)
	- totalReward = token.balanceOf(upgradableState.prevVersion) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#385-386)
	- tasksCount = TaskRegister(upgradableState.prevVersion).tasksCount() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#390-392)
	- (tasks[j].taskType,tasks[j].taskId,tasks[j].creator,tasks[j].reward,tasks[j].data,None,None,None,None) = TaskRegister(upgradableState.prevVersion).tasks(j) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#399-411)
	State variables written after the call(s):
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#399-411)
Reentrancy in TaskRegister.upgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#377-431):
	External calls:
	- nextTaskId = TaskRegister(upgradableState.prevVersion).nextTaskId() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#384-385)
	- totalReward = token.balanceOf(upgradableState.prevVersion) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#385-386)
	- tasksCount = TaskRegister(upgradableState.prevVersion).tasksCount() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#390-392)
	- (None,None,None,None,None,tasks[k].dataLength,tasks[k].requestPublicXPoint,tasks[k].requestPublicYPoint,tasks[k].answerPrivateKey) = TaskRegister(upgradableState.prevVersion).tasks(k) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#414-431)
	State variables written after the call(s):
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#414-431)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
TaskRegister.endUpgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#432-438) does not use the value returned by external calls:
	-token.transfer(upgradableState.nextVersion,token.balanceOf(this)) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#436-437)
TaskRegister.payForTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#446-454) does not use the value returned by external calls:
	-token.transferFrom(tx.origin,this,reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#452)
TaskRegister.createBitcoinAddressPrefixTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#460-496) does not use the value returned by external calls:
	-token.transferFrom(tx.origin,this,reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#476-477)
TaskRegister.solveTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#496-548) does not use the value returned by external calls:
	-token.transfer(msg.sender,task.reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#545)
TaskRegister.recoverLost (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol) does not use the value returned by external calls:
	-_token.transfer(loser,_token.balanceOf(this)) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
TaskRegister.upgrade.tasksCount (local variable @ /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#390-392) shadows:
	- TaskRegister.tasksCount (function @ /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#438-441)
TaskRegister.solveTask.m (local variable @ /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#524-528) shadows:
	- VanityLib.m (state variable @ /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#67-69)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
TaskRegister.upgrade has external calls inside a loop:
	- (None,None,None,None,None,tasks[k].dataLength,tasks[k].requestPublicXPoint,tasks[k].requestPublicYPoint,tasks[k].answerPrivateKey) = TaskRegister(upgradableState.prevVersion).tasks(k) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#414-431)
TaskRegister.upgrade has external calls inside a loop:
	- (tasks[j].taskType,tasks[j].taskId,tasks[j].creator,tasks[j].reward,tasks[j].data,None,None,None,None) = TaskRegister(upgradableState.prevVersion).tasks(j) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#399-411)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Upgradable.Upgradable (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#279-290):
	External calls:
	- require(bool)(msg.sender == Ownable(_prevVersion).owner()) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#282-285)
	State variables written after the call(s):
	- upgradableState (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#286-287)
	- upgradableState (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#287-288)
Reentrancy in TaskRegister.createBitcoinAddressPrefixTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#460-496):
	External calls:
	- token.transferFrom(tx.origin,this,reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#476-477)
	- reward = token.balanceOf(this) - totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#478-479)
	State variables written after the call(s):
	- indexOfTaskId (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#494)
	- nextTaskId (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#496)
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#493)
Reentrancy in TaskRegister.payForTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#446-454):
	External calls:
	- token.transferFrom(tx.origin,this,reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#452)
	- reward = token.balanceOf(this) - totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#453)
	State variables written after the call(s):
	- tasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#453)
Reentrancy in TaskRegister.solveTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#496-548):
	External calls:
	- (answerPublicXPoint,answerPublicYPoint) = ec.publicKey(answerPrivateKey) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#517-519)
	- (publicXPoint,publicYPoint,z) = ec._ecAdd(task.requestPublicXPoint,task.requestPublicYPoint,1,answerPublicXPoint,answerPublicYPoint,1) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#519-523)
	- z = ec._inverse(z) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#528)
	- token.transfer(msg.sender,task.reward) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#545)
	State variables written after the call(s):
	- completedTasks (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#546-547)
	- totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#545-546)
Reentrancy in TaskRegister.upgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#377-431):
	External calls:
	- nextTaskId = TaskRegister(upgradableState.prevVersion).nextTaskId() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#384-385)
	- totalReward = token.balanceOf(upgradableState.prevVersion) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#385-386)
	State variables written after the call(s):
	- totalReward (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#385-386)
Reentrancy in TaskRegister.upgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#377-431):
	External calls:
	- nextTaskId = TaskRegister(upgradableState.prevVersion).nextTaskId() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#384-385)
	- totalReward = token.balanceOf(upgradableState.prevVersion) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#385-386)
	- tasksCount = TaskRegister(upgradableState.prevVersion).tasksCount() (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#390-392)
	- (tasks[j].taskType,tasks[j].taskId,tasks[j].creator,tasks[j].reward,tasks[j].data,None,None,None,None) = TaskRegister(upgradableState.prevVersion).tasks(j) (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#399-411)
	State variables written after the call(s):
	- indexOfTaskId (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#411-412)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
VanityLib.bytesToBytes32 uses assembly (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#79-85)
	- /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#84-85
TaskRegister.createBitcoinAddressPrefixTask uses assembly (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#460-496)
	- /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#481-483
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#35-45) should be declared external
ERC20Basic.totalSupply (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#49-50) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#50-51) should be declared external
ERC20Basic.transfer (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#51-52) should be declared external
ERC20.allowance (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#60-61) should be declared external
ERC20.transferFrom (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#61-62) should be declared external
ERC20.approve (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#62-63) should be declared external
VanityLib.complexityForBtcAddressPrefix (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#149-153) should be declared external
IUpgradable.startUpgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#257-259) should be declared external
IUpgradable.endUpgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#259) should be declared external
Upgradable.startUpgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#291-300) should be declared external
IEC._inverse (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#322-325) should be declared external
IEC._ecAdd (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#325-329) should be declared external
IEC._ecDouble (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#329-332) should be declared external
IEC._ecMul (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#332-339) should be declared external
IEC.publicKey (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#340-345) should be declared external
IEC.deriveKey (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#346-350) should be declared external
TaskRegister.upgrade (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#377-431) should be declared external
TaskRegister.tasksCount (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#438-441) should be declared external
TaskRegister.completedTasksCount (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#441-446) should be declared external
TaskRegister.payForTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#446-454) should be declared external
TaskRegister.createBitcoinAddressPrefixTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#460-496) should be declared external
TaskRegister.solveTask (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#496-548) should be declared external
TaskRegister.recoverLost (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol:
	- pragma solidity^0.4.0 (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#19-24) is not in mixedCase
Parameter '_value' of VanityLib.toBase58Checked (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#86) is not in mixedCase
Constant 'VanityLib.m' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#67-69) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Upgradable.Upgradable' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#279-290) is not in mixedCase
Parameter '_prevVersion' of Upgradable.Upgradable (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#279) is not in mixedCase
Function 'IEC._inverse' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#322-325) is not in mixedCase
Function 'IEC._ecAdd' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#325-329) is not in mixedCase
Function 'IEC._ecDouble' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#329-332) is not in mixedCase
Function 'IEC._ecMul' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#332-339) is not in mixedCase
Function 'TaskRegister.TaskRegister' (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#376-377) is not in mixedCase
Parameter '_ec' of TaskRegister.TaskRegister (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#376) is not in mixedCase
Parameter '_token' of TaskRegister.TaskRegister (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol#376) is not in mixedCase
Parameter '_token' of TaskRegister.recoverLost (/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x0a61e886822f46b4ca9c765c9b984a25a5dc4b9a.sol analyzed (8 contracts), 63 result(s) found