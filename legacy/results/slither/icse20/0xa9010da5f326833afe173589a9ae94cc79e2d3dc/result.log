INFO:Slither:Compilation warnings/errors on /unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:61:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BCV()
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:224:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BCVTokenVault(ERC20Interface _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:123:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _amount);
            ^--------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:148:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:163:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _amount);
        ^-------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:242:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:254:40: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xaeD0363F76e4B906ef818b0F3199C580b5B01a43'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    address public lifeReserveWallet = 0xaed0363f76e4b906ef818b0f3199c580b5b01a43;
                                       ^----------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:378:9: Warning: Invoking events without "emit" prefix is deprecated.
        Allocated(teamReserveWallet, teamReserveAllocation);
        ^-------------------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:379:9: Warning: Invoking events without "emit" prefix is deprecated.
        Allocated(lifeReserveWallet, lifeReserveAllocation);
        ^-------------------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:380:9: Warning: Invoking events without "emit" prefix is deprecated.
        Allocated(finanReserveWallet, finanReserveAllocation);
        ^---------------------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:381:9: Warning: Invoking events without "emit" prefix is deprecated.
        Allocated(econReserveWallet, econReserveAllocation);
        ^-------------------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:382:9: Warning: Invoking events without "emit" prefix is deprecated.
        Allocated(developReserveWallet, developReserveAllocation);
        ^-------------------------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:398:9: Warning: Invoking events without "emit" prefix is deprecated.
        Locked(lockedAt);
        ^--------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:451:9: Warning: Invoking events without "emit" prefix is deprecated.
        Distributed(teamReserveWallet, payment);
        ^-------------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:498:9: Warning: Invoking events without "emit" prefix is deprecated.
        Distributed(reserveWallet, payment);
        ^---------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:545:9: Warning: Invoking events without "emit" prefix is deprecated.
        Distributed(reserveWallet, payment);
        ^---------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:600:9: Warning: Invoking events without "emit" prefix is deprecated.
        Distributed(reserveWallet, payment);
        ^---------------------------------^
/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:640:7: Warning: Invoking events without "emit" prefix is deprecated.
      Distributed(reserveWallet, payment);
      ^---------------------------------^

INFO:Detectors:[91m
BCV.approvedInvestorList (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#38-41) is never initialized. It is used in:
	- isApprovedInvestor (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#91-97)
BCV.deposit (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#41-45) is never initialized. It is used in:
	- getDeposit (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#102-107)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
BCVTokenVault.allocate (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#374-396) uses a dangerous strict equality:
	- require(bool)(token.balanceOf(address(this)) == totalAllocation)
BCVTokenVault.allocate (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#374-396) uses a dangerous strict equality:
	- require(bool)(token.balanceOf(address(this)) == totalAllocation)
BCVTokenVault.notLocked (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#355-357) uses a dangerous strict equality:
	- require(bool)(lockedAt == 0)
	- require(bool)(lockedAt == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:
	Contract BCV has payable functions:
	 - fallback (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#187-188)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
Reentrancy in BCVTokenVault.allocate (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#374-396):
	External calls:
	- require(bool)(token.balanceOf(address(this)) == totalAllocation) (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#376-378)
	State variables written after the call(s):
	- allocations (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#378-379)
	- allocations (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#379-380)
	- allocations (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#380-381)
	- allocations (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#382)
	- allocations (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#382-387)
	- lockedAt (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#395-396)
	- timeLocks (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#395-396)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
BCVTokenVault.claimTeamReserve (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#431-463) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > timeLocks[reserveWallet]) (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#434-436)
BCVTokenVault.teamVestingStage (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#469-481) uses timestamp for comparisons
	Dangerous comparisons:
	- stage > teamVestingStages (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#478-480)
BCVTokenVault.claimTokenReserveLife (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#481-513) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > timeLocks[reserveWallet]) (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#486)
BCVTokenVault.lifeVestingStage (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#516-528) uses timestamp for comparisons
	Dangerous comparisons:
	- stage > lifeVestingStages (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#527-528)
BCVTokenVault.claimTokenReserveFinan (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#530-565) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > timeLocks[reserveWallet]) (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#533-534)
BCVTokenVault.finanVestingStage (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#566-580) uses timestamp for comparisons
	Dangerous comparisons:
	- stage > finanVestingStages (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#578-580)
BCVTokenVault.claimTokenReserveEcon (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#581-621) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > timeLocks[reserveWallet]) (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#585-586)
BCVTokenVault.econVestingStage (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#621-637) uses timestamp for comparisons
	Dangerous comparisons:
	- stage > econVestingStages (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#634-637)
BCVTokenVault.claimTokenReserveDevelop (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#638-651) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp > timeLocks[reserveWallet]) (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#645-647)
BCVTokenVault.canCollect (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > timeLocks[msg.sender] && claimed[msg.sender] == 0 (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
BCV._totalSupply should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#26)
BCV.totalTokenSold should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#48-49)
BCVTokenVault.developReserveAllocation should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#273-274)
BCVTokenVault.developReserveTimeLock should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#280-281)
BCVTokenVault.developReserveWallet should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#265-266)
BCVTokenVault.econReserveAllocation should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#272-273)
BCVTokenVault.econReserveTimeLock should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#279-280)
BCVTokenVault.econReserveWallet should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#262-264)
BCVTokenVault.econVestingStages should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#285-286)
BCVTokenVault.finanReserveAllocation should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#270-272)
BCVTokenVault.finanReserveTimeLock should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#278-279)
BCVTokenVault.finanReserveWallet should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#258-259)
BCVTokenVault.finanVestingStages should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#284)
BCVTokenVault.lifeReserveAllocation should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#267-270)
BCVTokenVault.lifeReserveTimeLock should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#278)
BCVTokenVault.lifeReserveWallet should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#257)
BCVTokenVault.lifeVestingStages should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#281-283)
BCVTokenVault.teamReserveAllocation should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#266-267)
BCVTokenVault.teamReserveTimeLock should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#276)
BCVTokenVault.teamReserveWallet should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#255-256)
BCVTokenVault.teamVestingStages should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#281)
BCVTokenVault.totalAllocation should be constant (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#275-276)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
BCV.totalSupply (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#72-77) should be declared external
ERC20Interface.totalSupply (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#10-11) should be declared external
BCV.balanceOf (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#82-88) should be declared external
ERC20Interface.balanceOf (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#11-12) should be declared external
BCV.transfer (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#114-131) should be declared external
ERC20Interface.transfer (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#12-13) should be declared external
BCV.transferFrom (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#143-156) should be declared external
ERC20Interface.transferFrom (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#13-14) should be declared external
ERC20Interface.approve (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#14-15) should be declared external
BCV.approve (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#161-172) should be declared external
BCV.allowance (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#173-187) should be declared external
ERC20Interface.allowance (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#15-16) should be declared external
BCV.isApprovedInvestor (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#91-97) should be declared external
BCV.getDeposit (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#102-107) should be declared external
BCV.fallback (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#187-188) should be declared external
Ownable.transferOwnership (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#249-253) should be declared external
BCVTokenVault.allocate (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#374-396) should be declared external
BCVTokenVault.getTotalBalance (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#420-424) should be declared external
BCVTokenVault.getLockedBalance (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#424-429) should be declared external
BCVTokenVault.claimTeamReserve (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#431-463) should be declared external
BCVTokenVault.claimTokenReserveLife (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#481-513) should be declared external
BCVTokenVault.claimTokenReserveFinan (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#530-565) should be declared external
BCVTokenVault.claimTokenReserveEcon (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#581-621) should be declared external
BCVTokenVault.claimTokenReserveDevelop (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#638-651) should be declared external
BCVTokenVault.canCollect (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol:
	- pragma solidity^0.4.18 (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_addr' of BCV.balanceOf (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#83) is not in mixedCase
Parameter '_to' of BCV.transfer (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#114) is not in mixedCase
Parameter '_amount' of BCV.transfer (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#114-115) is not in mixedCase
Parameter '_from' of BCV.transferFrom (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#144) is not in mixedCase
Parameter '_to' of BCV.transferFrom (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#144) is not in mixedCase
Parameter '_amount' of BCV.transferFrom (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#144) is not in mixedCase
Parameter '_spender' of BCV.approve (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#161-162) is not in mixedCase
Parameter '_amount' of BCV.approve (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#162) is not in mixedCase
Parameter '_owner' of BCV.allowance (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#175) is not in mixedCase
Parameter '_spender' of BCV.allowance (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#175-176) is not in mixedCase
Function 'BCV.BCV' (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#64-69) is not in mixedCase
Parameter '_addr' of BCV.isApprovedInvestor (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#92) is not in mixedCase
Parameter '_addr' of BCV.getDeposit (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#102-104) is not in mixedCase
Variable 'BCV._totalSupply' (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#26) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#237) is not in mixedCase
Function 'BCVTokenVault.BCVTokenVault' (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#372-374) is not in mixedCase
Parameter '_token' of BCVTokenVault.BCVTokenVault (/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol#372-373) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/21/0xa9010da5f326833afe173589a9ae94cc79e2d3dc.sol analyzed (5 contracts), 60 result(s) found