INFO:Slither:Compilation warnings/errors on /unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:47:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:55:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:83:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminAdded(addr);
        ^--------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:88:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminRemoved(addr);
        ^----------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:149:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenUpdated(address(token), _token);
        ^----------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:153:9: Warning: Invoking events without "emit" prefix is deprecated.
        FeeUpdated(feeAccount, _feeAccount, fee, _fee);
        ^--------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:172:9: Warning: Invoking events without "emit" prefix is deprecated.
        AppAdded(msg.sender, appName, _feeAccount, _fee, true);
        ^----------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:181:9: Warning: Invoking events without "emit" prefix is deprecated.
        AppUpdated(msg.sender, appName, _feeAccount, _fee, active);
        ^--------------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:211:9: Warning: Invoking events without "emit" prefix is deprecated.
        BrandAdded(brandAccount, msg.sender, brandName, true);
        ^---------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:219:9: Warning: Invoking events without "emit" prefix is deprecated.
        BrandUpdated(brandAccount, msg.sender, brandName, active);
        ^-------------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:257:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProductAdded(productAccount, msg.sender, app.appAccount, description, true);
        ^-------------------------------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:270:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProductUpdated(productAccount, product.brandAccount, app.appAccount, description, active);
        ^---------------------------------------------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:298:9: Warning: Invoking events without "emit" prefix is deprecated.
        Permissioned(marker, msg.sender, permission);
        ^------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:305:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        hash = keccak256(item);
               ^-------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:305:16: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        hash = keccak256(item);
               ^-------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:321:9: Warning: Invoking events without "emit" prefix is deprecated.
        Marked(msg.sender, productAccount, app.feeAccount, feeAccount, app.fee, fee, itemHash);
        ^------------------------------------------------------------------------------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:334:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(item);
                       ^-------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:334:24: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
        bytes32 hash = keccak256(item);
                       ^-------------^
/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:1069:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenUpdated(address(token), _token);
        ^----------------------------------^

INFO:Detectors:[91m
ERC721._ownedTokensCount (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#588-589) is never initialized. It is used in:
	- balanceOf (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#621-629)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Address.isContract (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#499-521) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
ERC721 (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#567-870) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#650-661)
	-transferFrom (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#702-707)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:
	Contract DeveryERC721Token has payable functions:
	 - setMaximumMintableQuantity (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1112-1117)
	 - claimProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1120-1145)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in DeveryERC721Token.claimProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1120-1145):
	External calls:
	- (None,productBrandAddress,None,None,None,None,None) = deveryRegistry.products(_productAddress) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1135-1136)
	- (None,appAccountAddress,None,None) = deveryRegistry.brands(productBrandAddress) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1136-1137)
	- (None,None,appFeeAccount,appFee,None) = deveryRegistry.apps(appAccountAddress) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1138-1139)
	- deveryFee = deveryRegistry.fee() (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1139-1140)
	- deveryFeeAccount = deveryRegistry.feeAccount() (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1141-1144)
	- token.transferFrom(productBrandAddress,appFeeAccount,appFee * _quantity) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- token.transferFrom(productBrandAddress,deveryFeeAccount,deveryFee * _quantity) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	State variables written after the call(s):
	- totalMintedProducts (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
DeveryRegistry.mark (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#315-333) does not use the value returned by external calls:
	-token.transferFrom(brand.brandAccount,app.feeAccount,app.fee) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#332)
	-token.transferFrom(brand.brandAccount,feeAccount,fee) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#333)
DeveryERC721Token.claimProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1120-1145) does not use the value returned by external calls:
	-token.transferFrom(productBrandAddress,appFeeAccount,appFee * _quantity) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	-token.transferFrom(productBrandAddress,deveryFeeAccount,deveryFee * _quantity) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in DeveryERC721Token.claimProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1120-1145):
	External calls:
	- (None,productBrandAddress,None,None,None,None,None) = deveryRegistry.products(_productAddress) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1135-1136)
	- (None,appAccountAddress,None,None) = deveryRegistry.brands(productBrandAddress) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1136-1137)
	- (None,None,appFeeAccount,appFee,None) = deveryRegistry.apps(appAccountAddress) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1138-1139)
	- deveryFee = deveryRegistry.fee() (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1139-1140)
	- deveryFeeAccount = deveryRegistry.feeAccount() (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1141-1144)
	- token.transferFrom(productBrandAddress,appFeeAccount,appFee * _quantity) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- token.transferFrom(productBrandAddress,deveryFeeAccount,deveryFee * _quantity) (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	State variables written after the call(s):
	- _allTokens (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- _allTokensIndex (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- _ownedTokens (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- _ownedTokensIndex (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- _tokenOwner (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
	- tokenIdToProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Address.isContract uses assembly (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#499-521)
	- /unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#519-521
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol:
	- Version used: ['ABIEncoderV2', '^0.4.24']
	- /unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1 declares pragma solidity^0.4.24
	- /unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#2-3 declares pragma experimentalABIEncoderV2
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#20-21) should be declared external
ERC20Interface.balanceOf (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#21-22) should be declared external
ERC20Interface.allowance (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#22-23) should be declared external
ERC20Interface.transfer (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#23-24) should be declared external
ERC20Interface.approve (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#24-25) should be declared external
ERC20Interface.transferFrom (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#25-27) should be declared external
Owned.transferOwnership (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#50-54) should be declared external
Owned.acceptOwnership (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#54-62) should be declared external
Admined.addAdmin (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#81-86) should be declared external
Admined.removeAdmin (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#86-94) should be declared external
DeveryRegistry.setToken (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#152-154) should be declared external
DeveryRegistry.setFee (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#154-160) should be declared external
DeveryRegistry.addApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#164-176) should be declared external
DeveryRegistry.updateApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#176-186) should be declared external
DeveryRegistry.getApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#186-188) should be declared external
DeveryRegistry.getAppData (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#188-197) should be declared external
DeveryRegistry.appAccountsLength (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#197-198) should be declared external
DeveryRegistry.addBrand (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#202-216) should be declared external
DeveryRegistry.updateBrand (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#216-224) should be declared external
DeveryRegistry.getBrand (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#224-226) should be declared external
DeveryRegistry.getBrandData (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#226-238) should be declared external
DeveryRegistry.brandAccountsLength (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#238-240) should be declared external
DeveryRegistry.addProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#243-262) should be declared external
DeveryRegistry.updateProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#262-275) should be declared external
DeveryRegistry.getProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#275-278) should be declared external
DeveryRegistry.getProductData (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#278-293) should be declared external
DeveryRegistry.productAccountsLength (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#293-294) should be declared external
DeveryRegistry.permissionMarker (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#301-305) should be declared external
DeveryRegistry.addressHash (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#310-312) should be declared external
DeveryRegistry.mark (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#315-333) should be declared external
DeveryRegistry.check (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#338-355) should be declared external
IERC721Receiver.onERC721Received (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#488-491) should be declared external
ERC721Enumerable.tokenOfOwnerByIndex (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#910-916) should be declared external
IERC721Enumerable.tokenOfOwnerByIndex (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#525-526) should be declared external
ERC721Enumerable.tokenByIndex (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#931-935) should be declared external
IERC721Enumerable.tokenByIndex (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#526) should be declared external
ERC721.approve (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#650-661) should be declared external
ERC721.setApprovalForAll (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#678-684) should be declared external
ERC721.safeTransferFrom (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#720-723) should be declared external
DeveryERC721Token.setToken (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1094-1096) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#48-50) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#51) is not in mixedCase
Parameter '_token' of DeveryRegistry.setToken (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#152) is not in mixedCase
Parameter '_feeAccount' of DeveryRegistry.setFee (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#155-158) is not in mixedCase
Parameter '_fee' of DeveryRegistry.setFee (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#158) is not in mixedCase
Parameter '_feeAccount' of DeveryRegistry.addApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#164-165) is not in mixedCase
Parameter '_fee' of DeveryRegistry.addApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#165) is not in mixedCase
Parameter '_feeAccount' of DeveryRegistry.updateApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#178) is not in mixedCase
Parameter '_fee' of DeveryRegistry.updateApp (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#178) is not in mixedCase
Function 'ERC165._registerInterface' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#464-466) is not in mixedCase
Constant 'ERC165._InterfaceId_ERC165' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#436-437) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_data' of ERC721.safeTransferFrom (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#741) is not in mixedCase
Function 'ERC721._exists' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#748-752) is not in mixedCase
Function 'ERC721._isApprovedOrOwner' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#759-771) is not in mixedCase
Function 'ERC721._mint' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#777-788) is not in mixedCase
Function 'ERC721._burn' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#796-802) is not in mixedCase
Function 'ERC721._burn' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#808-812) is not in mixedCase
Function 'ERC721._transferFrom' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#820-831) is not in mixedCase
Function 'ERC721._checkOnERC721Received' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#854-862) is not in mixedCase
Parameter '_data' of ERC721._checkOnERC721Received (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#855) is not in mixedCase
Function 'ERC721._clearApproval' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#868-870) is not in mixedCase
Function 'ERC721Enumerable._mint' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#962-966) is not in mixedCase
Function 'ERC721Enumerable._burn' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#972-981) is not in mixedCase
Function 'ERC721Enumerable._transferFrom' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#948-954) is not in mixedCase
Function 'ERC721Enumerable._tokensOfOwner' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#988-990) is not in mixedCase
Function 'ERC721Enumerable._addTokenToOwnerEnumeration' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#993-996) is not in mixedCase
Function 'ERC721Enumerable._addTokenToAllTokensEnumeration' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#998-1001) is not in mixedCase
Function 'ERC721Enumerable._removeTokenFromOwnerEnumeration' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1014-1035) is not in mixedCase
Function 'ERC721Enumerable._removeTokenFromAllTokensEnumeration' (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1040-1068) is not in mixedCase
Parameter '_token' of DeveryERC721Token.setToken (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1095) is not in mixedCase
Parameter '_deveryRegistryAddress' of DeveryERC721Token.setDeveryRegistryAddress (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1106-1107) is not in mixedCase
Parameter '_productAddress' of DeveryERC721Token.setMaximumMintableQuantity (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1112-1113) is not in mixedCase
Parameter '_quantity' of DeveryERC721Token.setMaximumMintableQuantity (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1113) is not in mixedCase
Parameter '_productAddress' of DeveryERC721Token.claimProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1120) is not in mixedCase
Parameter '_quantity' of DeveryERC721Token.claimProduct (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol#1120-1121) is not in mixedCase
Parameter '_owner' of DeveryERC721Token.getProductsByOwner (/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/11/0x032ef0359eb068d3dddd6e91021c02f397afce5a.sol analyzed (13 contracts), 86 result(s) found