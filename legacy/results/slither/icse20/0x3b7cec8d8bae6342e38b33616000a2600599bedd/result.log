INFO:Slither:Compilation warnings/errors on /unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:260:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^----------------------------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:267:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^----------------------------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:269:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user) &&
                                             ^-------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:305:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^----------------------------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:307:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user) &&
                                             ^-------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:317:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^----------------------------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:322:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^----------------------------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:323:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (!(orders[msg.sender][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
                                                    ^-------------------------------------------------^
/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:223:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function tokenFallback(address _from, uint _value, bytes _data) public { // Deposit ERC223 tokens
                                                       ^---------^

INFO:Detectors:[93m
Reentrancy in GenevExch.trade (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#267-281):
	External calls:
	- tradeBalances(tokenGet,amountGet,tokenGive,amountGive,user,amount) (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#278)
	State variables written after the call(s):
	- orderFills (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#278-279)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in GenevExch.depositToken (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#233-242):
	External calls:
	- ! Token(token).transferFrom(msg.sender,this,amount) (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#238-239)
	State variables written after the call(s):
	- tokens (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#239-240)
Reentrancy in GenevExch.tradeBalances (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#281-299):
	External calls:
	- accountLevel = AccountLevels(accountLevelsAddr).accountLevel(user) (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#289-290)
	State variables written after the call(s):
	- tokens (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#291-292)
	- tokens (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#292-293)
	- tokens (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#293-296)
	- tokens (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#296)
	- tokens (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#296-298)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.decimals should be constant (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#32-36)
Token.name should be constant (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#36)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Token.totalSupply (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#23-24) should be declared external
Token.balanceOf (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#24-25) should be declared external
StandardToken.balanceOf (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#61-65) should be declared external
Token.transfer (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#25-26) should be declared external
StandardToken.transfer (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#42-51) should be declared external
StandardToken.transferFrom (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#51-61) should be declared external
Token.transferFrom (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#26-27) should be declared external
Token.approve (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#27-28) should be declared external
StandardToken.approve (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#65-71) should be declared external
StandardToken.allowance (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#71-80) should be declared external
Token.allowance (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#28-29) should be declared external
ReserveToken.create (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#87-93) should be declared external
ReserveToken.destroy (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#93-103) should be declared external
AccountLevels.accountLevel (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#110-114) should be declared external
AccountLevelsTest.accountLevel (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#125-128) should be declared external
AccountLevelsTest.setAccountLevel (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#118-120) should be declared external
GenevExch.fallback (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#179) should be declared external
GenevExch.changeAdmin (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#180-183) should be declared external
GenevExch.changeAccountLevelsAddr (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#183-188) should be declared external
GenevExch.changeFeeAccount (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#188-192) should be declared external
GenevExch.changeFeeMake (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#192-196) should be declared external
GenevExch.changeFeeTake (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#196-201) should be declared external
GenevExch.changeFeeRebate (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#203-206) should be declared external
GenevExch.setBlackListERC20 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#207-210) should be declared external
GenevExch.setWhiteListERC20 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#210-213) should be declared external
GenevExch.setBlackListERC223 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#213-219) should be declared external
GenevExch.setWhiteListERC223 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#219-220) should be declared external
GenevExch.deposit (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#223-226) should be declared external
GenevExch.tokenFallback (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#226-233) should be declared external
GenevExch.depositToken (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#233-242) should be declared external
GenevExch.withdraw (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#242-248) should be declared external
GenevExch.withdrawToken (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#248-259) should be declared external
GenevExch.balanceOf (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#259-260) should be declared external
GenevExch.order (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#262-267) should be declared external
GenevExch.trade (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#267-281) should be declared external
GenevExch.testTrade (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#299-306) should be declared external
GenevExch.amountFilled (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#321-323) should be declared external
GenevExch.cancelOrder (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#323-328) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol:
	- pragma solidity^0.4.23 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#62) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#42) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#42-43) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#51) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#51-52) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#52) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#65-66) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#66) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#71-72) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#72) is not in mixedCase
Parameter '_token' of GenevExch.setBlackListERC20 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#209) is not in mixedCase
Parameter '_token' of GenevExch.setWhiteListERC20 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#212) is not in mixedCase
Parameter '_token' of GenevExch.setBlackListERC223 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#216-218) is not in mixedCase
Parameter '_token' of GenevExch.setWhiteListERC223 (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#219) is not in mixedCase
Parameter '_from' of GenevExch.tokenFallback (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#226-227) is not in mixedCase
Parameter '_value' of GenevExch.tokenFallback (/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol#227) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/33/0x3b7cec8d8bae6342e38b33616000a2600599bedd.sol analyzed (7 contracts), 59 result(s) found