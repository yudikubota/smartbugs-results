INFO:Slither:Compilation warnings/errors on /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:32:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:61:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BGJC(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:75:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:76:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:77:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:78:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:87:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:95:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:96:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:97:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:98:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:99:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:108:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:109:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:117:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:118:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:126:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:127:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:136:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:30:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:103:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:112:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:121:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:61:5: Warning: No visibility specified. Defaulting to "public". 
    function BGJC(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:74:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:94:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:107:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:116:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:125:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:135:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:141:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:30:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BGJC (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#37-143) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#75-85)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#30-37) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
BGJC.decimals should be constant (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#40-41)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#36:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#75:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#77:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#79:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#119:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#119:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BGJC.transfer (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#75-85) should be declared external
BGJC.approve (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#87-94) should be declared external
BGJC.transferFrom (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#95-108) should be declared external
BGJC.burn (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#108-117) should be declared external
BGJC.freeze (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#117-126) should be declared external
BGJC.unfreeze (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#126-137) should be declared external
BGJC.withdrawEther (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#141-143) should be declared external
BGJC.fallback (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol:
	- pragma solidity^0.4.8 (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BGJC.BGJC' (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#63-74) is not in mixedCase
Parameter '_to' of BGJC.transfer (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#75) is not in mixedCase
Parameter '_value' of BGJC.transfer (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#75) is not in mixedCase
Parameter '_spender' of BGJC.approve (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#87-88) is not in mixedCase
Parameter '_value' of BGJC.approve (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#88) is not in mixedCase
Parameter '_from' of BGJC.transferFrom (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#95) is not in mixedCase
Parameter '_to' of BGJC.transferFrom (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#95) is not in mixedCase
Parameter '_value' of BGJC.transferFrom (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#95) is not in mixedCase
Parameter '_value' of BGJC.burn (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#108) is not in mixedCase
Parameter '_value' of BGJC.freeze (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#117) is not in mixedCase
Parameter '_value' of BGJC.unfreeze (/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol#126-127) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/16/0x4e75b2086338f156f04d6563bec43e46c7f8051b.sol analyzed (2 contracts), 41 result(s) found