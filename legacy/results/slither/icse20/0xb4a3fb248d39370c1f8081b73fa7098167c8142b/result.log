INFO:Slither:Compilation warnings/errors on /unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:32:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSAuth() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:271:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTokenBase(uint supply) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:337:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSToken(bytes32 symbol_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:513:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiLPC(ERC20 ref_, ERC20 alt_, DSValue pip_, DSToken lps_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:601:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LPCWalletReserveWrapper(address walletReserve_, WETH weth_, ERC20 dai_, SaiLPC lpc_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:34:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(msg.sender);
        ^---------------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:42:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(owner);
        ^----------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:50:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetAuthority(authority);
        ^------------------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:184:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);
        ^---------------------------------------------------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:301:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:309:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, guy, wad);
        ^----------------------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:364:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:388:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(guy, wad);
        ^------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:397:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(guy, wad);
        ^------------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:428:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:428:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return bytes4(keccak256(s));
                      ^----------^

INFO:Detectors:[93m
DSMath.mul (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#92-96) uses a dangerous strict equality:
	- require(bool)(y == 0 || (z = x * y) / y == x)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
SaiLPC.pool (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#562-573) does not use the value returned by external calls:
	-gem.transferFrom(msg.sender,this,wad) (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#572)
SaiLPC.exit (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#573-588) does not use the value returned by external calls:
	-gem.transfer(msg.sender,wad) (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#587-588)
SaiLPC.take (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#594-602) does not use the value returned by external calls:
	-pay.transferFrom(msg.sender,this,jam) (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#601)
	-gem.transfer(msg.sender,wad) (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#602)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
DSToken.decimals should be constant (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#345)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DSAuthority.canCall (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#18-23) should be declared external
DSAuth.setOwner (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#38-45) should be declared external
DSAuth.setAuthority (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#45-54) should be declared external
DSStop.stop (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#226-228) should be declared external
DSStop.start (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#228-229) should be declared external
DSTokenBase.totalSupply (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#283-286) should be declared external
ERC20.totalSupply (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#242-243) should be declared external
DSTokenBase.balanceOf (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#286-290) should be declared external
ERC20.balanceOf (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#243-244) should be declared external
ERC20.allowance (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#245-249) should be declared external
DSTokenBase.allowance (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#290-295) should be declared external
DSTokenBase.transfer (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#295-299) should be declared external
ERC20.transfer (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#251-253) should be declared external
DSToken.approve (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#355-358) should be declared external
DSToken.push (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#380-385) should be declared external
DSToken.pull (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#385-387) should be declared external
DSToken.move (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#387-390) should be declared external
DSToken.mint (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#390-391) should be declared external
DSToken.burn (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#391-392) should be declared external
DSToken.setName (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#415-417) should be declared external
DSValue.read (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#475-477) should be declared external
DSValue.poke (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#477-480) should be declared external
DSValue.void (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#480-481) should be declared external
SaiLPC.jump (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#541-546) should be declared external
SaiLPC.pool (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#562-573) should be declared external
SaiLPC.exit (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#573-588) should be declared external
SaiLPC.take (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#594-602) should be declared external
LPCWalletReserveWrapper.switchLPC (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#634-638) should be declared external
LPCWalletReserveWrapper.switchReserve (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#639-642) should be declared external
LPCWalletReserveWrapper.approveToken (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#642-644) should be declared external
LPCWalletReserveWrapper.take (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#649-662) should be declared external
LPCWalletReserveWrapper.withdraw (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol:
	- pragma solidity^0.4.21 (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'DSAuth.DSAuth' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#33-37) is not in mixedCase
Function 'DSTokenBase.DSTokenBase' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#280-283) is not in mixedCase
Variable 'DSTokenBase._supply' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#272-276) is not in mixedCase
Variable 'DSTokenBase._balances' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#276-277) is not in mixedCase
Variable 'DSTokenBase._approvals' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#278-279) is not in mixedCase
Function 'DSToken.DSToken' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#348-350) is not in mixedCase
Function 'DSThing.S' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#440-443) is not in mixedCase
Function 'SaiLPC.SaiLPC' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#534-541) is not in mixedCase
Function 'LPCWalletReserveWrapper.LPCWalletReserveWrapper' (/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol#619-634) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/7/0xb4a3fb248d39370c1f8081b73fa7098167c8142b.sol analyzed (16 contracts), 47 result(s) found