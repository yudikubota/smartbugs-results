INFO:Slither:Compilation warnings/errors on /unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:152:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:217:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LavaWallet(address relayKingContractAddress ) public  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:178:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:239:7: Warning: Invoking events without "emit" prefix is deprecated.
      Deposit(token, from, tokens, balances[token][from]);
      ^-------------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:253:6: Warning: Invoking events without "emit" prefix is deprecated.
     Withdraw(token, msg.sender, tokens, balances[token][msg.sender]);
     ^--------------------------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:266:7: Warning: Invoking events without "emit" prefix is deprecated.
      Withdraw(token, from, tokens, balances[token][from]);
      ^--------------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:280:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, token, spender, tokens);
      ^------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:289:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, token, to, tokens);
        ^-------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:300:8: Warning: Invoking events without "emit" prefix is deprecated.
       Transfer(token, from, to, tokens);
       ^-------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:314:13: Warning: "sha3" has been deprecated in favour of "keccak256"
            sha3(methodname,from,to,this,token,tokens,relayerReward,expires,nonce)
            ^--------------------------------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:314:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            sha3(methodname,from,to,this,token,tokens,relayerReward,expires,nonce)
            ^--------------------------------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:312:33: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 typedDataHash = sha3(
                                ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:312:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 typedDataHash = sha3(
                                ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:343:8: Warning: Invoking events without "emit" prefix is deprecated.
       Approval(from, token, msg.sender, relayerReward);
       ^----------------------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:350:8: Warning: Invoking events without "emit" prefix is deprecated.
       Approval(from, token, to, tokens);
       ^-------------------------------^
/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:455:76: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function receiveApproval(address from, uint256 tokens, address token, bytes data) public returns (bool success) {
                                                                           ^--------^

INFO:Detectors:[93m
ECRecovery.recover (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#10-47) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:
	Contract LavaWallet has payable functions:
	 - fallback (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#229-231)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in LavaWallet.transferTokensFromWithSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#377-394):
	External calls:
	- ! tokenApprovalWithSignature(from,to,token,tokens,relayerReward,expires,sigHash,signature) (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#389-390)
	State variables written after the call(s):
	- allowed (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#391-394)
	- balances (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#391-394)
Reentrancy in LavaWallet.withdrawTokensFromWithSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#396-422):
	External calls:
	- ! tokenApprovalWithSignature(from,to,token,tokens,relayerReward,expires,sigHash,signature) (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#411-414)
	- ! withdrawTokensFrom(from,to,token,tokens) (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#419)
	State variables written after the call(s):
	- allowed (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#419)
	- balances (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#419)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in LavaWallet.depositTokens (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#233-248):
	External calls:
	- ! ERC20Interface(token).transferFrom(from,this,tokens) (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#239-245)
	State variables written after the call(s):
	- balances (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#245-246)
	- depositedTokens (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#246-247)
Reentrancy in LavaWallet.tokenApprovalWithSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#325-363):
	External calls:
	- require(bool)(msg.sender == getRelayingKing() || msg.sender == from || msg.sender == to) (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#338-342)
	State variables written after the call(s):
	- allowed (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#351-356)
	- allowed (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#357)
	- allowed (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#361)
	- balances (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#357)
	- burnedSignatures (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#346-348)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ECRecovery.recover uses assembly (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#10-47)
	- /unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#22-30
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#321-325:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ECRecovery.recover (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#10-47) should be declared external
ERC20Interface.totalSupply (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#105-106) should be declared external
ERC20Interface.balanceOf (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#106-107) should be declared external
ERC20Interface.allowance (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#107-108) should be declared external
ERC20Interface.transfer (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#108-109) should be declared external
ERC20Interface.approve (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#109-111) should be declared external
ERC20Interface.transferFrom (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#111-112) should be declared external
ERC918Interface.totalSupply (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#116-117) should be declared external
ERC918Interface.getMiningDifficulty (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#117-118) should be declared external
ERC918Interface.getMiningTarget (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#118-119) should be declared external
ERC918Interface.getMiningReward (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#119-121) should be declared external
ERC918Interface.balanceOf (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#121-123) should be declared external
ERC918Interface.mint (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#123-127) should be declared external
MiningKingInterface.getKing (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#131-134) should be declared external
MiningKingInterface.transferKing (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#134-136) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#144-149) should be declared external
Owned.transferOwnership (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#176-182) should be declared external
Owned.acceptOwnership (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#182-198) should be declared external
LavaWallet.fallback (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#229-231) should be declared external
LavaWallet.withdrawTokens (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#250-260) should be declared external
LavaWallet.balanceOf (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#278-280) should be declared external
LavaWallet.approveTokens (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#285-288) should be declared external
LavaWallet.transferTokens (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#289-298) should be declared external
LavaWallet.approveTokensWithSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#363-377) should be declared external
LavaWallet.transferTokensFromWithSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#377-394) should be declared external
LavaWallet.withdrawTokensFromWithSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#396-422) should be declared external
LavaWallet.tokenAllowance (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#422-427) should be declared external
LavaWallet.burnSignature (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#427-458) should be declared external
LavaWallet.signatureBurnStatus (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#463-465) should be declared external
LavaWallet.receiveApproval (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#467-468) should be declared external
LavaWallet.approveAndCall (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#476-498) should be declared external
LavaWallet.transferAnyERC20Token (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#509-519) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter 'challenge_digest' of ERC918Interface.mint (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#123) is not in mixedCase
Function 'Owned.Owned' (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#168) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#178) is not in mixedCase
Function 'LavaWallet.LavaWallet' (/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol#228-229) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x69a02e511e027e5c26d2fbe4192e45b41db32819.sol analyzed (8 contracts), 45 result(s) found