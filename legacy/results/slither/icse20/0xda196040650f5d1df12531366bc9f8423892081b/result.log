INFO:Slither:Compilation warnings/errors on /unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:139:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ALLM(address _founder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:73:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:83:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:96:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:201:9: Warning: Invoking events without "emit" prefix is deprecated.
        Buy(msg.sender, msg.value, tokens);
        ^--------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:203:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensSent(msg.sender, tokens);
        ^----------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:204:9: Warning: Invoking events without "emit" prefix is deprecated.
        ContributionReceived(msg.sender, msg.value);
        ^-----------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:205:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, msg.sender, tokens);
        ^---------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:253:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensSent(_to, _value);
        ^---------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:254:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, _to, _value);
        ^--------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:260:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensSent(_to, _value);
        ^---------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:261:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, _to, _value);
        ^--------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:268:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensSent(_to, _value);
        ^---------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:269:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, _to, _value);
        ^--------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:281:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(owner, balances[owner]);
        ^--------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:6:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:8:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:9:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:70:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:77:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:87:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:91:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:100:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function ALLM(address _founder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:150:5: Warning: No visibility specified. Defaulting to "public". 
    function price() constant returns (uint){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:210:5: Warning: No visibility specified. Defaulting to "public". 
    function PreTgeEnable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:214:5: Warning: No visibility specified. Defaulting to "public". 
    function PreTgeDisable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:218:5: Warning: No visibility specified. Defaulting to "public". 
    function StageOneEnable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:222:5: Warning: No visibility specified. Defaulting to "public". 
    function StageOneDisable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:226:5: Warning: No visibility specified. Defaulting to "public". 
    function StageTwoEnable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:230:5: Warning: No visibility specified. Defaulting to "public". 
    function StageTwoDisable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:234:5: Warning: No visibility specified. Defaulting to "public". 
    function StageThreeEnable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:238:5: Warning: No visibility specified. Defaulting to "public". 
    function StageThreeDisable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:242:5: Warning: No visibility specified. Defaulting to "public". 
    function EventEmergencyStop() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:246:5: Warning: No visibility specified. Defaulting to "public". 
    function EventEmergencyContinue() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:250:5: Warning: No visibility specified. Defaulting to "public". 
    function sendTeamTokens(address _to, uint256 _value) onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:257:5: Warning: No visibility specified. Defaulting to "public". 
    function sendBounty(address _to, uint256 _value) onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:265:5: Warning: No visibility specified. Defaulting to "public". 
    function sendSupplyTokens(address _to, uint256 _value) onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:272:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) isAvailable() returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:276:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) isAvailable() returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:280:5: Warning: No visibility specified. Defaulting to "public". 
    function burnRemainingTokens() isAvailable() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:295:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:299:5: Warning: No visibility specified. Defaulting to "public". 
    function freeze() onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:303:6: Warning: No visibility specified. Defaulting to "public". 
     function unFreeze() onlyOwner() {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:307:5: Warning: No visibility specified. Defaulting to "public". 
    function changeOwner(address _to) onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:313:5: Warning: No visibility specified. Defaulting to "public". 
    function changeFounder(address _to) onlyOwner() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:16:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:22:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:29:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:34:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:40:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:44:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:48:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:52:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:66:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:150:5: Warning: Function state mutability can be restricted to pure
    function price() constant returns (uint){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
ALLM.decimals should be constant (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#114-115)
ALLM.name should be constant (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#112-113)
ALLM.preTgeCap should be constant (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#130-131)
ALLM.symbol should be constant (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#113-114)
ALLM.team should be constant (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#127-129)
ALLM.tgeCap should be constant (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#131-133)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#88-93) should be declared external
ERC20.balanceOf (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#5-6) should be declared external
StandardToken.allowance (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#101-109) should be declared external
ERC20.allowance (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#6-8) should be declared external
ERC20.approve (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#10-11) should be declared external
StandardToken.approve (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#93-101) should be declared external
StandardToken.isToken (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#67-70) should be declared external
ALLM.PreTgeEnable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#219-223) should be declared external
ALLM.PreTgeDisable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#223-227) should be declared external
ALLM.StageOneEnable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#227-231) should be declared external
ALLM.StageOneDisable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#231-235) should be declared external
ALLM.StageTwoEnable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#236-239) should be declared external
ALLM.StageTwoDisable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#240-243) should be declared external
ALLM.StageThreeEnable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#244-247) should be declared external
ALLM.StageThreeDisable (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#248-251) should be declared external
ALLM.EventEmergencyStop (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#251-252) should be declared external
ALLM.EventEmergencyContinue (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#252-254) should be declared external
ALLM.sendTeamTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#254-265) should be declared external
ALLM.sendBounty (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#265-269) should be declared external
ALLM.sendSupplyTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#272-277) should be declared external
ALLM.burnRemainingTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#291-302) should be declared external
ALLM.fallback (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#309-313) should be declared external
ALLM.freeze (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#313-314) should be declared external
ALLM.unFreeze (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#314-317) should be declared external
ALLM.changeOwner (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol) should be declared external
ALLM.changeFounder (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol:
	- pragma solidity^0.4.13 (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#91) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#101-104) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#105-106) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#71) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#71) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#78) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#78) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#78) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#93) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#93) is not in mixedCase
Parameter '_to' of ALLM.transfer (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#277) is not in mixedCase
Parameter '_value' of ALLM.transfer (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#278-280) is not in mixedCase
Parameter '_from' of ALLM.transferFrom (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#283-285) is not in mixedCase
Parameter '_to' of ALLM.transferFrom (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#285) is not in mixedCase
Parameter '_value' of ALLM.transferFrom (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#285-286) is not in mixedCase
Function 'ALLM.ALLM' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#144-156) is not in mixedCase
Parameter '_founder' of ALLM.ALLM (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#144) is not in mixedCase
Function 'ALLM.PreTgeEnable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#219-223) is not in mixedCase
Function 'ALLM.PreTgeDisable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#223-227) is not in mixedCase
Function 'ALLM.StageOneEnable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#227-231) is not in mixedCase
Function 'ALLM.StageOneDisable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#231-235) is not in mixedCase
Function 'ALLM.StageTwoEnable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#236-239) is not in mixedCase
Function 'ALLM.StageTwoDisable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#240-243) is not in mixedCase
Function 'ALLM.StageThreeEnable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#244-247) is not in mixedCase
Function 'ALLM.StageThreeDisable' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#248-251) is not in mixedCase
Function 'ALLM.EventEmergencyStop' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#251-252) is not in mixedCase
Function 'ALLM.EventEmergencyContinue' (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#252-254) is not in mixedCase
Parameter '_to' of ALLM.sendTeamTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#257) is not in mixedCase
Parameter '_value' of ALLM.sendTeamTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#257) is not in mixedCase
Parameter '_to' of ALLM.sendBounty (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#265) is not in mixedCase
Parameter '_value' of ALLM.sendBounty (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#265) is not in mixedCase
Parameter '_to' of ALLM.sendSupplyTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#272) is not in mixedCase
Parameter '_value' of ALLM.sendSupplyTokens (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol#272) is not in mixedCase
Parameter '_to' of ALLM.changeOwner (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol) is not in mixedCase
Parameter '_to' of ALLM.changeFounder (/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/15/0xda196040650f5d1df12531366bc9f8423892081b.sol analyzed (4 contracts), 63 result(s) found