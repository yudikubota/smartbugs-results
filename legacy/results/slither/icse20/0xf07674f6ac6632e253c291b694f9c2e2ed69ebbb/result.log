INFO:Slither:Compilation warnings/errors on /unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:35:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSAuth() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:118:9: Warning: Use of the "var" keyword is deprecated.
        var src = bytes32(src_);
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:119:9: Warning: Use of the "var" keyword is deprecated.
        var dst = bytes32(dst_);
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:239:13: Warning: Use of the "var" keyword is deprecated.
            var has_roles = getUserRoles(caller);
            ^-----------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:240:13: Warning: Use of the "var" keyword is deprecated.
            var needs_one_of = getCapabilityRoles(code, sig);
            ^--------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:260:9: Warning: Use of the "var" keyword is deprecated.
        var last_roles = _user_roles[who];
        ^------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:280:9: Warning: Use of the "var" keyword is deprecated.
        var last_roles = _capability_roles[code][sig];
        ^------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:549:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTokenBase(uint supply) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:622:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSToken(bytes32 symbol_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:722:14: Warning: Use of the "var" keyword is deprecated.
        var (wut, haz) = peek();
             ^-^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:722:19: Warning: Use of the "var" keyword is deprecated.
        var (wut, haz) = peek();
                  ^-^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:767:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiVox(uint par_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:799:9: Warning: Use of the "var" keyword is deprecated.
        var age = era() - tau;
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:806:9: Warning: Use of the "var" keyword is deprecated.
        var wag = int128(how * age);
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:923:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiTub(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1034:9: Warning: Use of the "var" keyword is deprecated.
        var rho_ = era();
        ^------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1035:9: Warning: Use of the "var" keyword is deprecated.
        var age = rho_ - rho;
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1039:9: Warning: Use of the "var" keyword is deprecated.
        var inc = RAY;
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1042:13: Warning: Use of the "var" keyword is deprecated.
            var _chi_ = _chi;
            ^-------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1062:9: Warning: Use of the "var" keyword is deprecated.
        var pro = rmul(tag(), ink(cup));
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1063:9: Warning: Use of the "var" keyword is deprecated.
        var con = rmul(vox.par(), tab(cup));
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1064:9: Warning: Use of the "var" keyword is deprecated.
        var min = rmul(con, mat);
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1115:9: Warning: Use of the "var" keyword is deprecated.
        var owe = rmul(wad, rdiv(rap(cup), tab(cup)));
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1123:14: Warning: Use of the "var" keyword is deprecated.
        var (val, ok) = pep.peek();
             ^-^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1123:19: Warning: Use of the "var" keyword is deprecated.
        var (val, ok) = pep.peek();
                  ^^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1139:9: Warning: Use of the "var" keyword is deprecated.
        var rue = tab(cup);
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1146:9: Warning: Use of the "var" keyword is deprecated.
        var owe = rdiv(rmul(rmul(rue, axe), vox.par()), tag());
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1222:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiTap(SaiTub tub_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1241:9: Warning: Use of the "var" keyword is deprecated.
        var wad = min(joy(), woe());
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1248:9: Warning: Use of the "var" keyword is deprecated.
        var tag = tub.tag();    // ref per skr
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1249:9: Warning: Use of the "var" keyword is deprecated.
        var par = vox.par();    // ref per sai
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1349:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiTop(SaiTub tub_, SaiTap tap_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1397:9: Warning: Use of the "var" keyword is deprecated.
        var empty = tub.din() == 0 && tap.fog() == 0;
        ^-------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1398:9: Warning: Use of the "var" keyword is deprecated.
        var ended = era() > caged + cooldown;
        ^-------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1440:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiMom(SaiTub tub_, SaiTap tap_, SaiVox vox_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1452:9: Warning: Use of the "var" keyword is deprecated.
        var axe = tub.axe();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1453:9: Warning: Use of the "var" keyword is deprecated.
        var mat = tub.mat();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1459:9: Warning: Use of the "var" keyword is deprecated.
        var tax = tub.tax();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1466:9: Warning: Use of the "var" keyword is deprecated.
        var fee = tub.fee();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1473:9: Warning: Use of the "var" keyword is deprecated.
        var axe = tub.axe();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1474:9: Warning: Use of the "var" keyword is deprecated.
        var mat = tub.mat();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1496:9: Warning: Use of the "var" keyword is deprecated.
        var gap = tap.gap();
        ^-----^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1594:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DaiFab(GemFab gemFab_, VoxFab voxFab_, TubFab tubFab_, TapFab tapFab_, TopFab topFab_, MomFab momFab_, DadFab dadFab_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:37:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(msg.sender);
        ^---------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:45:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(owner);
        ^----------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:53:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetAuthority(authority);
        ^------------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:133:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogPermit(src, dst, sig);
        ^----------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:138:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogForbid(src, dst, sig);
        ^----------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:329:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);
        ^---------------------------------------------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:448:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:448:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:579:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:587:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, guy, wad);
        ^----------------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:649:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:673:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(guy, wad);
        ^------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:682:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(guy, wad);
        ^------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1076:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNewCup(msg.sender, cup);
        ^------------------------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1636:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:1636:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return bytes4(keccak256(s));
                      ^----------^

INFO:Detectors:[93m
Reentrancy in SaiTub.bite (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1176-1187):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1177)
	- rue = tab(cup) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1179)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1179)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1179)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1179)
Reentrancy in SaiTub.bite (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1176-1187):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1177)
	- rue = tab(cup) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1179)
	- sin.mint(tap,rue) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1180)
	State variables written after the call(s):
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1181)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1181)
	- rum (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1180)
Reentrancy in SaiTub.bite (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1176-1187):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1177)
	- rue = tab(cup) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1179)
	- sin.mint(tap,rue) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1180)
	- owe = rdiv(rmul(rmul(rue,axe),vox.par()),tag()) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1184-1185)
	- skr.push(tap,owe) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1186)
	State variables written after the call(s):
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1186-1187)
Reentrancy in DaiFab.configAuth (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1732-1740):
	External calls:
	- mom = momFab.newMom(tub,tap,vox) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1735)
	- dad = dadFab.newDad() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1736-1737)
	- vox.setAuthority(dad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1738-1740)
	- vox.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- tub.setAuthority(dad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- tub.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- tap.setAuthority(dad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- tap.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- sai.setAuthority(dad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- sai.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- sin.setAuthority(dad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- sin.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- skr.setAuthority(dad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- skr.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- top.setAuthority(authority) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- top.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- mom.setAuthority(authority) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- mom.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(top,tub,S(cage(uint256,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(top,tub,S(flow())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(top,tap,S(cage(uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tub,skr,S(mint(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tub,skr,S(burn(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tub,sai,S(mint(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tub,sai,S(burn(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tub,sin,S(mint(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,sai,S(mint(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,sai,S(burn(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,sai,S(burn(uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,sin,S(burn(uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,skr,S(mint(uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,skr,S(burn(uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(tap,skr,S(burn(address,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,vox,S(mold(bytes32,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,vox,S(tune(uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,tub,S(mold(bytes32,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,tap,S(mold(bytes32,uint256))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,tub,S(setPip(address))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,tub,S(setPep(address))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.permit(mom,tub,S(setVox(address))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	- dad.setOwner(0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
	State variables written after the call(s):
	- step (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol)
Reentrancy in DaiFab.configParams (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1708-1718):
	External calls:
	- tub.mold(cap,0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1709-1710)
	- tub.mold(mat,ray(1500000000000000000)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1710-1712)
	- tub.mold(axe,ray(1129999999999999872)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1712)
	- tub.mold(fee,1000000000158153903837946257) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1713)
	- tub.mold(tax,ray(1000000000000000000)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1715)
	- tub.mold(gap,1000000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1716)
	- tap.mold(gap,970000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1716-1718)
	State variables written after the call(s):
	- step (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1718)
Reentrancy in SaiTub.draw (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1131-1146):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1136-1138)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
Reentrancy in SaiTub.draw (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1131-1146):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1136-1138)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
	- rum (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
Reentrancy in SaiTub.draw (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1131-1146):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1136-1138)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
	- cups[cup].ire = add(cups[cup].ire,rdiv(wad,rhi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1141-1143)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1141-1143)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1141-1143)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1141-1143)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1141-1143)
Reentrancy in SaiTub.draw (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1131-1146):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1136-1138)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1138-1140)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1140-1141)
	- cups[cup].ire = add(cups[cup].ire,rdiv(wad,rhi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1141-1143)
	- sai.mint(cups[cup].lad,wad) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1145)
	- require(bool)(safe(cup)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1145)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1145)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1145)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1145)
Reentrancy in DaiFab.makeTapTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1684-1691):
	External calls:
	- tap = tapFab.newTap(tub) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1687)
	- tub.turn(tap) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1687-1688)
	- top = topFab.newTop(tub,tap) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1688-1690)
	State variables written after the call(s):
	- step (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1690-1691)
Reentrancy in DaiFab.makeTokens (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1656-1670):
	External calls:
	- sai = gemFab.newTok(DAI) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1658-1660)
	- sin = gemFab.newTok(SIN) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1660-1662)
	- skr = gemFab.newTok(PETH) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1665)
	- sai.setName(Dai Stablecoin v1.0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1665-1668)
	- sin.setName(SIN) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1668)
	- skr.setName(Pooled Ether) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1669)
	State variables written after the call(s):
	- step (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1669)
Reentrancy in DaiFab.makeVoxTub (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1670-1683):
	External calls:
	- vox = voxFab.newVox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1677-1678)
	- tub = tubFab.newTub(sai,sin,skr,gem,gov,pip,pep,vox,pit) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1678-1683)
	State variables written after the call(s):
	- step (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1683)
Reentrancy in SaiTub.mold (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#990-1005):
	External calls:
	- drip() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#998)
	State variables written after the call(s):
	- tax (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#998)
Reentrancy in SaiTub.mold (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#990-1005):
	External calls:
	- drip() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1000)
	State variables written after the call(s):
	- fee (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1000-1001)
Reentrancy in SaiTub.shut (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1165-1176):
	External calls:
	- tab(cup) != 0 (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- wipe(cup,tab(cup)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- rum (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
Reentrancy in SaiTub.shut (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1165-1176):
	External calls:
	- tab(cup) != 0 (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- wipe(cup,tab(cup)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1173)
	- free(cup,ink(cup)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1175)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1175)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1175)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1175)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1175-1176)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1175)
Reentrancy in DaiFab.verifyParams (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1718-1732):
	External calls:
	- require(bool)(tub.cap() == 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1721)
	- require(bool)(tub.mat() == 1500000000000000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1721-1722)
	- require(bool)(tub.axe() == 1130000000000000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1722-1723)
	- require(bool)(tub.fee() == 1000000000158153903837946257) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1725-1726)
	- require(bool)(tub.tax() == 1000000000000000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1726-1727)
	- require(bool)(tub.gap() == 1000000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1727-1729)
	- require(bool)(tap.gap() == 970000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1729-1730)
	- require(bool)(vox.par() == 1000000000000000000000000000) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1730-1731)
	- require(bool)(vox.how() == 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1731)
	State variables written after the call(s):
	- step (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1732)
Reentrancy in SaiTub.wipe (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1146-1164):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1150-1153)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
Reentrancy in SaiTub.wipe (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1146-1164):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1150-1153)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
	- rum = sub(rum,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1156)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1156)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1156)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1156)
	- rum (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1156)
Reentrancy in SaiTub.wipe (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1146-1164):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1150-1153)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1153-1156)
	- rum = sub(rum,rdiv(wad,chi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1156)
	- cups[cup].ire = sub(cups[cup].ire,rdiv(add(wad,owe),rhi())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1158-1159)
	State variables written after the call(s):
	- _chi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1158-1159)
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1158-1159)
	- cups (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1158-1159)
	- rho (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1158-1159)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SaiTub.safe.min (local variable @ /unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1098) shadows:
	- DSMath.min (function @ /unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#373-378)
DaiFab.configAuth.authority (local variable @ /unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1732-1733) shadows:
	- DSAuth.authority (state variable @ /unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#32-33)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in SaiTap.SaiTap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1267-1273):
	External calls:
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1269)
	- sin = tub.sin() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1270-1271)
	State variables written after the call(s):
	- sin (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1270-1271)
Reentrancy in SaiTap.SaiTap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1267-1273):
	External calls:
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1269)
	- sin = tub.sin() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1270-1271)
	- skr = tub.skr() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1271)
	State variables written after the call(s):
	- skr (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1271)
Reentrancy in SaiTap.SaiTap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1267-1273):
	External calls:
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1269)
	- sin = tub.sin() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1270-1271)
	- skr = tub.skr() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1271)
	- vox = tub.vox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1272-1273)
	State variables written after the call(s):
	- gap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1273)
	- vox (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1272-1273)
Reentrancy in SaiTop.SaiTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1391-1398):
	External calls:
	- vox = tub.vox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1395-1396)
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1396-1397)
	State variables written after the call(s):
	- sai (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1396-1397)
Reentrancy in SaiTop.SaiTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1391-1398):
	External calls:
	- vox = tub.vox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1395-1396)
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1396-1397)
	- sin = tub.sin() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
	State variables written after the call(s):
	- sin (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
Reentrancy in SaiTop.SaiTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1391-1398):
	External calls:
	- vox = tub.vox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1395-1396)
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1396-1397)
	- sin = tub.sin() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
	- skr = tub.skr() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
	State variables written after the call(s):
	- skr (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
Reentrancy in SaiTop.SaiTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1391-1398):
	External calls:
	- vox = tub.vox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1395-1396)
	- sai = tub.sai() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1396-1397)
	- sin = tub.sin() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
	- skr = tub.skr() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1397)
	- gem = tub.gem() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1398)
	State variables written after the call(s):
	- gem (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1398)
Reentrancy in SaiTop.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1413-1430):
	External calls:
	- require(bool)(! tub.off() && price != 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1414-1415)
	State variables written after the call(s):
	- caged (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1415)
Reentrancy in SaiTop.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1413-1430):
	External calls:
	- require(bool)(! tub.off() && price != 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1414-1415)
	- tub.drip() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1415-1416)
	- tap.heal() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1416)
	- fit = rmul(wmul(price,vox.par()),tub.per()) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1417-1418)
	State variables written after the call(s):
	- fit (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1417-1418)
Reentrancy in SaiTop.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1413-1430):
	External calls:
	- require(bool)(! tub.off() && price != 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1414-1415)
	- tub.drip() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1415-1416)
	- tap.heal() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1416)
	- fit = rmul(wmul(price,vox.par()),tub.per()) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1417-1418)
	- sai.totalSupply() == 0 (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1421-1425)
	State variables written after the call(s):
	- fix (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1422)
Reentrancy in SaiTop.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1413-1430):
	External calls:
	- require(bool)(! tub.off() && price != 0) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1414-1415)
	- tub.drip() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1415-1416)
	- tap.heal() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1416)
	- fit = rmul(wmul(price,vox.par()),tub.per()) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1417-1418)
	- fix = min(rdiv(WAD,price),rdiv(tub.pie(),sai.totalSupply())) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1423-1425)
	State variables written after the call(s):
	- fix (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1423-1425)
Reentrancy in DaiFab.configAuth (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1732-1740):
	External calls:
	- mom = momFab.newMom(tub,tap,vox) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1735)
	- dad = dadFab.newDad() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1736-1737)
	State variables written after the call(s):
	- dad (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1736-1737)
Reentrancy in SaiTub.drip (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1065-1086):
	External calls:
	- sai.mint(tap,rmul(sub(_chi,_chi_),rum)) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1079-1080)
	State variables written after the call(s):
	- _rhi (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1085-1086)
Reentrancy in DaiFab.makeTapTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1684-1691):
	External calls:
	- tap = tapFab.newTap(tub) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1687)
	- tub.turn(tap) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1687-1688)
	- top = topFab.newTop(tub,tap) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1688-1690)
	State variables written after the call(s):
	- top (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1688-1690)
Reentrancy in DaiFab.makeTokens (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1656-1670):
	External calls:
	- sai = gemFab.newTok(DAI) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1658-1660)
	- sin = gemFab.newTok(SIN) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1660-1662)
	State variables written after the call(s):
	- sin (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1660-1662)
Reentrancy in DaiFab.makeTokens (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1656-1670):
	External calls:
	- sai = gemFab.newTok(DAI) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1658-1660)
	- sin = gemFab.newTok(SIN) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1660-1662)
	- skr = gemFab.newTok(PETH) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1665)
	State variables written after the call(s):
	- skr (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1665)
Reentrancy in DaiFab.makeVoxTub (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1670-1683):
	External calls:
	- vox = voxFab.newVox() (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1677-1678)
	- tub = tubFab.newTub(sai,sin,skr,gem,gov,pip,pep,vox,pit) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1678-1683)
	State variables written after the call(s):
	- tub (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1678-1683)
Reentrancy in DSGuardFactory.newGuard (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#157-165):
	External calls:
	- guard.setOwner(msg.sender) (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#163)
	State variables written after the call(s):
	- isGuard (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#165)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSToken.decimals should be constant (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#640-642)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DSRoles.canCall (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#239-253) should be declared external
DSAuthority.canCall (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#22-26) should be declared external
DSGuard.canCall (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#118-133) should be declared external
DSAuth.setOwner (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#41-48) should be declared external
DSAuth.setAuthority (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#49-57) should be declared external
DSGuard.permit (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#144-150) should be declared external
DSGuard.forbid (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#150-154) should be declared external
DSGuardFactory.newGuard (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#157-165) should be declared external
DSRoles.hasUserRole (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#228-238) should be declared external
DSRoles.setRootUser (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#260-263) should be declared external
DSRoles.setUserRole (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#263-278) should be declared external
DSRoles.setPublicCapability (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#278-283) should be declared external
DSRoles.setRoleCapability (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#283-297) should be declared external
DSStop.stop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#502-505) should be declared external
DSStop.start (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#505-506) should be declared external
DSTokenBase.totalSupply (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#572-573) should be declared external
ERC20.totalSupply (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#524-526) should be declared external
ERC20.balanceOf (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#526) should be declared external
DSTokenBase.balanceOf (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#573-577) should be declared external
DSTokenBase.allowance (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#577-584) should be declared external
ERC20.allowance (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#527-528) should be declared external
DSTokenBase.transfer (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#584-589) should be declared external
ERC20.transfer (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#529-531) should be declared external
DSToken.approve (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#647-654) should be declared external
DSToken.push (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#675-676) should be declared external
DSToken.pull (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#676-677) should be declared external
DSToken.move (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#678-682) should be declared external
DSToken.mint (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#682-686) should be declared external
DSToken.burn (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#688-689) should be declared external
DSToken.setName (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#706-708) should be declared external
DSValue.read (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#744-747) should be declared external
DSValue.poke (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#747-749) should be declared external
DSValue.void (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#749-750) should be declared external
SaiVox.mold (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#807-810) should be declared external
SaiVox.par (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#812-814) should be declared external
SaiVox.way (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#814-816) should be declared external
SaiVox.tell (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#816-821) should be declared external
SaiVox.tune (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#821-823) should be declared external
SaiTub.lad (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#926-930) should be declared external
SaiTub.din (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#953-959) should be declared external
SaiTub.air (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#959-963) should be declared external
SaiTub.mold (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#990-1005) should be declared external
SaiTub.setPip (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1008-1010) should be declared external
SaiTub.setPep (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1010-1012) should be declared external
SaiTub.setVox (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1012-1015) should be declared external
SaiTub.turn (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1017-1022) should be declared external
SaiTub.join (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1045-1054) should be declared external
SaiTub.exit (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1054-1058) should be declared external
SaiTub.open (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1103-1109) should be declared external
SaiTub.give (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1109-1115) should be declared external
SaiTub.lock (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1115-1123) should be declared external
SaiTub.draw (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1131-1146) should be declared external
SaiTub.shut (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1165-1176) should be declared external
SaiTub.bite (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1176-1187) should be declared external
SaiTub.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1190-1201) should be declared external
SaiTub.flow (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1201-1205) should be declared external
SaiTap.mold (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1274-1278) should be declared external
SaiTap.bust (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1318-1321) should be declared external
SaiTap.boom (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1322-1323) should be declared external
SaiTap.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1324-1327) should be declared external
SaiTap.cash (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1327-1336) should be declared external
SaiTap.mock (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1336-1344) should be declared external
SaiTap.vent (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1344-1346) should be declared external
SaiTop.cage (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1432-1437) should be declared external
SaiTop.flow (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1437-1446) should be declared external
SaiTop.setCooldown (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1446-1450) should be declared external
SaiMom.setCap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1494-1497) should be declared external
SaiMom.setMat (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1498-1502) should be declared external
SaiMom.setTax (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1503-1514) should be declared external
SaiMom.setFee (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1514-1523) should be declared external
SaiMom.setAxe (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1523-1531) should be declared external
SaiMom.setTubGap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1532-1537) should be declared external
SaiMom.setPip (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1537) should be declared external
SaiMom.setPep (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1538-1539) should be declared external
SaiMom.setVox (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1541-1544) should be declared external
SaiMom.setTapGap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1545-1553) should be declared external
SaiMom.setWay (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1558-1565) should be declared external
SaiMom.setHow (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1565-1567) should be declared external
GemFab.newTok (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1582-1590) should be declared external
VoxFab.newVox (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1592-1594) should be declared external
TubFab.newTub (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1595-1606) should be declared external
TapFab.newTap (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1607-1611) should be declared external
TopFab.newTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1612-1616) should be declared external
MomFab.newMom (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1617-1622) should be declared external
DadFab.newDad (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1623-1627) should be declared external
DaiFab.makeTokens (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1656-1670) should be declared external
DaiFab.makeVoxTub (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1670-1683) should be declared external
DaiFab.makeTapTop (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1684-1691) should be declared external
DaiFab.configParams (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1708-1718) should be declared external
DaiFab.verifyParams (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1718-1732) should be declared external
DaiFab.configAuth (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1732-1740) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol:
	- pragma solidity^0.4.18 (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#2-3): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'DSAuth.DSAuth' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#36-40) is not in mixedCase
Function 'DSRoles.BITNOT' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#253-260) is not in mixedCase
Variable 'DSRoles._root_users' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#187-189) is not in mixedCase
Variable 'DSRoles._user_roles' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#189-190) is not in mixedCase
Variable 'DSRoles._capability_roles' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#191-194) is not in mixedCase
Variable 'DSRoles._public_capabilities' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#194-197) is not in mixedCase
Function 'DSThing.S' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#460-463) is not in mixedCase
Function 'DSTokenBase.DSTokenBase' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#566-572) is not in mixedCase
Variable 'DSTokenBase._supply' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#560-561) is not in mixedCase
Variable 'DSTokenBase._balances' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#561-564) is not in mixedCase
Variable 'DSTokenBase._approvals' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#564-565) is not in mixedCase
Function 'DSToken.DSToken' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#643-644) is not in mixedCase
Function 'SaiVox.SaiVox' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#800-805) is not in mixedCase
Variable 'SaiVox._par' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#794-795) is not in mixedCase
Variable 'SaiVox._way' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#795-798) is not in mixedCase
Function 'SaiTub.SaiTub' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#967-984) is not in mixedCase
Variable 'SaiTub._chi' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#905) is not in mixedCase
Variable 'SaiTub._rhi' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#909) is not in mixedCase
Function 'SaiTap.SaiTap' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1267-1273) is not in mixedCase
Function 'SaiTop.SaiTop' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1391-1398) is not in mixedCase
Function 'SaiMom.SaiMom' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1488-1494) is not in mixedCase
Function 'DaiFab.DaiFab' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1646-1656) is not in mixedCase
Function 'DaiFab.S' (/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol#1691-1695) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/26/0xf07674f6ac6632e253c291b694f9c2e2ed69ebbb.sol analyzed (30 contracts), 156 result(s) found