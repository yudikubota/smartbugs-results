INFO:Slither:Compilation warnings/errors on /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:87:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:335:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:383:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < milestones.p1) throw;
                                 ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:384:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= milestones.p6) throw;
                                  ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:385:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:388:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (getTotalValue() + msg.value > SAFETY_LIMIT) throw; 
                                                        ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:396:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!wallet.send(msg.value)) throw;
                                     ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:598:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:613:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (etherPrice == 0) throw;
                             ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:626:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!msg.sender.send(retEther)) throw;
                                            ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:675:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress == 0x0) throw;
                                           ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:709:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != virtualExchangeAddress) throw;
                                                ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:806:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ableToIssueTokens) throw;
                               ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:809:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(this) > 0) throw;
                                 ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:812:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:816:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (requestValue > PROPOSAL_FUNDS_TH * percent) throw;
                                                        ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:855:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:859:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (timeOfLastProposal + 2 weeks)) throw;
                                                  ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:866:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            requestValue     >  PROPOSAL_FUNDS_TH * percent) throw;
                                                             ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:906:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:909:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:912:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= proposals[id].votindEndTS) throw;
                                              ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:915:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].voted[msg.sender]) throw;
                                             ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:948:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].id == 0) throw;
                                   ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:949:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].submitter != msg.sender) throw;
                                                   ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:952:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < proposals[id].votindEndTS) throw;
                                             ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:956:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].redeemed) throw;
                                    ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:960:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proposals[id].votesObjecting  > objectionThreshold) throw;
                                                                ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:997:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1020:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1025:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < (eventInfo.getEventEnd() + 12 weeks)) throw;
                                                        ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1030:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            lastImpeachmentProposal.votindEndTS +  2 weeks > now) throw;
                                                                  ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1052:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.newExecutive == 0x0) throw;
                                                         ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1056:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (votingRights[msg.sender] == 0) throw;
                                           ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1059:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.voted[msg.sender]) throw;
                                                       ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1062:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lastImpeachmentProposal.votindEndTS + 2 weeks <= now) throw;
                                                                  ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1098:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (virtualExchangeAddress != 0x0) throw;
                                           ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1177:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                throw;
                ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1189:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1484611200) throw;
                              ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1192:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1201:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1484611200) throw;
                              ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1204:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1214:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now > 1484611200) throw;
                              ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1217:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                                                                      ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1231:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyBeforeEnd() { if (now  >=  eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1232:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterEnd()  { if (now  <   eventInfo.getEventEnd()) throw; _; }
                                                                     ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1234:81: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyAfterTradingStart()  { if (now  < eventInfo.getTradingStart()) throw; _; }
                                                                                ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1236:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyExecutive()     { if (msg.sender != executive) throw; _; }
                                                                ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1238:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyIfAbleToIssueTokens()  { if (!ableToIssueTokens) throw; _; } 
                                                                  ^---^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:57:46: Warning: This declaration shadows an existing declaration.
    function totalSupply() constant returns (uint256 totalSupply){
                                             ^-----------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:57:5: The shadowed declaration is here:
    function totalSupply() constant returns (uint256 totalSupply){
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:110:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, to, value);
            ^-----------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:148:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(from, to, value);
            ^-----------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:193:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, value);
        ^----------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:353:18: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        balances[0x342e62732b76875da9305083ea8ae63125a4e667] = 16110893000;
                 ^----------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:638:9: Warning: Invoking events without "emit" prefix is deprecated.
        BuyForEtherTransaction(msg.sender, collectedEther, totalSupplyVar, etherPrice, tokens);
        ^------------------------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:653:10: Warning: Invoking events without "emit" prefix is deprecated.
         PriceHKGChange(qtyForOneHKG, preferedQtySold, totalSupplyVar);
         ^-----------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:687:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(this, virtualExchangeAddress, qtyToEmit);
        ^-----------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:690:9: Warning: Invoking events without "emit" prefix is deprecated.
        DstTokensIssued(hkgPrice, preferedQtySold, totalSupplyVar, qtyToEmit);
        ^-------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:727:7: Warning: Invoking events without "emit" prefix is deprecated.
      BuyForHKGTransaction(sender, preferedQtySold, totalSupplyVar, hkgPrice, tokensQty);
      ^--------------------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:752:10: Warning: Invoking events without "emit" prefix is deprecated.
         DstTokensIssued(qtyForOneEther, totalSupplyVar, totalSupplyVar, qtyToEmit);
         ^------------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:766:10: Warning: Invoking events without "emit" prefix is deprecated.
         NewEtherPrice(qtyForOneEther);
         ^---------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:778:9: Warning: Invoking events without "emit" prefix is deprecated.
        DisableTokenIssuance();
        ^--------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:792:9: Warning: Invoking events without "emit" prefix is deprecated.
        BurnedAllRemainedTokens();
        ^-----------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:819:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (requestValue > this.balance) 
                           ^----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:820:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            requestValue = this.balance;    
                           ^----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:824:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:824:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:832:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:876:22: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:876:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 id = sha3(msg.data, now);
                     ^-----------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:886:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProposalRequestSubmitted(id, requestValue, timeEnds, url, msg.sender);
        ^-------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:927:10: Warning: Invoking events without "emit" prefix is deprecated.
         ObjectedVote(id, msg.sender, votes);         
         ^---------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:974:12: Warning: Invoking events without "emit" prefix is deprecated.
           EtherRedeemAccepted(proposals[id].submitter, proposals[id].value);                              
           ^---------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1001:40: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        bool success = msg.sender.send(this.balance);        
                                       ^----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1040:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentProposed(msg.sender, urlDetails, now + 2 weeks, newExecutive);
        ^----------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1069:9: Warning: Invoking events without "emit" prefix is deprecated.
        ImpeachmentSupport(msg.sender, votingRights[msg.sender]);
        ^------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1078:13: Warning: Invoking events without "emit" prefix is deprecated.
            ImpeachmentAccepted(executive);
            ^----------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1107:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1192:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1204:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1217:27: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x342E62732b76875da9305083eA8ae63125a4E667'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        if (msg.sender != 0x342e62732b76875da9305083ea8ae63125a4e667) throw;
                          ^----------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance);
    ^-------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:29:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success);
    ^------------------------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success);
    ^----------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:55:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:57:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 totalSupply){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:87:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardToken(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:131:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:167:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:184:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:210:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:239:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventStart() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:246:5: Warning: No visibility specified. Defaulting to "public". 
    function getEventEnd() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function getVotingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:263:5: Warning: No visibility specified. Defaulting to "public". 
    function getTradingStart() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:270:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result){        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:335:5: Warning: No visibility specified. Defaulting to "public". 
    function HackerGold(address multisig) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:364:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:381:5: Warning: No visibility specified. Defaulting to "public". 
    function createHKG(address holder) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:404:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:450:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:461:5: Warning: No visibility specified. Defaulting to "public". 
    function getNow() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:470:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalValue() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:598:5: Warning: No visibility specified. Defaulting to "public". 
    function DSTContract(EventInfo eventInfoAddr, HackerGold hackerGoldAddr, string dstName, string dstSymbol){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:609:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:650:6: Warning: No visibility specified. Defaulting to "public". 
     function setHKGPrice(uint qtyForOneHKG) onlyExecutive  {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:667:5: Warning: No visibility specified. Defaulting to "public". 
    function issuePreferedTokens(uint qtyForOneHKG, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:705:5: Warning: No visibility specified. Defaulting to "public". 
    function buyForHackerGold(uint hkgValue) onlyBeforeEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:742:5: Warning: No visibility specified. Defaulting to "public". 
    function issueTokens(uint qtyForOneEther, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:761:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrice(uint qtyForOneEther) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:775:5: Warning: No visibility specified. Defaulting to "public". 
    function disableTokenIssuance() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:786:5: Warning: No visibility specified. Defaulting to "public". 
    function burnRemainToken() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:802:5: Warning: No visibility specified. Defaulting to "public". 
    function submitEtherProposal(uint requestValue, string url) onlyAfterEnd 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:847:5: Warning: No visibility specified. Defaulting to "public". 
    function submitHKGProposal(uint requestValue, string url) onlyAfterEnd
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:901:6: Warning: No visibility specified. Defaulting to "public". 
     function objectProposal(bytes32 id){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:903:9: Warning: Unused local variable.
        Proposal memory proposal = proposals[id];
        ^----------------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:931:6: Warning: No visibility specified. Defaulting to "public". 
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:946:5: Warning: No visibility specified. Defaulting to "public". 
    function redeemProposalFunds(bytes32 id) onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:971:12: Warning: Unused local variable.
           bool success = proposals[id].submitter.send(proposals[id].value); 
           ^----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:992:5: Warning: No visibility specified. Defaulting to "public". 
    function getAllTheFunds() onlyExecutive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1001:9: Warning: Unused local variable.
        bool success = msg.sender.send(this.balance);        
        ^----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1016:6: Warning: No visibility specified. Defaulting to "public". 
     function submitImpeachmentProposal(string urlDetails, address newExecutive){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1049:5: Warning: No visibility specified. Defaulting to "public". 
    function supportImpeachment(){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1089:5: Warning: No visibility specified. Defaulting to "public". 
    function votingRightsOf(address _owner) constant returns (uint256 result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1093:5: Warning: No visibility specified. Defaulting to "public". 
    function getPreferedQtySold() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1097:5: Warning: No visibility specified. Defaulting to "public". 
    function setVirtualExchange(address virtualExchangeAddr){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1102:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGOwned() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1106:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherValue() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1110:5: Warning: No visibility specified. Defaulting to "public". 
    function getExecutive() constant returns (address result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1114:5: Warning: No visibility specified. Defaulting to "public". 
    function getHKGPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1118:5: Warning: No visibility specified. Defaulting to "public". 
    function getEtherPrice() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1122:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTName() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1126:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTNameBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1130:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbol() constant returns(string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1134:5: Warning: No visibility specified. Defaulting to "public". 
    function getDSTSymbolBytes() constant returns(bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1138:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() constant returns (address result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1142:5: Warning: No visibility specified. Defaulting to "public". 
    function getTotalSupply() constant returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1146:5: Warning: No visibility specified. Defaulting to "public". 
    function getCollectedEther() constant returns (uint results) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1150:5: Warning: No visibility specified. Defaulting to "public". 
    function getCounterProposals() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1154:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalIdByIndex(uint i) constant returns (bytes32 result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1158:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalObjectionByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1162:5: Warning: No visibility specified. Defaulting to "public". 
    function getProposalValueByIndex(uint i) constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1166:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentUrlDetails() constant returns (string result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1171:5: Warning: No visibility specified. Defaulting to "public". 
    function getCurrentImpeachmentVotesSupporting() constant returns (uint result){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1175:5: Warning: No visibility specified. Defaulting to "public". 
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1186:5: Warning: No visibility specified. Defaulting to "public". 
    function setVoteRight(address voter, uint ammount){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1198:5: Warning: No visibility specified. Defaulting to "public". 
    function setBalance(address owner, uint ammount){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1210:5: Warning: No visibility specified. Defaulting to "public". 
    function setInternalInfo(address fixExecutive, uint fixTotalSupply, uint256 fixPreferedQtySold, 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:931:6: Warning: Function state mutability can be restricted to view
     function getIndexByProposalId(bytes32 id) returns (uint result){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1127:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(name);
               ^-----------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1135:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return convert(symbol);
               ^-------------^
/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:1175:5: Warning: Function state mutability can be restricted to pure
    function convert(string key) returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in DSTContract.redeemProposalFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#973-1010):
	External calls:
	- hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#994-995)
	External calls sending eth:
	- success = proposals[id].submitter.send(proposals[id].value) (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#999-1001)
	State variables written after the call(s):
	- proposals (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1009-1010)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
DSTContract.objectProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#931-960) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.objectProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#931-960) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#973-1010) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.objectProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#931-960) uses a dangerous strict equality:
	- proposals[id].id == 0
DSTContract.redeemProposalFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#973-1010) uses a dangerous strict equality:
	- proposals[id].id == 0
	- proposals[id].proposalCurrency == ProposalCurrency.HKG
DSTContract.supportImpeachment (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1075-1122) uses a dangerous strict equality:
	- lastImpeachmentProposal.newExecutive == 0x0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#868-919):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#896-897)
	- requestValue = getHKGOwned() (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#897)
	State variables written after the call(s):
	- counterProposals (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#912)
	- timeOfLastProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#913-914)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
DSTContract.redeemProposalFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#973-1010) does not use the value returned by external calls:
	-hackerGold.transfer(proposals[id].submitter,proposals[id].value) (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#994-995)
DSTContract.getAllTheFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1022-1034) does not use the value returned by external calls:
	-hackerGold.transfer(msg.sender,getHKGOwned()) (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1033-1034)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
TokenInterface.totalSupply.totalSupply (local variable @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#58-61) shadows:
	- TokenInterface.totalSupply (function @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#57-62)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in DSTContract.submitHKGProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#868-919):
	External calls:
	- requestValue > getHKGOwned() (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#896-897)
	- requestValue = getHKGOwned() (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#897)
	State variables written after the call(s):
	- listProposals (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#911-912)
	- proposals (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#909-911)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSTContract.convert uses assembly (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1211-1218)
	- /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1217-1218
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DSTContract.DECIMAL_ZEROS should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#523-524)
DSTContract.PROPOSAL_FUNDS_TH should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#528)
DSTContract.PROPOSAL_LIFETIME should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#526)
DSTContract.decimals should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#552-553)
EventInfo.eventStart should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#239)
HackerGold.BASE_PRICE should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#311-312)
HackerGold.DECIMAL_ZEROS should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#321-323)
HackerGold.FIN_PRICE should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#315-316)
HackerGold.MID_PRICE should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#312-313)
HackerGold.SAFETY_LIMIT should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#316-318)
HackerGold.decimals should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#305-306)
HackerGold.name should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#302-304)
HackerGold.symbol should be constant (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#307-309)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:
	- Version used: ['^0.4.0', '^0.4.2', '^0.4.6']
	- /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1 declares pragma solidity^0.4.0
	- /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#69-70 declares pragma solidity^0.4.2
	- /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#229-230 declares pragma solidity^0.4.6
	- /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#288 declares pragma solidity^0.4.0
	- /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#486 declares pragma solidity^0.4.6
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#396:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#399-400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#402-403:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#412:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#634:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#652-653:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#699:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#736:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#827:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#830-831:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#832:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#841:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#847:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#879:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#883:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#894:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#901-902:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#941:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#942:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#945-946:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#948:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#974:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#977:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#982-983:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#984:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#987:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1028:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1049:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1056:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1061:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1081-1082:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1087-1088:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1090:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1097:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1224:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1231:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1238:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1247:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1256:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1258:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1259:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1263:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1266-1267:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.approve (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#189-204) should be declared external
TokenInterface.approve (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#42-46) should be declared external
StandardToken.allowance (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#221-229) should be declared external
TokenInterface.allowance (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#55-57) should be declared external
TokenInterface.totalSupply (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#57-62) should be declared external
EventInfo.getEventStart (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#246-252) should be declared external
EventInfo.getEventEnd (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#255-260) should be declared external
EventInfo.getVotingStart (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#263-268) should be declared external
EventInfo.getTradingStart (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#271-282) should be declared external
EventInfo.getNow (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#283-287) should be declared external
HackerGold.fallback (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#376) should be declared external
HackerGold.getTotalSupply (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#468-470) should be declared external
HackerGold.getNow (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#479-481) should be declared external
DSTContract.fallback (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#629-666) should be declared external
DSTContract.setHKGPrice (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#669-673) should be declared external
DSTContract.issuePreferedTokens (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#683-714) should be declared external
DSTContract.buyForHackerGold (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#727-752) should be declared external
DSTContract.issueTokens (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#762-783) should be declared external
DSTContract.setEtherPrice (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#788-798) should be declared external
DSTContract.disableTokenIssuance (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#802-803) should be declared external
DSTContract.burnRemainToken (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#808-814) should be declared external
DSTContract.submitEtherProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#820-859) should be declared external
DSTContract.submitHKGProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#868-919) should be declared external
DSTContract.objectProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#931-960) should be declared external
DSTContract.redeemProposalFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#973-1010) should be declared external
DSTContract.getAllTheFunds (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1022-1034) should be declared external
DSTContract.submitImpeachmentProposal (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1040-1071) should be declared external
DSTContract.supportImpeachment (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1075-1122) should be declared external
DSTContract.votingRightsOf (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1127-1133) should be declared external
DSTContract.getPreferedQtySold (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1134-1138) should be declared external
DSTContract.setVirtualExchange (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1138-1143) should be declared external
DSTContract.getEtherValue (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1147-1151) should be declared external
DSTContract.getExecutive (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1151-1154) should be declared external
DSTContract.getHKGPrice (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1155-1158) should be declared external
DSTContract.getEtherPrice (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1158-1162) should be declared external
DSTContract.getDSTName (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1162-1163) should be declared external
DSTContract.getDSTNameBytes (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1164-1166) should be declared external
DSTContract.getDSTSymbol (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1167-1171) should be declared external
DSTContract.getDSTSymbolBytes (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1171-1173) should be declared external
DSTContract.getAddress (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1175-1176) should be declared external
DSTContract.getTotalSupply (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1177-1181) should be declared external
DSTContract.getCollectedEther (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1182-1186) should be declared external
DSTContract.getCounterProposals (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1186-1191) should be declared external
DSTContract.getProposalIdByIndex (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1191-1194) should be declared external
DSTContract.getProposalObjectionByIndex (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1194-1200) should be declared external
DSTContract.getProposalValueByIndex (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1200-1203) should be declared external
DSTContract.getCurrentImpeachmentUrlDetails (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1204-1209) should be declared external
DSTContract.getCurrentImpeachmentVotesSupporting (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1209-1211) should be declared external
DSTContract.setVoteRight (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1220-1231) should be declared external
DSTContract.setBalance (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1232-1238) should be declared external
DSTContract.setInternalInfo (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1242-1252) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol:
	- pragma solidity^0.4.0 (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1): it allows old versions
	- pragma solidity^0.4.2 (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#69-70): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#229-230): it allows old versions
	- pragma solidity^0.4.0 (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#288): it allows old versions
	- pragma solidity^0.4.6 (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#486): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'StandardToken.StandardToken' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#92-93) is not in mixedCase
Struct 'HackerGold.milestones_struct' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#331-334) is not in CapWords
Function 'HackerGold.HackerGold' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#344-372) is not in mixedCase
Variable 'HackerGold.BASE_PRICE' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#311-312) is not in mixedCase
Variable 'HackerGold.MID_PRICE' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#312-313) is not in mixedCase
Variable 'HackerGold.FIN_PRICE' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#315-316) is not in mixedCase
Variable 'HackerGold.SAFETY_LIMIT' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#316-318) is not in mixedCase
Variable 'HackerGold.DECIMAL_ZEROS' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#321-323) is not in mixedCase
Function 'DSTContract.DSTContract' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#618-627) is not in mixedCase
Parameter '_owner' of DSTContract.votingRightsOf (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#1129-1130) is not in mixedCase
Variable 'DSTContract.DECIMAL_ZEROS' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#523-524) is not in mixedCase
Variable 'DSTContract.PROPOSAL_LIFETIME' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#526) is not in mixedCase
Variable 'DSTContract.PROPOSAL_FUNDS_TH' (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#528) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
EventInfo.HACKATHON_5_WEEKS (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#235-237) is never used in EventInfo
DSTContract.enumDeclaration (/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol#570-571) is never used in DSTContract
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/12/0x0a0a7c26e72a9fdad30beeedf28ef8a3f5139ed9.sol analyzed (5 contracts), 127 result(s) found