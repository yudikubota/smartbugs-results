INFO:Slither:Compilation warnings/errors on /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:47:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:123:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:164:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:211:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:219:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:226:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:232:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:238:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:245:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:272:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        } else {throw;}
                ^---^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:45:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:94:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:109:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:126:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:253:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, receiver, tokens);
        ^---------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:57:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:58:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:60:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:61:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:62:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:86:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:98:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:113:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:117:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:130:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function name() constant returns (string) { return "CTest1 Token"; }
    ^------------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:153:5: Warning: No visibility specified. Defaulting to "public". 
    function symbol() constant returns (string) { return "CTest1"; }
    ^--------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns (uint) { return 18; }
    ^--------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:158:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:267:5: Warning: No visibility specified. Defaulting to "public". 
    function Burn () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:29:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:33:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:37:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:41:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:45:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:82:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:152:5: Warning: Function state mutability can be restricted to pure
    function name() constant returns (string) { return "CTest1 Token"; }
    ^------------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:153:5: Warning: Function state mutability can be restricted to pure
    function symbol() constant returns (string) { return "CTest1"; }
    ^--------------------------------------------------------------^
/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:154:5: Warning: Function state mutability can be restricted to pure
    function decimals() constant returns (uint) { return 18; }
    ^--------------------------------------------------------^

INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#46-56) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
CTest1.Founder1 should be constant (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#149)
CTest1.Founder2 should be constant (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#151-152)
CTest1.Founder3 should be constant (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#153-154)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#56:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#173:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#219-220:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#229:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#235:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#242:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#247-248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#257:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
StandardToken.balanceOf (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#117-119) should be declared external
ERC20.balanceOf (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#57-58) should be declared external
StandardToken.allowance (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#132-146) should be declared external
ERC20.allowance (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#58-60) should be declared external
StandardToken.transfer (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#88-99) should be declared external
ERC20.transfer (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#60-61) should be declared external
ERC20.transferFrom (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#61-62) should be declared external
StandardToken.transferFrom (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#100-117) should be declared external
ERC20.approve (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#62-63) should be declared external
StandardToken.approve (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#119-131) should be declared external
StandardToken.isToken (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#86-88) should be declared external
CTest1.name (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#154-158) should be declared external
CTest1.symbol (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#158-161) should be declared external
CTest1.decimals (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#161-164) should be declared external
CTest1.fallback (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#166-278) should be declared external
CTest1.Burn (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol:
	- pragma solidity^0.4.16 (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#117) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#142) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#142-144) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#89) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#89-90) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#101) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#101-102) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#103-104) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#119) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#120) is not in mixedCase
Function 'CTest1.Burn' (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol) is not in mixedCase
Variable 'CTest1.Founder1' (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#149) is not in mixedCase
Variable 'CTest1.Founder2' (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#151-152) is not in mixedCase
Variable 'CTest1.Founder3' (/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol#153-154) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/46/0x4117912440d279aabfa20d10bf517c1ff9fe6c8f.sol analyzed (4 contracts), 43 result(s) found