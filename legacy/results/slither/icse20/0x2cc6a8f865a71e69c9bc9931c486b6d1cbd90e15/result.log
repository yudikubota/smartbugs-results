INFO:Slither:Compilation warnings/errors on /unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:270:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function BookERC20EthV1Dec() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:606:12: Warning: Use of the "var" keyword is deprecated.
    var (, mantissa, exponent) = unpackPrice(price);
           ^------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:606:22: Warning: Use of the "var" keyword is deprecated.
    var (, mantissa, exponent) = unpackPrice(price);
                     ^------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:624:10: Warning: Use of the "var" keyword is deprecated.
    var (direction, mantissa, exponent) = unpackPrice(price);
         ^-------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:624:21: Warning: Use of the "var" keyword is deprecated.
    var (direction, mantissa, exponent) = unpackPrice(price);
                    ^------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:624:31: Warning: Use of the "var" keyword is deprecated.
    var (direction, mantissa, exponent) = unpackPrice(price);
                              ^------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:775:10: Warning: Use of the "var" keyword is deprecated.
    var (ourDirection,) = unpackPrice(order.price);
         ^----------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:387:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientPaymentEvent(client, ClientPaymentEventType.TransferFrom, BalanceType.Base, int(amountBase));
    ^------------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:402:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientPaymentEvent(client, ClientPaymentEventType.Transfer, BalanceType.Base, -int(amountBase));
    ^---------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:413:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientPaymentEvent(client, ClientPaymentEventType.Deposit, BalanceType.Cntr, int(amountCntr));
    ^-------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:426:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientPaymentEvent(client, ClientPaymentEventType.Withdraw, BalanceType.Cntr, -int(amountCntr));
    ^---------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:441:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientPaymentEvent(client, ClientPaymentEventType.TransferFrom, BalanceType.Rwrd, int(amountRwrd));
    ^------------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:454:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientPaymentEvent(client, ClientPaymentEventType.Transfer, BalanceType.Rwrd, -int(amountRwrd));
    ^---------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:617:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientOrderEvent(client, ClientOrderEventType.Create, orderId, maxMatches);
    ^------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:664:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientOrderEvent(client, ClientOrderEventType.Cancel, orderId, 0);
    ^---------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:667:7: Warning: Invoking events without "emit" prefix is deprecated.
      MarketOrderEvent(block.timestamp, orderId, MarketOrderEventType.Remove, order.price,
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:682:5: Warning: Invoking events without "emit" prefix is deprecated.
    ClientOrderEvent(client, ClientOrderEventType.Continue, orderId, maxMatches);
    ^--------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:775:5: Warning: Different number of components on the left hand side (2) than on the right hand side (3).
    var (ourDirection,) = unpackPrice(order.price);
    ^--------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:1090:7: Warning: Invoking events without "emit" prefix is deprecated.
      MarketOrderEvent(block.timestamp, theirOrderId, MarketOrderEventType.CompleteFill,
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:1094:7: Warning: Invoking events without "emit" prefix is deprecated.
      MarketOrderEvent(block.timestamp, theirOrderId, MarketOrderEventType.PartialFill,
      ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:1151:5: Warning: Invoking events without "emit" prefix is deprecated.
    MarketOrderEvent(block.timestamp, orderId, MarketOrderEventType.Add,
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() constant returns (uint);
  ^---------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:6:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance);
  ^-----------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:7:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success);
  ^-----------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:8:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success);
  ^------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:9:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success);
  ^---------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining);
  ^-------------------------------------------------------------------------------------^
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:270:3: Warning: No visibility specified. Defaulting to "public". 
  function BookERC20EthV1Dec() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:551:3: Warning: Function state mutability can be restricted to pure
  function isBuyPrice(uint16 price) internal constant returns (bool isBuy) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:560:3: Warning: Function state mutability can be restricted to pure
  function computeOppositePrice(uint16 price) internal constant returns (uint16 opposite) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:581:3: Warning: Function state mutability can be restricted to pure
  function computeCntrAmountUsingUnpacked(
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#296-321):
	External calls:
	- require(bool)(_baseToken.totalSupply() > 0) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#318-319)
	State variables written after the call(s):
	- baseToken (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#319)
Reentrancy in BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#296-321):
	External calls:
	- require(bool)(_baseToken.totalSupply() > 0) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#318-319)
	- require(bool)(_rwrdToken.totalSupply() > 0) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#320)
	State variables written after the call(s):
	- rwrdToken (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#321)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in BookERC20EthV1Dec.transferFromBase (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#382-398):
	External calls:
	- amountBase = baseToken.allowance(client,book) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#387)
	- require(bool)(baseToken.transferFrom(client,book,amountBase)) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#392-393)
	- assert(bool)(baseToken.allowance(client,book) == 0) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#394-395)
	State variables written after the call(s):
	- balanceBaseForClient (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#395-396)
Reentrancy in BookERC20EthV1Dec.transferFromRwrd (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#440-453):
	External calls:
	- amountRwrd = rwrdToken.allowance(client,book) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#441-444)
	- require(bool)(rwrdToken.transferFrom(client,book,amountRwrd)) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#447-449)
	- assert(bool)(rwrdToken.allowance(client,book) == 0) (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#449-450)
	State variables written after the call(s):
	- balanceRwrdForClient (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#450-451)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20.totalSupply (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#5-6) should be declared external
ERC20.balanceOf (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#6-7) should be declared external
ERC20.transfer (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#7-8) should be declared external
ERC20.transferFrom (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#8-9) should be declared external
ERC20.approve (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#9-10) should be declared external
ERC20.allowance (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#10-11) should be declared external
BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#296-321) should be declared external
BookERC20EthV1Dec.changeFeeCollector (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#326-332) should be declared external
BookERC20EthV1Dec.getBookInfo (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#336-350) should be declared external
BookERC20EthV1Dec.getClientBalances (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#365-380) should be declared external
BookERC20EthV1Dec.transferFromBase (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#382-398) should be declared external
BookERC20EthV1Dec.transferBase (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#399-413) should be declared external
BookERC20EthV1Dec.depositCntr (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#416-424) should be declared external
BookERC20EthV1Dec.withdrawCntr (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#426-438) should be declared external
BookERC20EthV1Dec.transferFromRwrd (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#440-453) should be declared external
BookERC20EthV1Dec.transferRwrd (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#454-466) should be declared external
BookERC20EthV1Dec.getOrder (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#468-480) should be declared external
BookERC20EthV1Dec.getOrderState (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#485-492) should be declared external
BookERC20EthV1Dec.walkClientOrders (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#507-534) should be declared external
BookERC20EthV1Dec.createOrder (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#622-670) should be declared external
BookERC20EthV1Dec.cancelOrder (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#671-690) should be declared external
BookERC20EthV1Dec.continueOrder (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#692-700) should be declared external
BookERC20EthV1Dec.walkBook (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#1243-1270) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BookERC20EthV1Dec.BookERC20EthV1Dec' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#279-281) is not in mixedCase
Parameter '_baseToken' of BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#297) is not in mixedCase
Parameter '_rwrdToken' of BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#297) is not in mixedCase
Parameter '_baseMinInitialSize' of BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#297-298) is not in mixedCase
Parameter '_minPriceExponent' of BookERC20EthV1Dec.init (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#298) is not in mixedCase
Constant 'BookERC20EthV1Dec.baseMaxSize' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#176-177) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.cntrMinInitialSize' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#182-186) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.cntrMaxSize' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#186) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.ethRwrdRate' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#192-193) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.feeDivisor' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#208) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.invalidPrice' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#266-268) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.maxBuyPrice' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#270) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.minBuyPrice' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#271-272) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.minSellPrice' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#272-275) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BookERC20EthV1Dec.maxSellPrice' (/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol#275) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x2cc6a8f865a71e69c9bc9931c486b6d1cbd90e15.sol analyzed (2 contracts), 43 result(s) found