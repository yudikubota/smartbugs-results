INFO:Slither:Compilation warnings/errors on /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:138:3: Warning: Functions in interfaces should be declared external.
  function setSubnodeOwner(bytes32 node, bytes32 label, address owner) public;
  ^--------------------------------------------------------------------------^
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:139:3: Warning: Functions in interfaces should be declared external.
  function setResolver(bytes32 node, address resolver) public;
  ^----------------------------------------------------------^
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:140:3: Warning: Functions in interfaces should be declared external.
  function setOwner(bytes32 node, address owner) public;
  ^----------------------------------------------------^
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:141:3: Warning: Functions in interfaces should be declared external.
  function setTTL(bytes32 node, uint64 ttl) public;
  ^-----------------------------------------------^
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:142:3: Warning: Functions in interfaces should be declared external.
  function owner(bytes32 node) public view returns (address);
  ^---------------------------------------------------------^
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:143:3: Warning: Functions in interfaces should be declared external.
  function resolver(bytes32 node) public view returns (address);
  ^------------------------------------------------------------^
/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol:144:3: Warning: Functions in interfaces should be declared external.
  function ttl(bytes32 node) public view returns (uint64);
  ^------------------------------------------------------^

INFO:Detectors:[93m
UsernameRegistrar.abiDecodeRegister (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated)
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated)
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == accounts[_label].owner,Callable only by account owner.)
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated)
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == accounts[_label].owner,Callable only by account owner.)
UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Username already registered.)
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated)
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == accounts[_label].owner,Callable only by account owner.)
UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Username already registered.)
UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == account.owner,Not the former account owner.)
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated)
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == accounts[_label].owner,Callable only by account owner.)
UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Username already registered.)
UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == account.owner,Not the former account owner.)
UsernameRegistrar.reserveSlash (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#582-588) uses a dangerous strict equality:
	- require(bool,string)(reservedSlashers[_secret].blockNumber == 0,Already Reserved)
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated)
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == accounts[_label].owner,Callable only by account owner.)
UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076) uses a dangerous strict equality:
	- require(bool,string)(accounts[_label].creationTime == 0,Username already registered.)
UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == account.owner,Not the former account owner.)
UsernameRegistrar.reserveSlash (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#582-588) uses a dangerous strict equality:
	- require(bool,string)(reservedSlashers[_secret].blockNumber == 0,Already Reserved)
UsernameRegistrar.slashUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1080-1127) uses a dangerous strict equality:
	- creationTime == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in UsernameRegistrar.activate (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#730-746):
	External calls:
	- require(bool,string)(ensRegistry.owner(ensNode) == address(this),Registry does not own registry) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#739-741)
	State variables written after the call(s):
	- state (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#744-745)
Reentrancy in UsernameRegistrar.migrateRegistry (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1005-1013):
	External calls:
	- require(bool,string)(ensRegistry.owner(ensNode) == address(this),ENS registry owner not transfered.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1010-1011)
	State variables written after the call(s):
	- state (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1012)
Reentrancy in UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724):
	External calls:
	- require(bool,string)(ensRegistry.owner(ensNode) == address(_newRegistry),Wrong update) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#710-711)
	State variables written after the call(s):
	- accounts (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#712-713)
Reentrancy in UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556):
	External calls:
	- require(bool,string)(msg.sender == ensRegistry.owner(namehash),Not owner of ENS node.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#525-526)
	State variables written after the call(s):
	- accounts (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#531)
Reentrancy in UsernameRegistrar.slashUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1080-1127):
	External calls:
	- owner = ensRegistry.owner(namehash) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1084-1085)
	State variables written after the call(s):
	- accounts (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1095)
Reentrancy in UsernameRegistrar.updateAccountOwner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#563-575):
	External calls:
	- require(bool,string)(msg.sender == ensRegistry.owner(namehash),Caller not owner of ENS node.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#566-567)
	- require(bool,string)(ensRegistry.owner(ensNode) == address(this),Registry not owner of registry.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#568-572)
	State variables written after the call(s):
	- accounts (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#573)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) does not use the value returned by external calls:
	-token.approve(_newRegistry,account.balance) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#713-717)
UsernameRegistrar.withdrawExcessBalance (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#810-835) does not use the value returned by external calls:
	-excessToken.transfer(_beneficiary,amount) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#832-834)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ENS.setSubnodeOwner.owner (local variable @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#140-141) shadows:
	- ENS.owner (function @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#144-150)
ENS.setResolver.resolver (local variable @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#142) shadows:
	- ENS.resolver (function @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#150)
ENS.setOwner.owner (local variable @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#143) shadows:
	- ENS.owner (function @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#144-150)
ENS.setTTL.ttl (local variable @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#143-144) shadows:
	- ENS.ttl (function @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#150-155)
PublicResolver.setAddr.addr (local variable @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#217) shadows:
	- PublicResolver.addr (function @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#372-373)
PublicResolver.setName.name (local variable @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#252) shadows:
	- PublicResolver.name (function @ /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#342-345)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in UsernameRegistrar.activate (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#730-746):
	External calls:
	- require(bool,string)(ensRegistry.owner(ensNode) == address(this),Registry does not own registry) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#739-741)
	State variables written after the call(s):
	- price (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#741-742)
Reentrancy in UsernameRegistrar.migrateRegistry (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1005-1013):
	External calls:
	- require(bool,string)(ensRegistry.owner(ensNode) == address(this),ENS registry owner not transfered.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1010-1011)
	State variables written after the call(s):
	- price (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1012)
Reentrancy in UsernameRegistrar.migrateUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#984-997):
	External calls:
	- require(bool,string)(token.transferFrom(parentRegistry,address(this),_tokenBalance),Error moving funds from old registar.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#992-995)
	State variables written after the call(s):
	- accounts (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#996-997)
	- reserveAmount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#995-996)
Reentrancy in UsernameRegistrar.moveRegistry (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#774-784):
	External calls:
	- require(bool,string)(ensRegistry.owner(ensNode) == address(this),Registry not owned anymore.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#776-778)
	State variables written after the call(s):
	- state (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#778-781)
Reentrancy in UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076):
	External calls:
	- require(bool,string)(ensRegistry.owner(namehash) == address(0),ENS node already owned.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1033-1035)
	State variables written after the call(s):
	- accounts (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1037-1039)
Reentrancy in UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076):
	External calls:
	- require(bool,string)(ensRegistry.owner(namehash) == address(0),ENS node already owned.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1033-1035)
	- require(bool,string)(token.allowance(_owner,address(this)) >= price,Unallowed to spend.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1041-1042)
	- require(bool,string)(token.transferFrom(_owner,address(this),price),Transfer failed) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1042-1049)
	State variables written after the call(s):
	- reserveAmount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1049-1050)
Reentrancy in UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556):
	External calls:
	- require(bool,string)(msg.sender == ensRegistry.owner(namehash),Not owner of ENS node.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#525-526)
	State variables written after the call(s):
	- reserveAmount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#531-532)
Reentrancy in UsernameRegistrar.slashUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1080-1127):
	External calls:
	- owner = ensRegistry.owner(namehash) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1084-1085)
	- require(bool,string)(owner != address(0) || ensRegistry.resolver(namehash) != address(0),Nothing to slash.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1085-1090)
	- ensRegistry.setSubnodeOwner(ensNode,label,address(this)) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1099-1100)
	- ensRegistry.setResolver(namehash,address(0)) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1100-1101)
	- ensRegistry.setOwner(namehash,address(0)) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1101-1102)
	State variables written after the call(s):
	- reserveAmount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1104-1106)
	- reservedSlashers (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1121-1122)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > account.creationTime + releaseDelay,Release period not reached.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#526-528)
	- require(bool,string)(msg.sender == account.owner,Not the former account owner.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#528-530)
	- account.balance > 0 (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#531-534)
	- require(bool,string)(account.creationTime > 0,Username not registered.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#522-523)
	- require(bool,string)(token.transfer(msg.sender,account.balance),Transfer failed) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#532-533)
UsernameRegistrar.updateAccountOwner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#563-575) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(accounts[_label].creationTime > 0,Username not registered.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#567-568)
UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-724) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(msg.sender == accounts[_label].owner,Callable only by account owner.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#709-710)
UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#792-801) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(accounts[_label].creationTime == 0,Already migrated) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#795-796)
UsernameRegistrar.withdrawExcessBalance (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#810-835) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(amount > 0,No balance) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#829-831)
	- require(bool,string)(amount > reserveAmount,Is not excess) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#823-824)
UsernameRegistrar.getExpirationTime (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#915-922) uses timestamp for comparisons
	Dangerous comparisons:
	- creationTime > 0 (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#918-922)
UsernameRegistrar.getSlashRewardPart (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#928-935) uses timestamp for comparisons
	Dangerous comparisons:
	- balance > 0 (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#933-935)
UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1076) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(accounts[_label].creationTime == 0,Username already registered.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1036-1037)
UsernameRegistrar.slashUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1080-1127) uses timestamp for comparisons
	Dangerous comparisons:
	- creationTime == 0 (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1085-1098)
	- amountToTransfer > 0 (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1102-1126)
	- assert(bool)(creationTime != block.timestamp) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1090-1093)
	- require(bool,string)(token.transfer(reserve.reserver,amountToTransfer),Error in transfer.) (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1122-1126)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
UsernameRegistrar.abiDecodeRegister uses assembly (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol)
	- /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Controlled.changeController (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#61-68) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#125-126) should be declared external
UsernameRegistrar.receiveApproval (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#946-970) should be declared external
ENS.setSubnodeOwner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#139-141) should be declared external
ENS.setResolver (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#141-142) should be declared external
ENS.setOwner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#142-143) should be declared external
ENS.setTTL (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#143-144) should be declared external
ENS.owner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#144-150) should be declared external
ENS.resolver (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#150) should be declared external
ENS.ttl (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#150-155) should be declared external
PublicResolver.setAddr (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#216-218) should be declared external
PublicResolver.setContent (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#229-234) should be declared external
PublicResolver.setMultihash (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#240-244) should be declared external
PublicResolver.setName (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#252-255) should be declared external
PublicResolver.setABI (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#263-270) should be declared external
PublicResolver.setPubkey (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#279-283) should be declared external
PublicResolver.setText (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#291-295) should be declared external
PublicResolver.text (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#303-305) should be declared external
PublicResolver.pubkey (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#313-315) should be declared external
PublicResolver.ABI (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#320-339) should be declared external
PublicResolver.name (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#342-345) should be declared external
PublicResolver.content (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#355-360) should be declared external
PublicResolver.multihash (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#364-368) should be declared external
PublicResolver.addr (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#372-373) should be declared external
PublicResolver.supportsInterface (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#379-396) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#517-556):
	-! newOwner.call.gas(80000)(abi.encodeWithSignature(dropUsername(bytes32),_label)) /unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#550-555
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_proof' of MerkleProof.verifyProof (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#18-19) is not in mixedCase
Parameter '_root' of MerkleProof.verifyProof (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#20) is not in mixedCase
Parameter '_leaf' of MerkleProof.verifyProof (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#21-22) is not in mixedCase
Parameter '_newController' of Controlled.changeController (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#62) is not in mixedCase
Function 'PublicResolver.ABI' (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#320-339) is not in mixedCase
Modifier 'PublicResolver.only_owner' (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#200-205) is not in mixedCase
Parameter '_from' of UsernameRegistrar.receiveApproval (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#946) is not in mixedCase
Parameter '_amount' of UsernameRegistrar.receiveApproval (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#946-947) is not in mixedCase
Parameter '_token' of UsernameRegistrar.receiveApproval (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#947) is not in mixedCase
Parameter '_data' of UsernameRegistrar.receiveApproval (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#947) is not in mixedCase
Parameter '_token' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#459) is not in mixedCase
Parameter '_ensRegistry' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#459) is not in mixedCase
Parameter '_resolver' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#460) is not in mixedCase
Parameter '_ensNode' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#460) is not in mixedCase
Parameter '_usernameMinLength' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#461-462) is not in mixedCase
Parameter '_reservedUsernamesMerkleRoot' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#462-463) is not in mixedCase
Parameter '_parentRegistry' of UsernameRegistrar. (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#463-464) is not in mixedCase
Parameter '_label' of UsernameRegistrar.register (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#504) is not in mixedCase
Parameter '_account' of UsernameRegistrar.register (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#504-505) is not in mixedCase
Parameter '_pubkeyA' of UsernameRegistrar.register (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#506-507) is not in mixedCase
Parameter '_pubkeyB' of UsernameRegistrar.register (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#507-509) is not in mixedCase
Parameter '_label' of UsernameRegistrar.release (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#518) is not in mixedCase
Parameter '_label' of UsernameRegistrar.updateAccountOwner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#563) is not in mixedCase
Parameter '_secret' of UsernameRegistrar.reserveSlash (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#582-583) is not in mixedCase
Parameter '_username' of UsernameRegistrar.slashSmallUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#596) is not in mixedCase
Parameter '_reserveSecret' of UsernameRegistrar.slashSmallUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#597) is not in mixedCase
Parameter '_username' of UsernameRegistrar.slashAddressLikeUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#605-608) is not in mixedCase
Parameter '_reserveSecret' of UsernameRegistrar.slashAddressLikeUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#608) is not in mixedCase
Parameter '_username' of UsernameRegistrar.slashReservedUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#634) is not in mixedCase
Parameter '_proof' of UsernameRegistrar.slashReservedUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#635-636) is not in mixedCase
Parameter '_reserveSecret' of UsernameRegistrar.slashReservedUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#636-637) is not in mixedCase
Parameter '_username' of UsernameRegistrar.slashInvalidUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#660-661) is not in mixedCase
Parameter '_offendingPos' of UsernameRegistrar.slashInvalidUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#661-662) is not in mixedCase
Parameter '_reserveSecret' of UsernameRegistrar.slashInvalidUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#662) is not in mixedCase
Parameter '_labels' of UsernameRegistrar.eraseNode (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#675) is not in mixedCase
Parameter '_label' of UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#700-701) is not in mixedCase
Parameter '_newRegistry' of UsernameRegistrar.moveAccount (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#701-702) is not in mixedCase
Parameter '_price' of UsernameRegistrar.activate (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#731) is not in mixedCase
Parameter '_resolver' of UsernameRegistrar.setResolver (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#748-749) is not in mixedCase
Parameter '_price' of UsernameRegistrar.updateRegistryPrice (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#757) is not in mixedCase
Parameter '_newRegistry' of UsernameRegistrar.moveRegistry (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#774-775) is not in mixedCase
Parameter '_label' of UsernameRegistrar.dropUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#793) is not in mixedCase
Parameter '_token' of UsernameRegistrar.withdrawExcessBalance (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#811) is not in mixedCase
Parameter '_beneficiary' of UsernameRegistrar.withdrawExcessBalance (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#811-812) is not in mixedCase
Parameter '_domainHash' of UsernameRegistrar.withdrawWrongNode (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#844-845) is not in mixedCase
Parameter '_beneficiary' of UsernameRegistrar.withdrawWrongNode (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#846-847) is not in mixedCase
Parameter '_label' of UsernameRegistrar.getAccountBalance (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#879-880) is not in mixedCase
Parameter '_label' of UsernameRegistrar.getAccountOwner (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#891) is not in mixedCase
Parameter '_label' of UsernameRegistrar.getCreationTime (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#903-905) is not in mixedCase
Parameter '_label' of UsernameRegistrar.getExpirationTime (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#915) is not in mixedCase
Parameter '_label' of UsernameRegistrar.getSlashRewardPart (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#928-929) is not in mixedCase
Parameter '_label' of UsernameRegistrar.migrateUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#985) is not in mixedCase
Parameter '_tokenBalance' of UsernameRegistrar.migrateUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#985) is not in mixedCase
Parameter '_creationTime' of UsernameRegistrar.migrateUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#985) is not in mixedCase
Parameter '_accountOwner' of UsernameRegistrar.migrateUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#985-986) is not in mixedCase
Parameter '_price' of UsernameRegistrar.migrateRegistry (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1007) is not in mixedCase
Parameter '_owner' of UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1027-1028) is not in mixedCase
Parameter '_label' of UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1028) is not in mixedCase
Parameter '_account' of UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1028-1029) is not in mixedCase
Parameter '_pubkeyA' of UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1029) is not in mixedCase
Parameter '_pubkeyB' of UsernameRegistrar.registerUser (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1030) is not in mixedCase
Parameter '_username' of UsernameRegistrar.slashUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1081) is not in mixedCase
Parameter '_reserveSecret' of UsernameRegistrar.slashUsername (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1081) is not in mixedCase
Parameter '_state' of UsernameRegistrar.setState (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1128-1129) is not in mixedCase
Parameter '_idx' of UsernameRegistrar.eraseNodeHierarchy (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1145) is not in mixedCase
Parameter '_labels' of UsernameRegistrar.eraseNodeHierarchy (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1145-1146) is not in mixedCase
Parameter '_subnode' of UsernameRegistrar.eraseNodeHierarchy (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#1146) is not in mixedCase
Constant 'UsernameRegistrar.releaseDelay' (/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol#406-407) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/38/0x4c9cdc0454c5e9d7aec727770007f901633a6ebf.sol analyzed (7 contracts), 133 result(s) found