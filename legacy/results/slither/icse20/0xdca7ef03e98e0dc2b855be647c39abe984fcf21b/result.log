INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:53:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    uint validity = delegates[identity][keccak256(delegateType)][delegate];
                                        ^---------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:53:41: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
    uint validity = delegates[identity][keccak256(delegateType)][delegate];
                                        ^---------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:68:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(byte(0x19), byte(0), this, nonce[identityOwner(identity)], identity, "changeOwner", newOwner);
                   ^-----------------------------------------------------------------------------------------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:73:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    delegates[identity][keccak256(delegateType)][delegate] = now + validity;
                        ^---------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:73:25: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
    delegates[identity][keccak256(delegateType)][delegate] = now + validity;
                        ^---------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:83:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(byte(0x19), byte(0), this, nonce[identityOwner(identity)], identity, "addDelegate", delegateType, delegate, validity);
                   ^-----------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:88:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    delegates[identity][keccak256(delegateType)][delegate] = now;
                        ^---------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:88:25: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
    delegates[identity][keccak256(delegateType)][delegate] = now;
                        ^---------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:98:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(byte(0x19), byte(0), this, nonce[identityOwner(identity)], identity, "revokeDelegate", delegateType, delegate);
                   ^----------------------------------------------------------------------------------------------------------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:112:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(byte(0x19), byte(0), this, nonce[identity], identity, "setAttribute", name, value, validity);
                   ^----------------------------------------------------------------------------------------------------^
/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:126:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(byte(0x19), byte(0), this, nonce[identity], identity, "revokeAttribute", name, value); 
                   ^---------------------------------------------------------------------------------------------^

INFO:Detectors:[92m
EthereumDIDRegistry.validDelegate (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#52-57) should be declared external
EthereumDIDRegistry.changeOwner (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#63-67) should be declared external
EthereumDIDRegistry.changeOwnerSigned (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#67-72) should be declared external
EthereumDIDRegistry.addDelegate (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#78-82) should be declared external
EthereumDIDRegistry.addDelegateSigned (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#82-87) should be declared external
EthereumDIDRegistry.revokeDelegate (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#94-97) should be declared external
EthereumDIDRegistry.revokeDelegateSigned (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#97-102) should be declared external
EthereumDIDRegistry.setAttribute (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#108-111) should be declared external
EthereumDIDRegistry.setAttributeSigned (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#111-116) should be declared external
EthereumDIDRegistry.revokeAttribute (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#122-125) should be declared external
EthereumDIDRegistry.revokeAttributeSigned (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#125-130) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol:
	- pragma solidity^0.4.4 (/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Slither:/unique_chucks/5/0xdca7ef03e98e0dc2b855be647c39abe984fcf21b.sol analyzed (1 contracts), 12 result(s) found