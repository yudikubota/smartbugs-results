INFO:Slither:Compilation warnings/errors on /unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:112:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:196:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function OpportyToken() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:220:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:322:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function HoldPresaleContract(address _OppToken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:432:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function OpportyPresale(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:607:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function OpportySaleBonus(uint _startDate) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:759:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function OpportySale(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:65:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:120:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:138:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:161:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:173:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:240:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:278:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:286:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:344:5: Warning: Invoking events without "emit" prefix is deprecated.
    Hold(msg.sender, holder, tokens, timed);
    ^-------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:358:11: Warning: Invoking events without "emit" prefix is deprecated.
          TokensTransfered(contributor,  holderList[contributor].tokens);
          ^------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:453:5: Warning: Invoking events without "emit" prefix is deprecated.
    SaleStarted(block.number);
    ^-----------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:459:5: Warning: Invoking events without "emit" prefix is deprecated.
    SaleEnded(block.number);
    ^---------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:482:87: Warning: Using "years" as a unit denomination is deprecated.
    if (whiteList[inv].holdPeriod==12) whiteList[inv].holdTimestamp = endSaleDate.add(1 years);
                                                                                      ^-----^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:484:5: Warning: Invoking events without "emit" prefix is deprecated.
    AddedToWhiteList(inv, whiteList[inv].invAmount, whiteList[inv].holdPeriod,  whiteList[inv].bonus);
    ^-----------------------------------------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:514:5: Warning: Invoking events without "emit" prefix is deprecated.
    AddedToHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp);
    ^-------------------------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:515:5: Warning: Invoking events without "emit" prefix is deprecated.
    FundTransfered(msg.sender, msg.value);
    ^-----------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:529:7: Warning: Invoking events without "emit" prefix is deprecated.
      TokensTransferedToHold(holdContract, tokenRaised );
      ^------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:542:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require(this.balance != 0);
            ^----------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:546:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint bal = this.balance;
               ^----------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:548:5: Warning: Invoking events without "emit" prefix is deprecated.
    WithdrawedEthToWallet(bal);
    ^------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:556:5: Warning: Invoking events without "emit" prefix is deprecated.
    ManualChangeEndDate(oldEndDate, date);
    ^-----------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:564:5: Warning: Invoking events without "emit" prefix is deprecated.
    ManualChangeEndDate(oldEndDate, date);
    ^-----------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:791:5: Warning: Invoking events without "emit" prefix is deprecated.
    ManualChangeStartDate(oldStartDate, date);
    ^---------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:798:5: Warning: Invoking events without "emit" prefix is deprecated.
    ManualChangeEndDate(oldEndDate, date);
    ^-----------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:834:7: Warning: Invoking events without "emit" prefix is deprecated.
      HardCapReached(block.number); // Close the crowdsale
      ^--------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:835:7: Warning: Invoking events without "emit" prefix is deprecated.
      CrowdsaleEnded(block.number);
      ^--------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:846:9: Warning: Invoking events without "emit" prefix is deprecated.
        CrowdsaleEnded(block.number);
        ^--------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:870:7: Warning: Invoking events without "emit" prefix is deprecated.
      SoftCapReached(block.number);
      ^--------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:884:5: Warning: Invoking events without "emit" prefix is deprecated.
    FundTransfered(_contributor, contributionAmount);
    ^----------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:926:11: Warning: Invoking events without "emit" prefix is deprecated.
          TokensTransferedToOwner(msg.sender , cbalance );
          ^---------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:932:11: Warning: Invoking events without "emit" prefix is deprecated.
          TokensTransferedToHold(holdContract , cbalance );
          ^----------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:937:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokensTransferedToOwner(msg.sender , cbalance );
        ^---------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:959:7: Warning: Invoking events without "emit" prefix is deprecated.
      TokensTransfered(msg.sender , tokenCount * (10 ** 18) );
      ^-----------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:980:11: Warning: Invoking events without "emit" prefix is deprecated.
          TokensTransfered(currentParticipantAddress, tokensCount * (10 ** 18));
          ^-------------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1001:7: Warning: Invoking events without "emit" prefix is deprecated.
[91m      ErrorSendingETH(msg.sender, ethContributed);[0m
      ^-----------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1003:7: Warning: Invoking events without "emit" prefix is deprecated.
      Refunded(msg.sender, ethContributed);
      ^----------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1018:11: Warning: Invoking events without "emit" prefix is deprecated.
[91m          ErrorSendingETH(currentParticipantAddress, contribution);[0m
          ^------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1020:11: Warning: Invoking events without "emit" prefix is deprecated.
          Refunded(currentParticipantAddress, contribution);
          ^-----------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1031:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require(this.balance != 0);
            ^----------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1034:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint bal = this.balance;
               ^----------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1036:5: Warning: Invoking events without "emit" prefix is deprecated.
    WithdrawedEthToWallet(bal);
    ^------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1040:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require(this.balance != 0);
            ^----------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1043:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    msg.sender.transfer(this.balance);
                        ^----------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1055:5: Warning: Invoking events without "emit" prefix is deprecated.
    CrowdsaleStarted(block.number);
    ^----------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:40:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:41:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:59:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:74:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:85:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:86:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:87:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:109:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:129:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:148:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:158:3: Warning: No visibility specified. Defaulting to "public". 
  function increaseApproval (address _spender, uint _addedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:165:3: Warning: No visibility specified. Defaulting to "public". 
  function decreaseApproval (address _spender, uint _subtractedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:196:3: Warning: No visibility specified. Defaulting to "public". 
  function OpportyToken() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:220:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:322:3: Warning: No visibility specified. Defaulting to "public". 
  function HoldPresaleContract(address _OppToken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:347:3: Warning: No visibility specified. Defaulting to "public". 
  function getBalance() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:432:3: Warning: No visibility specified. Defaulting to "public". 
  function OpportyPresale(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:541:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawEth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:567:3: Warning: No visibility specified. Defaulting to "public". 
  function getTokenBalance() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:607:3: Warning: No visibility specified. Defaulting to "public". 
  function OpportySaleBonus(uint _startDate) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:628:3: Warning: No visibility specified. Defaulting to "public". 
  function calculateBonusForHours(uint256 _tokens) returns(uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:650:3: Warning: No visibility specified. Defaulting to "public". 
  function changeStartDate(uint _date) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:759:3: Warning: No visibility specified. Defaulting to "public". 
  function OpportySale(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:785:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartDate(uint date) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:793:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndDate(uint date) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:800:3: Warning: No visibility specified. Defaulting to "public". 
  function setSoftCap(uint softCap) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:804:3: Warning: No visibility specified. Defaulting to "public". 
  function setHardCap(uint hardCap) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:915:3: Warning: No visibility specified. Defaulting to "public". 
  function releaseTokens() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:949:3: Warning: No visibility specified. Defaulting to "public". 
  function getTokens() whenNotPaused {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:965:3: Warning: No visibility specified. Defaulting to "public". 
  function batchReturnTokens(uint _numberOfReturns) onlyOwner whenNotPaused {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:993:3: Warning: No visibility specified. Defaulting to "public". 
  function refund() whenNotPaused {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1006:3: Warning: No visibility specified. Defaulting to "public". 
  function batchReturnEthIfFailed(uint _numberOfReturns) onlyOwner whenNotPaused {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1030:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawEth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1039:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawRemainingBalanceForManualRecovery() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1049:3: Warning: No visibility specified. Defaulting to "public". 
  function startCrowdsale() onlyOwner  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1060:3: Warning: No visibility specified. Defaulting to "public". 
  function getAccountsNumber() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1064:3: Warning: No visibility specified. Defaulting to "public". 
  function getEthRaised() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1069:3: Warning: No visibility specified. Defaulting to "public". 
  function getTokensTotal() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1073:3: Warning: No visibility specified. Defaulting to "public". 
  function getWithdrawedToken() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1077:3: Warning: No visibility specified. Defaulting to "public". 
  function calculateMaxContribution() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1081:3: Warning: No visibility specified. Defaulting to "public". 
  function getSoftCap() constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1085:3: Warning: No visibility specified. Defaulting to "public". 
  function getHardCap() constant returns(uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1089:3: Warning: No visibility specified. Defaulting to "public". 
  function getSaleStatus() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1093:3: Warning: No visibility specified. Defaulting to "public". 
  function getStartDate() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1097:3: Warning: No visibility specified. Defaulting to "public". 
  function getEndDate() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:1106:3: Warning: No visibility specified. Defaulting to "public". 
  function getTokenBalance() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:8:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:21:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:26:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:518:3: Warning: Function state mutability can be restricted to view
  function getBalanceContract() internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:628:3: Warning: Function state mutability can be restricted to view
  function calculateBonusForHours(uint256 _tokens) returns(uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:942:3: Warning: Function state mutability can be restricted to view
  function checkBalanceContract() internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in OpportySale.batchReturnTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#985-1013):
	External calls:
	- er = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#991)
	- token.transfer(currentParticipantAddress,tokensCount * (10 ** 18)) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1006-1012)
	State variables written after the call(s):
	- hasWithdrawedTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1011)
	- nextContributorToTransferTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1012-1013)
Reentrancy in OpportySale.checkCrowdsaleState (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#860-877):
	External calls:
	- getEthRaised() >= HARDCAP && state != SaleState.ENDED (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#862-869)
	State variables written after the call(s):
	- state (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#865)
Reentrancy in OpportySale.getTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#974-985):
	External calls:
	- er = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#974-975)
	- token.transfer(msg.sender,tokenCount * (10 ** 18)) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#979-985)
	State variables written after the call(s):
	- hasWithdrawedTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#982-984)
Reentrancy in OpportySale.processTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#879-929):
	External calls:
	- maxContribution = calculateMaxContribution() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#884-886)
	- ethrai = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#891)
	State variables written after the call(s):
	- ethRaised (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#913)
Reentrancy in OpportySale.processTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#879-929):
	External calls:
	- maxContribution = calculateMaxContribution() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#884-886)
	- ethrai = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#891)
	- timeBonus = bonus.calculateBonusForHours(tokenAmount) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#918-921)
	State variables written after the call(s):
	- contributorList (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#921-924)
	- contributorList (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#924-925)
Reentrancy in OpportySale.releaseTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#943-968):
	External calls:
	- cbalance = checkBalanceContract() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#947-949)
	- require(bool)(withdrawedTokens >= totalTokens || getEthRaised() < SOFTCAP) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#950-951)
	- getEthRaised() >= SOFTCAP (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#952-968)
	- token.transfer(holdContract,cbalance) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#958-965)
	- holdContract.addHolder(msg.sender,cbalance,1,endDate.add(15724800)) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#959-960)
	State variables written after the call(s):
	- releasedTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#960-961)
Reentrancy in OpportySale.startCrowdsale (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1093-1103):
	External calls:
	- require(bool)(checkBalanceContract() >= minimumTokensToStart) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1101-1102)
	State variables written after the call(s):
	- state (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1102-1103)
Reentrancy in HoldPresaleContract.unlockTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#357-377):
	External calls:
	- OppToken.transfer(msg.sender,holderList[contributor].tokens) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#369-374)
	State variables written after the call(s):
	- holderList (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#371-373)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
OpportyPresale.getTokensBack (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#551-559) does not use the value returned by external calls:
	-token.transfer(msg.sender,balance) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#558-559)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
OpportySale.batchReturnTokens has external calls inside a loop:
	- token.transfer(currentParticipantAddress,tokensCount * (10 ** 18)) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1006-1012)
OpportySale.batchReturnEthIfFailed has external calls inside a loop:
	- ! currentParticipantAddress.send(contribution) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1052-1064)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in OpportySale.batchReturnEthIfFailed (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1031-1065):
	External calls:
	- require(bool)(now > endDate && getEthRaised() < SOFTCAP) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1034-1035)
	State variables written after the call(s):
	- hasClaimedEthWhenFail (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1051-1052)
Reentrancy in OpportySale.batchReturnEthIfFailed (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1031-1065):
	External calls:
	- require(bool)(now > endDate && getEthRaised() < SOFTCAP) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1034-1035)
	External calls sending eth:
	- ! currentParticipantAddress.send(contribution) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1052-1064)
	State variables written after the call(s):
	- nextContributorToClaim (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1064)
Reentrancy in OpportySale.batchReturnTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#985-1013):
	External calls:
	- er = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#991)
	State variables written after the call(s):
	- hasWithdrawedTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1006)
Reentrancy in OpportySale.batchReturnTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#985-1013):
	External calls:
	- er = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#991)
	- token.transfer(currentParticipantAddress,tokensCount * (10 ** 18)) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1006-1012)
	State variables written after the call(s):
	- withdrawedTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1010-1011)
Reentrancy in OpportySale.fallback (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#840-856):
	External calls:
	- chstate = checkCrowdsaleState() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#844-845)
	- processTransaction(msg.sender,msg.value) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#846-849)
	External calls sending eth:
	- processTransaction(msg.sender,msg.value) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#846-849)
	State variables written after the call(s):
	- contributorIndexes (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#846-849)
Reentrancy in OpportySale.getTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#974-985):
	External calls:
	- er = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#974-975)
	- token.transfer(msg.sender,tokenCount * (10 ** 18)) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#979-985)
	State variables written after the call(s):
	- withdrawedTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#981-982)
Reentrancy in OpportySale.processTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#879-929):
	External calls:
	- maxContribution = calculateMaxContribution() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#884-886)
	- ethrai = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#891)
	State variables written after the call(s):
	- contributorIndexes (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#904)
	- contributorList (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#901)
	- contributorList (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#901-902)
	- contributorList (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#906-913)
	- nextContributorIndex (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#905-906)
Reentrancy in OpportySale.processTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#879-929):
	External calls:
	- maxContribution = calculateMaxContribution() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#884-886)
	- ethrai = getEthRaised() (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#891)
	- timeBonus = bonus.calculateBonusForHours(tokenAmount) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#918-921)
	State variables written after the call(s):
	- totalTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#925-926)
Reentrancy in OpportySale.refund (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1014-1031):
	External calls:
	- require(bool)(now > endDate && getEthRaised() < SOFTCAP) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1015)
	State variables written after the call(s):
	- hasClaimedEthWhenFail (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1020-1023)
Reentrancy in OpportyPresale.sendTokensToHold (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#538-551):
	External calls:
	- require(bool)(getBalanceContract() >= tokenRaised) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#543-544)
	- token.transfer(holdContract,tokenRaised) (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#545-551)
	State variables written after the call(s):
	- tokensTransferredToHold (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#546-547)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
OpportySale.minimumTokensToStart should be constant (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#744-746)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
BasicToken.balanceOf (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#75-82) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#40-41) should be declared external
BasicToken.transfer (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#59-71) should be declared external
ERC20Basic.transfer (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#41-42) should be declared external
StandardToken.allowance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#153-154) should be declared external
ERC20.allowance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#86-87) should be declared external
StandardToken.transferFrom (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#110-126) should be declared external
ERC20.transferFrom (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#87-88) should be declared external
StandardToken.approve (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#131-144) should be declared external
ERC20.approve (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#88-91) should be declared external
StandardToken.increaseApproval (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#160-168) should be declared external
StandardToken.decreaseApproval (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#168-182) should be declared external
Ownable.transferOwnership (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#248-258) should be declared external
Pausable.pause (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#290-293) should be declared external
Pausable.unpause (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#297-301) should be declared external
HoldPresaleContract.setPresaleCont (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#335-336) should be declared external
HoldPresaleContract.getBalance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#356-357) should be declared external
HoldPresaleContract.addAssetsOwner (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#377-385) should be declared external
HoldPresaleContract.removeAssetsOwner (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#385-395) should be declared external
HoldPresaleContract.getAssetsOwners (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#395-402) should be declared external
OpportyPresale.startPresale (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#463-468) should be declared external
OpportyPresale.endPresale (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#468-472) should be declared external
OpportyPresale.addToWhitelist (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#472-502) should be declared external
OpportyPresale.fallback (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#502-535) should be declared external
OpportyPresale.sendTokensToHold (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#538-551) should be declared external
OpportyPresale.getTokensBack (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#551-559) should be declared external
OpportyPresale.withdrawEth (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#559-568) should be declared external
OpportyPresale.setEndSaleDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#568-584) should be declared external
OpportyPresale.setEndDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#584-591) should be declared external
OpportyPresale.getTokenBalance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#592-595) should be declared external
OpportySaleBonus.calculateBonusForHours (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#645-670) should be declared external
OpportySaleBonus.changeStartDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#670-689) should be declared external
OpportySaleBonus.getBonus (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#693-717) should be declared external
OpportySale.setStartDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#809-819) should be declared external
OpportySale.setEndDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#819-829) should be declared external
OpportySale.setSoftCap (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#829-832) should be declared external
OpportySale.setHardCap (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#832-835) should be declared external
OpportySale.fallback (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#840-856) should be declared external
OpportySale.releaseTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#943-968) should be declared external
OpportySale.getTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#974-985) should be declared external
OpportySale.batchReturnTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#985-1013) should be declared external
OpportySale.refund (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1014-1031) should be declared external
OpportySale.batchReturnEthIfFailed (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1031-1065) should be declared external
OpportySale.withdrawEth (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1069-1078) should be declared external
OpportySale.withdrawRemainingBalanceForManualRecovery (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1078-1090) should be declared external
OpportySale.startCrowdsale (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1093-1103) should be declared external
OpportySale.getAccountsNumber (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1106-1111) should be declared external
OpportySale.getTokensTotal (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1114-1119) should be declared external
OpportySale.getWithdrawedToken (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getSoftCap (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getHardCap (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getSaleStatus (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getStartDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getEndDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.hasEnded (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getTokenBalance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
OpportySale.getCurrentBonus (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol:
	- pragma solidity^0.4.15 (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of BasicToken.balanceOf (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#75-78) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#60) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#60-62) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#153) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#153) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#112) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#112) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#112-114) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#132) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#132) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#161) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#161) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#169) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#169-170) is not in mixedCase
Function 'OpportyToken.OpportyToken' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#206-209) is not in mixedCase
Function 'Ownable.Ownable' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#235) is not in mixedCase
Function 'HoldPresaleContract.HoldPresaleContract' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#332-334) is not in mixedCase
Parameter '_OppToken' of HoldPresaleContract.HoldPresaleContract (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#333) is not in mixedCase
Parameter '_owner' of HoldPresaleContract.addAssetsOwner (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#379) is not in mixedCase
Parameter '_owner' of HoldPresaleContract.removeAssetsOwner (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#387) is not in mixedCase
Parameter '_index' of HoldPresaleContract.getAssetsOwners (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#397) is not in mixedCase
Variable 'HoldPresaleContract.OppToken' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#306-307) is not in mixedCase
Function 'OpportyPresale.OpportyPresale' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#451-463) is not in mixedCase
Function 'OpportySaleBonus.OpportySaleBonus' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#628-642) is not in mixedCase
Parameter '_startDate' of OpportySaleBonus.OpportySaleBonus (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#628) is not in mixedCase
Parameter '_tokens' of OpportySaleBonus.calculateBonusForHours (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#645-646) is not in mixedCase
Parameter '_date' of OpportySaleBonus.changeStartDate (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#670-671) is not in mixedCase
Function 'OpportySale.OpportySale' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#788-809) is not in mixedCase
Parameter '_contributor' of OpportySale.processTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#879-880) is not in mixedCase
Parameter '_amount' of OpportySale.processTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#880-882) is not in mixedCase
Parameter '_stateChanged' of OpportySale.refundTransaction (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#934-936) is not in mixedCase
Parameter '_numberOfReturns' of OpportySale.batchReturnTokens (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#985-990) is not in mixedCase
Parameter '_numberOfReturns' of OpportySale.batchReturnEthIfFailed (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#1032-1033) is not in mixedCase
Variable 'OpportySale.SOFTCAP' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#722) is not in mixedCase
Variable 'OpportySale.HARDCAP' (/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol#722-723) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x89ac2485449303a67dac802631d5cea8cb2c856c.sol analyzed (12 contracts), 115 result(s) found