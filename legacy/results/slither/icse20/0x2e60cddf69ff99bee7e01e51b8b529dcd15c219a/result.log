INFO:Detectors:[91m
Revolution.sendDividends (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#587-591) sends eth to arbitrary user
	Dangerous calls:
	- addr.send(value) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol)
Revolution.sendDividendsWithRefBonus (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol) sends eth to arbitrary user
	Dangerous calls:
	- addr.send(value + refBonus) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Revolution.payout (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#508-559):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#519-524)
	- size = m_investors.size() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#528)
	- investorAddr = m_investors.keyFromIndex(i) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#536-537)
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#537-539)
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#546-550)
	External calls sending eth:
	- sendDividendsWithRefBonus(investorAddr,value,refBonus) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#550-552)
	- sendDividends(investorAddr,value) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#553-554)
	State variables written after the call(s):
	- m_nextWave (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#544)
	- m_paysys (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#558-559)
Reentrancy in Revolution.payout (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#508-559):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#519-524)
	- size = m_investors.size() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#528)
	- investorAddr = m_investors.keyFromIndex(i) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#536-537)
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#537-539)
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#546-550)
	- m_paysys.latestKeyIndex = m_investors.iterStart() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#558)
	External calls sending eth:
	- sendDividendsWithRefBonus(investorAddr,value,refBonus) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#550-552)
	- sendDividends(investorAddr,value) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#553-554)
	State variables written after the call(s):
	- m_paysys (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#558)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
ToAddress.toAddr (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#320-323) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Revolution.doInvest (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#463-507) uses a dangerous strict equality:
	- m_paysys.mode == Paymode.Pull
Revolution.doInvest (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#463-507) uses a dangerous strict equality:
	- m_paysys.mode == Paymode.Pull
Revolution.payout (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#508-559) uses a dangerous strict equality:
	- m_paysys.latestKeyIndex == m_investors.iterStart()
	- i == size
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Revolution.doInvest (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#463-507):
	External calls:
	- notZeroNotSender(refs[0]) && m_investors.contains(refs[0]) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#469-492)
	- assert(bool)(m_investors.addRefBonus(refs[0],reward)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#472)
	State variables written after the call(s):
	- m_referrals (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#472-473)
Reentrancy in Revolution.getMyDividends (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#430-463):
	External calls:
	- investor = getMemInvestor(msg.sender) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#434-435)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,m_paysys.latestTime)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#439-440)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#448-450)
	- nextWave() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
	State variables written after the call(s):
	- m_investors (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
	- m_paysys (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
Reentrancy in Revolution.payout (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#508-559):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#519-524)
	State variables written after the call(s):
	- m_paysys (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#522-523)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
refs in Revolution.fallback (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#396-399) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Revolution.payout has external calls inside a loop:
	- investorAddr = m_investors.keyFromIndex(i) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#536-537)
Revolution.payout has external calls inside a loop:
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#537-539)
Revolution.payout has external calls inside a loop:
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#546-550)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Revolution.constructor (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#375-390):
	External calls:
	- nextWave() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#385-386)
	State variables written after the call(s):
	- waveStartup (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#386-390)
Reentrancy in Revolution.doInvest (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#463-507):
	External calls:
	- notZeroNotSender(refs[0]) && m_investors.contains(refs[0]) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#469-492)
	- assert(bool)(m_investors.addRefBonus(refs[0],reward)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#472)
	- notZeroNotSender(refs[1]) && m_investors.contains(refs[1]) && refs[0] != refs[1] (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#480-492)
	- assert(bool)(m_investors.addRefBonus(refs[1],reward)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#483-484)
	- notZeroNotSender(refs[2]) && m_investors.contains(refs[2]) && refs[0] != refs[2] && refs[1] != refs[2] (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#485-492)
	- assert(bool)(m_investors.addRefBonus(refs[2],reward)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#488-491)
	- m_investors.contains(msg.sender) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#498-505)
	- assert(bool)(m_investors.addValue(msg.sender,value)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#499-504)
	- assert(bool)(m_investors.insert(msg.sender,value)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#504)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#505-506)
	External calls sending eth:
	- adminAddr.transfer(m_adminPercent.mul(msg.value)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#494)
	- payerAddr.transfer(m_payerPercent.mul(msg.value)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#495-498)
	State variables written after the call(s):
	- investmentsNum (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#507)
Reentrancy in Revolution.getMyDividends (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#430-463):
	External calls:
	- investor = getMemInvestor(msg.sender) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#434-435)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,m_paysys.latestTime)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#439-440)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#448-450)
	- nextWave() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
	State variables written after the call(s):
	- investmentsNum (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
	- m_nextWave (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
	- waveStartup (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#455-456)
Reentrancy in Revolution.nextWave (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol):
	External calls:
	- m_paysys.latestKeyIndex = m_investors.iterStart() (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol)
	State variables written after the call(s):
	- investmentsNum (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol)
	- m_nextWave (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol)
	- waveStartup (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ToAddress.toAddr uses assembly (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#320-323)
	- /unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#321-323
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
InvestorsStorage.insert (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#70-80) should be declared external
InvestorsStorage.investorFullInfo (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#80-90) should be declared external
InvestorsStorage.investorBaseInfo (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#90-99) should be declared external
InvestorsStorage.investorShortInfo (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#99-105) should be declared external
InvestorsStorage.addRefBonus (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#105-111) should be declared external
InvestorsStorage.addValue (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#111-117) should be declared external
InvestorsStorage.setPaymentTime (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#117-123) should be declared external
InvestorsStorage.setRefBonus (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#123-132) should be declared external
InvestorsStorage.keyFromIndex (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#132-136) should be declared external
InvestorsStorage.contains (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#136-141) should be declared external
InvestorsStorage.size (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#141-147) should be declared external
InvestorsStorage.iterStart (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#147-148) should be declared external
Accessibility.provideAccess (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#240-253) should be declared external
Accessibility.access (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#253-258) should be declared external
PaymentSystem.paymode (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#275-276) should be declared external
Revolution.fallback (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#390-400) should be declared external
Revolution.investorsNumber (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#400-404) should be declared external
Revolution.balanceETH (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#404-407) should be declared external
Revolution.payerPercent (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#407-411) should be declared external
Revolution.dividendsPercent (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#411-415) should be declared external
Revolution.adminPercent (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#415-420) should be declared external
Revolution.referrerPercent (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#420-424) should be declared external
Revolution.investorInfo (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#424-429) should be declared external
Revolution.latestPayout (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#429-430) should be declared external
Revolution.payout (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#508-559) should be declared external
Revolution.setAdminAddr (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#559-564) should be declared external
Revolution.setPayerAddr (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#564-572) should be declared external
Revolution.setPullPaymode (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#572-575) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Struct 'InvestorsStorage.investor' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#49-54) is not in CapWords
Struct 'InvestorsStorage.itmap' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#54-60) is not in CapWords
Parameter '_a' of SafeMath.mul (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#149) is not in mixedCase
Parameter '_b' of SafeMath.mul (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#149) is not in mixedCase
Parameter '_a' of SafeMath.div (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#163-164) is not in mixedCase
Parameter '_b' of SafeMath.div (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#164) is not in mixedCase
Parameter '_a' of SafeMath.sub (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#176) is not in mixedCase
Parameter '_b' of SafeMath.sub (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#176) is not in mixedCase
Parameter '_a' of SafeMath.add (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#183) is not in mixedCase
Parameter '_b' of SafeMath.add (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#183-184) is not in mixedCase
Struct 'Percent.percent' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#203-204) is not in CapWords
Variable 'Accessibility.m_admins' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#230) is not in mixedCase
Variable 'PaymentSystem.m_paysys' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#268-269) is not in mixedCase
Variable 'Revolution.m_investors' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#330-331) is not in mixedCase
Variable 'Revolution.m_referrals' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#331-332) is not in mixedCase
Variable 'Revolution.m_nextWave' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#332) is not in mixedCase
Constant 'Revolution.minInvesment' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#336) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution.maxBalance' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#337) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution.pauseOnNextWave' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#337-338) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Revolution.m_dividendsPercent' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#338-341) is not in mixedCase
Variable 'Revolution.m_adminPercent' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#341-342) is not in mixedCase
Variable 'Revolution.m_payerPercent' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#342-343) is not in mixedCase
Variable 'Revolution.m_refPercent' (/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol#343-344) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/24/0x2e60cddf69ff99bee7e01e51b8b529dcd15c219a.sol analyzed (8 contracts), 70 result(s) found