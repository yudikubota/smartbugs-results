INFO:Slither:Compilation warnings/errors on /unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:4:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:9:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;       
                                 ^---^
[91m/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:8:24: Error: Modifier body does not contain '_'.[0m
    modifier onlyOwner {
                       ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:13:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:36:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GSIToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:53:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:54:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:55:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:64:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen            
                                  ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:65:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:66:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:67:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:76:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	    if(msg.sender!=owner) throw;
	                          ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:84:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:90:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:95:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender!=owner) throw;
		                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:96:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(balanceOf[target]<amount) throw;
		                             ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:121:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:148:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
		function GSI() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:170:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if(freeReadings[msg.sender]==0) throw;
				                                ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:173:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<lastReading[msg.sender].value) throw;
			                                           ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:174:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(_reading<requestReading[msg.sender].value) throw;
			                                              ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:175:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(now<lastReading[msg.sender].timestamp+secondsBetweenReadings) throw;			
			                                                                 ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:183:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:191:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:196:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:201:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;
			                           ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:207:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(oracles[msg.sender]!=1) throw;	
			                           ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:213:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		  if(oracles[msg.sender]!=1) throw;
		                             ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:222:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:227:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:232:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:237:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(msg.sender!=owner) throw;
			                      ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:242:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(price<pricegreengrey) throw;
			                         ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:243:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greenToken.balanceOf(msg.sender)<amount*price) throw;
			                                                  ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:244:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if(greyToken.balanceOf(msg.sender)<amount) throw;
			                                           ^---^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract owned {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:58:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:71:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:79:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, owner, mintedAmount);
        ^------------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:80:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(owner, target, mintedAmount);
        ^-----------------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:99:3: Warning: Invoking events without "emit" prefix is deprecated.
		Transfer(target,owner,amount);
		^---------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:178:4: Warning: Invoking events without "emit" prefix is deprecated.
			OracleRequest(msg.sender);
			^-----------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:179:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(msg.value);
			^-------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:203:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGreen(recipient,tokens);
			^---------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:209:4: Warning: Invoking events without "emit" prefix is deprecated.
			MintedGrey(recipient,tokens);
			^--------------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:215:8: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		  if(this.balance>10*requiredGas) {
		     ^----------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:216:15: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
			owner.send(this.balance);
			           ^----------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:216:4: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
			owner.send(this.balance);
			^----------------------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:249:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				owner.send(this.balance);
				           ^----------^
/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol:249:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
				owner.send(this.balance);
				^----------------------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/22/0xaf6d36e6a376cda44a5ce9280507e5e24132c143.sol analyzed (0 contracts), 0 result(s) found