INFO:Slither:Compilation warnings/errors on /unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:154:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SeedDex(address admin_, address manager_, address feeAccount_, uint feeTakeMaker_, uint feeTakeSender_,  uint feeTakeMakerFic_, uint feeTakeSenderFic_,  address predecessor_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:117:40: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xF589ACbe618B10A2ffc850948cB43EbC438ad066'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  address constant public FicAddress = 0xf589acbe618b10a2ffc850948cb43ebc438ad066;  // Florafic token address
                                       ^----------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:228:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
    ^------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:241:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
    ^----------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:259:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:294:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:325:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:328:5: Warning: Invoking events without "emit" prefix is deprecated.
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, hash, amount);
    ^-----------------------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:352:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:354:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                       ^-------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:360:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenGet, amount, tokenGive, amountGive.mul(amount) / amountGet, user, msg.sender,now);
    ^------------------------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:455:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:457:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                       ^-------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:488:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:510:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:511:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require ((orders[msg.sender][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == msg.sender));
                                                    ^-------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:513:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
    ^-------------------------------------------------------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:554:5: Warning: Invoking events without "emit" prefix is deprecated.
    FundsMigrated(msg.sender, newContract);
    ^------------------------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:587:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      bytes32 hash = keccak256(tokenGet);
                     ^-----------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:587:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
      bytes32 hash = keccak256(tokenGet);
                     ^-----------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:588:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogEvent('hash',hash);
      ^-------------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:270:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                          ^------------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:270:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                          ^---------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:270:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                                       ^--------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:487:135: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... uint8 v ... 
     ^-----^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:487:144: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 r ... 
     ^-------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:487:155: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 s ... 
     ^-------^
/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:270:3: Warning: Function state mutability can be restricted to view
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in SeedDex.migrateFunds (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#544-570):
	External calls:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#552-557)
	- require(bool)(IERC20(token).approve(newExchange,tokenAmount)) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#563-565)
	External calls sending eth:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#552-557)
	State variables written after the call(s):
	- tokens (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#565-566)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
amount in SeedDex.order (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#333) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
SeedDex.migrateFunds has external calls inside a loop:
	- require(bool)(IERC20(token).approve(newExchange,tokenAmount)) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#563-565)
SeedDex.migrateFunds has external calls inside a loop:
	- newExchange.depositTokenForUser(token,tokenAmount,msg.sender) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#569)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in SeedDex.depositToken (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#258-266):
	External calls:
	- require(bool)(IERC20(token).transferFrom(msg.sender,this,amount)) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#263-264)
	State variables written after the call(s):
	- depositingTokenFlag (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#264)
	- tokens (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#264-265)
Reentrancy in SeedDex.depositTokenForUser (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol):
	External calls:
	- require(bool)(IERC20(token).transferFrom(msg.sender,this,amount)) (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol)
	State variables written after the call(s):
	- depositingTokenFlag (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol)
	- tokens (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
SeedDex.fallback (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#179-180) should be declared external
SeedDex.changeAdmin (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#183-186) should be declared external
SeedDex.changeManager (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#189-192) should be declared external
SeedDex.changeFeeAccount (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#194-196) should be declared external
SeedDex.changeFeeTakeMaker (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#200-204) should be declared external
SeedDex.changeFeeTakeSender (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#204-207) should be declared external
SeedDex.changeFeeTakeMakerFic (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#208-212) should be declared external
SeedDex.changeFeeTakeSenderFic (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#212-217) should be declared external
SeedDex.setSuccessor (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#217-222) should be declared external
SeedDex.deposit (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#232-235) should be declared external
SeedDex.withdraw (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#241-249) should be declared external
SeedDex.depositToken (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#258-266) should be declared external
SeedDex.tokenFallback (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#275-286) should be declared external
SeedDex.withdrawToken (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#294-303) should be declared external
SeedDex.balanceOf (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#311-316) should be declared external
SeedDex.order (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#328-337) should be declared external
SeedDex.trade (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#354-370) should be declared external
SeedDex.testTrade (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#434-446) should be declared external
SeedDex.amountFilled (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#495-501) should be declared external
SeedDex.cancelOrder (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#513-527) should be declared external
SeedDex.migrateFunds (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#544-570) should be declared external
SeedDex.depositForUser (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#573-577) should be declared external
SeedDex.depositTokenForUser (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol) should be declared external
SeedDex.checkshash (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'SeedDex.SeedDex' (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#154-177) is not in mixedCase
Constant 'SeedDex.FicAddress' (/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#118-119) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/32/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol analyzed (3 contracts), 32 result(s) found