INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:29:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CCT() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:78:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:79:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:80:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:81:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:89:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:95:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:96:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:97:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:98:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:99:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:107:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:108:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:115:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:116:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:123:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (lockOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                         ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:124:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:132:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != admin) throw;
		                        ^---^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:27:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:84:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:103:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:111:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:119:9: Warning: Invoking events without "emit" prefix is deprecated.
        Lock(msg.sender, _value);
        ^----------------------^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:127:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unlock(msg.sender, _value);
        ^------------------------^
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:56:5: Warning: No visibility specified. Defaulting to "public". 
    function CCT() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function setName(string _name)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:71:5: Warning: No visibility specified. Defaulting to "public". 
    function setSymbol(string _symbol)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:87:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:94:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:106:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:114:2: Warning: No visibility specified. Defaulting to "public". 
	function lock(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:122:2: Warning: No visibility specified. Defaulting to "public". 
	function unlock(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:131:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:136:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:27:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
CCT (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#34-138) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#78-87)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#27-34) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
CCT.decimals should be constant (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#38)
CCT.version should be constant (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#35)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#33:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
CCT.setName (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#65-71) should be declared external
CCT.setSymbol (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#73-77) should be declared external
CCT.transfer (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#78-87) should be declared external
CCT.approve (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#89-94) should be declared external
CCT.transferFrom (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#95-107) should be declared external
CCT.burn (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#107-115) should be declared external
CCT.lock (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#115-123) should be declared external
CCT.unlock (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#123-133) should be declared external
CCT.withdrawEther (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#136-138) should be declared external
CCT.fallback (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol:
	- pragma solidity^0.4.11 (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#4-6): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'CCT.CCT' (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#58-63) is not in mixedCase
Parameter '_name' of CCT.setName (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#66) is not in mixedCase
Parameter '_symbol' of CCT.setSymbol (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#74-75) is not in mixedCase
Parameter '_to' of CCT.transfer (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#78) is not in mixedCase
Parameter '_value' of CCT.transfer (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#78) is not in mixedCase
Parameter '_spender' of CCT.approve (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#89-90) is not in mixedCase
Parameter '_value' of CCT.approve (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#90) is not in mixedCase
Parameter '_from' of CCT.transferFrom (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#95) is not in mixedCase
Parameter '_to' of CCT.transferFrom (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#95) is not in mixedCase
Parameter '_value' of CCT.transferFrom (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#95) is not in mixedCase
Parameter '_value' of CCT.burn (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#107) is not in mixedCase
Parameter '_value' of CCT.lock (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#115) is not in mixedCase
Parameter '_value' of CCT.unlock (/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol#123-124) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0x95b268743adc0a1f885c040010e85641b08c9b38.sol analyzed (2 contracts), 45 result(s) found