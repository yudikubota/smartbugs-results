INFO:Slither:Compilation warnings/errors on /unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:24:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Addresses() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:84:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:168:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Migrations() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:197:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:377:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Crowdsale() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:150:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:202:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:211:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:218:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(_owner, _spender, _value);
    ^--------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:249:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_address, _tokens);
    ^---------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:477:22: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        sendToOwners(this.balance);
                     ^----------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:480:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
          sendToOwners(this.balance);
                       ^----------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:483:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            sendToOwners(this.balance);
                         ^----------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:486:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
              sendToOwners(this.balance);
                           ^----------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:509:7: Warning: Invoking events without "emit" prefix is deprecated.
      ShowInfo(_tokens);
      ^---------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:589:7: Warning: Invoking events without "emit" prefix is deprecated.
      ShowInfo(_time);
      ^-------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:666:7: Warning: Invoking events without "emit" prefix is deprecated.
      ShowInfoBool(mintingFinished);
      ^---------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:668:7: Warning: Invoking events without "emit" prefix is deprecated.
      ShowInfoBool(mintingFinished);
      ^---------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:786:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      return this.balance;
             ^----------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:853:13: Warning: Using contract member "transfer" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).transfer" instead.
            wrapper.transfer(msg.value);
            ^--------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function Addresses() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:66:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:67:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:73:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:74:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:75:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _owner, address _spender, uint256 _value) returns (bool);
  ^--------------------------------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:84:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:93:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:147:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) isFreeze returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:154:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:168:3: Warning: No visibility specified. Defaulting to "public". 
  function Migrations() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:172:3: Warning: No visibility specified. Defaulting to "public". 
  function setCompleted(uint completed) restricted {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:176:3: Warning: No visibility specified. Defaulting to "public". 
  function upgrade(address new_address) restricted {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:196:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) isFreeze returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:206:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:215:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _owner, address _spender, uint256 _value) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:222:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:286:5: Warning: No visibility specified. Defaulting to "public". 
    function update(string datasource, string arg) payable;
    ^-----------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:287:5: Warning: No visibility specified. Defaulting to "public". 
    function update(uint timestamp, string datasource, string arg) payable;
    ^---------------------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:288:5: Warning: No visibility specified. Defaulting to "public". 
    function getWrapperBalance() constant returns(uint256);
    ^-----------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:289:5: Warning: No visibility specified. Defaulting to "public". 
    function getWrapperData() constant returns(bytes32);
    ^--------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:290:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string datasource) constant returns(uint256);
    ^-------------------------------------------------------------^
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:377:5: Warning: No visibility specified. Defaulting to "public". 
    function Crowdsale() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:445:3: Warning: No visibility specified. Defaulting to "public". 
  function bytesToUInt(bytes32 v) constant returns (uint ret) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:859:5: Warning: No visibility specified. Defaulting to "public". 
    function getQueryPrice(string datasource) constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:867:5: Warning: No visibility specified. Defaulting to "public". 
    function getWrapperData() constant returns(bytes32) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:102:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:108:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:113:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:118:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:124:3: Warning: Function state mutability can be restricted to pure
  function mod(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:445:3: Warning: Function state mutability can be restricted to pure
  function bytesToUInt(bytes32 v) constant returns (uint ret) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:535:5: Warning: Function state mutability can be restricted to view
    function grantedWallets(address _address) private returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:718:5: Warning: Function state mutability can be restricted to view
    function calculateBonusForHours(uint256 _tokens) private returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:836:32: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      uint256 secondDiscount = calculateBonusForHours(rate);
                               ^--------------------------^

INFO:Detectors:[91m
Reentrancy in Crowdsale.sendToOwners (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#762-810):
	External calls:
	- addresses.addr1().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#769-770)
	- addresses.addr2().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#770-772)
	- addresses.addr3().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#773-778)
	- addresses.addr4().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#778-780)
	- addresses.addr1().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#781-785)
	State variables written after the call(s):
	- firstWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#785)
Reentrancy in Crowdsale.sendToOwners (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#762-810):
	External calls:
	- addresses.addr1().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#769-770)
	- addresses.addr2().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#770-772)
	- addresses.addr3().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#773-778)
	- addresses.addr4().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#778-780)
	- addresses.addr2().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#789)
	State variables written after the call(s):
	- secondWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#790-793)
Reentrancy in Crowdsale.sendToOwners (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#762-810):
	External calls:
	- addresses.addr1().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#769-770)
	- addresses.addr2().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#770-772)
	- addresses.addr3().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#773-778)
	- addresses.addr4().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#778-780)
	- addresses.addr3().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#793-794)
	State variables written after the call(s):
	- thirdWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#797)
Reentrancy in Crowdsale.sendToOwners (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#762-810):
	External calls:
	- addresses.addr1().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#769-770)
	- addresses.addr2().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#770-772)
	- addresses.addr3().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#773-778)
	- addresses.addr4().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#778-780)
	- addresses.addr4().transfer(nineThreePercent) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#799-801)
	State variables written after the call(s):
	- fourWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#801-802)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[91m
StandardToken.ico_finish (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#196-197) shadows:
	- BasicToken.ico_finish (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#147)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[93m
Crowdsale.sendToAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#521-552) does not use the value returned by external calls:
	-token.approve(_address,this,allTokens) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#539-542)
Crowdsale.getTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#571-575) does not use the value returned by external calls:
	-token.getTotalTokenCount() (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#574)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Crowdsale.finishMinting has external calls inside a loop:
	- token.burnTokens(manualAddr) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#711-712)
Crowdsale.finishMinting has external calls inside a loop:
	- token.burnTokens(addr) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#698-699)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#391-454):
	External calls:
	- setTotalSupply() (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#417)
	State variables written after the call(s):
	- firstBonusPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#419-420)
	- firstExtraBonus (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#420-422)
	- firstWithdrowAmount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#443-445)
	- firstWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#432-436)
	- fourBonusPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#429-431)
	- fourExtraBonus (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#431-432)
	- fourWithdrowAmount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#448-452)
	- fourWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#441-442)
	- privilegedWallets (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#454)
	- privilegedWalletsCount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#453)
	- secondBonusPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#422-423)
	- secondExtraBonus (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#423-424)
	- secondWithdrowAmount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#445-446)
	- secondWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#436-437)
	- soldTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#452-453)
	- thirdBonusPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#424-425)
	- thirdExtraBonus (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#425-427)
	- thirdWithdrowAmount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#446-447)
	- thirdWithdrowPhase (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#437-441)
	- totalETH (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#452)
Reentrancy in Crowdsale.mint (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#619-645):
	External calls:
	- rate = calculateRate() (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#621-623)
	State variables written after the call(s):
	- decimals (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#623)
Reentrancy in Crowdsale.mint (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#619-645):
	External calls:
	- rate = calculateRate() (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#621-623)
	External calls sending eth:
	- refund(remainder) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#629-630)
	State variables written after the call(s):
	- ico_buyers_eth (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#638-641)
	- ico_buyers_token (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#638-641)
	- investors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#638-641)
	- manualAddresses (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#638-641)
	- manualAddressesCount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#638-641)
	- totalETH (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#630-631)
Reentrancy in Crowdsale.mint (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#619-645):
	External calls:
	- rate = calculateRate() (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#621-623)
	- token.mint(msg.sender,allTokens) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#641-642)
	External calls sending eth:
	- refund(remainder) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#629-630)
	State variables written after the call(s):
	- soldTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#642-645)
Reentrancy in Crowdsale.sendToAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#521-552):
	External calls:
	- token.approve(_address,this,allTokens) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#539-542)
	State variables written after the call(s):
	- ico_buyers_eth (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#543-545)
	- ico_buyers_token (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#543-545)
	- investors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#543-545)
	- manualAddresses (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#543-545)
	- manualAddressesCount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#543-545)
Reentrancy in Crowdsale.sendToAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#521-552):
	External calls:
	- token.approve(_address,this,allTokens) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#539-542)
	- token.mint(_address,allTokens) (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#546-548)
	State variables written after the call(s):
	- soldTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#551)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
BasicToken.ico_finish should be constant (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#147)
Crowdsale.ETHUSD should be constant (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#306-308)
Crowdsale.g should be constant (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#380-382)
Crowdsale.minPrice should be constant (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#384-386)
Crowdsale.r should be constant (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#382)
StandardToken.ico_finish should be constant (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#196-197)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#67-68) should be declared external
BasicToken.balanceOf (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#161-167) should be declared external
ERC20Basic.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#68) should be declared external
BasicToken.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#149-161) should be declared external
ERC20.allowance (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#72-73) should be declared external
StandardToken.allowance (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#231-238) should be declared external
StandardToken.transferFrom (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#200-211) should be declared external
ERC20.transferFrom (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#73-75) should be declared external
StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#211-222) should be declared external
ERC20.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#75) should be declared external
StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#222-230) should be declared external
ERC20.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#75-76) should be declared external
Migrations.setCompleted (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#177-182) should be declared external
Migrations.upgrade (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#182-189) should be declared external
MintableToken.setTotalSupply (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#247-251) should be declared external
MintableToken.getTotalTokenCount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#251-256) should be declared external
MintableToken.mint (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#256-265) should be declared external
MintableToken.burnTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#266-272) should be declared external
WrapperOraclize.update (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#290-291) should be declared external
WrapperOraclize.update (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#291-298) should be declared external
WrapperOraclize.getWrapperBalance (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#298-302) should be declared external
WrapperOraclize.getWrapperData (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#302-303) should be declared external
WrapperOraclize.getPrice (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#304-306) should be declared external
Crowdsale.sendToAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#521-552) should be declared external
Crowdsale.getTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#571-575) should be declared external
Crowdsale.setTransferOwnership (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#589-598) should be declared external
Crowdsale.setICODate (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#612-615) should be declared external
Crowdsale.getICODate (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#617-619) should be declared external
Crowdsale.getManualByAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#671-674) should be declared external
Crowdsale.getManualInvestorsCount (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#674-679) should be declared external
Crowdsale.getManualAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#679-681) should be declared external
Crowdsale.getFinishStatus (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#714-718) should be declared external
Crowdsale.manualRefund (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#718-727) should be declared external
Crowdsale.getTokensManual (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#735-737) should be declared external
Crowdsale.getBalanceContract (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#810-814) should be declared external
Crowdsale.getSoldToken (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#814-816) should be declared external
Crowdsale.getInvestorsTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#818-820) should be declared external
Crowdsale.getInvestorsETH (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#820-826) should be declared external
Crowdsale.getInvestors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#827-830) should be declared external
Crowdsale.getInvestorByValue (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#831-836) should be declared external
Crowdsale.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#838-843) should be declared external
Crowdsale.getInvestorByIndex (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#843-847) should be declared external
Crowdsale.getLeftToken (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#848-856) should be declared external
Crowdsale.getTotalToken (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#856-859) should be declared external
Crowdsale.getTotalETH (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#859-863) should be declared external
Crowdsale.getCurrentPrice (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#863-870) should be declared external
Crowdsale.getContractAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol) should be declared external
Crowdsale.getOwner (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol) should be declared external
Crowdsale.sendOracleData (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol) should be declared external
Crowdsale.getQueryPrice (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol) should be declared external
Crowdsale.checkWrapperBalance (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol:
	- pragma solidity^0.4.15 (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Addresses.Addresses' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#25-66) is not in mixedCase
Function 'Ownable.Ownable' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#89-93) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#162) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#149) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#149-150) is not in mixedCase
Variable 'BasicToken.ico_finish' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#147) is not in mixedCase
Function 'Migrations.Migrations' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#176-177) is not in mixedCase
Parameter 'new_address' of Migrations.upgrade (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#182-184) is not in mixedCase
Variable 'Migrations.last_completed_migration' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#172) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#232) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#232-233) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#200) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#200-201) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#201) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#211-212) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#212-215) is not in mixedCase
Parameter '_owner' of StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#222) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#222) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#222) is not in mixedCase
Variable 'StandardToken.ico_finish' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#196-197) is not in mixedCase
Parameter '_amount' of MintableToken.setTotalSupply (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#247) is not in mixedCase
Parameter '_address' of MintableToken.mint (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#261) is not in mixedCase
Parameter '_tokens' of MintableToken.mint (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#261) is not in mixedCase
Parameter '_address' of MintableToken.burnTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#267) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#391-454) is not in mixedCase
Parameter '_address' of Crowdsale.sendToAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#523) is not in mixedCase
Parameter '_tokens' of Crowdsale.sendToAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#523-524) is not in mixedCase
Parameter '_address' of Crowdsale.grantedWallets (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#557-558) is not in mixedCase
Parameter '_address' of Crowdsale.setPrivelegedWallet (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#577) is not in mixedCase
Parameter '_address' of Crowdsale.setTransferOwnership (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#592) is not in mixedCase
Parameter '_address' of Crowdsale.removePrivelegedWallet (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#600) is not in mixedCase
Parameter '_time' of Crowdsale.setICODate (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#614) is not in mixedCase
Parameter '_address' of Crowdsale.saveInfoAboutInvestors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#646-649) is not in mixedCase
Parameter '_amount' of Crowdsale.saveInfoAboutInvestors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#649) is not in mixedCase
Parameter '_tokens' of Crowdsale.saveInfoAboutInvestors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#649) is not in mixedCase
Parameter '_isManual' of Crowdsale.saveInfoAboutInvestors (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#649) is not in mixedCase
Parameter '_address' of Crowdsale.getManualByAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#672) is not in mixedCase
Parameter '_index' of Crowdsale.getManualAddress (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#679) is not in mixedCase
Parameter '_amount' of Crowdsale.refund (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#727-730) is not in mixedCase
Parameter '_address' of Crowdsale.refund (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#731) is not in mixedCase
Parameter '_amount' of Crowdsale.refund (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#731-732) is not in mixedCase
Parameter '_address' of Crowdsale.getTokensManual (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#735-736) is not in mixedCase
Parameter '_tokens' of Crowdsale.calculateBonusForHours (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#740-743) is not in mixedCase
Parameter '_amount' of Crowdsale.sendToOwners (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#762-763) is not in mixedCase
Parameter '_address' of Crowdsale.getInvestorsTokens (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#818) is not in mixedCase
Parameter '_address' of Crowdsale.getInvestorsETH (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#822) is not in mixedCase
Parameter '_address' of Crowdsale.getInvestorByValue (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#834) is not in mixedCase
Parameter '_from' of Crowdsale.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#838) is not in mixedCase
Parameter '_to' of Crowdsale.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#838) is not in mixedCase
Parameter '_amount' of Crowdsale.transfer (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#838-840) is not in mixedCase
Parameter '_index' of Crowdsale.getInvestorByIndex (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#843-844) is not in mixedCase
Variable 'Crowdsale.ETHUSD' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#306-308) is not in mixedCase
Variable 'Crowdsale.ico_start' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#322-324) is not in mixedCase
Variable 'Crowdsale.ico_finish' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#324-325) is not in mixedCase
Variable 'Crowdsale.ico_buyers_eth' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#362-364) is not in mixedCase
Variable 'Crowdsale.ico_buyers_token' (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#366-369) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
Crowdsale.minPrice (/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol#384-386) is never used in Crowdsale
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/32/0xd332f2c09856322225e31723a611e5db35453a8a.sol analyzed (12 contracts), 125 result(s) found