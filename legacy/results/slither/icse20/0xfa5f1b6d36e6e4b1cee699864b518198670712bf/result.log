INFO:Slither:Compilation warnings/errors on /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol:
/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol:164:13: Warning: The use of labels is deprecated. Please use "if", "switch", "for" or function calls instead.
            loop:
            ^--^
/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol:164:13: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
            loop:
            ^--^
/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol:169:13: Warning: Jump instructions and labels are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch", "if" or "for" statements instead.
            jumpi(loop , lt(loop_index , chunk_count))
            ^----------------------------------------^

INFO:Detectors:[91m
ZodiacERC20.buy (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#963-1013) sends eth to arbitrary user
	Dangerous calls:
	- destinationAddr.transfer(address(this).balance) (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#1005-1007)
ZodiacERC20.fillOrder (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#1113-1137) sends eth to arbitrary user
	Dangerous calls:
	- address(trader).transfer(volumeEth) (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#1132)
ZodiacERC20.collectBuyFee (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol) sends eth to arbitrary user
	Dangerous calls:
	- feeWallet.collect.value(fee)(affiliate) (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol)
ZodiacERC20.collectSellFee (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol) sends eth to arbitrary user
	Dangerous calls:
	- feeWallet.collect.value(fee)(affiliate) (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
BytesToTypes.bytesToAddress (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#119-126) is declared view but contains assembly code
BytesToTypes.bytesToBool (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#127-135) is declared view but contains assembly code
BytesToTypes.getStringSize (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#137-152) is declared view but contains assembly code
BytesToTypes.slice (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#177-239) is declared view but contains assembly code
BytesToTypes.bytesToBytes32 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#239-243) is declared view but contains assembly code
BytesToTypes.bytesToInt8 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#254-261) is declared view but contains assembly code
BytesToTypes.bytesToInt16 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#261-268) is declared view but contains assembly code
BytesToTypes.bytesToInt24 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#268-275) is declared view but contains assembly code
BytesToTypes.bytesToInt32 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#275-282) is declared view but contains assembly code
BytesToTypes.bytesToInt40 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#282-289) is declared view but contains assembly code
BytesToTypes.bytesToInt48 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#289-296) is declared view but contains assembly code
BytesToTypes.bytesToInt56 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#296-303) is declared view but contains assembly code
BytesToTypes.bytesToInt64 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#304-311) is declared view but contains assembly code
BytesToTypes.bytesToInt72 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#312-319) is declared view but contains assembly code
BytesToTypes.bytesToInt80 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#319-326) is declared view but contains assembly code
BytesToTypes.bytesToInt88 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#326-333) is declared view but contains assembly code
BytesToTypes.bytesToInt96 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#334-340) is declared view but contains assembly code
BytesToTypes.bytesToInt104 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#341-348) is declared view but contains assembly code
BytesToTypes.bytesToInt112 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#348-355) is declared view but contains assembly code
BytesToTypes.bytesToInt120 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#355-362) is declared view but contains assembly code
BytesToTypes.bytesToInt128 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#362-369) is declared view but contains assembly code
BytesToTypes.bytesToInt136 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#369-376) is declared view but contains assembly code
BytesToTypes.bytesToInt144 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#376-383) is declared view but contains assembly code
BytesToTypes.bytesToInt152 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#383-390) is declared view but contains assembly code
BytesToTypes.bytesToInt160 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#391-398) is declared view but contains assembly code
BytesToTypes.bytesToInt168 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#399-406) is declared view but contains assembly code
BytesToTypes.bytesToInt176 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#408-415) is declared view but contains assembly code
BytesToTypes.bytesToInt184 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#415-422) is declared view but contains assembly code
BytesToTypes.bytesToInt192 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#422-429) is declared view but contains assembly code
BytesToTypes.bytesToInt200 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#429-436) is declared view but contains assembly code
BytesToTypes.bytesToInt208 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#436-443) is declared view but contains assembly code
BytesToTypes.bytesToInt216 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#443-450) is declared view but contains assembly code
BytesToTypes.bytesToInt224 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#450-457) is declared view but contains assembly code
BytesToTypes.bytesToInt232 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#457-464) is declared view but contains assembly code
BytesToTypes.bytesToInt240 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#464-471) is declared view but contains assembly code
BytesToTypes.bytesToInt248 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#471-478) is declared view but contains assembly code
BytesToTypes.bytesToInt256 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#478-485) is declared view but contains assembly code
BytesToTypes.bytesToUint8 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#485-492) is declared view but contains assembly code
BytesToTypes.bytesToUint16 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#492-499) is declared view but contains assembly code
BytesToTypes.bytesToUint24 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#499-506) is declared view but contains assembly code
BytesToTypes.bytesToUint32 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#507-514) is declared view but contains assembly code
BytesToTypes.bytesToUint40 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#515-522) is declared view but contains assembly code
BytesToTypes.bytesToUint48 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#522-529) is declared view but contains assembly code
BytesToTypes.bytesToUint56 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#529-536) is declared view but contains assembly code
BytesToTypes.bytesToUint64 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#537-544) is declared view but contains assembly code
BytesToTypes.bytesToUint72 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#544-551) is declared view but contains assembly code
BytesToTypes.bytesToUint80 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#551-558) is declared view but contains assembly code
BytesToTypes.bytesToUint88 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#558-565) is declared view but contains assembly code
BytesToTypes.bytesToUint96 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#565-572) is declared view but contains assembly code
BytesToTypes.bytesToUint104 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#572-579) is declared view but contains assembly code
BytesToTypes.bytesToUint112 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#579-586) is declared view but contains assembly code
BytesToTypes.bytesToUint120 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#586-593) is declared view but contains assembly code
BytesToTypes.bytesToUint128 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#593-600) is declared view but contains assembly code
BytesToTypes.bytesToUint136 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#601-608) is declared view but contains assembly code
BytesToTypes.bytesToUint144 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#609-615) is declared view but contains assembly code
BytesToTypes.bytesToUint152 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#618-623) is declared view but contains assembly code
BytesToTypes.bytesToUint160 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#625-632) is declared view but contains assembly code
BytesToTypes.bytesToUint168 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#632-639) is declared view but contains assembly code
BytesToTypes.bytesToUint176 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#639-646) is declared view but contains assembly code
BytesToTypes.bytesToUint184 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#646-653) is declared view but contains assembly code
BytesToTypes.bytesToUint192 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#653-660) is declared view but contains assembly code
BytesToTypes.bytesToUint200 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#660-667) is declared view but contains assembly code
BytesToTypes.bytesToUint208 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#667-674) is declared view but contains assembly code
BytesToTypes.bytesToUint216 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#674-681) is declared view but contains assembly code
BytesToTypes.bytesToUint224 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#681-688) is declared view but contains assembly code
BytesToTypes.bytesToUint232 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#688-700) is declared view but contains assembly code
BytesToTypes.bytesToUint240 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#700-704) is declared view but contains assembly code
BytesToTypes.bytesToUint248 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#705-708) is declared view but contains assembly code
BytesToTypes.bytesToUint256 (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#708-713) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[92m
ZodiacERC20.trade has external calls inside a loop:
	- trader = traders.getTrader(protocolId) (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#1091-1092)
ZodiacERC20.trade has external calls inside a loop:
	- dataLength = trader.getDataLength() (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#1094-1095)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
BytesToTypes.bytesToAddress uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#119-126)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#124-126
BytesToTypes.bytesToBool uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#127-135)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#132-133
BytesToTypes.getStringSize uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#137-152)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#138-152
BytesToTypes.bytesToString uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#152-177)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#157-177
BytesToTypes.slice uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#177-239)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#183-239
BytesToTypes.bytesToBytes32 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#239-243)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#242-243
BytesToTypes.bytesToInt8 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#254-261)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#257-261
BytesToTypes.bytesToInt16 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#261-268)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#264-268
BytesToTypes.bytesToInt24 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#268-275)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#272-275
BytesToTypes.bytesToInt32 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#275-282)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#280-282
BytesToTypes.bytesToInt40 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#282-289)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#289
BytesToTypes.bytesToInt48 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#289-296)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#296
BytesToTypes.bytesToInt56 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#296-303)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#303
BytesToTypes.bytesToInt64 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#304-311)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#310-311
BytesToTypes.bytesToInt72 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#312-319)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#317-319
BytesToTypes.bytesToInt80 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#319-326)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#324-326
BytesToTypes.bytesToInt88 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#326-333)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#331-333
BytesToTypes.bytesToInt96 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#334-340)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#338-340
BytesToTypes.bytesToInt104 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#341-348)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#345-348
BytesToTypes.bytesToInt112 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#348-355)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#352-355
BytesToTypes.bytesToInt120 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#355-362)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#359-362
BytesToTypes.bytesToInt128 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#362-369)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#366-369
BytesToTypes.bytesToInt136 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#369-376)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#373-376
BytesToTypes.bytesToInt144 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#376-383)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#380-383
BytesToTypes.bytesToInt152 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#383-390)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#387-390
BytesToTypes.bytesToInt160 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#391-398)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#395-398
BytesToTypes.bytesToInt168 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#399-406)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#403-406
BytesToTypes.bytesToInt176 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#408-415)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#410-415
BytesToTypes.bytesToInt184 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#415-422)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#417-422
BytesToTypes.bytesToInt192 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#422-429)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#425-429
BytesToTypes.bytesToInt200 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#429-436)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#432-436
BytesToTypes.bytesToInt208 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#436-443)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#439-443
BytesToTypes.bytesToInt216 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#443-450)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#446-450
BytesToTypes.bytesToInt224 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#450-457)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#453-457
BytesToTypes.bytesToInt232 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#457-464)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#460-464
BytesToTypes.bytesToInt240 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#464-471)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#467-471
BytesToTypes.bytesToInt248 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#471-478)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#475-478
BytesToTypes.bytesToInt256 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#478-485)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#484-485
BytesToTypes.bytesToUint8 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#485-492)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#492
BytesToTypes.bytesToUint16 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#492-499)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#499
BytesToTypes.bytesToUint24 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#499-506)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#506
BytesToTypes.bytesToUint32 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#507-514)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#513-514
BytesToTypes.bytesToUint40 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#515-522)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#520-522
BytesToTypes.bytesToUint48 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#522-529)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#527-529
BytesToTypes.bytesToUint56 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#529-536)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#534-536
BytesToTypes.bytesToUint64 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#537-544)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#541-544
BytesToTypes.bytesToUint72 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#544-551)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#548-551
BytesToTypes.bytesToUint80 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#551-558)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#555-558
BytesToTypes.bytesToUint88 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#558-565)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#562-565
BytesToTypes.bytesToUint96 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#565-572)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#569-572
BytesToTypes.bytesToUint104 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#572-579)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#576-579
BytesToTypes.bytesToUint112 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#579-586)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#583-586
BytesToTypes.bytesToUint120 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#586-593)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#590-593
BytesToTypes.bytesToUint128 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#593-600)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#597-600
BytesToTypes.bytesToUint136 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#601-608)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#605-608
BytesToTypes.bytesToUint144 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#609-615)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#612-615
BytesToTypes.bytesToUint152 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#618-623)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#620-623
BytesToTypes.bytesToUint160 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#625-632)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#627-632
BytesToTypes.bytesToUint168 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#632-639)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#635-639
BytesToTypes.bytesToUint176 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#639-646)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#642-646
BytesToTypes.bytesToUint184 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#646-653)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#649-653
BytesToTypes.bytesToUint192 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#653-660)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#656-660
BytesToTypes.bytesToUint200 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#660-667)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#663-667
BytesToTypes.bytesToUint208 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#667-674)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#670-674
BytesToTypes.bytesToUint216 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#674-681)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#677-681
BytesToTypes.bytesToUint224 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#681-688)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#685-688
BytesToTypes.bytesToUint232 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#688-700)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#692-700
BytesToTypes.bytesToUint240 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#700-704)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#702-704
BytesToTypes.bytesToUint248 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#705-708)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#707-708
BytesToTypes.bytesToUint256 uses assembly (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#708-713)
	- /unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#711-713
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#25-36) should be declared external
ITrader.getDataLength (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#768-771) should be declared external
ITrader.getProtocol (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#771-773) should be declared external
ITrader.getAvailableVolume (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#773-774) should be declared external
ITrader.isExpired (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#774-780) should be declared external
ITrader.trade (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#780-783) should be declared external
ITrader.getFillVolumes (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#783-788) should be declared external
ITraders.addTrader (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#792-793) should be declared external
ITraders.removeTrader (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#797-798) should be declared external
ITraders.getTrader (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#798-804) should be declared external
ITraders.isValidTraderAddress (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#807-810) should be declared external
Members.addMember (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#825-828) should be declared external
Members.removeMember (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#829-833) should be declared external
FeeWallet.getFee (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#870-873) should be declared external
IFeeWallet.getFee (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#833-837) should be declared external
IFeeWallet.collect (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#837-838) should be declared external
FeeWallet.collect (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#882-900) should be declared external
FeeWallet.changeServiceAccount (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#853-857) should be declared external
FeeWallet.changeServicePercentage (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#858-862) should be declared external
FeeWallet.changeAffiliatePercentage (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#864-866) should be declared external
FeeWallet.withdraw (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#904-910) should be declared external
ZodiacERC20.fallback (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#948-951) should be declared external
ZodiacERC20.changeFeeWallet (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#952-957) should be declared external
ZodiacERC20.changeTraders (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#958-959) should be declared external
ZodiacERC20.changeTradingEnabled (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#961-963) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_bytes' of BytesToTypes.slice (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#179-180) is not in mixedCase
Parameter '_start' of BytesToTypes.slice (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#180) is not in mixedCase
Parameter '_length' of BytesToTypes.slice (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#180) is not in mixedCase
Parameter '_member' of Members.isValidMember (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#820) is not in mixedCase
Parameter '_member' of Members.addMember (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#826-827) is not in mixedCase
Parameter '_member' of Members.removeMember (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#832) is not in mixedCase
Parameter '_affiliate' of FeeWallet.collect (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#882-884) is not in mixedCase
Parameter '_serviceAccount' of FeeWallet. (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#847-848) is not in mixedCase
Parameter '_servicePercentage' of FeeWallet. (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#848) is not in mixedCase
Parameter '_affiliatePercentage' of FeeWallet. (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#848-849) is not in mixedCase
Parameter '_serviceAccount' of FeeWallet.changeServiceAccount (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#854) is not in mixedCase
Parameter '_servicePercentage' of FeeWallet.changeServicePercentage (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#859) is not in mixedCase
Parameter '_affiliatePercentage' of FeeWallet.changeAffiliatePercentage (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#864-865) is not in mixedCase
Parameter '_traders' of ZodiacERC20. (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#936) is not in mixedCase
Parameter '_feeWallet' of ZodiacERC20. (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#936-937) is not in mixedCase
Parameter '_feeWallet' of ZodiacERC20.changeFeeWallet (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#954) is not in mixedCase
Parameter '_traders' of ZodiacERC20.changeTraders (/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol#958) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/39/0xfa5f1b6d36e6e4b1cee699864b518198670712bf.sol analyzed (10 contracts), 187 result(s) found