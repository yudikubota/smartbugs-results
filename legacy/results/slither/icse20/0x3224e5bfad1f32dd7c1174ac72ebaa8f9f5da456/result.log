INFO:Slither:Compilation warnings/errors on /unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:283:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Investment[] investments = investors[addr].investments;
        ^----------------------^
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:466:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        advertisingAddress.send(m_advertisingPercent.mul(receivedEther));
        ^--------------------------------------------------------------^
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:467:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        adminsAddress.send(m_adminsPercent.mul(receivedEther));
        ^----------------------------------------------------^
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:215:5: Warning: No visibility specified. Defaulting to "public". 
    function investorInfo(address addr)  returns(uint overallInvestment, uint paymentTime, Investment[] investments, Percent.percent individualPercent) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:215:5: Warning: Function state mutability can be restricted to view
    function investorInfo(address addr)  returns(uint overallInvestment, uint paymentTime, Investment[] investments, Percent.percent individualPercent) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:421:76: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        (overallInvestment, paymentTime, investments, individualPercent) = m_investors.investorInfo(investorAddr);}
                                                                           ^------------------------------------^
/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:515:146: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
 ... m_investors.investorInfo(investorAddr) ... 
     ^------------------------------------^

INFO:Detectors:[91m
Reentrancy in Revolution2.doInvest (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#459-520):
	External calls:
	- senderIsInvestor = m_investors.isInvestor(msg.sender) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#477-478)
	- referrerAddr.notZero() && ! senderIsInvestor && ! m_referrals[msg.sender] && referrerAddr != msg.sender && m_investors.isInvestor(referrerAddr) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#479-493)
	External calls sending eth:
	- msg.sender.transfer(excess) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#471-472)
	- advertisingAddress.send(m_advertisingPercent.mul(receivedEther)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#475-476)
	- adminsAddress.send(m_adminsPercent.mul(receivedEther)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#476-477)
	State variables written after the call(s):
	- m_referrals (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#481)
Reentrancy in Revolution2.doInvest (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#459-520):
	External calls:
	- senderIsInvestor = m_investors.isInvestor(msg.sender) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#477-478)
	- referrerAddr.notZero() && ! senderIsInvestor && ! m_referrals[msg.sender] && referrerAddr != msg.sender && m_investors.isInvestor(referrerAddr) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#479-493)
	- assert(bool)(m_investors.addInvestment(referrerAddr,referrerBonus)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#488)
	- dividends = calcDividends(msg.sender) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#494-495)
	- assert(bool)(m_investors.addInvestment(msg.sender,investment)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#511-514)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#514)
	- assert(bool)(m_investors.newInvestor(msg.sender,investment,now)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#515-516)
	External calls sending eth:
	- msg.sender.transfer(excess) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#471-472)
	- advertisingAddress.send(m_advertisingPercent.mul(receivedEther)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#475-476)
	- adminsAddress.send(m_adminsPercent.mul(receivedEther)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#476-477)
	State variables written after the call(s):
	- investmentsNumber (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#519)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Address.toAddress (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#106-112) is declared view but contains assembly code
Address.isNotContract (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#112-123) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Revolution2.getMyDividends (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#437-459):
	External calls:
	- require(bool)(now.sub(getMemInvestor(msg.sender).paymentTime) > 3600) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#442-445)
	- dividends = calcDividends(msg.sender) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#445-446)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#450-451)
	State variables written after the call(s):
	- m_investors (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#453)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Revolution2.disqualifyAddress (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#394-399) does not use the value returned by external calls:
	-m_investors.disqualify(addr) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#397-399)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Revolution2.getMyDividends (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#437-459):
	External calls:
	- require(bool)(now.sub(getMemInvestor(msg.sender).paymentTime) > 3600) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#442-445)
	- dividends = calcDividends(msg.sender) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#445-446)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#450-451)
	State variables written after the call(s):
	- investmentsNumber (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#453)
	- waveStartup (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#453)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Address.toAddress uses assembly (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#106-112)
	- /unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#110-112
Address.isNotContract uses assembly (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#112-123)
	- /unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#121-122
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol:
	- Version used: ['0.4.25', 'ABIEncoderV2']
	- /unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#1 declares pragma solidity0.4.25
	- /unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#2-3 declares pragma experimentalABIEncoderV2
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
InvestorsStorage.isInvestor (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#215-216) should be declared external
InvestorsStorage.investorInfo (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#217-225) should be declared external
InvestorsStorage.newInvestor (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#257-269) should be declared external
InvestorsStorage.addInvestment (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#269-282) should be declared external
InvestorsStorage.setPaymentTime (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#282-286) should be declared external
InvestorsStorage.withdrawBody (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#286-313) should be declared external
InvestorsStorage.disqualify (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#313-320) should be declared external
Revolution2.fallback (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#385-394) should be declared external
Revolution2.disqualifyAddress (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#394-399) should be declared external
Revolution2.doDisown (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#399-404) should be declared external
Revolution2.testWithdraw (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#404-408) should be declared external
Revolution2.setAdvertisingAddress (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#408-412) should be declared external
Revolution2.setAdminsAddress (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#412-416) should be declared external
Revolution2.investorsNumber (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#416-417) should be declared external
Revolution2.balanceETH (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#417-420) should be declared external
Revolution2.advertisingPercent (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#420-421) should be declared external
Revolution2.adminsPercent (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#421-424) should be declared external
Revolution2.investorInfo (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#424-433) should be declared external
Revolution2.investorDividendsAtNow (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#433-437) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Struct 'Percent.percent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#49-52) is not in CapWords
Parameter '_a' of SafeMath.mul (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#128) is not in mixedCase
Parameter '_b' of SafeMath.mul (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#128-129) is not in mixedCase
Parameter '_a' of SafeMath.div (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#138-139) is not in mixedCase
Parameter '_b' of SafeMath.div (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#139) is not in mixedCase
Parameter '_a' of SafeMath.sub (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#155-156) is not in mixedCase
Parameter '_b' of SafeMath.sub (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#156) is not in mixedCase
Parameter '_a' of SafeMath.add (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#166) is not in mixedCase
Parameter '_b' of SafeMath.add (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#166) is not in mixedCase
Variable 'Revolution2.m_referrals' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#327-328) is not in mixedCase
Variable 'Revolution2.m_investors' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#329-330) is not in mixedCase
Constant 'Revolution2.minInvestment' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#331) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution2.maxBalance' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#331-332) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Revolution2.m_referal_percent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#334-335) is not in mixedCase
Variable 'Revolution2.m_referrer_percent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#335-336) is not in mixedCase
Variable 'Revolution2.m_adminsPercent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#336-337) is not in mixedCase
Variable 'Revolution2.m_advertisingPercent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#337-339) is not in mixedCase
Variable 'Revolution2.m_firstBakersPercent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#339-340) is not in mixedCase
Variable 'Revolution2.m_tenthBakerPercent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#340-341) is not in mixedCase
Variable 'Revolution2.m_fiftiethBakerPercent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#341) is not in mixedCase
Variable 'Revolution2.m_twentiethBakerPercent' (/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol#341-342) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/19/0x3224e5bfad1f32dd7c1174ac72ebaa8f9f5da456.sol analyzed (8 contracts), 50 result(s) found