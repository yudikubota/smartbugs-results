INFO:Slither:Compilation warnings/errors on /unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:48:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:147:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherStake() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:177:9: Warning: Use of the "var" keyword is deprecated.
        var _allowance = allowed[_from][msg.sender];
        ^------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:162:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:185:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:197:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:217:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(msg.sender, reward);
        ^----------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:232:43: Warning: Using "years" as a unit denomination is deprecated.
        if((_now.sub(stakeStartTime)).div(1 years) == 0) {
                                          ^-----^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:234:50: Warning: Using "years" as a unit denomination is deprecated.
        } else if((_now.sub(stakeStartTime)).div(1 years) == 1){
                                                 ^-----^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:249:43: Warning: Using "years" as a unit denomination is deprecated.
        if((_now.sub(stakeStartTime)).div(1 years) == 0) {
                                          ^-----^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:252:50: Warning: Using "years" as a unit denomination is deprecated.
        } else if((_now.sub(stakeStartTime)).div(1 years) == 1){
                                                 ^-----^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:289:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:306:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _recipients[j], _values[j]);
            ^----------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:72:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint256);
    ^---------------------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:73:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool);
    ^----------------------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:83:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256);
    ^----------------------------------------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool);
    ^----------------------------------------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool);
    ^--------------------------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:98:5: Warning: No visibility specified. Defaulting to "public". 
    function mint() returns (bool);
    ^-----------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function coinAge() constant returns (uint256);
    ^--------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function annualInterest() constant returns (uint256);
    ^---------------------------------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function EtherStake() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:158:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:170:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:174:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3 * 32) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:193:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:205:5: Warning: No visibility specified. Defaulting to "public". 
    function mint() canPoSMint returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:221:5: Warning: No visibility specified. Defaulting to "public". 
    function getBlockNumber() returns (uint blockNumber) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:225:5: Warning: No visibility specified. Defaulting to "public". 
    function coinAge() constant returns (uint myCoinAge) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:229:5: Warning: No visibility specified. Defaulting to "public". 
    function annualInterest() constant returns(uint interest) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:273:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerSetStakeStartTime(uint timestamp) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:278:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerBurnToken(uint _value) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:293:5: Warning: No visibility specified. Defaulting to "public". 
    function batchTransfer(address[] _recipients, uint[] _values) onlyOwner returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:9:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:15:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:22:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:27:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:221:5: Warning: Function state mutability can be restricted to view
    function getBlockNumber() returns (uint blockNumber) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:226:21: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        myCoinAge = getCoinAge(msg.sender,now);
                    ^------------------------^
/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:260:5: Warning: Function state mutability can be restricted to view
    function getCoinAge(address _address, uint _now) internal returns (uint _coinAge) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
EtherStake.annualInterest (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#233-244) uses a dangerous strict equality:
	- (_now.sub(stakeStartTime)).div(220752000) == 0
	- (_now.sub(stakeStartTime)).div(220752000) == 1
EtherStake.annualInterest (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#233-244) uses a dangerous strict equality:
	- (_now.sub(stakeStartTime)).div(220752000) == 0
	- (_now.sub(stakeStartTime)).div(220752000) == 1
EtherStake.getProofOfStakeReward (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#244-264) uses a dangerous strict equality:
	- (_now.sub(stakeStartTime)).div(220752000) == 0
	- (_now.sub(stakeStartTime)).div(220752000) == 1
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
EtherStake.totalSupply (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#123-124) shadows:
	- ERC20Basic.totalSupply (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#72-73)
EtherStake.stakeStartTime (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#115-116) shadows:
	- EtherStakeToken.stakeStartTime (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#97-98)
EtherStake.stakeMinAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#116-117) shadows:
	- EtherStakeToken.stakeMinAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#98-99)
EtherStake.stakeMaxAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#117-119) shadows:
	- EtherStakeToken.stakeMaxAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#99-100)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#72-73)
EtherStake.decimals should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#113)
EtherStake.maxMintProofOfStake should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#120-121)
EtherStake.name should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#112)
EtherStake.stakeMaxAge should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#117-119)
EtherStake.stakeMinAge should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#116-117)
EtherStake.symbol should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#112-113)
EtherStakeToken.stakeMaxAge should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#99-100)
EtherStakeToken.stakeMinAge should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#98-99)
EtherStakeToken.stakeStartTime should be constant (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#97-98)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#73-74) should be declared external
EtherStake.balanceOf (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#174-177) should be declared external
EtherStake.transfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#160-174) should be declared external
ERC20Basic.transfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#74) should be declared external
ERC20.allowance (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#84) should be declared external
EtherStake.allowance (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#206-209) should be declared external
EtherStake.transferFrom (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#177-196) should be declared external
ERC20.transferFrom (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#85-86) should be declared external
ERC20.approve (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#86-87) should be declared external
EtherStake.approve (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#197-206) should be declared external
EtherStakeToken.coinAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#100-101) should be declared external
EtherStake.coinAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#231-233) should be declared external
EtherStake.annualInterest (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#233-244) should be declared external
EtherStakeToken.annualInterest (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#101-105) should be declared external
EtherStake.getBlockNumber (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#226-231) should be declared external
EtherStake.ownerSetStakeStartTime (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#281-283) should be declared external
EtherStake.ownerBurnToken (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#283-296) should be declared external
EtherStake.batchTransfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#299-315) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#49-54) is not in mixedCase
Struct 'EtherStake.transferInStruct' (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#129-130) is not in CapWords
Parameter '_owner' of EtherStake.balanceOf (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#174) is not in mixedCase
Parameter '_to' of EtherStake.transfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#160) is not in mixedCase
Parameter '_value' of EtherStake.transfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#160-161) is not in mixedCase
Parameter '_owner' of EtherStake.allowance (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#206) is not in mixedCase
Parameter '_spender' of EtherStake.allowance (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#206-207) is not in mixedCase
Parameter '_from' of EtherStake.transferFrom (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#177-179) is not in mixedCase
Parameter '_to' of EtherStake.transferFrom (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#179) is not in mixedCase
Parameter '_value' of EtherStake.transferFrom (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#179) is not in mixedCase
Parameter '_spender' of EtherStake.approve (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#197) is not in mixedCase
Parameter '_value' of EtherStake.approve (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#197-198) is not in mixedCase
Function 'EtherStake.EtherStake' (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#151-160) is not in mixedCase
Parameter '_address' of EtherStake.getProofOfStakeReward (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#246) is not in mixedCase
Parameter '_address' of EtherStake.getCoinAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#264-266) is not in mixedCase
Parameter '_now' of EtherStake.getCoinAge (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#266) is not in mixedCase
Parameter '_value' of EtherStake.ownerBurnToken (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#285) is not in mixedCase
Parameter '_recipients' of EtherStake.batchTransfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#300) is not in mixedCase
Parameter '_values' of EtherStake.batchTransfer (/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol#300-302) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x98947880abe5ba3d7fba603db9c58da03eb9af9b.sol analyzed (6 contracts), 45 result(s) found