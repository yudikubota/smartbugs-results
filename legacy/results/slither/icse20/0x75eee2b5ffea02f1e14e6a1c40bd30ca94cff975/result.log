INFO:Slither:Compilation warnings/errors on /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:
/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:2420:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomNumber = uint(keccak256(result)) % query.range;
                                    ^---------------^
/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:2420:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
                randomNumber = uint(keccak256(result)) % query.range;
                                    ^---------------^
/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:2453:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomNumber = uint(keccak256(result)) % bonusToken.ethLotteryBank();
                                ^---------------^
/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:2453:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            randomNumber = uint(keccak256(result)) % bonusToken.ethLotteryBank();
                                ^---------------^
/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:2488:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomNumber = uint(keccak256(result)) % bonusToken.tokensLotteryBank();
                                ^---------------^
/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:2488:33: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            randomNumber = uint(keccak256(result)) % bonusToken.tokensLotteryBank();
                                ^---------------^

INFO:Detectors:[91m
InvestToken.sellTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1969-1981) sends eth to arbitrary user
	Dangerous calls:
	- seller.transfer(weiAmount) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1980)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- sendTokensWin(query.gamer,query.amount) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2469)
	- sendTokensWin(query.gamer,query.prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2474-2476)
	- sendTokensWin(query.gamer,query.prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2486-2487)
	External calls sending eth:
	- sendEthWin(query.gamer,query.amount) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2467-2468)
	- sendEthWin(query.gamer,query.prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2477-2478)
	- sendEthWin(query.gamer,query.prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2488)
	State variables written after the call(s):
	- queries (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2498)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2517-2520)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
	State variables written after the call(s):
	- ethLotteryStage (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2522-2524)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2517-2520)
	- updateEthLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2524-2525)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
	State variables written after the call(s):
	- maxEthRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2524-2525)
	- minEthRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2524-2525)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2517-2520)
	- updateEthLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2524-2525)
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2526-2527)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
	State variables written after the call(s):
	- ethLotterySize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2530-2531)
	- ethLotteryStage (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2531-2532)
	- holdersInEthLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2529-2530)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2517-2520)
	- updateEthLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2524-2525)
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2526-2527)
	- ethLotteryQueryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
	- ethLotteryQueryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
	State variables written after the call(s):
	- OAR (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
	- ethLotteryQueryId (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
	- oraclize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2537-2538)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Buffer.init (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#142-156) is declared view but contains assembly code
Buffer.append (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#175-217) is declared view but contains assembly code
Buffer.append (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#226-243) is declared view but contains assembly code
Buffer.appendInt (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#250-273) is declared view but contains assembly code
usingOraclize.getCodeSize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#840-845) is declared view but contains assembly code
usingOraclize.copyBytes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1213-1237) is declared view but contains assembly code
usingOraclize.safeMemoryCleaner (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1332-1334) is declared view but contains assembly code
InvestToken.bytesToAddress (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2179-2185) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2540-2542)
	- sendTokensWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2567)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2568-2570)
	State variables written after the call(s):
	- tokensLotteryStage (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2570-2571)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2540-2542)
	- sendTokensWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2567)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2568-2570)
	- updateTokensLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2571)
	State variables written after the call(s):
	- maxTokensRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2571)
	- minTokensRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2571)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2540-2542)
	- sendTokensWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2567)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2568-2570)
	- updateTokensLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2571)
	- bonusToken.updateTokensLotteryBank(bonusToken.tokensLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2572-2573)
	State variables written after the call(s):
	- holdersInTokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2578-2580)
	- tokensLotterySize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2580)
	- tokensLotteryStage (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2580-2581)
Reentrancy in Game.constructor (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2256-2259):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257)
	- oraclize_setCustomGasPrice(5000000000) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257-2258)
	State variables written after the call(s):
	- OAR (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257-2258)
	- oraclize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257-2258)
Reentrancy in usingOraclize.oraclizeAPI (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#371-376):
	External calls:
	- address(oraclize) != OAR.getAddress() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#373-375)
	- oraclize = OraclizeI(OAR.getAddress()) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#375)
	State variables written after the call(s):
	- oraclize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#375)
Reentrancy in Game.refundTokensPrize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2425-2434):
	External calls:
	- require(bool)(investToken.balanceOf(address(this)) >= waitingTokensPrizes[msg.sender]) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2427-2430)
	State variables written after the call(s):
	- waitingTokensPrizes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2432-2433)
Reentrancy in Game.sendBonusTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2385-2418):
	External calls:
	- bonusToken.buyTokens(player,tokensAmount) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2413)
	State variables written after the call(s):
	- playersIndex (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2414-2415)
Reentrancy in InvestToken.swapTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1981-1993):
	External calls:
	- require(bool,string)(bonusToken.balanceOf(msg.sender) >= tokensAmountToBurn,Not enough bonus tokens.) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1987-1989)
	- bonusToken.swapTokens(msg.sender,tokensAmountToBurn) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1989-1990)
	State variables written after the call(s):
	- swapTokensLimit (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1990-1991)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
isWin in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2470-2471) is a local variable never initialiazed
buf in usingOraclize.ba2cbor (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1001) is a local variable never initialiazed
buf in usingOraclize.stra2cbor (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#993-994) is a local variable never initialiazed
winChance in Game.placeBet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2292) is a local variable never initialiazed
i in Game.sendBonusTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2399) is a local variable never initialiazed
range in Game.placeBet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2292) is a local variable never initialiazed
referrer in InvestToken.fallback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1944) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
CBOR.encodeType (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#282-303) does not use the value returned by external calls:
	-buf.appendInt(value,1) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#289)
	-buf.appendInt(value,2) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#291-295)
	-buf.appendInt(value,4) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#296)
	-buf.appendInt(value,8) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#300)
CBOR.encodeBytes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#317-322) does not use the value returned by external calls:
	-buf.append(value) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#322)
CBOR.encodeString (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#324-329) does not use the value returned by external calls:
	-buf.append(bytes(value)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#329)
Game.placeBet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2277-2339) does not use the value returned by external calls:
	-investToken.sendToGame(msg.sender,tokensAmount,index) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2285-2288)
Game.refundTokensPrize (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2425-2434) does not use the value returned by external calls:
	-investToken.transfer(msg.sender,tokensAmountToSend,0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2433-2434)
Game.fee (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol) does not use the value returned by external calls:
	-investToken.transfer(beneficiar,beneficiarFee,0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
Game.sendTokensWin (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol) does not use the value returned by external calls:
	-investToken.transfer(winner,tokensAmount,0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Detailed.constructor.name (local variable @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1445-1446) shadows:
	- ERC20Detailed.name (function @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1453-1454)
ERC20Detailed.constructor.symbol (local variable @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1446-1447) shadows:
	- ERC20Detailed.symbol (function @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1456-1460)
ERC20Detailed.constructor.decimals (local variable @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1447) shadows:
	- ERC20Detailed.decimals (function @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1461-1463)
modERC20Detailed.constructor.name (local variable @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1804-1805) shadows:
	- modERC20Detailed.name (function @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1810-1812)
modERC20Detailed.constructor.symbol (local variable @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1805) shadows:
	- modERC20Detailed.symbol (function @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1813-1814)
modERC20Detailed.constructor.decimals (local variable @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1805-1807) shadows:
	- modERC20Detailed.decimals (function @ /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1817-1821)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Game.__callback has external calls inside a loop:
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2517-2520)
Game.__callback has external calls inside a loop:
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2526-2527)
Game.__callback has external calls inside a loop:
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2568-2570)
Game.__callback has external calls inside a loop:
	- bonusToken.updateTokensLotteryBank(bonusToken.tokensLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2572-2573)
Game.ethLottery has external calls inside a loop:
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2350-2352)
Game.tokensLottery has external calls inside a loop:
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2373-2374)
Game.sendBonusTokens has external calls inside a loop:
	- bonusToken.buyTokens(player,tokensAmount) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2413)
Game.updateEthLotteryRanges has external calls inside a loop:
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2591-2592)
Game.updateTokensLotteryRanges has external calls inside a loop:
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2604-2605)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	State variables written after the call(s):
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2465-2497)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2500-2501)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2539-2540)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2465-2497)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2500-2501)
	- oraclize_randomDS_sessionKeysHashVerified (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2539-2540)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	External calls sending eth:
	- sendEthWin(query.gamer,query.amount) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2467-2468)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2467-2468)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	External calls sending eth:
	- sendEthWin(query.gamer,query.prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2477-2478)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2477-2478)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	External calls sending eth:
	- sendEthWin(query.gamer,query.prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2488)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2488)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	State variables written after the call(s):
	- holdersInEthLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2514-2515)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
	State variables written after the call(s):
	- waitingEthPrizes (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.ethLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2501-2502)
	- WinLottery(tokensHolder,prize,bonusToken.ethLotteryBalances(tokensHolder),ethLotteryRound,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2517-2520)
	- updateEthLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2524-2525)
	- bonusToken.updateEthLotteryBank(bonusToken.ethLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2526-2527)
	External calls sending eth:
	- sendEthWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2516)
	State variables written after the call(s):
	- lastEthLotteryTime (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2535)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2540-2542)
	State variables written after the call(s):
	- holdersInTokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2565-2566)
Reentrancy in Game.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586):
	External calls:
	- require(bool)((msg.sender == oraclize_cbAddress())) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2459-2460)
	- randomNumber = uint256(keccak256()(result)) % bonusToken.tokensLotteryBank() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2540-2542)
	- sendTokensWin(tokensHolder,prize) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2567)
	- WinLottery(tokensHolder,prize,bonusToken.tokensLotteryBalances(tokensHolder),tokensLotteryRound,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2568-2570)
	- updateTokensLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2571)
	- bonusToken.updateTokensLotteryBank(bonusToken.tokensLotteryBalances(tokensHolder)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2572-2573)
	State variables written after the call(s):
	- lastTokensLotteryTime (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2581-2582)
Reentrancy in Game.constructor (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2256-2259):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257)
	- oraclize_setCustomGasPrice(5000000000) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257-2258)
	State variables written after the call(s):
	- beneficiar (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2258-2259)
	- callbackGas (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2258)
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2257-2258)
Reentrancy in Game.ethLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2340-2361):
	External calls:
	- require(bool)(bonusToken.ethLotteryBank() > 0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2342)
	- lotteryParticipants = bonusToken.ethLotteryParticipants() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2344-2345)
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2350-2352)
	State variables written after the call(s):
	- holdersInEthLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2357)
Reentrancy in Game.ethLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2340-2361):
	External calls:
	- require(bool)(bonusToken.ethLotteryBank() > 0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2342)
	- lotteryParticipants = bonusToken.ethLotteryParticipants() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2344-2345)
	- updateEthLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2358-2359)
	State variables written after the call(s):
	- ethLotteryRound (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2359)
	- maxEthRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2358-2359)
	- minEthRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2358-2359)
Reentrancy in Game.ethLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2340-2361):
	External calls:
	- require(bool)(bonusToken.ethLotteryBank() > 0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2342)
	- ! bonusToken.isEthLottery() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2343-2359)
	- lotteryParticipants = bonusToken.ethLotteryParticipants() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2344-2345)
	- updateEthLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2358-2359)
	- bonusToken.startEthLottery() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2360)
	- ethLotteryQueryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2360-2361)
	External calls sending eth:
	- ethLotteryQueryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2360-2361)
	State variables written after the call(s):
	- ethLotteryQueryId (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2360-2361)
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2360-2361)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2360-2361)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1011-1071):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1025-1026)
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1032-1033)
	External calls sending eth:
	- queryId = oraclize_query(random,args,_customGasLimit) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1032-1033)
	State variables written after the call(s):
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1032-1033)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1065-1069)
Reentrancy in Game.placeBet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2277-2339):
	External calls:
	- payAmount = fee(msg.value,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2282-2283)
	- investToken.sendToGame(msg.sender,tokensAmount,index) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2285-2288)
	- payAmount = fee(tokensAmount,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2288)
	External calls sending eth:
	- payAmount = fee(msg.value,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2282-2283)
	- payAmount = fee(tokensAmount,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2288)
	State variables written after the call(s):
	- isBet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2324)
	- players (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2323)
Reentrancy in Game.placeBet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2277-2339):
	External calls:
	- payAmount = fee(msg.value,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2282-2283)
	- investToken.sendToGame(msg.sender,tokensAmount,index) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2285-2288)
	- payAmount = fee(tokensAmount,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2288)
	- queryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2327)
	External calls sending eth:
	- payAmount = fee(msg.value,false) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2282-2283)
	- payAmount = fee(tokensAmount,true) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2288)
	- queryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2327)
	State variables written after the call(s):
	- betsBalances (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2329-2330)
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2327)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2327)
	- queries (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2330-2331)
	- queries (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2331)
	- queries (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2333-2335)
	- queries (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2335-2337)
	- queries (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2337)
Reentrancy in Game.random (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol):
	External calls:
	- require(bool)(address(this).balance >= oraclize_getPrice(random,callbackGas)) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
	- queryId = oraclize_newRandomDSQuery(0,4,callbackGas) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
	External calls sending eth:
	- queryId = oraclize_newRandomDSQuery(0,4,callbackGas) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
	State variables written after the call(s):
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol)
Reentrancy in InvestToken.swapTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1981-1993):
	External calls:
	- require(bool,string)(bonusToken.balanceOf(msg.sender) >= tokensAmountToBurn,Not enough bonus tokens.) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1987-1989)
	- bonusToken.swapTokens(msg.sender,tokensAmountToBurn) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1989-1990)
	State variables written after the call(s):
	- _balances (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1993)
	- _totalSupply (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1993)
	- holders (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1992-1993)
	- priceCoeff (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1991-1992)
Reentrancy in Game.tokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2361-2385):
	External calls:
	- require(bool)(bonusToken.tokensLotteryBank() > 0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2365-2366)
	- lotteryParticipants = bonusToken.tokensLotteryParticipants() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2367-2369)
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2373-2374)
	State variables written after the call(s):
	- holdersInTokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2377-2378)
Reentrancy in Game.tokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2361-2385):
	External calls:
	- require(bool)(bonusToken.tokensLotteryBank() > 0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2365-2366)
	- lotteryParticipants = bonusToken.tokensLotteryParticipants() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2367-2369)
	- updateTokensLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2381)
	State variables written after the call(s):
	- maxTokensRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2381)
	- minTokensRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2381)
	- tokensLotteryRound (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2381-2382)
Reentrancy in Game.tokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2361-2385):
	External calls:
	- require(bool)(bonusToken.tokensLotteryBank() > 0) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2365-2366)
	- ! bonusToken.isEthLottery() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2367-2382)
	- lotteryParticipants = bonusToken.tokensLotteryParticipants() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2367-2369)
	- updateTokensLotteryRanges() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2381)
	- bonusToken.startTokensLottery() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2382-2385)
	- tokensLotteryQueryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2385)
	External calls sending eth:
	- tokensLotteryQueryId = random() (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2385)
	State variables written after the call(s):
	- oraclize_network_name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2385)
	- oraclize_randomDS_args (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2385)
	- tokensLotteryQueryId (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2385)
Reentrancy in Game.updateEthLotteryRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2586-2597):
	External calls:
	- participantBalance = bonusToken.ethLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2591-2592)
	State variables written after the call(s):
	- maxEthRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2596-2597)
	- minEthRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2593-2595)
Reentrancy in Game.updateTokensLotteryRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2597-2611):
	External calls:
	- participantBalance = bonusToken.tokensLotteryBalances(participant) (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2604-2605)
	State variables written after the call(s):
	- maxTokensRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2607-2611)
	- minTokensRanges (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2605-2607)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Buffer.init uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#142-156)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#149-156
Buffer.append uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#175-217)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#185-202
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#203-206
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#213-217
Buffer.append uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#226-243)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#230-243
Buffer.appendInt uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#250-273)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#256-272
usingOraclize.getCodeSize uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#840-845)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#844-845
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1011-1071)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1026-1030
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1030-1031
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1037-1068
usingOraclize.verifySig uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1079-1097)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1089-1090
usingOraclize.copyBytes uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1213-1237)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1229-1232
usingOraclize.safer_ecrecover uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1240-1267)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1256-1267
usingOraclize.ecrecovery uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1269-1331)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1290-1325
usingOraclize.safeMemoryCleaner uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1332-1334)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1332-1334
InvestToken.bytesToAddress uses assembly (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2179-2185)
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2182-2184
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#95)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:
	- Version used: ['>=0.4.22<0.5', '^0.4.24']
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1 declares pragma solidity^0.4.24
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#91 declares pragma solidity>=0.4.22<0.5
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1334-1335 declares pragma solidity^0.4.24
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1407 declares pragma solidity^0.4.24
	- /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1434 declares pragma solidity^0.4.24
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
OraclizeI.query2 (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#97-98) should be declared external
OraclizeI.queryN (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#99-100) should be declared external
OraclizeI.getPrice (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#102-103) should be declared external
OraclizeI.getPrice (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#103-104) should be declared external
OraclizeAddrResolverI.getAddress (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#114-116) should be declared external
usingOraclize.__callback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#419-420) should be declared external
Ownable.owner (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1355-1356) should be declared external
Ownable.renounceOwnership (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1378-1382) should be declared external
Ownable.transferOwnership (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1390-1391) should be declared external
ERC20Detailed.name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1453-1454) should be declared external
ERC20Detailed.symbol (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1456-1460) should be declared external
ERC20Detailed.decimals (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1461-1463) should be declared external
IERC20.totalSupply (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1414-1415) should be declared external
ERC20.totalSupply (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1483-1484) should be declared external
ERC20.balanceOf (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1487-1489) should be declared external
IERC20.balanceOf (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1416-1420) should be declared external
ERC20.allowance (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1499-1501) should be declared external
IERC20.allowance (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1421-1423) should be declared external
IERC20.transfer (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1426-1429) should be declared external
ERC20.transfer (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1505-1506) should be declared external
ERC20.approve (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1521-1526) should be declared external
IERC20.approve (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1429-1430) should be declared external
IERC20.transferFrom (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1431) should be declared external
ERC20.transferFrom (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1537-1543) should be declared external
ERC20.increaseAllowance (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1557-1566) should be declared external
ERC20.decreaseAllowance (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1580-1588) should be declared external
BonusToken.buyTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1674-1678) should be declared external
BonusToken.startEthLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1678-1679) should be declared external
BonusToken.startTokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1679-1682) should be declared external
BonusToken.restartEthLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1683-1690) should be declared external
BonusToken.restartTokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1690-1699) should be declared external
BonusToken.updateEthLotteryBank (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1699-1703) should be declared external
BonusToken.updateTokensLotteryBank (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1703-1707) should be declared external
BonusToken.swapTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1707-1716) should be declared external
BonusToken.sendToEthLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1716-1730) should be declared external
BonusToken.sendToTokensLottery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1730-1752) should be declared external
BonusToken.ethLotteryParticipants (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1753-1758) should be declared external
BonusToken.tokensLotteryParticipants (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1758-1765) should be declared external
modERC20Detailed.name (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1810-1812) should be declared external
modERC20Detailed.symbol (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1813-1814) should be declared external
modERC20.getHolders (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1827-1830) should be declared external
InvestToken.transfer (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2007-2015) should be declared external
modIERC20.transfer (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1790-1792) should be declared external
InvestToken.fallback (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1942-1949) should be declared external
InvestToken.sellTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1969-1981) should be declared external
InvestToken.swapTokens (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1981-1993) should be declared external
InvestToken.reinvest (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1993-1999) should be declared external
InvestToken.withdraw (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2000-2006) should be declared external
InvestToken.sendDividendsToHolders (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2015-2056) should be declared external
InvestToken.setGameAddress (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2057-2058) should be declared external
InvestToken.sendToGame (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2058-2062) should be declared external
InvestToken.gameDividends (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2062-2065) should be declared external
InvestToken.price (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2065-2067) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol:
	- pragma solidity>=0.4.22<0.5 (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#91): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#96-97) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#98-99) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#100-102) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#108-113) is not in mixedCase
Struct 'Buffer.buffer' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#141-142) is not in CapWords
Parameter '_capacity' of Buffer.init (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#143) is not in mixedCase
Contract 'usingOraclize' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#346-1334) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#377-381) is not in mixedCase
Function 'usingOraclize.oraclize_setNetwork' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#381-419) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#419-420) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#420-432) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#432-434) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#434-436) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#437-441) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#441-446) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#446-451) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#451-456) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#456-461) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#461-466) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#466-471) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#471-477) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#477-483) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#483-489) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#489-495) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#495-503) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#503-508) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#508-513) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#513-520) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#520-526) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#526-530) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#531-536) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#537-544) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#544-550) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#551-556) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#556-563) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#563-573) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#573-580) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#581-587) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#587-595) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#595-605) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#605-613) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#614-621) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#622-630) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#631-639) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#639-646) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#646-651) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#651-657) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#657-666) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#666-672) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#672-676) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#676-682) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#683-689) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#689-694) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#694-700) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#700-706) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#706-713) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#713-720) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#720-727) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#727-735) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#735-743) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#743-751) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#751-758) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#759-767) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#767-776) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#776-785) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#785-792) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#792-801) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#801-814) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#814-826) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#826-830) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#831-834) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#834-836) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#836-839) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#846) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#868) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#868-869) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#889) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#889) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#906) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#906-907) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#907) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#907) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#907) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#932) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#932) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#932-933) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#933) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#936) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#936-937) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#937-938) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#942-943) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#943) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#949-950) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#954) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#954-955) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1006-1008) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1007) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1008-1011) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1011-1071) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1012-1013) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1013) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1013) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1071-1076) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1097-1134) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1146-1154) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1147-1148) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1148) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1148) is not in mixedCase
Parameter 'n_random_bytes' of usingOraclize.matchBytes32Prefix (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1155) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1158-1212) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1160) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1240-1267) is not in mixedCase
Constant 'usingOraclize.day' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#347) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#348) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#349) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#350) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#351-352) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#352-353) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#354-356) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#356-358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#358) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#358-359) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#359-361) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#361-362) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#362-364) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#364-366) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#367) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1006) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1076) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1076-1078) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1136-1146) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1398-1407) is not in mixedCase
Function 'ERC20._transfer' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1598-1605) is not in mixedCase
Function 'ERC20._mint' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1619-1627) is not in mixedCase
Function 'ERC20._burn' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1636-1644) is not in mixedCase
Contract 'modIERC20' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1783-1794) is not in CapWords
Contract 'modERC20Detailed' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1801-1821) is not in CapWords
Contract 'modERC20' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1821-1886) is not in CapWords
Function 'modERC20._transfer' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1852-1865) is not in mixedCase
Function 'modERC20._mint' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1876-1878) is not in mixedCase
Function 'modERC20._burn' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1881-1885) is not in mixedCase
Parameter '_bonusToken' of InvestToken. (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1935) is not in mixedCase
Constant 'InvestToken.a' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#1917) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Game.__callback' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2457-2586) is not in mixedCase
Constant 'Game.GAME_COIN_FlIP' (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#2195) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#347) is never used in Game
usingOraclize.week (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#348) is never used in Game
usingOraclize.month (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#349) is never used in Game
usingOraclize.proofType_NONE (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#350) is never used in Game
usingOraclize.proofType_TLSNotary (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#351-352) is never used in Game
usingOraclize.proofType_Android (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#354-356) is never used in Game
usingOraclize.proofType_Native (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#356-358) is never used in Game
usingOraclize.proofStorage_IPFS (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#358) is never used in Game
usingOraclize.networkID_mainnet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#359-361) is never used in Game
usingOraclize.networkID_testnet (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#361-362) is never used in Game
usingOraclize.networkID_morden (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#362-364) is never used in Game
usingOraclize.networkID_consensys (/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol#364-366) is never used in Game
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0x75eee2b5ffea02f1e14e6a1c40bd30ca94cff975.sol analyzed (16 contracts), 288 result(s) found