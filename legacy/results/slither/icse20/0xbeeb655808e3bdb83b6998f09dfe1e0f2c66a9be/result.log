INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:125:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SwissCryptoExchange(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:292:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(0x0, msg.sender, msg.value, tokens[0x0][msg.sender]);
    ^----------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:310:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(0x0, msg.sender, amount, tokens[0x0][msg.sender]);
    ^--------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:337:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:359:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:401:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(address(this), tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:407:5: Warning: Invoking events without "emit" prefix is deprecated.
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender);
    ^---------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:436:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(address(this), tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:445:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
    ^-------------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:487:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(address(this), tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:502:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenGet, amount, tokenGive, SafeMath.mul(amountGive, amount).div(amountGet), user, msg.sender);
    ^---------------------------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:589:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(address(this), tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:642:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return orderFills[user][keccak256(address(this), tokenGet, amountGet, tokenGive, amountGive, expires, nonce)];
                            ^----------------------------------------------------------------------------------^
/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:709:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user
                ^-------------------------------------------------^

INFO:Detectors:[92m
Reentrancy in SwissCryptoExchange.tradeBalances (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#674-712):
	External calls:
	- accountLevel = AccountLevels(accountLevelsAddr).accountLevel(user) (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#683)
	State variables written after the call(s):
	- tokens (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#693-698)
	- tokens (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#698-707)
	- tokens (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#707-709)
	- tokens (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#709-712)
	- tokens (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
AccountLevels.accountLevel (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#10-13) should be declared external
ERC20Basic.totalSupply (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#70-71) should be declared external
ERC20Basic.balanceOf (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#71) should be declared external
ERC20Basic.transfer (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#72) should be declared external
ERC20.allowance (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#82-83) should be declared external
ERC20.transferFrom (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#83-85) should be declared external
ERC20.approve (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#85-86) should be declared external
SwissCryptoExchange.fallback (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#170-171) should be declared external
SwissCryptoExchange.changeAdmin (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#172-181) should be declared external
SwissCryptoExchange.changeAccountLevelsAddr (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#189-193) should be declared external
SwissCryptoExchange.changeFeeAccount (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#197-206) should be declared external
SwissCryptoExchange.changeFeeMake (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#212-214) should be declared external
SwissCryptoExchange.changeFeeTake (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#218-226) should be declared external
SwissCryptoExchange.changeFeeRebate (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#230-237) should be declared external
SwissCryptoExchange.addWhitelistedTokenAddr (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#241-249) should be declared external
SwissCryptoExchange.removeWhitelistedTokenAddr (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#253-262) should be declared external
SwissCryptoExchange.addWhitelistedUserAddr (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#266-274) should be declared external
SwissCryptoExchange.removeWhitelistedUserAddr (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#281-289) should be declared external
SwissCryptoExchange.deposit (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#292-303) should be declared external
SwissCryptoExchange.withdraw (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#306-318) should be declared external
SwissCryptoExchange.depositToken (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#328-347) should be declared external
SwissCryptoExchange.withdrawToken (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#353-376) should be declared external
SwissCryptoExchange.balanceOf (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#382-389) should be declared external
SwissCryptoExchange.order (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#398-425) should be declared external
SwissCryptoExchange.cancelOrder (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#439-463) should be declared external
SwissCryptoExchange.trade (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#481-522) should be declared external
SwissCryptoExchange.testTrade (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#545-572) should be declared external
SwissCryptoExchange.amountFilled (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#646-669) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol:
	- pragma solidity^0.4.18 (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'SwissCryptoExchange.SwissCryptoExchange' (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#129-158) is not in mixedCase
Parameter '_admin' of SwissCryptoExchange.SwissCryptoExchange (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#131) is not in mixedCase
Parameter '_feeAccount' of SwissCryptoExchange.SwissCryptoExchange (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#133-135) is not in mixedCase
Parameter '_accountLevelsAddr' of SwissCryptoExchange.SwissCryptoExchange (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#135) is not in mixedCase
Parameter '_feeMake' of SwissCryptoExchange.SwissCryptoExchange (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#136) is not in mixedCase
Parameter '_feeTake' of SwissCryptoExchange.SwissCryptoExchange (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#136-138) is not in mixedCase
Parameter '_feeRebate' of SwissCryptoExchange.SwissCryptoExchange (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#138-139) is not in mixedCase
Parameter '_admin' of SwissCryptoExchange.changeAdmin (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#174) is not in mixedCase
Parameter '_accountLevelsAddr' of SwissCryptoExchange.changeAccountLevelsAddr (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#190-191) is not in mixedCase
Parameter '_feeAccount' of SwissCryptoExchange.changeFeeAccount (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#201) is not in mixedCase
Parameter '_feeMake' of SwissCryptoExchange.changeFeeMake (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#213) is not in mixedCase
Parameter '_feeTake' of SwissCryptoExchange.changeFeeTake (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#222) is not in mixedCase
Parameter '_feeRebate' of SwissCryptoExchange.changeFeeRebate (/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol#234) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0xbeeb655808e3bdb83b6998f09dfe1e0f2c66a9be.sol analyzed (5 contracts), 43 result(s) found