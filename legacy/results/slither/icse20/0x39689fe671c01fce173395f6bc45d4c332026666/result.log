INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:16:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSAuth() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:53:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!x) throw;
                ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:260:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function IkuraStorage() DSAuth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:506:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function IkuraAssociation() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:555:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (hasConfirmed(type_, confirmer, proposalId)) throw;
                                                    ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:649:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (proposal.amount <= 0) throw;
                              ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:663:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (proposal.amount <= 0) throw;
                              ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:664:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.coinBalance(proposal.proposer) < proposal.amount) throw;
                                                                   ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:665:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.tokenBalance(proposal.proposer) < proposal.amount) throw;
                                                                    ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:678:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (proposal.transferMinimumFee < 0) throw;
                                         ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:688:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (proposal.transferFeeRate < 0) throw;
                                      ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:723:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (fee < 0) throw;
                 ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:731:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (rate < 0) throw;
                  ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:739:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:747:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:748:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self._storage.coinBalance(sender) < amount) throw;
                                                    ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:749:54: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self._storage.tokenBalance(sender) < amount) throw;
                                                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:781:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function IkuraToken() DSAuth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:805:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.coinBalance(sender) < add(amount, fee)) throw;
                                                         ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:806:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:830:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.coinBalance(from) < amount) throw;
                                             ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:831:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.coinAllowance(from, sender) < amount) throw;
                                                       ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:832:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:833:76: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (add(_storage.coinBalance(to), amount) <= _storage.coinBalance(to)) throw;
                                                                           ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:834:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.coinBalance(sender) < fee) throw;
                                            ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:889:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.tokenBalance(sender) < amount ) throw;
                                                 ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:890:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:891:78: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (add(_storage.tokenBalance(to), amount) <= _storage.tokenBalance(to)) throw;
                                                                             ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:940:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (fee < 0) throw;
                 ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:950:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (rate < 0) throw;
                  ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:966:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:975:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (amount <= 0) throw;
                     ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:976:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.coinBalance(sender) < amount) throw;
                                               ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:977:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (_storage.tokenBalance(sender) < amount) throw;
                                                ^---^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1033:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function IkuraAuthority() DSAuth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract DSAuthority {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:52:5: Warning: This declaration shadows a builtin symbol.
    function assert(bool x) internal {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:528:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:552:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:580:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:591:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:603:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:608:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:628:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      Proposal proposal = proposals[type_][i];
      ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:639:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[type_][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:646:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[sha3('mint')][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:660:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[sha3('burn')][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:676:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[sha3('transferMinimumFee')][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:686:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Proposal proposal = proposals[sha3('transferFeeRate')][proposalId];
    ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:18:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(msg.sender);
        ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:25:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(owner);
        ^----------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:32:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetAuthority(authority);
        ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:507:15: Warning: "sha3" has been deprecated in favour of "keccak256"
    proposals[sha3('mint')] = mintProposals;
              ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:508:15: Warning: "sha3" has been deprecated in favour of "keccak256"
    proposals[sha3('burn')] = burnProposals;
              ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:509:15: Warning: "sha3" has been deprecated in favour of "keccak256"
    proposals[sha3('transferMinimumFee')] = transferMinimumFeeProposals;
              ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:510:15: Warning: "sha3" has been deprecated in favour of "keccak256"
    proposals[sha3('transferFeeRate')] = transferFeeRateProposals;
              ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:533:23: Warning: "sha3" has been deprecated in favour of "keccak256"
    proposal.digest = sha3(proposer, amount, transationBytecode);
                      ^----------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:533:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    proposal.digest = sha3(proposer, amount, transationBytecode);
                      ^----------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:540:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('mint')) MintProposalAdded(proposalId, proposer, amount);
                 ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:540:32: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('mint')) MintProposalAdded(proposalId, proposer, amount);
                               ^---------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:541:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('burn')) BurnProposalAdded(proposalId, proposer, amount);
                 ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:541:32: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('burn')) BurnProposalAdded(proposalId, proposer, amount);
                               ^---------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:542:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('transferMinimumFee')) TransferMinimumFeeProposalAdded(proposalId, proposer, transferMinimumFee);
                 ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:542:46: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('transferMinimumFee')) TransferMinimumFeeProposalAdded(proposalId, proposer, transferMinimumFee);
                                             ^-----------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:543:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('transferFeeRate')) TransferFeeRateProposalAdded(proposalId, proposer, transferFeeRate);
                 ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:543:43: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('transferFeeRate')) TransferFeeRateProposalAdded(proposalId, proposer, transferFeeRate);
                                          ^-----------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:562:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('mint')) MintConfirmed(proposalId, confirmer, proposal.amount);
                 ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:562:32: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('mint')) MintConfirmed(proposalId, confirmer, proposal.amount);
                               ^---------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:563:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('burn')) BurnConfirmed(proposalId, confirmer, proposal.amount);
                 ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:563:32: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('burn')) BurnConfirmed(proposalId, confirmer, proposal.amount);
                               ^---------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:564:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('transferMinimumFee')) TransferMinimumFeeConfirmed(proposalId, confirmer, proposal.transferMinimumFee);
                 ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:564:46: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('transferMinimumFee')) TransferMinimumFeeConfirmed(proposalId, confirmer, proposal.transferMinimumFee);
                                             ^-----------------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:565:18: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (type_ == sha3('transferFeeRate')) TransferFeeRateConfirmed(proposalId, confirmer, proposal.transferFeeRate);
                 ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:565:43: Warning: Invoking events without "emit" prefix is deprecated.
    if (type_ == sha3('transferFeeRate')) TransferFeeRateConfirmed(proposalId, confirmer, proposal.transferFeeRate);
                                          ^-----------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:572:20: Warning: "sha3" has been deprecated in favour of "keccak256"
      if (type_ == sha3('mint')) executeMintProposal(proposalId);
                   ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:573:20: Warning: "sha3" has been deprecated in favour of "keccak256"
      if (type_ == sha3('burn')) executeBurnProposal(proposalId);
                   ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:574:20: Warning: "sha3" has been deprecated in favour of "keccak256"
      if (type_ == sha3('transferMinimumFee')) executeUpdateTransferMinimumFeeProposal(proposalId);
                   ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:575:20: Warning: "sha3" has been deprecated in favour of "keccak256"
      if (type_ == sha3('transferFeeRate')) executeUpdateTransferFeeRateProposal(proposalId);
                   ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:615:32: Warning: "sha3" has been deprecated in favour of "keccak256"
    return  proposal.digest == sha3(proposer, proposal.amount, transactionBytecode) &&
                               ^--------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:615:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return  proposal.digest == sha3(proposer, proposal.amount, transactionBytecode) &&
                               ^--------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:646:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    Proposal proposal = proposals[sha3('mint')][proposalId];
                                  ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:651:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintExecuted(proposalId, proposal.proposer, proposal.amount);
    ^----------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:660:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    Proposal proposal = proposals[sha3('burn')][proposalId];
                                  ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:667:5: Warning: Invoking events without "emit" prefix is deprecated.
    BurnExecuted(proposalId, proposal.proposer, proposal.amount);
    ^----------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:676:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    Proposal proposal = proposals[sha3('transferMinimumFee')][proposalId];
                                  ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:680:5: Warning: Invoking events without "emit" prefix is deprecated.
    TransferMinimumFeeExecuted(proposalId, proposal.proposer, proposal.transferMinimumFee);
    ^------------------------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:686:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    Proposal proposal = proposals[sha3('transferFeeRate')][proposalId];
                                  ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:690:5: Warning: Invoking events without "emit" prefix is deprecated.
    TransferFeeRateExecuted(proposalId, proposal.proposer, proposal.transferFeeRate);
    ^------------------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:725:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    self._association.newProposal(sha3('transferMinimumFee'), sender, 0, fee, 0, '');
                                  ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:733:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    self._association.newProposal(sha3('transferFeeRate'), sender, 0, 0, rate, '');
                                  ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:741:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    self._association.newProposal(sha3('mint'), sender, amount, 0, 0, '');
                                  ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:751:35: Warning: "sha3" has been deprecated in favour of "keccak256"
    self._association.newProposal(sha3('burn'), sender, amount, 0, 0, '');
                                  ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:821:5: Warning: Invoking events without "emit" prefix is deprecated.
    IkuraTransfer(sender, to, amount);
    ^-------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:822:5: Warning: Invoking events without "emit" prefix is deprecated.
    IkuraTransferFee(sender, to, owner, fee);
    ^--------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:855:5: Warning: Invoking events without "emit" prefix is deprecated.
    IkuraTransfer(from, to, amount);
    ^-----------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:864:5: Warning: Invoking events without "emit" prefix is deprecated.
    IkuraApproval(sender, spender, amount);
    ^------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:896:5: Warning: Invoking events without "emit" prefix is deprecated.
    IkuraTransferToken(sender, to, amount);
    ^------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:942:30: Warning: "sha3" has been deprecated in favour of "keccak256"
    _association.newProposal(sha3('transferMinimumFee'), sender, 0, fee, 0, '');
                             ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:952:30: Warning: "sha3" has been deprecated in favour of "keccak256"
    _association.newProposal(sha3('transferFeeRate'), sender, 0, 0, rate, '');
                             ^---------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:968:30: Warning: "sha3" has been deprecated in favour of "keccak256"
    _association.newProposal(sha3('mint'), sender, amount, 0, 0, '');
                             ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:979:30: Warning: "sha3" has been deprecated in favour of "keccak256"
    _association.newProposal(sha3('burn'), sender, amount, 0, 0, '');
                             ^----------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1086:19: Warning: "sha3" has been deprecated in favour of "keccak256"
    return bytes4(sha3(str));
                  ^-------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1086:19: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return bytes4(sha3(str));
                  ^-------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1086:19: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    return bytes4(sha3(str));
                  ^-------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1136:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(msg.sender, to, amount);
      ^------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1146:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(from, to, amount);
      ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1156:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, spender, amount);
      ^-----------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1216:39: Warning: "sha3" has been deprecated in favour of "keccak256"
    token.confirmProposal(msg.sender, sha3(type_), proposalId);
                                      ^---------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1216:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    token.confirmProposal(msg.sender, sha3(type_), proposalId);
                                      ^---------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1216:39: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    token.confirmProposal(msg.sender, sha3(type_), proposalId);
                                      ^---------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1225:36: Warning: "sha3" has been deprecated in favour of "keccak256"
    return token.numberOfProposals(sha3(type_));
                                   ^---------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1225:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return token.numberOfProposals(sha3(type_));
                                   ^---------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1225:36: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    return token.numberOfProposals(sha3(type_));
                                   ^---------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:2:5: Warning: No visibility specified. Defaulting to "public". 
    function canCall(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function DSAuth() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:21:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(address owner_)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:28:5: Warning: No visibility specified. Defaulting to "public". 
    function setAuthority(DSAuthority authority_)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint supply);
    ^----------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf( address who ) constant returns (uint value);
    ^--------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:64:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance( address owner, address spender ) constant returns (uint _allowance);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer( address to, uint value) returns (bool ok);
    ^-----------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom( address from, address to, uint value) returns (bool ok);
    ^-----------------------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:68:5: Warning: No visibility specified. Defaulting to "public". 
    function approve( address spender, uint value ) returns (bool ok);
    ^----------------------------------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:260:3: Warning: No visibility specified. Defaulting to "public". 
  function IkuraStorage() DSAuth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:266:3: Warning: No visibility specified. Defaulting to "public". 
  function changeToken(address tokenAddress_) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:270:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAssociation(address multiSigAddress_) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:274:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAuthority(address authorityAddress_) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:278:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() auth returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:281:3: Warning: No visibility specified. Defaulting to "public". 
  function addTotalSupply(uint amount) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:284:3: Warning: No visibility specified. Defaulting to "public". 
  function subTotalSupply(uint amount) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:287:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFeeRate() auth returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:291:3: Warning: No visibility specified. Defaulting to "public". 
  function setTransferFeeRate(uint newTransferFeeRate) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:301:3: Warning: No visibility specified. Defaulting to "public". 
  function transferMinimumFee() auth returns (uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:305:3: Warning: No visibility specified. Defaulting to "public". 
  function setTransferMinimumFee(uint8 newTransferMinimumFee) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:330:3: Warning: No visibility specified. Defaulting to "public". 
  function primaryOwner() auth returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:334:3: Warning: No visibility specified. Defaulting to "public". 
  function isOwnerAddress(address addr) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:342:3: Warning: No visibility specified. Defaulting to "public". 
  function numOwnerAddress() auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:350:3: Warning: No visibility specified. Defaulting to "public". 
  function coinBalance(address addr) auth returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:354:3: Warning: No visibility specified. Defaulting to "public". 
  function addCoinBalance(address addr, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:360:3: Warning: No visibility specified. Defaulting to "public". 
  function subCoinBalance(address addr, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:370:3: Warning: No visibility specified. Defaulting to "public". 
  function tokenBalance(address addr) auth returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:374:3: Warning: No visibility specified. Defaulting to "public". 
  function addTokenBalance(address addr, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:384:3: Warning: No visibility specified. Defaulting to "public". 
  function subTokenBalance(address addr, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:398:3: Warning: No visibility specified. Defaulting to "public". 
  function coinAllowance(address owner_, address spender) auth returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:402:3: Warning: No visibility specified. Defaulting to "public". 
  function addCoinAllowance(address owner_, address spender, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:408:3: Warning: No visibility specified. Defaulting to "public". 
  function subCoinAllowance(address owner_, address spender, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:414:3: Warning: No visibility specified. Defaulting to "public". 
  function setCoinAllowance(address owner_, address spender, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:506:3: Warning: No visibility specified. Defaulting to "public". 
  function IkuraAssociation() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:514:3: Warning: No visibility specified. Defaulting to "public". 
  function changeStorage(IkuraStorage newStorage) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:520:3: Warning: No visibility specified. Defaulting to "public". 
  function changeToken(IkuraToken token_) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:526:3: Warning: No visibility specified. Defaulting to "public". 
  function newProposal(bytes32 type_, address proposer, uint amount, uint8 transferMinimumFee, uint transferFeeRate, bytes transationBytecode) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:551:3: Warning: No visibility specified. Defaulting to "public". 
  function confirmProposal(bytes32 type_, address confirmer, uint proposalId) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:579:3: Warning: No visibility specified. Defaulting to "public". 
  function hasConfirmed(bytes32 type_, address addr, uint proposalId) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:590:3: Warning: No visibility specified. Defaulting to "public". 
  function confirmedTotalToken(bytes32 type_, uint proposalId) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:602:3: Warning: No visibility specified. Defaulting to "public". 
  function proposalExpireAt(bytes32 type_, uint proposalId) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:607:3: Warning: No visibility specified. Defaulting to "public". 
  function isProposalExecutable(bytes32 type_, uint proposalId, address proposer, bytes transactionBytecode) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:620:3: Warning: No visibility specified. Defaulting to "public". 
  function numberOfProposals(bytes32 type_) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:624:3: Warning: No visibility specified. Defaulting to "public". 
  function numberOfActiveProposals(bytes32 type_) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:628:7: Warning: Unused local variable.
      Proposal proposal = proposals[type_][i];
      ^---------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:722:3: Warning: No visibility specified. Defaulting to "public". 
  function updateTransferMinimumFee(Entity storage self, address sender, uint8 fee) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:730:3: Warning: No visibility specified. Defaulting to "public". 
  function updateTransferFeeRate(Entity storage self, address sender, uint rate) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:738:3: Warning: No visibility specified. Defaulting to "public". 
  function mint(Entity storage self, address sender, uint amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:746:3: Warning: No visibility specified. Defaulting to "public". 
  function burn(Entity storage self, address sender, uint amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:756:3: Warning: No visibility specified. Defaulting to "public". 
  function confirmProposal(Entity storage self, address sender, bytes32 type_, uint proposalId) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:760:3: Warning: No visibility specified. Defaulting to "public". 
  function numberOfProposals(Entity storage self, bytes32 type_) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:781:3: Warning: No visibility specified. Defaulting to "public". 
  function IkuraToken() DSAuth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:790:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply(address sender) auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:796:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address sender, address addr) auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:802:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address sender, address to, uint amount) auth returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:827:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address sender, address from, address to, uint amount) auth returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:860:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address sender, address spender, uint amount) auth returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:870:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address sender, address owner, address spender) auth constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:881:3: Warning: No visibility specified. Defaulting to "public". 
  function tokenBalanceOf(address sender, address owner) auth constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:888:3: Warning: No visibility specified. Defaulting to "public". 
  function transferToken(address sender, address to, uint amount) auth returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:902:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFeeRate(address sender) auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:909:3: Warning: No visibility specified. Defaulting to "public". 
  function transferMinimumFee(address sender) auth constant returns (uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:916:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFee(address sender, address from, address to, uint amount) auth returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:939:3: Warning: No visibility specified. Defaulting to "public". 
  function updateTransferMinimumFee(address sender, uint8 fee) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:949:3: Warning: No visibility specified. Defaulting to "public". 
  function updateTransferFeeRate(address sender, uint rate) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:959:3: Warning: No visibility specified. Defaulting to "public". 
  function selectOwnerAddressForTransactionFee(address sender) auth returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:965:3: Warning: No visibility specified. Defaulting to "public". 
  function mint(address sender, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:974:3: Warning: No visibility specified. Defaulting to "public". 
  function burn(address sender, uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:983:3: Warning: No visibility specified. Defaulting to "public". 
  function confirmProposal(address sender, bytes32 type_, uint proposalId) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:989:3: Warning: No visibility specified. Defaulting to "public". 
  function numberOfProposals(bytes32 type_) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:995:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAssociation(address association_) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1003:3: Warning: No visibility specified. Defaulting to "public". 
  function changeStorage(address storage_) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1011:3: Warning: No visibility specified. Defaulting to "public". 
  function logicVersion(address sender) auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1033:3: Warning: No visibility specified. Defaulting to "public". 
  function IkuraAuthority() DSAuth() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1040:3: Warning: No visibility specified. Defaulting to "public". 
  function changeStorage(address storage_) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1055:3: Warning: No visibility specified. Defaulting to "public". 
  function canCall(address src, address dst, bytes4 sig) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1126:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1130:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address addr) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1134:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1144:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1154:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1164:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address addr, address spender) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1172:3: Warning: No visibility specified. Defaulting to "public". 
  function tokenBalanceOf(address addr) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1176:3: Warning: No visibility specified. Defaulting to "public". 
  function transferToken(address to, uint amount) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1180:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFeeRate() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1184:3: Warning: No visibility specified. Defaulting to "public". 
  function transferMinimumFee() constant returns (uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1188:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFee(address from, address to, uint amount) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1194:3: Warning: No visibility specified. Defaulting to "public". 
  function updateTransferMinimumFee(uint8 minimumFee) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1198:3: Warning: No visibility specified. Defaulting to "public". 
  function updateTransferFeeRate(uint feeRate) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1202:3: Warning: No visibility specified. Defaulting to "public". 
  function mint(uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1206:3: Warning: No visibility specified. Defaulting to "public". 
  function burn(uint amount) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1210:3: Warning: No visibility specified. Defaulting to "public". 
  function isOwner(address addr) auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1215:3: Warning: No visibility specified. Defaulting to "public". 
  function confirmProposal(string type_, uint proposalId) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1219:3: Warning: No visibility specified. Defaulting to "public". 
  function numOwnerAddress() auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1224:3: Warning: No visibility specified. Defaulting to "public". 
  function numberOfProposals(string type_) auth constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1233:3: Warning: No visibility specified. Defaulting to "public". 
  function setup(address storageAddress, address tokenAddress, address authorityAddress, address associationAddress) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1241:3: Warning: No visibility specified. Defaulting to "public". 
  function changeToken(address tokenAddress) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1256:3: Warning: No visibility specified. Defaulting to "public". 
  function changeStorage(address storageAddress) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1262:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAuthority(address authorityAddress) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1272:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAssociation(address associationAddress) auth {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1288:3: Warning: No visibility specified. Defaulting to "public". 
  function forbiddenAction() auth returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1293:3: Warning: No visibility specified. Defaulting to "public". 
  function logicVersion() constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:40:5: Warning: Function state mutability can be restricted to view
    function isAuthorized(address src, bytes4 sig) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:52:5: Warning: Function state mutability can be restricted to pure
    function assert(bool x) internal {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:77:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:81:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:85:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:90:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:94:5: Warning: Function state mutability can be restricted to pure
    function min(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:97:5: Warning: Function state mutability can be restricted to pure
    function max(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:103:5: Warning: Function state mutability can be restricted to pure
    function hadd(uint128 x, uint128 y) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:107:5: Warning: Function state mutability can be restricted to pure
    function hsub(uint128 x, uint128 y) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:111:5: Warning: Function state mutability can be restricted to pure
    function hmul(uint128 x, uint128 y) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:116:5: Warning: Function state mutability can be restricted to pure
    function hdiv(uint128 x, uint128 y) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:120:5: Warning: Function state mutability can be restricted to pure
    function hmin(uint128 x, uint128 y) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:123:5: Warning: Function state mutability can be restricted to pure
    function hmax(uint128 x, uint128 y) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:129:5: Warning: Function state mutability can be restricted to pure
    function imin(int256 x, int256 y) constant internal returns (int256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:132:5: Warning: Function state mutability can be restricted to pure
    function imax(int256 x, int256 y) constant internal returns (int256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:221:5: Warning: Function state mutability can be restricted to pure
    function cast(uint256 x) constant internal returns (uint128 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:342:30: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function numOwnerAddress() auth constant returns (uint) {
                             ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:579:3: Warning: Function state mutability can be restricted to view
  function hasConfirmed(bytes32 type_, address addr, uint proposalId) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:602:3: Warning: Function state mutability can be restricted to view
  function proposalExpireAt(bytes32 type_, uint proposalId) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:630:11: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      if (isProposalNotExpired(type_, i)) {
          ^----------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:638:3: Warning: Function state mutability can be restricted to view
  function isProposalNotExpired(bytes32 type_, uint proposalId) internal returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:790:40: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function totalSupply(address sender) auth constant returns (uint) {
                                       ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:793:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _storage.totalSupply();
           ^--------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:796:52: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function balanceOf(address sender, address addr) auth constant returns (uint) {
                                                   ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:799:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _storage.coinBalance(addr);
           ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:870:70: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function allowance(address sender, address owner, address spender) auth constant returns (uint remaining) {
                                                                     ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:873:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _storage.coinAllowance(owner, spender);
           ^------------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:881:58: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function tokenBalanceOf(address sender, address owner) auth constant returns (uint balance) {
                                                         ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:884:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _storage.tokenBalance(owner);
           ^--------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:902:44: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function transferFeeRate(address sender) auth constant returns (uint) {
                                           ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:905:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _storage.transferFeeRate();
           ^------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:909:47: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function transferMinimumFee(address sender) auth constant returns (uint8) {
                                              ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:912:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return _storage.transferMinimumFee();
           ^---------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1011:41: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
  function logicVersion(address sender) auth constant returns (uint) {
                                        ^--^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1057:39: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    if (actionsWithToken[sig]) return canCallWithAssociation(src, dst);
                                      ^------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1067:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return tokenStorage.isOwnerAddress(src);
           ^------------------------------^
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1080:3: Warning: Function state mutability can be restricted to pure
  function canCallWithNoOne() internal constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol:1085:3: Warning: Function state mutability can be restricted to pure
  function stringToSig(string str) internal constant returns (bytes4) {
  ^ (Relevant source part starts here and spans across multiple lines).
Warning: There are more than 256 warnings. Ignoring the rest.

INFO:Detectors:[91m
IkuraController.authority (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1176) shadows:
	- DSAuth.authority (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#13-14)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing[0m
INFO:Detectors:[91m
IkuraAssociation.mintProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#490) is never initialized. It is used in:
	- IkuraAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#527-533)
IkuraAssociation.burnProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#490-491) is never initialized. It is used in:
	- IkuraAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#527-533)
IkuraAssociation.transferMinimumFeeProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#491) is never initialized. It is used in:
	- IkuraAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#527-533)
IkuraAssociation.transferFeeRateProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#491-492) is never initialized. It is used in:
	- IkuraAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#527-533)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Reentrancy in IkuraStorage.addTokenBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#385-402):
	External calls:
	- tokenBalances[addr] > 0 && ! isOwnerAddress(addr) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#398-399)
	State variables written after the call(s):
	- ownerAddresses (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#399)
Reentrancy in IkuraAssociation.confirmProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#567-603):
	External calls:
	- isProposalExecutable(type_,proposalId,proposal.proposer,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#584-603)
	State variables written after the call(s):
	- proposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#590)
Reentrancy in IkuraController.setup (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1293-1303):
	External calls:
	- changeStorage(storageAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1298-1299)
	- changeToken(tokenAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1299)
	- changeAuthority(authorityAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1300-1301)
	State variables written after the call(s):
	- authority (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1300-1301)
Reentrancy in IkuraController.setup (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1293-1303):
	External calls:
	- changeStorage(storageAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1298-1299)
	- changeToken(tokenAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1299)
	- changeAuthority(authorityAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1300-1301)
	- changeAssociation(associationAddress) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1301-1303)
	State variables written after the call(s):
	- association (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1301-1303)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
IkuraAssociation.executeMintProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#670-680) does not use the value returned by external calls:
	-_storage.addCoinBalance(proposal.proposer,proposal.amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#676-678)
	-_storage.addTokenBalance(proposal.proposer,proposal.amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#678-680)
IkuraAssociation.executeBurnProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#680-699) does not use the value returned by external calls:
	-_storage.subCoinBalance(proposal.proposer,proposal.amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#692-695)
	-_storage.subTokenBalance(proposal.proposer,proposal.amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#695-698)
IkuraAssociation.executeUpdateTransferFeeRateProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#718-730) does not use the value returned by external calls:
	-_storage.setTransferFeeRate(proposal.transferFeeRate) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#727-730)
ProposalLibrary.updateTransferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#749-757) does not use the value returned by external calls:
	-self._association.newProposal(sha3()(transferMinimumFee),sender,0,fee,0,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#756)
ProposalLibrary.updateTransferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#757-765) does not use the value returned by external calls:
	-self._association.newProposal(sha3()(transferFeeRate),sender,0,0,rate,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#760-765)
ProposalLibrary.mint (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#765-781) does not use the value returned by external calls:
	-self._association.newProposal(sha3()(mint),sender,amount,0,0,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#771-779)
ProposalLibrary.burn (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#781-796) does not use the value returned by external calls:
	-self._association.newProposal(sha3()(burn),sender,amount,0,0,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#790-796)
IkuraToken.transfer (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#834-864) does not use the value returned by external calls:
	-_storage.subCoinBalance(sender,add(amount,fee)) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#852-855)
	-_storage.addCoinBalance(to,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#855-857)
	-_storage.addCoinBalance(owner,fee) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#860)
IkuraToken.transferFrom (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#864-902) does not use the value returned by external calls:
	-_storage.subCoinBalance(sender,fee) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#889-890)
	-_storage.subCoinBalance(from,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#890-891)
	-_storage.subCoinAllowance(from,sender,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#891-893)
	-_storage.addCoinBalance(to,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#893-894)
	-_storage.addCoinBalance(owner,fee) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#894-896)
IkuraToken.approve (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#902-912) does not use the value returned by external calls:
	-_storage.setCoinAllowance(sender,spender,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#908-909)
IkuraToken.transferToken (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#927-949) does not use the value returned by external calls:
	-_storage.subTokenBalance(sender,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#942)
	-_storage.addTokenBalance(to,amount) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#942-945)
IkuraToken.updateTransferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#977-984) does not use the value returned by external calls:
	-_association.newProposal(sha3()(transferMinimumFee),sender,0,fee,0,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#980-983)
IkuraToken.updateTransferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#984-995) does not use the value returned by external calls:
	-_association.newProposal(sha3()(transferFeeRate),sender,0,0,rate,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#989-990)
IkuraToken.mint (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#997-1011) does not use the value returned by external calls:
	-_association.newProposal(sha3()(mint),sender,amount,0,0,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1004-1005)
IkuraToken.burn (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1011-1034) does not use the value returned by external calls:
	-_association.newProposal(sha3()(burn),sender,amount,0,0,) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1028-1033)
IkuraController.changeToken (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol) does not use the value returned by external calls:
	-token.changeStorage(tokenStorage) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol)
	-association.changeToken(token) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol)
	-token.changeAssociation(association) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol)
IkuraController.changeAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol) does not use the value returned by external calls:
	-association.changeStorage(tokenStorage) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol)
	-association.changeToken(token) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol)
	-token.changeAssociation(association) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
DSAuth.assert (function @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#53-62) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
IkuraToken.transfer.owner (local variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#846-849) shadows:
	- DSAuth.owner (state variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#14-16)
IkuraToken.transferFrom.owner (local variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#888-889) shadows:
	- DSAuth.owner (state variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#14-16)
IkuraToken.allowance.owner (local variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#916) shadows:
	- DSAuth.owner (state variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#14-16)
IkuraToken.tokenBalanceOf.owner (local variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#923) shadows:
	- DSAuth.owner (state variable @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#14-16)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
IkuraAssociation.confirmedTotalToken has external calls inside a loop:
	- total = add(total,_storage.tokenBalance(proposal.confirmers[i])) (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#617-620)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
IkuraAssociation.confirmTotalTokenThreshold should be constant (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#482-483)
IkuraController.name should be constant (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1164-1165)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#62:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#528:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#528-530:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#530-531:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#531-533:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#551-552:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#558-562:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#562-563:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#563-564:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#564-565:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#573:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#574-575:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#575-579:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#579-581:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#581-584:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#591-592:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#592-595:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#595-599:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#599-602:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#638-646:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#671-672:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#672:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#682-685:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#685:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#686:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#690:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#703-711:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#714:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#722:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#723:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#756:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#756:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#760:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#760-765:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#771:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#771-779:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#786:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#787:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#790:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#790-796:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#843:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#846:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#873:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#881:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#881:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#884:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#888:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#939:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#939:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#942:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#980:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#980-983:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#989:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#989-990:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1003-1004:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1004-1005:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1019:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1021:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1025:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1028-1033:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1159-1161:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1274-1278:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1288-1290:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
IkuraAuthority.canCall (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1126-1135) should be declared external
DSAuthority.canCall (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#2-6) should be declared external
DSAuth.setOwner (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#21-28) should be declared external
IkuraController.totalSupply (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1180-1181) should be declared external
ERC20.totalSupply (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#63) should be declared external
IkuraController.balanceOf (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1184-1186) should be declared external
ERC20.balanceOf (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#63-64) should be declared external
ERC20.allowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#64-66) should be declared external
IkuraController.allowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1211-1216) should be declared external
ERC20.transfer (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#67) should be declared external
IkuraController.transfer (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1188-1194) should be declared external
ERC20.transferFrom (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#67-68) should be declared external
IkuraController.transferFrom (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1195-1202) should be declared external
ERC20.approve (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#69-70) should be declared external
IkuraController.approve (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1202-1211) should be declared external
IkuraStorage.changeToken (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#275-279) should be declared external
IkuraStorage.changeAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#279-282) should be declared external
IkuraStorage.changeAuthority (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#282-287) should be declared external
IkuraStorage.totalSupply (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#287-291) should be declared external
IkuraStorage.addTotalSupply (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#291-292) should be declared external
IkuraStorage.subTotalSupply (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#292-301) should be declared external
IkuraStorage.transferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#301-305) should be declared external
IkuraStorage.setTransferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#305-310) should be declared external
IkuraStorage.transferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#310-315) should be declared external
IkuraStorage.setTransferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#315-321) should be declared external
IkuraStorage.primaryOwner (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#342-350) should be declared external
IkuraStorage.numOwnerAddress (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#357-361) should be declared external
IkuraStorage.coinBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#361-370) should be declared external
IkuraStorage.addCoinBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#370-375) should be declared external
IkuraStorage.subCoinBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#375-383) should be declared external
IkuraStorage.tokenBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#384-385) should be declared external
IkuraStorage.addTokenBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#385-402) should be declared external
IkuraStorage.subTokenBalance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#402-408) should be declared external
IkuraStorage.coinAllowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#408-411) should be declared external
IkuraStorage.addCoinAllowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#412-420) should be declared external
IkuraStorage.subCoinAllowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#420-427) should be declared external
IkuraStorage.setCoinAllowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#427-436) should be declared external
IkuraAssociation.changeStorage (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#533-536) should be declared external
IkuraAssociation.changeToken (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#536-540) should be declared external
IkuraAssociation.newProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#540-567) should be declared external
IkuraAssociation.proposalExpireAt (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#621-627) should be declared external
IkuraAssociation.numberOfProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#648-652) should be declared external
IkuraAssociation.numberOfActiveProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#654-663) should be declared external
ProposalLibrary.updateTransferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#749-757) should be declared external
ProposalLibrary.updateTransferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#757-765) should be declared external
ProposalLibrary.mint (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#765-781) should be declared external
ProposalLibrary.burn (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#781-796) should be declared external
ProposalLibrary.confirmProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#796-802) should be declared external
ProposalLibrary.numberOfProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#802-806) should be declared external
IkuraToken.totalSupply (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#828-831) should be declared external
IkuraToken.balanceOf (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#831-833) should be declared external
IkuraToken.transfer (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#834-864) should be declared external
IkuraToken.transferFrom (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#864-902) should be declared external
IkuraToken.approve (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#902-912) should be declared external
IkuraToken.allowance (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#913-920) should be declared external
IkuraToken.tokenBalanceOf (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#921-927) should be declared external
IkuraToken.transferToken (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#927-949) should be declared external
IkuraToken.updateTransferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#977-984) should be declared external
IkuraToken.updateTransferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#984-995) should be declared external
IkuraToken.mint (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#997-1011) should be declared external
IkuraToken.burn (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1011-1034) should be declared external
IkuraToken.confirmProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1034-1044) should be declared external
IkuraToken.numberOfProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1044-1046) should be declared external
IkuraToken.changeAssociation (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1047-1049) should be declared external
IkuraToken.changeStorage (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1049-1057) should be declared external
IkuraToken.logicVersion (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1057-1060) should be declared external
IkuraAuthority.changeStorage (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1076-1126) should be declared external
IkuraController.tokenBalanceOf (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1219-1224) should be declared external
IkuraController.transferToken (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1224-1233) should be declared external
IkuraController.transferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1233) should be declared external
IkuraController.transferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1233-1237) should be declared external
IkuraController.transferFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1237-1246) should be declared external
IkuraController.updateTransferMinimumFee (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1246-1252) should be declared external
IkuraController.updateTransferFeeRate (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1252-1258) should be declared external
IkuraController.mint (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1258-1264) should be declared external
IkuraController.burn (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1264-1268) should be declared external
IkuraController.isOwner (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1268-1272) should be declared external
IkuraController.confirmProposal (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1272-1278) should be declared external
IkuraController.numOwnerAddress (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1278-1282) should be declared external
IkuraController.numberOfProposals (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1283-1292) should be declared external
IkuraController.setup (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1293-1303) should be declared external
IkuraController.forbiddenAction (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol) should be declared external
IkuraController.logicVersion (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'DSAuth.DSAuth' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#16-21) is not in mixedCase
Function 'IkuraStorage.IkuraStorage' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#267-275) is not in mixedCase
Variable 'IkuraStorage._totalSupply' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#261) is not in mixedCase
Variable 'IkuraStorage._transferFeeRate' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#261) is not in mixedCase
Variable 'IkuraStorage._transferMinimumFee' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#262-263) is not in mixedCase
Function 'IkuraAssociation.IkuraAssociation' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#527-533) is not in mixedCase
Variable 'IkuraAssociation._storage' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#483-488) is not in mixedCase
Variable 'IkuraAssociation._token' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#490) is not in mixedCase
Function 'IkuraToken.IkuraToken' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#821-828) is not in mixedCase
Variable 'IkuraToken._storage' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#817-818) is not in mixedCase
Variable 'IkuraToken._association' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#818-821) is not in mixedCase
Function 'IkuraAuthority.IkuraAuthority' (/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol#1071-1076) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/13/0x39689fe671c01fce173395f6bc45d4c332026666.sol analyzed (12 contracts), 191 result(s) found