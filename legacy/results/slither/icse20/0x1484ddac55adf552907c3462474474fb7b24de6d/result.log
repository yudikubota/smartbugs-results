INFO:Slither:Compilation warnings/errors on /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:52:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BCHC() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:63:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address.
                        ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:64:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:65:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:66:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:75:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:83:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address.
                        ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:84:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:85:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:86:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:87:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:69:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:91:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:52:5: Warning: No visibility specified. Defaulting to "public". 
    function BCHC() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:73:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BCHC (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#38-95) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#63-72)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#31-38) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#63:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#65:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#67:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#77-78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BCHC.transfer (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#63-72) should be declared external
BCHC.approve (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#74-82) should be declared external
BCHC.transferFrom (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#82-95) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'BCHC.BCHC' (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#53-62) is not in mixedCase
Parameter '_to' of BCHC.transfer (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#63) is not in mixedCase
Parameter '_value' of BCHC.transfer (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#63) is not in mixedCase
Parameter '_spender' of BCHC.approve (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#75) is not in mixedCase
Parameter '_value' of BCHC.approve (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#75-76) is not in mixedCase
Parameter '_from' of BCHC.transferFrom (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#83) is not in mixedCase
Parameter '_to' of BCHC.transferFrom (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#83) is not in mixedCase
Parameter '_value' of BCHC.transferFrom (/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol#83) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x1484ddac55adf552907c3462474474fb7b24de6d.sol analyzed (2 contracts), 25 result(s) found