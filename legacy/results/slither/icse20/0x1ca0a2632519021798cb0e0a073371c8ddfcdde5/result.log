INFO:Slither:Compilation warnings/errors on /unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:17:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function Ownable() 	
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:79:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function DukeOfEther()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:106:9: Warning: Invoking events without "emit" prefix is deprecated.
        updateDukeHistory(strCountry, false, "Vacant", m_addrOwner, 0, now);
        ^-----------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:117:13: Warning: Invoking events without "emit" prefix is deprecated.
            errorMessage("String too long: keep strNickName and strCountry <= 30");
            ^--------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:142:13: Warning: Invoking events without "emit" prefix is deprecated.
            errorMessage("Too many active countries. Consider destroying few.");
            ^-----------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:147:13: Warning: Invoking events without "emit" prefix is deprecated.
            errorMessage("There should be at least 3 countries alive");
            ^--------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:154:4: Warning: Invoking events without "emit" prefix is deprecated.
			errorMessage("Sorry, but country costs more");
			^-------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:169:9: Warning: Invoking events without "emit" prefix is deprecated.
        updateDukeHistory(strCountry, bDestroy, strNickName, msg.sender, msg.value, now);    
        ^------------------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:200:13: Warning: Invoking events without "emit" prefix is deprecated.
            errorMessage("String too long: keep strNickName and strCountry <= 30");
            ^--------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:207:4: Warning: Invoking events without "emit" prefix is deprecated.
			errorMessage("This country does not exist: use addRemoveCountry first");
			^---------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:228:9: Warning: Invoking events without "emit" prefix is deprecated.
        updateDukeHistory(strCountry, false, strNickName, msg.sender, msg.value, now); 
        ^---------------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:6:2: Warning: No visibility specified. Defaulting to "public". 
	function addToShareHoldersProfit(string, string) payable
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:17:2: Warning: No visibility specified. Defaulting to "public". 
	function Ownable() 	
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:33:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) onlyOwner 
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:40:2: Warning: No visibility specified. Defaulting to "public". 
	function isOwner() constant returns (bool bIsOwner) { return (m_addrOwner == msg.sender); }
	^-----------------------------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:79:2: Warning: No visibility specified. Defaulting to "public". 
	function DukeOfEther()
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:136:2: Warning: No visibility specified. Defaulting to "public". 
	function addRemoveCountry(string strCountry, string strNickName, bool bDestroy) payable
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:193:2: Warning: No visibility specified. Defaulting to "public". 
	function becomeDuke(string strCountry, string strNickName) payable
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:237:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawDukeOwnersMoney() onlyOwner
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:244:5: Warning: No visibility specified. Defaulting to "public". 
    function setShareHolder(address addr) onlyOwner { m_addrShareHolder = addr; }
    ^---------------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:246:2: Warning: No visibility specified. Defaulting to "public". 
	function isDestroyed(string strCountry) constant returns (bool) { return m_Countries[strCountry].m_bIsDestroyed; }
	^----------------------------------------------------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:247:2: Warning: No visibility specified. Defaulting to "public". 
	function getInitBlock() constant returns (uint nInitBlock) { return m_deployedAtBlock; }
	^--------------------------------------------------------------------------------------^
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:248:2: Warning: No visibility specified. Defaulting to "public". 
	function getDukeNickName(string strCountry) constant returns (string) 
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:250:2: Warning: No visibility specified. Defaulting to "public". 
	function getDukeDate(string strCountry) constant returns (uint date) 
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:252:2: Warning: No visibility specified. Defaulting to "public". 
	function getCurrentDuke(string strCountry) constant returns (address addr) 
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:254:2: Warning: No visibility specified. Defaulting to "public". 
	function getCurrentDukePaid(string strCountry) constant returns (uint nPaid) 
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:256:2: Warning: No visibility specified. Defaulting to "public". 
	function getMinNextBet(string strCountry) constant returns (uint nNextBet) 
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:273:2: Warning: No visibility specified. Defaulting to "public". 
	function getPaymentToAddRemoveCountry(string strCountry, bool bRemove) constant returns (uint)
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in DukeOfEther.addRemoveCountry (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#138-198):
	External calls:
	- processShareHolderFee(nFee,strNickName) (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#171-172)
	State variables written after the call(s):
	- m_Countries (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#186)
	- m_nNumberOfActiveCountries (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#188)
	- m_nNumberOfActiveCountries (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#191-193)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
DukeOfEther.becomeDuke (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#198-246) uses a dangerous strict equality:
	- countryInfo.m_addrCurrentDuke == 0 || countryInfo.m_bIsDestroyed == true
	- countryInfo.m_addrCurrentDuke == 0 || countryInfo.m_bIsDestroyed == true
DukeOfEther.becomeDuke (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#198-246) uses a dangerous strict equality:
	- countryInfo.m_addrCurrentDuke == 0 || countryInfo.m_bIsDestroyed == true
	- countryInfo.m_addrCurrentDuke == 0 || countryInfo.m_bIsDestroyed == true
DukeOfEther.getMinNextBet (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#262-277) uses a dangerous strict equality:
	- m_Countries[strCountry].m_nCurrentDukePaid == 0
DukeOfEther.becomeDuke (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#198-246) uses a dangerous strict equality:
	- countryInfo.m_addrCurrentDuke == 0 || countryInfo.m_bIsDestroyed == true
	- countryInfo.m_addrCurrentDuke == 0 || countryInfo.m_bIsDestroyed == true
DukeOfEther.getMinNextBet (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#262-277) uses a dangerous strict equality:
	- m_Countries[strCountry].m_nCurrentDukePaid == 0
DukeOfEther.getPaymentToAddRemoveCountry (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#277-287) uses a dangerous strict equality:
	- bRemove && m_Countries[strCountry].m_addrCurrentDuke == 0
	- ! bRemove && m_Countries[strCountry].m_addrCurrentDuke != 0 && m_Countries[strCountry].m_bIsDestroyed == false
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:
	Contract ShareHolder has payable functions:
	 - addToShareHoldersProfit (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#6-11)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
newCountryInfo in DukeOfEther.addRemoveCountry (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#174-175) is a local variable never initialiazed
newCountryInfo in DukeOfEther.addCountry (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#98) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in DukeOfEther.addRemoveCountry (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#138-198):
	External calls:
	- processShareHolderFee(nFee,strNickName) (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#171-172)
	State variables written after the call(s):
	- m_nOwnersMoney (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#193-195)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DukeOfEther.m_NextDukePaymentIncrease should be constant (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#56-57)
DukeOfEther.m_nDaysBeforeDeteriorationStarts should be constant (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#56)
DukeOfEther.m_nDeterioration should be constant (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#54)
DukeOfEther.m_nMinDukePrice should be constant (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#54)
DukeOfEther.m_nNewCountryPrice should be constant (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#52-53)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ShareHolder.addToShareHoldersProfit (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#6-11) should be declared external
Ownable.transferOwnership (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#33-40) should be declared external
Ownable.isOwner (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#40-46) should be declared external
DukeOfEther.addRemoveCountry (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#138-198) should be declared external
DukeOfEther.becomeDuke (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#198-246) should be declared external
DukeOfEther.withdrawDukeOwnersMoney (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#246-247) should be declared external
DukeOfEther.setShareHolder (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#247-248) should be declared external
DukeOfEther.isDestroyed (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#248-250) should be declared external
DukeOfEther.getInitBlock (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#250-251) should be declared external
DukeOfEther.getDukeNickName (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#251-253) should be declared external
DukeOfEther.getDukeDate (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#253-255) should be declared external
DukeOfEther.getCurrentDuke (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#255-258) should be declared external
DukeOfEther.getCurrentDukePaid (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#258-262) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol:
	- pragma solidity^0.4.16 (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '' of ShareHolder.addToShareHoldersProfit (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#6) is not in mixedCase
Parameter '_scope_0' of ShareHolder.addToShareHoldersProfit (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#6) is not in mixedCase
Function 'Ownable.Ownable' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#17-22) is not in mixedCase
Variable 'Ownable.m_addrOwner' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#15-17) is not in mixedCase
Event 'DukeOfEther.updateDukeHistory' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#73-79) is not in CapWords
Event 'DukeOfEther.errorMessage' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#79-81) is not in CapWords
Function 'DukeOfEther.DukeOfEther' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#82-95) is not in mixedCase
Variable 'DukeOfEther.m_addrShareHolder' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#48-50) is not in mixedCase
Variable 'DukeOfEther.m_deployedAtBlock' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#50) is not in mixedCase
Variable 'DukeOfEther.m_nOwnersMoney' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#52) is not in mixedCase
Variable 'DukeOfEther.m_nNewCountryPrice' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#52-53) is not in mixedCase
Variable 'DukeOfEther.m_nMinDukePrice' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#54) is not in mixedCase
Variable 'DukeOfEther.m_nDeterioration' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#54) is not in mixedCase
Variable 'DukeOfEther.m_nDaysBeforeDeteriorationStarts' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#56) is not in mixedCase
Variable 'DukeOfEther.m_NextDukePaymentIncrease' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#56-57) is not in mixedCase
Variable 'DukeOfEther.m_nNumberOfActiveCountries' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#60-62) is not in mixedCase
Variable 'DukeOfEther.m_Countries' (/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol#69-71) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x1ca0a2632519021798cb0e0a073371c8ddfcdde5.sol analyzed (3 contracts), 40 result(s) found