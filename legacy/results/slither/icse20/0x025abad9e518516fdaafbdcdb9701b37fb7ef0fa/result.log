INFO:Slither:Compilation warnings/errors on /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:13:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:18:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw; // functions with onlyOwner will throw and exception if not the contract owner
                                 ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:63:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardMintableToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:81:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:82:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if sender frozen
                                       ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:83:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_to]) throw;                       // Check if recipient frozen                 
                                ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:110:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if sender frozen       
                                  ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:111:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_to]) throw;                          // Check if recipient frozen                 
                                ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:113:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;    // Check for overflows
                                                      ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:114:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;       // Check allowance
                                                   ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:133:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                 // Check if sender frozen       
                                       ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:143:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if sender frozen       
                                       ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:144:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                     // Check if recipient frozen 
                                  ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:147:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;    // Check allowance
                                                   ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:158:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[target] + mintedAmount < balanceOf[target]) throw; // Check for overflows
                                                                  ^---^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:86:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:94:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);              // Notify of new Approval
        ^------------------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:118:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);                           // Perform the transfer
        ^--------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:126:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);                          // notify event
        ^-------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:138:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender,0, _value);	                      // Burn _value tokens
        ^----------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:151:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, 0, _value);                          // Burn tokens by Transfer to incinerator
        ^------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:161:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, target, mintedAmount);
        ^-------------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:22:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner { // transfer contract owner to new owner
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:28:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardMintableToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:78:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:91:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:109:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:124:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze ) onlyOwner {    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:132:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:142:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:157:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
StandardMintableToken.standard should be constant (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#41)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#18:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#84:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#112:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#114-115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#144-145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#145:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#149:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#163-164:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#22-28) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#28-31) should be declared external
StandardMintableToken.transfer (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#79-91) should be declared external
StandardMintableToken.approveAndCall (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#100-109) should be declared external
StandardMintableToken.transferFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#110-124) should be declared external
StandardMintableToken.freezeAccount (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#125-132) should be declared external
StandardMintableToken.burn (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#133-143) should be declared external
StandardMintableToken.burnFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#143-157) should be declared external
StandardMintableToken.mintToken (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#158-165) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol:
	- pragma solidity^0.4.11 (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#10-28) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#28-31) is not in CapWords
Function 'StandardMintableToken.StandardMintableToken' (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#64-78) is not in mixedCase
Parameter '_to' of StandardMintableToken.transfer (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#79) is not in mixedCase
Parameter '_value' of StandardMintableToken.transfer (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#79) is not in mixedCase
Parameter '_spender' of StandardMintableToken.approve (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#93) is not in mixedCase
Parameter '_value' of StandardMintableToken.approve (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#93) is not in mixedCase
Parameter '_spender' of StandardMintableToken.approveAndCall (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#101) is not in mixedCase
Parameter '_value' of StandardMintableToken.approveAndCall (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#101) is not in mixedCase
Parameter '_extraData' of StandardMintableToken.approveAndCall (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#101-102) is not in mixedCase
Parameter '_from' of StandardMintableToken.transferFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#110) is not in mixedCase
Parameter '_to' of StandardMintableToken.transferFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#110) is not in mixedCase
Parameter '_value' of StandardMintableToken.transferFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#110) is not in mixedCase
Parameter '_value' of StandardMintableToken.burn (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#133-134) is not in mixedCase
Parameter '_from' of StandardMintableToken.burnFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#143) is not in mixedCase
Parameter '_value' of StandardMintableToken.burnFrom (/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol#143-144) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/9/0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa.sol analyzed (3 contracts), 40 result(s) found