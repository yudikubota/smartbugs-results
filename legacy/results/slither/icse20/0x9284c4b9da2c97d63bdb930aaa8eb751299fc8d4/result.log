INFO:Slither:Compilation warnings/errors on /unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:42:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function EightStakes() public {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:353:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
			aHashes[n] = sha256(uint(oRoom.aPlayers[n]) + uint(aBlockHash));
			             ^------------------------------------------------^
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:353:17: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
			aHashes[n] = sha256(uint(oRoom.aPlayers[n]) + uint(aBlockHash));
			             ^------------------------------------------------^
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:73:15: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
		uint nGas = msg.gas*800000000;
		            ^-----^
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:95:15: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
					0 < uint(block.blockhash(_mRooms[_aRoomsOpened[n]].nLastPlayersBlockNumber)) ) { 
					         ^-------------^
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:109:54: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
			if (0 < oRoom.nLastPlayersBlockNumber && 0 < uint(block.blockhash(oRoom.nLastPlayersBlockNumber))) {
			                                                  ^-------------^
/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:346:24: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
		bytes32 aBlockHash = block.blockhash(oRoom.nLastPlayersBlockNumber);
		                     ^-------------^

INFO:Detectors:[93m
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) uses a dangerous strict equality:
	- oRoom.aPlayers.length != nSize || oRoom.nBid != nBid || uint256(- 1) == (nPlayer = playerGet(oRoom,oPlayer))
	- oPlayer == oRoom.aPlayers[oRoom.aLosers[n]]
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) uses a dangerous strict equality:
	- oRoom.aPlayers.length != nSize || oRoom.nBid != nBid || uint256(- 1) == (nPlayer = playerGet(oRoom,oPlayer))
	- oPlayer == oRoom.aPlayers[oRoom.aLosers[n]]
EightStakes.Plenum (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) uses a dangerous strict equality:
	- oRoom.aPlayers.length != nSize || oRoom.nBid != nBid || uint256(- 1) == (nPlayer = playerGet(oRoom,oPlayer))
	- oPlayer == oRoom.aPlayers[oRoom.aLosers[n]]
EightStakes.Plenum (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
EightStakes.playerGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#258-265) uses a dangerous strict equality:
	- oPlayer == oRoom.aPlayers[n]
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) uses a dangerous strict equality:
	- oRoom.aPlayers.length != nSize || oRoom.nBid != nBid || uint256(- 1) == (nPlayer = playerGet(oRoom,oPlayer))
	- oPlayer == oRoom.aPlayers[oRoom.aLosers[n]]
EightStakes.Plenum (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
EightStakes.playerGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#258-265) uses a dangerous strict equality:
	- oPlayer == oRoom.aPlayers[n]
EightStakes.result (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#270-324) uses a dangerous strict equality:
	- 8 == nSize
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- 0 == (_mPlayerRooms[oRoom.aPlayers[n]] &= ~ nRoomType)
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) uses a dangerous strict equality:
	- oRoom.aPlayers.length != nSize || oRoom.nBid != nBid || uint256(- 1) == (nPlayer = playerGet(oRoom,oPlayer))
	- oPlayer == oRoom.aPlayers[oRoom.aLosers[n]]
EightStakes.Plenum (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
EightStakes.playerGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#258-265) uses a dangerous strict equality:
	- oPlayer == oRoom.aPlayers[n]
EightStakes.result (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#270-324) uses a dangerous strict equality:
	- 8 == nSize
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- 0 == (_mPlayerRooms[oRoom.aPlayers[n]] &= ~ nRoomType)
EightStakes.roomGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#241-258) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == nLength && 1 > oRoom.aPlayers[nLength - 1]
	- nBid == oRoom.nBid && nSize == nLength && 1 > oRoom.aPlayers[nLength - 1]
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) uses a dangerous strict equality:
	- oRoom.aPlayers[nPlayer] == msg.sender
	- nPlayer + 1 == oRoom.aPlayers.length
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) uses a dangerous strict equality:
	- oRoom.aPlayers.length != nSize || oRoom.nBid != nBid || uint256(- 1) == (nPlayer = playerGet(oRoom,oPlayer))
	- oPlayer == oRoom.aPlayers[oRoom.aLosers[n]]
EightStakes.Plenum (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
	- nBid == oRoom.nBid && nSize == (nLength = oRoom.aPlayers.length) && 1 > oRoom.aPlayers[-- nLength]
EightStakes.playerGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#258-265) uses a dangerous strict equality:
	- oPlayer == oRoom.aPlayers[n]
EightStakes.result (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#270-324) uses a dangerous strict equality:
	- 8 == nSize
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- nIndx1 == n || (8 == nSize && nIndx2 == n)
	- 0 == (_mPlayerRooms[oRoom.aPlayers[n]] &= ~ nRoomType)
EightStakes.roomGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#241-258) uses a dangerous strict equality:
	- nBid == oRoom.nBid && nSize == nLength && 1 > oRoom.aPlayers[nLength - 1]
	- nBid == oRoom.nBid && nSize == nLength && 1 > oRoom.aPlayers[nLength - 1]
EightStakes.roomTypeGet (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#196-215) uses a dangerous strict equality:
	- 80000000000000000 == nBid
	- 4 == nSize
	- 8 == nSize
	- 800000000000000000 == nBid
	- 4 == nSize
	- 8 == nSize
	- 8000000000000000000 == nBid && 8 == nSize
	- 8000000000000000000 == nBid && 8 == nSize
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
nAmount in EightStakes.result (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#289) is a local variable never initialiazed
n in EightStakes.roomClose (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#216) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
EightStakes.result has external calls inside a loop:
	- ! _mPlayers[oRoom.aPlayers[n]].oAddress.send(uint256(nAmount = int256(oRoom.nBid + nValue + _mPlayers[oRoom.aPlayers[n]].mGasByRoom[nRoom]))) (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#291-293)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#74-75:
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected @ /unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#94-102:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#110-118:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#355-357:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
EightStakes.Bid (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) should be declared external
EightStakes.IsCheckNeeded (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#92-103) should be declared external
EightStakes.LastResult (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) should be declared external
EightStakes.Plenum (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) should be declared external
EightStakes.State (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#159-189) should be declared external
EightStakes.Remove (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#189) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol:
	- pragma solidity^0.4.18 (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'EightStakes.EightStakes' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#43-52) is not in mixedCase
Function 'EightStakes.Bid' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#52-91) is not in mixedCase
Function 'EightStakes.IsCheckNeeded' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#92-103) is not in mixedCase
Function 'EightStakes.ProcessRooms' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#103-119) is not in mixedCase
Function 'EightStakes.LastResult' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#119-145) is not in mixedCase
Function 'EightStakes.Plenum' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#148-159) is not in mixedCase
Function 'EightStakes.State' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#159-189) is not in mixedCase
Function 'EightStakes.Remove' (/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol#189) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/18/0x9284c4b9da2c97d63bdb930aaa8eb751299fc8d4.sol analyzed (1 contracts), 29 result(s) found