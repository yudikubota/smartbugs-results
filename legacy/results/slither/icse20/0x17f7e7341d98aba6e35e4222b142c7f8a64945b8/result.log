INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol:
	Contract Immortality has payable functions:
	 - fallback (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#205-206)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
SafeMath.safeMul (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#24-28) should be declared external
SafeMath.safeDiv (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#28-35) should be declared external
Immortality.totalSupply (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#117-121) should be declared external
ERC20Interface.totalSupply (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#37-38) should be declared external
ERC20Interface.balanceOf (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#38-39) should be declared external
Immortality.balanceOf (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#125-129) should be declared external
Immortality.allowance (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#183-185) should be declared external
ERC20Interface.allowance (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#39-40) should be declared external
Immortality.transfer (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#134-142) should be declared external
ERC20Interface.transfer (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#40-41) should be declared external
ERC20Interface.approve (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#41-42) should be declared external
Immortality.approve (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#151-158) should be declared external
ERC20Interface.transferFrom (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#42-44) should be declared external
Immortality.transferFrom (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#167-176) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#51-55) should be declared external
Owned.transferOwnership (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#74-77) should be declared external
Owned.acceptOwnership (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#77-85) should be declared external
Immortality.approveAndCall (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#190-199) should be declared external
Immortality.fallback (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#205-206) should be declared external
Immortality.transferAnyERC20Token (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Owned.transferOwnership (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#75-76) is not in mixedCase
Variable 'Immortality._totalSupply' (/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol#96) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x17f7e7341d98aba6e35e4222b142c7f8a64945b8.sol analyzed (5 contracts), 23 result(s) found