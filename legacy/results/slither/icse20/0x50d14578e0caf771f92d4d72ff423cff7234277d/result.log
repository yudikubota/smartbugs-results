INFO:Slither:Compilation warnings/errors on /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:15:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:20:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:25:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (newOwner == 0x0) throw;
                             ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:57:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:182:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GrimReaperToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:217:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value < GRForGas) throw;                                      // Prevents drain and spam
                               ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:236:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                    if(!msg.sender.send(gasForGR)) throw;                  // Send eth to sender
                                                   ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:239:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                    if(!_to.send(gasForGR)) throw;                         // Send eth to recipient
                                            ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:242:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        } else { throw; }
                 ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:248:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (buyPriceEth == 0 || msg.value < buyPriceEth) throw;             // Avoid dividing 0, sending small amounts and spam
                                                         ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:250:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[this] < amount) throw;                                 // Check if it has enough to sell
                                     ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:260:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (sellPriceEth == 0 || amount < GRForGas) throw;                 // Avoid selling and spam
                                                    ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:261:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[msg.sender] < amount) throw;                           // Check if the sender has enough to sell
                                           ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:263:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (safeSub(this.balance, revenue) < gasReserve) throw;             // Keep min amount of eth in contract to provide gas for transactions
                                                         ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:265:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                                          // To do this last to avoid recursion attacks
            ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:279:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                                          // To do this last to avoid recursion attacks
            ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:283:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[this] < GR) throw;                                    // Check if it has enough to sell
                                 ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:293:38: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!directTradeAllowed) throw;
                                     ^---^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:56:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:124:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:136:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:147:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:228:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(msg.sender, _to, _value);                          // Notify anyone listening that this transfer took place
                ^-------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:233:17: Warning: Invoking events without "emit" prefix is deprecated.
                Transfer(msg.sender, _to, safeSub(_value, GRForGas));      // Notify anyone listening that this transfer took place
                ^--------------------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:253:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                                 // Execute an event reflecting the change
        ^--------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:263:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (safeSub(this.balance, revenue) < gasReserve) throw;             // Keep min amount of eth in contract to provide gas for transactions
                    ^----------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:269:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, msg.sender, revenue);                            // Execute an event reflecting on the change
            ^---------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:281:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, msg.sender, eth);                                // Execute an event reflecting on the change
            ^-----------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:286:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, GR);                                    // Execute an event reflecting the change
        ^----------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:24:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:99:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:116:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:129:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:145:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:151:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:182:5: Warning: No visibility specified. Defaulting to "public". 
    function GrimReaperToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:188:5: Warning: No visibility specified. Defaulting to "public". 
    function setEtherPrices(uint256 newBuyPriceEth, uint256 newSellPriceEth) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function setGasForGR(uint newGasAmountInWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:195:5: Warning: No visibility specified. Defaulting to "public". 
    function setGRForGas(uint newGRAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:198:5: Warning: No visibility specified. Defaulting to "public". 
    function setGasReserve(uint newGasReserveInWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function setMinBalance(uint minimumBalanceInWei) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:207:5: Warning: No visibility specified. Defaulting to "public". 
    function haltDirectTrade() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:210:5: Warning: No visibility specified. Defaulting to "public". 
    function unhaltDirectTrade() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:216:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:247:5: Warning: No visibility specified. Defaulting to "public". 
    function buyGrimReapersAgainstEther() payable returns (uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:259:5: Warning: No visibility specified. Defaulting to "public". 
    function sellGrimReapersAgainstEther(uint256 amount) returns (uint revenue) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:276:5: Warning: No visibility specified. Defaulting to "public". 
    function refundToOwner (uint256 amountOfEth, uint256 GR) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:291:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:56:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
GrimReaperToken.totalSupply (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#172) shadows:
	- Token.totalSupply (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#78)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#57-65) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
GrimReaperToken.decimals should be constant (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#171)
GrimReaperToken.name should be constant (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#168)
GrimReaperToken.symbol should be constant (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#169)
GrimReaperToken.totalSupply should be constant (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#172)
Token.totalSupply should be constant (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#78)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#26:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#22-23:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#65:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#219:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#240:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#247-248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#250:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#252:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#262:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#263:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#265:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#268:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#283:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#285:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#24-34) should be declared external
StandardToken.balanceOf (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#145-147) should be declared external
Token.balanceOf (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#82-83) should be declared external
Token.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#88) should be declared external
GrimReaperToken.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#218-248) should be declared external
StandardToken.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#117-130) should be declared external
StandardToken.transferFrom (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#130-145) should be declared external
Token.transferFrom (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#95-96) should be declared external
StandardToken.approve (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#147-155) should be declared external
Token.approve (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#101-102) should be declared external
Token.allowance (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#106-107) should be declared external
StandardToken.allowance (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#155-166) should be declared external
GrimReaperToken.setEtherPrices (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#189-196) should be declared external
GrimReaperToken.setGasForGR (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#197-199) should be declared external
GrimReaperToken.setGRForGas (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#200-202) should be declared external
GrimReaperToken.setGasReserve (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#202-206) should be declared external
GrimReaperToken.setMinBalance (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#207-210) should be declared external
GrimReaperToken.haltDirectTrade (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#215-216) should be declared external
GrimReaperToken.unhaltDirectTrade (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#216-217) should be declared external
GrimReaperToken.refundToOwner (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#279-294) should be declared external
GrimReaperToken.fallback (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol:
	- pragma solidity^0.4.8 (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#12-34) is not in CapWords
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#145) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#117-118) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#118) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#130) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#130) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#130) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#147-148) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#148-149) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#155-156) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#156) is not in mixedCase
Parameter '_to' of GrimReaperToken.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#218) is not in mixedCase
Parameter '_value' of GrimReaperToken.transfer (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#218-219) is not in mixedCase
Function 'GrimReaperToken.GrimReaperToken' (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#188-189) is not in mixedCase
Parameter 'GR' of GrimReaperToken.refundToOwner (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#279) is not in mixedCase
Variable 'GrimReaperToken.GrimReaperAddress' (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#170) is not in mixedCase
Variable 'GrimReaperToken.GRForGas' (/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol#176) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/45/0x50d14578e0caf771f92d4d72ff423cff7234277d.sol analyzed (5 contracts), 58 result(s) found