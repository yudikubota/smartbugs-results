INFO:Slither:Compilation warnings/errors on /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:133:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GUNS() {}
    ^----------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:158:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isFinalized) throw;                                    // crowdsale state check
                         ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:159:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number < fundingStartBlock) throw;               // within start block check
                                              ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:160:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number > fundingEndBlock) throw;                 // within end block check
                                            ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:161:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;                                 // person actually sent ETH check
                            ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:166:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokenCreationCap < checkedSupply) throw;               // if exceeding token max, cancel order
                                              ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:179:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != ethFundDeposit) throw;                                         // check caller is ETH deposit address
                                          ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:181:80: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= fundingEndBlock && totalSupply < tokenCreationCap) throw;    // check past end block unless at creation cap
                                                                               ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:183:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!ethFundDeposit.send(this.balance)) throw;                                   // send account balance to ETH deposit address
                                                ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:198:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (isFinalized) throw;                               // check crowdsale state is false
                         ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:199:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= fundingEndBlock) throw;           // check crowdsale still running
                                             ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:200:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (totalSupply >= tokenCreationMin) throw;           // check creation min was not met
                                             ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:201:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender == gunsFundDeposit) throw;             // do not allow dev refund
                                           ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:204:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (gunsVal == 0) throw;                              // check caller has tokens
                          ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:211:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!msg.sender.send(ethVal)) throw;                  // send caller their refund
                                      ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:218:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != ethFundDeposit) throw;                // check caller is ETH deposit address
                                          ^---^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:46:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:58:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:71:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:151:9: Warning: Invoking events without "emit" prefix is deprecated.
        CreateGUNS(gunsFundDeposit, gunsFund);    // logs token creation event
        ^-----------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:170:9: Warning: Invoking events without "emit" prefix is deprecated.
        CreateGUNS(msg.sender, tokens);                            // logs token creation event
        ^----------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:183:34: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (!ethFundDeposit.send(this.balance)) throw;                                   // send account balance to ETH deposit address
                                 ^----------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:190:13: Warning: Invoking events without "emit" prefix is deprecated.
            CreateGUNS(gunsFundDeposit, remainingSupply);                                // logs token creation event
            ^------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:209:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRefund(msg.sender, ethVal);                        // log refund event
        ^---------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:221:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, gunsFundDeposit, balances[this]);    // log transfer event
            ^---------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:227:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(0x0, gunsFundDeposit, balances[0x0]);      // log transfer event
            ^-------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:29:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:30:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:31:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:32:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:65:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:133:5: Warning: No visibility specified. Defaulting to "public". 
    function GUNS() {}
    ^----------------^
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:112:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:119:5: Warning: Function state mutability can be restricted to pure
    function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:126:5: Warning: Function state mutability can be restricted to pure
    function safeMult(uint256 x, uint256 y) internal returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
GUNS.version should be constant (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#94)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#159-160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#161:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#163:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#163:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#180:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#185:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#200:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#203:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#204:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#207:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#221:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.balanceOf (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#29-30) should be declared external
StandardToken.balanceOf (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#65-69) should be declared external
Token.transfer (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#30-31) should be declared external
StandardToken.transfer (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#42-53) should be declared external
StandardToken.transferFrom (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#53-65) should be declared external
Token.transferFrom (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#31-32) should be declared external
Token.approve (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#32-33) should be declared external
StandardToken.approve (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#69-75) should be declared external
StandardToken.allowance (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#75-80) should be declared external
Token.allowance (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#33-34) should be declared external
GUNS.initialize (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#140-156) should be declared external
GUNS.fallback (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#158-177) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#66) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#42) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#43) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#53) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#53-54) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#54) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#70) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#70) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#76) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#76) is not in mixedCase
Function 'GUNS.GUNS' (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#138-139) is not in mixedCase
Parameter '_ethFundDeposit' of GUNS.initialize (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#141-142) is not in mixedCase
Parameter '_gunsFundDeposit' of GUNS.initialize (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#142) is not in mixedCase
Parameter '_fundingStartBlock' of GUNS.initialize (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#142-143) is not in mixedCase
Parameter '_fundingEndBlock' of GUNS.initialize (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#143) is not in mixedCase
Constant 'GUNS.gunsFund' (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#102-103) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GUNS.tokenExchangeRate' (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#104) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GUNS.tokenCreationCap' (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#104-105) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GUNS.tokenCreationMin' (/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol#105-108) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x2ca72c9699b92b47272c9716c664cad6167c80b0.sol analyzed (3 contracts), 48 result(s) found