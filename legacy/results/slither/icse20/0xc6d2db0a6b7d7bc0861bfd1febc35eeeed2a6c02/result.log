INFO:Slither:Compilation warnings/errors on /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:81:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:191:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:196:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:201:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:459:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:471:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:475:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:481:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:488:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:503:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:521:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:527:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:532:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:542:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:548:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:553:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:559:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:578:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:584:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:609:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:637:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:660:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:668:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:685:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:696:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:697:100: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[reciever].minCap && tokenAmountOf[reciever] == 0) throw;
                                                                                                   ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:708:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isWhiteListed) throw;
                        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:712:92: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokensBought < earlyParticipantWhitelist[addr].minCap && tokenAmountOf[addr] == 0) throw;
                                                                                           ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:778:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:810:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (lastTierCntrct.finalized()) throw;
                                    ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:836:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:851:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:905:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1011:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1067:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1074:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1172:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsaleExt(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:101:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:587:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:676:7: Warning: Invoking events without "emit" prefix is deprecated.
      Whitelisted(addr, status, minCap, maxCap);
      ^---------------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:678:7: Warning: Invoking events without "emit" prefix is deprecated.
      WhitelistItemChanged(addr, status, minCap, maxCap);
      ^------------------------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:789:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(startsAt);
    ^-----------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:821:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:987:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:997:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1014:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1132:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1140:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1215:5: Warning: Invoking events without "emit" prefix is deprecated.
    MaximumSellableTokensChanged(maximumSellableTokens);
    ^-------------------------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:81:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:142:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:148:3: Warning: No visibility specified. Defaulting to "public". 
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:155:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:160:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:241:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:250:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:301:3: Warning: No visibility specified. Defaulting to "public". 
  function distributeReservedTokens(uint reservedTokensDistributionBatch);
  ^----------------------------------------------------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:304:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:459:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleExt(string _name, address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:502:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:770:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:984:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:991:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1001:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1005:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1018:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1172:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsaleExt(
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1192:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1192:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1192:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) public constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:7:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:13:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:20:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:25:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:31:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:35:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:39:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:43:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:142:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:148:3: Warning: Function state mutability can be restricted to pure
  function divides(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:155:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:160:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:233:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:241:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:250:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:290:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:895:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:980:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:1199:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return (tokenAmountOf[addr].plus(tokenAmount)) > maxCap;
            ^-----------------------------------^

INFO:Detectors:[93m
Reentrancy in CrowdsaleExt.finalize (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#655-668):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#667)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#668)
Reentrancy in CrowdsaleExt.investInternal (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#529-612):
	External calls:
	- getState() == State.Funding (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#538-551)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#556-558)
	- updateInheritedEarlyParticipantWhitelist(receiver,tokenAmount) (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#574-577)
	State variables written after the call(s):
	- tokenAmountOf (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#591-593)
	- tokensSold (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#598-599)
	- weiRaised (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#594-598)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#475-516):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#496-499)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#510)
	- isUpdatable (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#516)
	- isWhiteListed (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#516)
	- minimumFundingGoal (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#513-515)
	- multisigWallet (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#500)
	- startsAt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#509)
Reentrancy in CrowdsaleExt.investInternal (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#529-612):
	External calls:
	- getState() == State.Funding (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#538-551)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#556-558)
	- updateInheritedEarlyParticipantWhitelist(receiver,tokenAmount) (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#574-577)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#587-591)
	- investorCount (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#586)
Reentrancy in MintedTokenCappedCrowdsaleExt.setMaximumSellableTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol):
	External calls:
	- assert(bool)(! lastTierCntrct.finalized()) (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol)
	State variables written after the call(s):
	- maximumSellableTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleExt.getState (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#914-925) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#923-925)
	- block.timestamp < startsAt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#922-925)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#374-376)
CrowdsaleExt.joinedCrowdsalesLenMax should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#415-417)
CrowdsaleExt.ownerTestValue should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#444)
FinalizeAgent.reservedTokensAreDistributed should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#297-299)
FractionalERC20Ext.decimals should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#354)
FractionalERC20Ext.minCap should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#354)
MintableTokenExt.mintingFinished should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1075-1078)
PricingStrategy.tier should be constant (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#239)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#205:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#207:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#210:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#502-503:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#507-508:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#510:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#512-513:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#519:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#538:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#547:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#551:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#563:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#570:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#574:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#581:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#603:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#606:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#624:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#659-660:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#684:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#687-688:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#701:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#713:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#714:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#722:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#734:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#805:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#841:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#867:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#883-884:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#929:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1051:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1105:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Basic.balanceOf (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#58-59) should be declared external
StandardToken.balanceOf (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1032-1037) should be declared external
ERC20Basic.transfer (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#59-60) should be declared external
StandardToken.transfer (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1009-1014) should be declared external
Ownable.transferOwnership (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#100-109) should be declared external
SafeMathLibExt.times (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#148-155) should be declared external
SafeMathLibExt.divides (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#155-161) should be declared external
SafeMathLibExt.minus (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#161-169) should be declared external
SafeMathLibExt.plus (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#169-171) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#241-246) should be declared external
PricingStrategy.isSane (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#248-250) should be declared external
PricingStrategy.isPresalePurchase (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#258-261) should be declared external
PricingStrategy.updateRate (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#262-263) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#274-281) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#299-301) should be declared external
FinalizeAgent.isSane (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#309-310) should be declared external
FinalizeAgent.distributeReservedTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#310-321) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#323-325) should be declared external
ERC20.allowance (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#329-336) should be declared external
StandardToken.allowance (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1056-1060) should be declared external
StandardToken.transferFrom (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1014-1032) should be declared external
ERC20.transferFrom (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#336-346) should be declared external
ERC20.approve (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#346-350) should be declared external
StandardToken.approve (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1037-1056) should be declared external
CrowdsaleExt.fallback (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#518-519) should be declared external
CrowdsaleExt.buy (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#619-622) should be declared external
CrowdsaleExt.distributeReservedTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#622-631) should be declared external
CrowdsaleExt.areReservedTokensDistributed (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#631-636) should be declared external
CrowdsaleExt.canDistributeReservedTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#636-651) should be declared external
CrowdsaleExt.finalize (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#655-668) should be declared external
CrowdsaleExt.setFinalizeAgent (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#675-684) should be declared external
CrowdsaleExt.setEarlyParticipantWhitelistMultiple (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#697-711) should be declared external
CrowdsaleExt.updateEarlyParticipantWhitelist (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#720-743) should be declared external
CrowdsaleExt.whitelistedParticipantsLength (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#752-755) should be declared external
CrowdsaleExt.updateJoinedCrowdsalesMultiple (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#783-795) should be declared external
CrowdsaleExt.setStartsAt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#795-816) should be declared external
CrowdsaleExt.setEndsAt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#829-847) should be declared external
CrowdsaleExt.setMultisig (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#881-885) should be declared external
CrowdsaleExt.isFinalizerSane (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#889-890) should be declared external
CrowdsaleExt.isPricingSane (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#895-903) should be declared external
CrowdsaleExt.isCrowdsale (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#925-927) should be declared external
StandardToken.isToken (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1008-1009) should be declared external
MintableTokenExt.finalizeReservedAddress (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1106-1111) should be declared external
MintableTokenExt.areTokensDistributedForAddress (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1113-1115) should be declared external
MintableTokenExt.getReservedTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1115-1122) should be declared external
MintableTokenExt.getReservedPercentageUnit (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1123-1127) should be declared external
MintableTokenExt.getReservedPercentageDecimals (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1127-1131) should be declared external
MintableTokenExt.setReservedTokensListMultiple (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1131-1152) should be declared external
MintableTokenExt.mint (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1161-1174) should be declared external
MintableTokenExt.setMintAgent (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1177-1182) should be declared external
MintedTokenCappedCrowdsaleExt.setMaximumSellableTokens (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol) should be declared external
MintedTokenCappedCrowdsaleExt.updateRate (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol:
	- pragma solidity^0.4.8 (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#87-89) is not in mixedCase
Function 'CrowdsaleExt.CrowdsaleExt' (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#475-516) is not in mixedCase
Parameter '_name' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#478-480) is not in mixedCase
Parameter '_token' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#480) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#481-484) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#484-486) is not in mixedCase
Parameter '_start' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#486-487) is not in mixedCase
Parameter '_end' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#487) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#487-488) is not in mixedCase
Parameter '_isUpdatable' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#488-491) is not in mixedCase
Parameter '_isWhiteListed' of CrowdsaleExt.CrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#491) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleExt.setPricingStrategy (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#857-858) is not in mixedCase
Variable 'CrowdsaleExt.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#374-376) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1032-1035) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1009-1010) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1010) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1058-1059) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1059) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1016-1018) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1018) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1018) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1039) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1039) is not in mixedCase
Function 'MintedTokenCappedCrowdsaleExt.MintedTokenCappedCrowdsaleExt' (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1200-1218) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsaleExt.MintedTokenCappedCrowdsaleExt (/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol#1208-1209) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xc6d2db0a6b7d7bc0861bfd1febc35eeeed2a6c02.sol analyzed (13 contracts), 119 result(s) found