INFO:Slither:Compilation warnings/errors on /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:26:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:187:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:203:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (value == 0) throw;
                    ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:453:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleToken(string _name, string _symbol, uint _initialSupply, uint8 _decimals, bool _mintable)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:714:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:756:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:783:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:817:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:996:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1016:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1049:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1076:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1192:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function BonusFinalizeAgent(CrowdsaleToken _token, Crowdsale _crowdsale, uint[] _bonusBasePoints, address[] _teamAddresses) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1266:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1324:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function EthTranchePricing(uint[] _tranches) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1437:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw; // No money on this contract
    ^---^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:39:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:80:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(msg.sender, _to, _value);
      ^-------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:100:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:122:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:213:5: Warning: Invoking events without "emit" prefix is deprecated.
    Upgrade(msg.sender, upgradeAgent, value);
    ^--------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:244:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpgradeAgentSet(upgradeAgent);
    ^---------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:393:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:401:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:472:7: Warning: Invoking events without "emit" prefix is deprecated.
      Minted(owner, totalSupply);
      ^------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:506:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpdatedTokenInformation(name, symbol);
    ^-----------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:820:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:852:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:958:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:980:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1000:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1020:5: Warning: Invoking events without "emit" prefix is deprecated.
    StartsAtChanged(startsAt);
    ^-----------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1075:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:4:3: Warning: No visibility specified. Defaulting to "public". 
  function safeMul(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:10:3: Warning: No visibility specified. Defaulting to "public". 
  function safeSub(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:15:3: Warning: No visibility specified. Defaulting to "public". 
  function safeAdd(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:26:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address _newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:37:3: Warning: No visibility specified. Defaulting to "public". 
  function acceptOwnership() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:48:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success);
  ^-----------------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:53:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:54:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success);
  ^------------------------------------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:55:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success);
  ^---------------------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:73:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:89:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:108:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:112:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:126:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:187:3: Warning: No visibility specified. Defaulting to "public". 
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:354:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) canTransfer(msg.sender) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:359:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) canTransfer(_from) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:453:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleToken(string _name, string _symbol, uint _initialSupply, uint8 _decimals, bool _mintable)
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:503:3: Warning: No visibility specified. Defaulting to "public". 
  function setTokenInformation(string _name, string _symbol) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:532:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:550:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:714:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:755:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:942:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:956:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:978:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:993:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1012:3: Warning: No visibility specified. Defaulting to "public". 
  function setStartsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1028:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1118:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1158:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1192:3: Warning: No visibility specified. Defaulting to "public". 
  function BonusFinalizeAgent(CrowdsaleToken _token, Crowdsale _crowdsale, uint[] _bonusBasePoints, address[] _teamAddresses) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1227:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1266:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1273:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1273:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1273:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1273:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1324:3: Warning: No visibility specified. Defaulting to "public". 
  function EthTranchePricing(uint[] _tranches) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1394:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address _crowdsale) public constant returns(bool) {
                  ^----------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1422:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals) public constant returns (uint) {
                                                      ^-------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1436:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:4:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:10:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:15:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:141:3: Warning: Function state mutability can be restricted to pure
  function isUpgradeAgent() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:273:3: Warning: Function state mutability can be restricted to pure
  function canUpgrade() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:520:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:542:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:550:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1123:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1428:14: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
      return safeMul(value, multiplier) / preicoAddresses[msgSender];
             ^------------------------^
/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:1433:12: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    return safeMul(value, multiplier) / price;
           ^------------------------^

INFO:Detectors:[91m
Crowdsale.requiredSignedAddress (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#681) is never initialized. It is used in:
	- investWithCustomerId (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#895-908)
	- invest (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#910-921)
	- setRequireCustomerId (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#986-990)
Crowdsale.signerAddress (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#682-685) is never initialized. It is used in:
	- setRequireCustomerId (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#986-990)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:
	Contract EthTranchePricing has payable functions:
	 - fallback (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#956-968):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#967)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#967-968)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#790-841):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#798-809)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#810-816)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#830-832)
	- weiRaised (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#829-830)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
BonusFinalizeAgent.finalizeCrowdsale has external calls inside a loop:
	- token.mint(teamAddresses[i],allocatedBonus) (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1284-1285)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#748-775):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#761-762)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#771)
	- minimumFundingGoal (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#774-775)
	- multisigWallet (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#762-763)
	- startsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#766-769)
Reentrancy in BonusFinalizeAgent.finalizeCrowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1267-1290):
	External calls:
	- tokensSold = crowdsale.tokensSold() (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1274-1277)
	State variables written after the call(s):
	- allocatedBonus (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1278-1282)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#790-841):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#798-809)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#810-816)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#826-827)
	- investorCount (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#824-825)
	- tokenAmountOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#827-829)
Reentrancy in Crowdsale.preallocate (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#859-875):
	External calls:
	- tokenAmount = fullTokens * 10 ** uint256(token.decimals()) (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#861-862)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#869-870)
	- tokenAmountOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#870-871)
	- tokensSold (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#867-869)
	- weiRaised (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#867)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1134-1154) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1151-1154)
	- block.timestamp < startsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1149-1154)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#640-642)
Crowdsale.requiredSignedAddress should be constant (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#681)
Crowdsale.signerAddress should be constant (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#682-685)
FractionalERC20.decimals should be constant (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#63-64)
UpgradeAgent.originalSupply should be constant (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#144)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#209:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#778:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#809:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#840:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1033-1034:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1052:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1087:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1110:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#33-38) should be declared external
Ownable.acceptOwnership (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#38-46) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#47-48) should be declared external
StandardToken.balanceOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#112-114) should be declared external
ERC20.allowance (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#53-54) should be declared external
StandardToken.allowance (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#127-136) should be declared external
ERC20.approve (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#55-56) should be declared external
StandardToken.approve (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#114-127) should be declared external
UpgradeAgent.isUpgradeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#144-148) should be declared external
UpgradeAgent.upgradeFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#148-150) should be declared external
UpgradeableToken.upgrade (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#197-222) should be declared external
UpgradeableToken.setUpgradeMaster (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#271-281) should be declared external
ReleasableToken.setReleaseAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#321-328) should be declared external
ReleasableToken.setTransferAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#330-336) should be declared external
MintableToken.mint (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#397-408) should be declared external
MintableToken.setMintAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#414-424) should be declared external
CrowdsaleToken.setTokenInformation (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#524-529) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#539-542) should be declared external
BonusFinalizeAgent.isSane (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1266) should be declared external
FinalizeAgent.isSane (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#550-554) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#555-558) should be declared external
BonusFinalizeAgent.finalizeCrowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1267-1290) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#559-561) should be declared external
PricingStrategy.isSane (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#563-565) should be declared external
EthTranchePricing.isSane (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1427-1440) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#587-594) should be declared external
EthTranchePricing.calculatePrice (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol) should be declared external
Crowdsale.fallback (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#778-779) should be declared external
Crowdsale.preallocate (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#859-875) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#938-940) should be declared external
Crowdsale.buy (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#946-947) should be declared external
Crowdsale.finalize (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#956-968) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#974-980) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#986-990) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1014-1021) should be declared external
Crowdsale.setEndsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1032-1039) should be declared external
Crowdsale.setStartsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1045-1056) should be declared external
Crowdsale.setMultisig (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1082-1089) should be declared external
Crowdsale.loadRefund (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1096-1103) should be declared external
Crowdsale.refund (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1103-1110) should be declared external
Crowdsale.isFinalizerSane (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1113-1118) should be declared external
Crowdsale.isPricingSane (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1119-1127) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1156-1158) should be declared external
Crowdsale.isCrowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1158) should be declared external
EthTranchePricing.setPreicoAddress (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1405-1409) should be declared external
EthTranchePricing.getTranche (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1415-1417) should be declared external
EthTranchePricing.getPricingStartsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1422-1424) should be declared external
EthTranchePricing.getPricingEndsAt (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1424-1427) should be declared external
EthTranchePricing.fallback (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#27-30) is not in mixedCase
Parameter '_newOwner' of Ownable.transferOwnership (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#34) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#112) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#74) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#74-75) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#133) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#133) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#90) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#90) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#91-92) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#114) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#114-115) is not in mixedCase
Function 'UpgradeableToken.UpgradeableToken' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#194-196) is not in mixedCase
Parameter '_upgradeMaster' of UpgradeableToken.UpgradeableToken (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#194-195) is not in mixedCase
Parameter '_to' of ReleasableToken.transfer (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#361-365) is not in mixedCase
Parameter '_value' of ReleasableToken.transfer (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#366-367) is not in mixedCase
Parameter '_from' of ReleasableToken.transferFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#370) is not in mixedCase
Parameter '_to' of ReleasableToken.transferFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#370) is not in mixedCase
Parameter '_value' of ReleasableToken.transferFrom (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#370) is not in mixedCase
Function 'CrowdsaleToken.CrowdsaleToken' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#468-503) is not in mixedCase
Parameter '_name' of CrowdsaleToken.CrowdsaleToken (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#469) is not in mixedCase
Parameter '_symbol' of CrowdsaleToken.CrowdsaleToken (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#469-471) is not in mixedCase
Parameter '_initialSupply' of CrowdsaleToken.CrowdsaleToken (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#471) is not in mixedCase
Parameter '_decimals' of CrowdsaleToken.CrowdsaleToken (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#471-472) is not in mixedCase
Parameter '_mintable' of CrowdsaleToken.CrowdsaleToken (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#472) is not in mixedCase
Parameter '_name' of CrowdsaleToken.setTokenInformation (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#526) is not in mixedCase
Parameter '_symbol' of CrowdsaleToken.setTokenInformation (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#526) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#748-775) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#748-749) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#749) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#749-753) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#753) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#753) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#753) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1061-1062) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#640-642) is not in mixedCase
Function 'BonusFinalizeAgent.BonusFinalizeAgent' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1226-1266) is not in mixedCase
Parameter '_token' of BonusFinalizeAgent.BonusFinalizeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1227) is not in mixedCase
Parameter '_crowdsale' of BonusFinalizeAgent.BonusFinalizeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1227-1229) is not in mixedCase
Parameter '_bonusBasePoints' of BonusFinalizeAgent.BonusFinalizeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1229) is not in mixedCase
Parameter '_teamAddresses' of BonusFinalizeAgent.BonusFinalizeAgent (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1229-1230) is not in mixedCase
Function 'MintedEthCappedCrowdsale.MintedEthCappedCrowdsale' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1297-1308) is not in mixedCase
Parameter '_weiCap' of MintedEthCappedCrowdsale.MintedEthCappedCrowdsale (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1301-1303) is not in mixedCase
Function 'EthTranchePricing.EthTranchePricing' (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1358-1400) is not in mixedCase
Parameter '_tranches' of EthTranchePricing.EthTranchePricing (/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol#1361) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xa62298341d83b93bd08a6e73bb80c7cf992d424d.sol analyzed (18 contracts), 116 result(s) found