INFO:Slither:Compilation warnings/errors on /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:22:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if (!assertion) throw;
                          ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:74:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:87:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:114:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:134:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     modifier onlyCreator() { if(msg.sender != creator) throw; _; }
                                                        ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:135:108: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     modifier byCreatorOrIcoContract() { if((msg.sender != creator) && (msg.sender != icoContractAddress)) throw; _; }
                                                                                                           ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:148:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function MNTP() {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:158:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:166:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:173:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:191:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:205:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function GoldmintUnsold(address _teamAccountAddress,address _mntTokenAddress){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:215:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:224:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:234:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if(uint(now) < oneYearPassed) throw;
                                        ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:243:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:257:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function FoundersVesting(address _teamAccountAddress,address _mntTokenAddress){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:269:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if(uint(now) < oneMonth) throw;
                                   ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:286:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:345:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     modifier onlyCreator() { if(msg.sender != creator) throw; _; }
                                                        ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:346:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     modifier onlyTokenManager() { if(msg.sender != tokenManager) throw; _; }
                                                                  ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:347:87: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     modifier onlyOtherCurrenciesChecker() { if(msg.sender != otherCurrenciesChecker) throw; _; }
                                                                                      ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:349:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     modifier onlyInState(State state){ if(state != currentState) throw; _; }
                                                                  ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:358:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function Goldmint(
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:414:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               if(!multisigAddress.send(this.balance)) throw;
                                                       ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:475:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:485:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if(!canSwitchState) throw;
                              ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:518:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if(msg.value == 0) throw;
                             ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:532:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          if(_wei_count== 0) throw;
                             ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:542:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:552:16: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
               throw;
               ^---^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:21:6: Warning: This declaration shadows a builtin symbol.
     function assert(bool assertion) internal {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:79:11: Warning: Invoking events without "emit" prefix is deprecated.
          Transfer(msg.sender, _to, _value);
          ^-------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:94:11: Warning: Invoking events without "emit" prefix is deprecated.
          Transfer(_from, _to, _value);
          ^--------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:103:11: Warning: Invoking events without "emit" prefix is deprecated.
          Approval(msg.sender, _spender, _value);
          ^------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:413:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
          if(this.balance>0){
             ^----------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:414:41: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
               if(!multisigAddress.send(this.balance)) throw;
                                        ^----------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:488:11: Warning: Invoking events without "emit" prefix is deprecated.
          LogStateSwitch(_nextState);
          ^------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:559:11: Warning: Invoking events without "emit" prefix is deprecated.
          LogBuy(_to,_tokens);
          ^-----------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:565:11: Warning: Invoking events without "emit" prefix is deprecated.
          LogBurn(_from,_tokens);
          ^--------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:31:6: Warning: No visibility specified. Defaulting to "public". 
     function totalSupply() constant returns (uint256 supply) {}
     ^---------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:31:47: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function totalSupply() constant returns (uint256 supply) {}
                                              ^------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:35:6: Warning: No visibility specified. Defaulting to "public". 
     function balanceOf(address _owner) constant returns (uint256 balance) {}
     ^----------------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:35:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function balanceOf(address _owner) constant returns (uint256 balance) {}
                        ^------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:35:59: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function balanceOf(address _owner) constant returns (uint256 balance) {}
                                                          ^-------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:40:6: Warning: No visibility specified. Defaulting to "public". 
     function transfer(address _to, uint256 _value) {}
     ^-----------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:40:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function transfer(address _to, uint256 _value) {}
                       ^---------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:40:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function transfer(address _to, uint256 _value) {}
                                    ^------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:47:6: Warning: No visibility specified. Defaulting to "public". 
     function transferFrom(address _from, address _to, uint256 _value){}
     ^-----------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:47:28: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function transferFrom(address _from, address _to, uint256 _value){}
                           ^-----------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:47:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function transferFrom(address _from, address _to, uint256 _value){}
                                          ^---------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:47:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function transferFrom(address _from, address _to, uint256 _value){}
                                                       ^------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:53:6: Warning: No visibility specified. Defaulting to "public". 
     function approve(address _spender, uint256 _value) returns (bool success) {}
     ^--------------------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:53:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function approve(address _spender, uint256 _value) returns (bool success) {}
                      ^--------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:53:41: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function approve(address _spender, uint256 _value) returns (bool success) {}
                                        ^------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:53:66: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function approve(address _spender, uint256 _value) returns (bool success) {}
                                                                 ^----------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:58:6: Warning: No visibility specified. Defaulting to "public". 
     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
     ^------------------------------------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:58:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
                        ^------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:58:41: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
                                        ^--------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:58:77: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
                                                                            ^---------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:72:6: Warning: No visibility specified. Defaulting to "public". 
     function transfer(address _to, uint256 _value) {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:82:6: Warning: No visibility specified. Defaulting to "public". 
     function transferFrom(address _from, address _to, uint256 _value) {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:97:6: Warning: No visibility specified. Defaulting to "public". 
     function balanceOf(address _owner) constant returns (uint256 balance) {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:101:6: Warning: No visibility specified. Defaulting to "public". 
     function approve(address _spender, uint256 _value) returns (bool success) {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:108:6: Warning: No visibility specified. Defaulting to "public". 
     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:137:6: Warning: No visibility specified. Defaulting to "public". 
     function setCreator(address _creator) onlyCreator {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:142:6: Warning: No visibility specified. Defaulting to "public". 
     function setIcoContractAddress(address _icoContractAddress) onlyCreator {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:148:6: Warning: No visibility specified. Defaulting to "public". 
     function MNTP() {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:171:6: Warning: No visibility specified. Defaulting to "public". 
     function issueTokens(address _who, uint _tokens) byCreatorOrIcoContract {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:180:6: Warning: No visibility specified. Defaulting to "public". 
     function burnTokens(address _who, uint _tokens) byCreatorOrIcoContract {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:185:6: Warning: No visibility specified. Defaulting to "public". 
     function lockTransfer(bool _lock) byCreatorOrIcoContract {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:190:6: Warning: No visibility specified. Defaulting to "public". 
     function() {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:205:6: Warning: No visibility specified. Defaulting to "public". 
     function GoldmintUnsold(address _teamAccountAddress,address _mntTokenAddress){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:213:6: Warning: No visibility specified. Defaulting to "public". 
     function setIcoContractAddress(address _icoContractAddress) {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:242:6: Warning: No visibility specified. Defaulting to "public". 
     function() payable {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:257:6: Warning: No visibility specified. Defaulting to "public". 
     function FoundersVesting(address _teamAccountAddress,address _mntTokenAddress){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:285:6: Warning: No visibility specified. Defaulting to "public". 
     function() payable {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:358:6: Warning: No visibility specified. Defaulting to "public". 
     function Goldmint(
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:569:6: Warning: No visibility specified. Defaulting to "public". 
     function() payable {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:21:6: Warning: Function state mutability can be restricted to pure
     function assert(bool assertion) internal {
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:31:6: Warning: Function state mutability can be restricted to pure
     function totalSupply() constant returns (uint256 supply) {}
     ^---------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:35:6: Warning: Function state mutability can be restricted to pure
     function balanceOf(address _owner) constant returns (uint256 balance) {}
     ^----------------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:40:6: Warning: Function state mutability can be restricted to pure
     function transfer(address _to, uint256 _value) {}
     ^-----------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:47:6: Warning: Function state mutability can be restricted to pure
     function transferFrom(address _from, address _to, uint256 _value){}
     ^-----------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:53:6: Warning: Function state mutability can be restricted to pure
     function approve(address _spender, uint256 _value) returns (bool success) {}
     ^--------------------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:58:6: Warning: Function state mutability can be restricted to pure
     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
     ^------------------------------------------------------------------------------------------^
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:438:6: Warning: Function state mutability can be restricted to pure
     function getTotalIcoTokens() constant public returns (uint){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:450:6: Warning: Function state mutability can be restricted to pure
     function getBlockLength()constant public returns (uint){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:455:6: Warning: Function state mutability can be restricted to view
     function isIcoFinished() public returns(bool){
     ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:502:11: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
          assert(priceIndex>=0 && (priceIndex<=9));
          ^--------------------------------------^

INFO:Detectors:[91m
Goldmint.finishICO (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#407-430) sends eth to arbitrary user
	Dangerous calls:
	- ! multisigAddress.send(this.balance) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#427-430)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Token (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#28-67) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#40-42)
	-transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#47-49)
StdToken (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#67-123) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#73-83)
	-transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#83-98)
MNTP (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#123-198) has incorrect ERC20 function interface(s):
	-transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#160-167)
	-transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#168-174)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Goldmint.isIcoFinished (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#470-479) uses a dangerous strict equality:
	- icoStartedTime == 0
Goldmint.isIcoFinished (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#470-479) uses a dangerous strict equality:
	- icoStartedTime == 0
Goldmint.startICO (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#396-404) uses a dangerous strict equality:
	- icoStartedTime == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:
	Contract GoldmintUnsold has payable functions:
	 - fallback (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#253-255)
	But does not have a function to withdraw the ether
Contract locking ether found in /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:
	Contract FoundersVesting has payable functions:
	 - fallback (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#296-299)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
Reentrancy in Goldmint.issueTokensExternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#552-569):
	External calls:
	- mntToken.issueTokens(_to,_tokens) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#563-565)
	State variables written after the call(s):
	- issuedExternallyTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#565-569)
Reentrancy in Goldmint.issueTokensInternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#570-573):
	External calls:
	- mntToken.issueTokens(_to,_tokens) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol)
	State variables written after the call(s):
	- icoTokensSold (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol)
Reentrancy in FoundersVesting.withdrawTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#273-294):
	External calls:
	- amountToSend = mntToken.balanceOf(this) / 10 (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#284-285)
	- mntToken.transfer(teamAccountAddress,amountToSend) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#291-293)
	State variables written after the call(s):
	- lastWithdrawTime (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#294)
	- withdrawsCount (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#293)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#21-26) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Goldmint.finishICO (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#407-430):
	External calls:
	- mntToken.lockTransfer(false) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#408-409)
	State variables written after the call(s):
	- icoTokensUnsold (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#416-418)
	- restTokensMoved (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#412-413)
Reentrancy in Goldmint.startICO (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#396-404):
	External calls:
	- mintFoundersRewards(foundersRewardsAccount) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#397-398)
	- mntToken.lockTransfer(true) (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#399)
	State variables written after the call(s):
	- icoStartedTime (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#402)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#26:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#122:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#164:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#172:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#180-181:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#197:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#137:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#224:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#233:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#242:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#255:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#278:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#298-299:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#430:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#483:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#501:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#530:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#545:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#562-563:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#353:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#354:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#359:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#361:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.totalSupply (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#31-33) should be declared external
Token.balanceOf (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#35-37) should be declared external
StdToken.balanceOf (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#98-102) should be declared external
StdToken.approve (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#102-109) should be declared external
Token.approve (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#53-55) should be declared external
Token.allowance (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#58-61) should be declared external
StdToken.allowance (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#109-114) should be declared external
MNTP.setCreator (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#142-143) should be declared external
MNTP.setIcoContractAddress (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#146-152) should be declared external
MNTP.issueTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#176-182) should be declared external
MNTP.burnTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#182-190) should be declared external
MNTP.lockTransfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#191-196) should be declared external
MNTP.fallback (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#197-198) should be declared external
GoldmintUnsold.setIcoContractAddress (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#221-230) should be declared external
GoldmintUnsold.icoIsFinished (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#230-236) should be declared external
GoldmintUnsold.withdrawTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#236-252) should be declared external
GoldmintUnsold.fallback (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#253-255) should be declared external
FoundersVesting.withdrawTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#273-294) should be declared external
FoundersVesting.fallback (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#296-299) should be declared external
Goldmint.setTokenManager (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#439-442) should be declared external
Goldmint.setOtherCurrenciesChecker (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#442-447) should be declared external
Goldmint.getTokensIcoSold (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#447-451) should be declared external
Goldmint.getTotalIcoTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#451-456) should be declared external
Goldmint.getMntTokenBalance (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#456-460) should be declared external
Goldmint.getCurrentPrice (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#460-463) should be declared external
Goldmint.getBlockLength (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#464-470) should be declared external
Goldmint.setState (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#480-509) should be declared external
Goldmint.issueTokensFromOtherCurrency (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#539-550) should be declared external
Goldmint.issueTokensExternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#552-569) should be declared external
Goldmint.burnTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol) should be declared external
Goldmint.fallback (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol:
	- pragma solidity^0.4.4 (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_owner' of StdToken.balanceOf (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#101) is not in mixedCase
Parameter '_to' of StdToken.transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#73) is not in mixedCase
Parameter '_value' of StdToken.transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#73) is not in mixedCase
Parameter '_from' of StdToken.transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#83-84) is not in mixedCase
Parameter '_to' of StdToken.transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#84) is not in mixedCase
Parameter '_value' of StdToken.transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#84) is not in mixedCase
Parameter '_spender' of StdToken.approve (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#102-103) is not in mixedCase
Parameter '_value' of StdToken.approve (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#103) is not in mixedCase
Parameter '_owner' of StdToken.allowance (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#109-110) is not in mixedCase
Parameter '_spender' of StdToken.allowance (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#110-112) is not in mixedCase
Parameter '_to' of MNTP.transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#163) is not in mixedCase
Parameter '_value' of MNTP.transfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#163-164) is not in mixedCase
Parameter '_from' of MNTP.transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#169-171) is not in mixedCase
Parameter '_to' of MNTP.transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#171) is not in mixedCase
Parameter '_value' of MNTP.transferFrom (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#171) is not in mixedCase
Parameter '_creator' of MNTP.setCreator (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#142) is not in mixedCase
Parameter '_icoContractAddress' of MNTP.setIcoContractAddress (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#147-149) is not in mixedCase
Function 'MNTP.MNTP' (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#152-160) is not in mixedCase
Parameter '_who' of MNTP.issueTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#176) is not in mixedCase
Parameter '_tokens' of MNTP.issueTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#176-177) is not in mixedCase
Parameter '_who' of MNTP.burnTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#185) is not in mixedCase
Parameter '_tokens' of MNTP.burnTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#185) is not in mixedCase
Parameter '_lock' of MNTP.lockTransfer (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#195) is not in mixedCase
Function 'GoldmintUnsold.GoldmintUnsold' (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#209-218) is not in mixedCase
Parameter '_teamAccountAddress' of GoldmintUnsold.GoldmintUnsold (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#212-213) is not in mixedCase
Parameter '_mntTokenAddress' of GoldmintUnsold.GoldmintUnsold (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#213) is not in mixedCase
Parameter '_icoContractAddress' of GoldmintUnsold.setIcoContractAddress (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#222) is not in mixedCase
Function 'FoundersVesting.FoundersVesting' (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#262-271) is not in mixedCase
Parameter '_teamAccountAddress' of FoundersVesting.FoundersVesting (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#265-266) is not in mixedCase
Parameter '_mntTokenAddress' of FoundersVesting.FoundersVesting (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#266) is not in mixedCase
Function 'Goldmint.Goldmint' (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#370-392) is not in mixedCase
Parameter '_multisigAddress' of Goldmint.Goldmint (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#371) is not in mixedCase
Parameter '_tokenManager' of Goldmint.Goldmint (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#371-373) is not in mixedCase
Parameter '_otherCurrenciesChecker' of Goldmint.Goldmint (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#373-374) is not in mixedCase
Parameter '_mntTokenAddress' of Goldmint.Goldmint (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#374) is not in mixedCase
Parameter '_unsoldContractAddress' of Goldmint.Goldmint (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#374-376) is not in mixedCase
Parameter '_foundersVestingAddress' of Goldmint.Goldmint (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#377) is not in mixedCase
Parameter '_whereToMint' of Goldmint.mintFoundersRewards (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#430-431) is not in mixedCase
Parameter '_new' of Goldmint.setTokenManager (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#439-441) is not in mixedCase
Parameter '_new' of Goldmint.setOtherCurrenciesChecker (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#443-444) is not in mixedCase
Parameter '_of' of Goldmint.getMntTokenBalance (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#458) is not in mixedCase
Parameter '_nextState' of Goldmint.setState (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#480) is not in mixedCase
Parameter '_buyer' of Goldmint.buyTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#527) is not in mixedCase
Parameter '_to' of Goldmint.issueTokensFromOtherCurrency (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#540) is not in mixedCase
Parameter '_wei_count' of Goldmint.issueTokensFromOtherCurrency (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#540-541) is not in mixedCase
Parameter '_to' of Goldmint.issueTokensExternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#555) is not in mixedCase
Parameter '_tokens' of Goldmint.issueTokensExternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#555) is not in mixedCase
Parameter '_to' of Goldmint.issueTokensInternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#570) is not in mixedCase
Parameter '_tokens' of Goldmint.issueTokensInternal (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol#570-571) is not in mixedCase
Parameter '_from' of Goldmint.burnTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol) is not in mixedCase
Parameter '_tokens' of Goldmint.burnTokens (/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x672d6ec3ce769e8412ad12d2bf71fcc6a6995ca4.sol analyzed (7 contracts), 124 result(s) found