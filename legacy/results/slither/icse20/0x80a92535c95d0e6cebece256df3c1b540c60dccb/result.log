INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:59:1: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
function Contest() payable{
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:79:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:81:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:89:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:91:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:93:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:95:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:109:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:111:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:113:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:115:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:117:1: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
throw;
^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:123:5: Warning: Use of the "var" keyword is deprecated.
for(var i = 0; i < winners.length; i++){//from the first to the last
    ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:128:5: Warning: Use of the "var" keyword is deprecated.
for(var j = getCandidatePosition(candidate, i+1); j>i; j--){
    ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:208:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
if(!c4c.send(this.balance/10000*c4cfee)) throw;
                                         ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:210:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
if(prizeOwner!=0 && !owner.send(totalPrize/10000*prizeOwner)) throw;
                                                              ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:211:69: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
if(prizeReferee!=0 && !referee.send(totalPrize/10000*prizeReferee)) throw;
                                                                    ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:213:78: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
if(prizeWinners[i]!=0 && !winners[i].send(totalPrize/10000*prizeWinners[i])) throw;
                                                                             ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:218:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
if(!luckyVoters[j].send(amount)) throw;
                                 ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:221:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
else if(!owner.send(this.balance)) throw;//if there is no lucky voter, give remainder to the owner
                                   ^---^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:60:7: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x87B0DE512502f3e86fD22654B72a640c8e0f59cc'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
c4c = 0x87b0de512502f3e86fd22654b72a640c8e0f59cc;
      ^----------------------------------------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:123:5: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
for(var i = 0; i < winners.length; i++){//from the first to the last
    ^-------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:168:4: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
if(this.balance>10000) distributePrizes(); //more than 10000 wei so every party gets at least 1 wei (if s.b. gets 0.01%)
   ^----------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:169:1: Warning: Invoking events without "emit" prefix is deprecated.
ContestClosed(totalPrize, winners, luckyVoters);
^---------------------------------------------^
[91m/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:180:1: Error: Uninitialized mapping. Mappings cannot be created dynamically, you have to assign them from a state variable.[0m
mapping (uint => bool) chosen;
^---------------------------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:208:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
if(!c4c.send(this.balance/10000*c4cfee)) throw;
             ^----------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:209:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
totalPrize = this.balance;
             ^----------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:215:4: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
if(this.balance>luckyVoters.length){//if there is ether left to be distributed amongst the lucky voters
   ^----------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:216:15: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
uint amount = this.balance/luckyVoters.length;
              ^----------^
/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol:221:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
else if(!owner.send(this.balance)) throw;//if there is no lucky voter, give remainder to the owner
                    ^----------^

INFO:SlitherSolcParsing:No contract were found in /unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/unique_chucks/30/0x80a92535c95d0e6cebece256df3c1b540c60dccb.sol analyzed (0 contracts), 0 result(s) found