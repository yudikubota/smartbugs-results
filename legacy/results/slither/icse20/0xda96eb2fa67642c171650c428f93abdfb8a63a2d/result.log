INFO:Slither:Compilation warnings/errors on /unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:54:5: Warning: Function state mutability can be restricted to pure
    function name() public view returns (string) {}
    ^---------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:55:5: Warning: Function state mutability can be restricted to pure
    function symbol() public view returns (string) {}
    ^-----------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:56:5: Warning: Function state mutability can be restricted to pure
    function decimals() public view returns (uint8) {}
    ^------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:57:5: Warning: Function state mutability can be restricted to pure
    function totalSupply() public view returns (uint256) {}
    ^-----------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:58:5: Warning: Function state mutability can be restricted to pure
    function balanceOf(address _owner) public view returns (uint256) { _owner; }
    ^--------------------------------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:59:5: Warning: Function state mutability can be restricted to pure
    function allowance(address _owner, address _spender) public view returns (uint256) { _owner; _spender; }
    ^------------------------------------------------------------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:83:5: Warning: Function state mutability can be restricted to pure
    function conversionWhitelist() public view returns (IWhitelist) {}
    ^----------------------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:84:5: Warning: Function state mutability can be restricted to pure
    function conversionFee() public view returns (uint32) {}
    ^------------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:85:5: Warning: Function state mutability can be restricted to pure
    function connectors(address _address) public view returns (uint256, uint32, bool, bool, bool) { _address; }
    ^---------------------------------------------------------------------------------------------------------^
/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol:111:5: Warning: Function state mutability can be restricted to pure
    function owner() public view returns (address) {}
    ^-----------------------------------------------^

INFO:Detectors:[93m
Reentrancy in BancorX.updateRegistry (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#574-594):
	External calls:
	- newRegistry = registry.addressOf(ContractIds.CONTRACT_REGISTRY) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#582-584)
	State variables written after the call(s):
	- registry (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#594)
Reentrancy in BancorX.upgrade (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-618):
	External calls:
	- bancorXUpgrader = IBancorXUpgrader(registry.addressOf(ContractIds.BANCOR_X_UPGRADER)) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-615)
	- bancorXUpgrader.upgrade(version,_reporters) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#617-618)
	State variables written after the call(s):
	- owner (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#618)
Reentrancy in BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#652-669):
	External calls:
	- lockTokens(_amount) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#661-662)
	State variables written after the call(s):
	- prevLockBlockNumber (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#662-664)
	- prevLockLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#662)
Reentrancy in BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#627-642):
	External calls:
	- lockTokens(_amount) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#636)
	State variables written after the call(s):
	- prevLockBlockNumber (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#638)
	- prevLockLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#638)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
BancorX.releaseTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol) does not use the value returned by external calls:
	-bntToken.transfer(_to,_amount) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in BancorX.constructor (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#436-470):
	External calls:
	- bntToken = ISmartToken(registry.addressOf(ContractIds.BNT_TOKEN)) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#463-464)
	- bntConverter = IBancorConverter(registry.addressOf(ContractIds.BNT_CONVERTER)) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#464-470)
	State variables written after the call(s):
	- bntConverter (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#464-470)
Reentrancy in BancorX.updateRegistry (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#574-594):
	External calls:
	- newRegistry = registry.addressOf(ContractIds.CONTRACT_REGISTRY) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#582-584)
	State variables written after the call(s):
	- prevRegistry (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#593)
Reentrancy in BancorX.upgrade (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-618):
	External calls:
	- bancorXUpgrader = IBancorXUpgrader(registry.addressOf(ContractIds.BANCOR_X_UPGRADER)) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-615)
	State variables written after the call(s):
	- newOwner (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#615-617)
Reentrancy in BancorX.upgrade (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-618):
	External calls:
	- bancorXUpgrader = IBancorXUpgrader(registry.addressOf(ContractIds.BANCOR_X_UPGRADER)) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-615)
	- bancorXUpgrader.upgrade(version,_reporters) (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#617-618)
	State variables written after the call(s):
	- newOwner (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#618)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
BancorX.version should be constant (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#346)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
IBancorXUpgrader.upgrade (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#9-12) should be declared external
BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#652-669) should be declared external
IBancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#15-16) should be declared external
BancorX.getXTransferAmount (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#746-757) should be declared external
IBancorX.getXTransferAmount (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#16-19) should be declared external
IERC20Token.name (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#55) should be declared external
IERC20Token.symbol (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#56) should be declared external
IERC20Token.decimals (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#57) should be declared external
IERC20Token.totalSupply (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#58) should be declared external
IERC20Token.balanceOf (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#58-59) should be declared external
IERC20Token.allowance (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#59-61) should be declared external
IERC20Token.transfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#61-62) should be declared external
IERC20Token.transferFrom (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#62-63) should be declared external
IERC20Token.approve (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#63-69) should be declared external
IWhitelist.isWhitelisted (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#74-78) should be declared external
IBancorConverter.getReturn (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#81-82) should be declared external
IBancorConverter.convert (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#82-84) should be declared external
IBancorConverter.conversionWhitelist (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#84-85) should be declared external
IBancorConverter.conversionFee (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#85) should be declared external
IBancorConverter.connectors (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#85-86) should be declared external
IBancorConverter.getConnectorBalance (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#86-88) should be declared external
IBancorConverter.claimTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#88-89) should be declared external
IBancorConverter.change (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#89-95) should be declared external
IContractRegistry.addressOf (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#100-101) should be declared external
IContractRegistry.getAddress (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#104-109) should be declared external
IOwned.owner (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#114-117) should be declared external
ITokenHolder.withdrawTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#278) should be declared external
TokenHolder.withdrawTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#307-315) should be declared external
ISmartToken.disableTransfers (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#323-324) should be declared external
ISmartToken.issue (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#324) should be declared external
ISmartToken.destroy (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#324-325) should be declared external
BancorX.setMaxLockLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#492-499) should be declared external
BancorX.setMaxReleaseLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#502-508) should be declared external
BancorX.setMinLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#510-515) should be declared external
BancorX.setLimitIncPerBlock (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#518-520) should be declared external
BancorX.setMinRequiredReports (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#525-529) should be declared external
BancorX.setReporter (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#537-543) should be declared external
BancorX.enableXTransfers (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#545-549) should be declared external
BancorX.enableReporting (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#554-557) should be declared external
BancorX.disableRegistryUpdate (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#564-566) should be declared external
BancorX.setBNTConverterAddress (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#569-572) should be declared external
BancorX.updateRegistry (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#574-594) should be declared external
BancorX.restoreRegistry (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#598-607) should be declared external
BancorX.upgrade (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613-618) should be declared external
BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#627-642) should be declared external
BancorX.reportTx (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#686-736) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Owned.transferOwnership (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#154) is not in mixedCase
Parameter '_x' of SafeMath.add (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#185) is not in mixedCase
Parameter '_y' of SafeMath.add (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#185) is not in mixedCase
Parameter '_x' of SafeMath.sub (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#198) is not in mixedCase
Parameter '_y' of SafeMath.sub (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#198) is not in mixedCase
Parameter '_x' of SafeMath.mul (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#212-214) is not in mixedCase
Parameter '_y' of SafeMath.mul (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#215-216) is not in mixedCase
Parameter '_x' of SafeMath.div (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#236) is not in mixedCase
Parameter '_y' of SafeMath.div (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#237-238) is not in mixedCase
Parameter '_token' of TokenHolder.withdrawTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#310-312) is not in mixedCase
Parameter '_to' of TokenHolder.withdrawTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#312) is not in mixedCase
Parameter '_amount' of TokenHolder.withdrawTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#312) is not in mixedCase
Parameter '_toBlockchain' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#655-656) is not in mixedCase
Parameter '_to' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#656) is not in mixedCase
Parameter '_amount' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#656) is not in mixedCase
Parameter '_id' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#656) is not in mixedCase
Parameter '_xTransferId' of BancorX.getXTransferAmount (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#746) is not in mixedCase
Parameter '_for' of BancorX.getXTransferAmount (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#747) is not in mixedCase
Parameter '_maxLockLimit' of BancorX. (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#436-437) is not in mixedCase
Parameter '_maxReleaseLimit' of BancorX. (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#437) is not in mixedCase
Parameter '_minLimit' of BancorX. (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#437-439) is not in mixedCase
Parameter '_limitIncPerBlock' of BancorX. (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#439) is not in mixedCase
Parameter '_minRequiredReports' of BancorX. (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#439) is not in mixedCase
Parameter '_registry' of BancorX. (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#440) is not in mixedCase
Parameter '_maxLockLimit' of BancorX.setMaxLockLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#493-496) is not in mixedCase
Parameter '_maxReleaseLimit' of BancorX.setMaxReleaseLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#502-505) is not in mixedCase
Parameter '_minLimit' of BancorX.setMinLimit (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#511) is not in mixedCase
Parameter '_limitIncPerBlock' of BancorX.setLimitIncPerBlock (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#518) is not in mixedCase
Parameter '_minRequiredReports' of BancorX.setMinRequiredReports (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#525-527) is not in mixedCase
Parameter '_reporter' of BancorX.setReporter (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#538) is not in mixedCase
Parameter '_active' of BancorX.setReporter (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#538) is not in mixedCase
Parameter '_enable' of BancorX.enableXTransfers (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#547) is not in mixedCase
Parameter '_enable' of BancorX.enableReporting (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#554-555) is not in mixedCase
Parameter '_disable' of BancorX.disableRegistryUpdate (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#565) is not in mixedCase
Parameter '_reporters' of BancorX.upgrade (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#613) is not in mixedCase
Parameter '_toBlockchain' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#627-630) is not in mixedCase
Parameter '_to' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#630-631) is not in mixedCase
Parameter '_amount' of BancorX.xTransfer (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#631) is not in mixedCase
Parameter '_fromBlockchain' of BancorX.reportTx (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#687) is not in mixedCase
Parameter '_txId' of BancorX.reportTx (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#689) is not in mixedCase
Parameter '_to' of BancorX.reportTx (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#689-690) is not in mixedCase
Parameter '_amount' of BancorX.reportTx (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#690) is not in mixedCase
Parameter '_xTransferId' of BancorX.reportTx (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#690) is not in mixedCase
Parameter '_amount' of BancorX.lockTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol#791) is not in mixedCase
Parameter '_to' of BancorX.releaseTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol) is not in mixedCase
Parameter '_amount' of BancorX.releaseTokens (/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/2/0xda96eb2fa67642c171650c428f93abdfb8a63a2d.sol analyzed (15 contracts), 102 result(s) found