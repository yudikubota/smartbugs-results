INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:774:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:865:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:868:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:876:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:940:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1042:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if (msg.sender != owner) throw;
                                  ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1047:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1074:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherFlip(token addressOfFlipToken, token addressOfMillionDollarToken) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1083:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (msg.value > maxBet) throw;
                                    ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1084:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (msg.value < minBet) throw; 
                                    ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1096:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1149:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!outboundAddress.send(amount)) throw;
                                          ^---^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:789:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:789:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:821:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:824:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:839:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:876:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:891:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:891:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:891:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:891:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:891:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:913:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:913:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1099:9: Warning: Invoking events without "emit" prefix is deprecated.
        newRandomByte(bytes(_result));
        ^---------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:52:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:56:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:128:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1037:18: Warning: No visibility specified. Defaulting to "public". 
contract token { function transfer(address receiver, uint amount){ receiver; amount; } }
                 ^-------------------------------------------------------------------^
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1074:5: Warning: No visibility specified. Defaulting to "public". 
    function EtherFlip(token addressOfFlipToken, token addressOfMillionDollarToken) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1081:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1095:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 _queryId, string _result, bytes _proof) oraclize_randomDS_proofVerify(_queryId, _result, _proof) oraclizeAction { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:128:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:544:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:564:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:582:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:609:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:644:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:662:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:679:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:721:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:769:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:873:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:934:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:1037:18: Warning: Function state mutability can be restricted to pure
contract token { function transfer(address receiver, uint amount){ receiver; amount; } }
                 ^-------------------------------------------------------------------^

INFO:Detectors:[91m
Reentrancy in EtherFlip.__callback (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1121-1152):
	External calls:
	- flipTokenReward.transfer(playerAddress[_queryId],flipRewardAmount) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1141-1144)
	- millionDollarTokenReward.transfer(playerAddress[_queryId],mdtRewardAmount) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1148)
	External calls sending eth:
	- playerAddress[_queryId].transfer(amount + amount - singleTransGasCost - singleTransGasCost) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1135-1137)
	State variables written after the call(s):
	- playerAddress (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1149-1151)
	- playerAmount (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1152)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#553-557) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
token (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1072-1074) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1072-1074)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Reentrancy in EtherFlip.fallback (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1107-1120):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1111-1112)
	- queryId = oraclize_newRandomDSQuery(delay,numberOfBytes,callbackGas) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1113-1117)
	External calls sending eth:
	- queryId = oraclize_newRandomDSQuery(delay,numberOfBytes,callbackGas) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1113-1117)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1113-1117)
	- oraclize_randomDS_args (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1113-1117)
	- playerAddress (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1117-1120)
	- playerAmount (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1120)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#787-812):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#794-797)
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#808-810)
	External calls sending eth:
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#808-810)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#808-810)
	- oraclize_randomDS_args (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#810-812)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#553-557)
	- /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#556-557
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#787-812)
	- /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#798-807
usingOraclize.verifySig uses assembly (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#823-843)
	- /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#834-838
usingOraclize.copyBytes uses assembly (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#961-980)
	- /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#973-978
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#985-1014)
	- /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1005-1014
usingOraclize.ecrecovery uses assembly (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1018-1071)
	- /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1029-1067
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#41)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#789:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#810-812:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#840-842:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#841-842:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#906-908:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#929-934:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#964:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#889:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#892:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1128:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1108:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1076-1077:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1078:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#41-42) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#42-43) should be declared external
OraclizeI.query2 (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#43-44) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#44-45) should be declared external
OraclizeI.queryN (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#45-46) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#46-47) should be declared external
OraclizeI.getPrice (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#47-48) should be declared external
OraclizeI.getPrice (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#48-50) should be declared external
OraclizeI.useCoupon (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#50-51) should be declared external
OraclizeI.setProofType (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#51-52) should be declared external
OraclizeI.setConfig (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#52-53) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#53) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#53-56) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#58-59) should be declared external
usingOraclize.__callback (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#128-134) should be declared external
token.transfer (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1072-1074) should be declared external
EtherFlip.fallback (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1107-1120) should be declared external
EtherFlip.updateMaxBet (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1152-1156) should be declared external
EtherFlip.updateMinBet (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1156-1159) should be declared external
EtherFlip.updateTotalGasCost (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.updateBaseComparable (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.updateOwner (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.updateFlipTokenRewardAmount (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.updateMDTRewardAmount (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.ownerTransferEther (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.refundTransfer (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
EtherFlip.changeBonusTokenAddress (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol:
	- pragma solidity^0.4.11 (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#37): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#42-43) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#44-45) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#46-47) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#53-56) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#59-1071) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#89-128) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#128-134) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#134-138) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#138-140) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#142-143) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#143-147) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#147-152) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#152-157) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#157-162) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#162-167) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#168-172) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#172-177) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#177-182) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#182-188) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#188-194) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#194-199) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#200-206) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#206-213) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#213-218) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#218-222) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#223-228) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#228-235) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#235-241) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#241-246) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#246-253) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#253-260) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#260-266) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#267-273) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#273-281) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#281-289) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#290-297) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#298-305) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#305-314) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#314-323) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#323-331) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#332-340) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#340-350) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#350-356) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#357-362) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#362-368) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#368-374) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#374-382) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#382-386) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#386-391) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#391-398) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#398-403) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#404-409) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#409-415) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#415-422) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#422-428) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#428-435) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#435-442) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#442-451) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#451-458) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#458-466) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#466-474) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#474-483) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#483-491) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#492-500) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#500-509) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#509-522) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#522-532) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#532-533) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#533-538) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#538-544) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#545-549) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#549-553) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#557-558) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#582) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#582) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#597) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#597-598) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#620) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#620) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#620-621) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#621) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#621) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#645) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#645) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#646) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#646) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#649) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#649) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#649-650) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#653-654) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#654) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#657-658) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#663) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#663-664) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#783-784) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#783) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#785-787) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#787-812) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#788) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#788) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#788) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#814-820) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#843-883) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#898-959) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#900) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#985-1014) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#60-61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#61-62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#62-63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#63-64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#64-65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#66-67) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#67-68) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#68-69) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#69-70) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#70-71) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#71-72) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#72-74) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#74-77) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#77-78) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#782-783) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#820-821) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#821-823) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#883-894) is not in mixedCase
Contract 'token' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1072-1074) is not in CapWords
Event 'EtherFlip.newRandomByte' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1082-1083) is not in CapWords
Function 'EtherFlip.__callback' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1121-1152) is not in mixedCase
Parameter '_queryId' of EtherFlip.__callback (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1121-1122) is not in mixedCase
Parameter '_result' of EtherFlip.__callback (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1122-1124) is not in mixedCase
Function 'EtherFlip.EtherFlip' (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#1100-1107) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#60-61) is never used in EtherFlip
usingOraclize.week (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#61-62) is never used in EtherFlip
usingOraclize.month (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#62-63) is never used in EtherFlip
usingOraclize.proofType_NONE (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#63-64) is never used in EtherFlip
usingOraclize.proofType_TLSNotary (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#64-65) is never used in EtherFlip
usingOraclize.proofType_Android (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#65-66) is never used in EtherFlip
usingOraclize.proofType_Native (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#67-68) is never used in EtherFlip
usingOraclize.proofStorage_IPFS (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#68-69) is never used in EtherFlip
usingOraclize.networkID_mainnet (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#70-71) is never used in EtherFlip
usingOraclize.networkID_testnet (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#71-72) is never used in EtherFlip
usingOraclize.networkID_morden (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#72-74) is never used in EtherFlip
usingOraclize.networkID_consensys (/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol#74-77) is never used in EtherFlip
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/4/0xffc08dd84a66775e6236e0a80ee2f340e0042f8c.sol analyzed (5 contracts), 187 result(s) found