INFO:Slither:Compilation warnings/errors on /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:17:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MaptPricing() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:92:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MaptPresaleToken(address _tokenManager, address _escrow) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:124:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyTokenManager()     { if(msg.sender != tokenManager) throw; _; }
                                                                     ^---^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:125:74: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    modifier onlyCrowdsaleManager() { if(msg.sender != crowdsaleManager) throw; _; }
                                                                         ^---^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:192:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!canSwitchPhase) throw;
                            ^---^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:201:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(currentPhase == Phase.Migrating) throw;
                                            ^---^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:209:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(currentPhase != Phase.Created) throw;
                                          ^---^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:150:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogBurn(_owner, tokens);
        ^---------------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:154:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogPhaseSwitch(Phase.Migrated);
            ^----------------------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:194:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogPhaseSwitch(_nextPhase);
        ^------------------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:210:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogStartDate(_date, PRESALE_START_DATE);
        ^-------------------------------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:236:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogBuy(_buyer, valueWei, newTokens);
        ^---------------------------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:251:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogBuyForFiat(_buyer, newTokens);
      ^------------------------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:259:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogEscrowReq(bal);
        ^---------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:260:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if(this.balance >= bal) {
           ^----------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:262:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogEscrow(bal);
            ^------------^
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:17:3: Warning: No visibility specified. Defaulting to "public". 
  function MaptPricing() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:20:3: Warning: No visibility specified. Defaulting to "public". 
  function createPricing() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:92:5: Warning: No visibility specified. Defaulting to "public". 
    function MaptPresaleToken(address _tokenManager, address _escrow) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:135:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:35:3: Warning: Function state mutability can be restricted to view
  function calculatePrice(uint valueWei, uint256 timeSinceStart, uint decimals) public returns (uint tokenAmount) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
MaptPresaleToken._setPresalePhase (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#184-205) uses a dangerous strict equality:
	- canSwitchPhase = (currentPhase == Phase.Created && _nextPhase == Phase.Running) || (currentPhase == Phase.Running && _nextPhase == Phase.Paused) || ((currentPhase == Phase.Running || currentPhase == Phase.Paused) && _nextPhase == Phase.Migrating && crowdsaleManager != 0x0) || (currentPhase == Phase.Paused && _nextPhase == Phase.Running) || (currentPhase == Phase.Migrating && _nextPhase == Phase.Migrated && totalSupply == 0)
MaptPresaleToken._setPresalePhase (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#184-205) uses a dangerous strict equality:
	- canSwitchPhase = (currentPhase == Phase.Created && _nextPhase == Phase.Running) || (currentPhase == Phase.Running && _nextPhase == Phase.Paused) || ((currentPhase == Phase.Running || currentPhase == Phase.Paused) && _nextPhase == Phase.Migrating && crowdsaleManager != 0x0) || (currentPhase == Phase.Paused && _nextPhase == Phase.Running) || (currentPhase == Phase.Migrating && _nextPhase == Phase.Migrated && totalSupply == 0)
MaptPresaleToken.burnTokens (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#144-164) uses a dangerous strict equality:
	- tokens == 0
	- totalSupply == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in MaptPresaleToken.buyTokens (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#223-247):
	External calls:
	- newTokens = priceRules.calculatePrice(valueWei,timeSinceStart,18) (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#234-237)
	State variables written after the call(s):
	- totalSupply (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#243)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in MaptPresaleToken.buyTokens (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#223-247):
	External calls:
	- newTokens = priceRules.calculatePrice(valueWei,timeSinceStart,18) (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#234-237)
	State variables written after the call(s):
	- balanceTable (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#243-245)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#210:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#216-217:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#128:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
MaptPricing.createPricing (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#20-35) should be declared external
MaptPricing.calculatePrice (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#35-86) should be declared external
MaptPresaleToken.fallback (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#141-144) should be declared external
MaptPresaleToken.burnTokens (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#144-164) should be declared external
MaptPresaleToken.balanceOf (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#165-169) should be declared external
MaptPresaleToken.setPresalePhaseUInt (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#169-179) should be declared external
MaptPresaleToken.setCrowdsaleManager (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#205-211) should be declared external
MaptPresaleToken.setStartDate (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#211-222) should be declared external
MaptPresaleToken.buyTokensForFiat (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#247-263) should be declared external
MaptPresaleToken.withdrawEther (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#264-267) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'MaptPricing.MaptPricing' (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#17-20) is not in mixedCase
Function 'MaptPresaleToken.MaptPresaleToken' (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#93-99) is not in mixedCase
Parameter '_tokenManager' of MaptPresaleToken.MaptPresaleToken (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#94-95) is not in mixedCase
Parameter '_escrow' of MaptPresaleToken.MaptPresaleToken (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#95) is not in mixedCase
Parameter '_owner' of MaptPresaleToken.burnTokens (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#144-146) is not in mixedCase
Parameter '_owner' of MaptPresaleToken.balanceOf (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#166) is not in mixedCase
Parameter '_nextPhase' of MaptPresaleToken.setPresalePhase (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#181-182) is not in mixedCase
Function 'MaptPresaleToken._setPresalePhase' (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#184-205) is not in mixedCase
Parameter '_nextPhase' of MaptPresaleToken._setPresalePhase (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#184) is not in mixedCase
Parameter '_mgr' of MaptPresaleToken.setCrowdsaleManager (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#206-207) is not in mixedCase
Parameter '_date' of MaptPresaleToken.setStartDate (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#212) is not in mixedCase
Parameter '_buyer' of MaptPresaleToken.buyTokens (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#223) is not in mixedCase
Parameter '_buyer' of MaptPresaleToken.buyTokensForFiat (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#247-248) is not in mixedCase
Variable 'MaptPresaleToken.PRESALE_START_DATE' (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#90) is not in mixedCase
Variable 'MaptPresaleToken.PRESALE_END_DATE' (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#92-93) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
MaptPricing.FRACTIONAL_DIVIDER (/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol#8-9) is never used in MaptPricing
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0x503fe694ce047ecb51952b79ecab2a907afe8acd.sol analyzed (2 contracts), 36 result(s) found