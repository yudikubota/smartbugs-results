INFO:Slither:Compilation warnings/errors on /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:31:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (records[node].owner != msg.sender) throw;
                                               ^---^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:38:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ENS() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:82:9: Warning: Use of the "var" keyword is deprecated.
        var subnode = sha3(node, label);
        ^---------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:226:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SubdomainRegistrar(ENS _ens) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:521:15: Warning: Use of the "var" keyword is deprecated.
        var (,deedAddress,,,) = hashRegistrar.entries(label);
              ^---------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:69:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner) public only_owner(node) {
                                    ^-----------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:45:5: The shadowed declaration is here:
    function owner(bytes32 node) public constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:81:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) public only_owner(node) {
                                                          ^-----------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:45:5: The shadowed declaration is here:
    function owner(bytes32 node) public constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:92:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver) public only_owner(node) {
                                       ^--------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:52:5: The shadowed declaration is here:
    function resolver(bytes32 node) public constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:102:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl) public only_owner(node) {
                                  ^--------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:59:5: The shadowed declaration is here:
    function ttl(bytes32 node) public constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:149:36: Warning: This declaration shadows an existing declaration.
    function setAddr(bytes32 node, address addr) public;
                                   ^----------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:148:5: The shadowed declaration is here:
    function addr(bytes32 node) public view returns (address);
    ^--------------------------------------------------------^

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:330:46: Warning: This declaration shadows an existing declaration.
    function setTransferAddress(string name, address transfer) public owner_only(keccak256(name)) {
                                             ^--------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:261:5: The shadowed declaration is here:
    function transfer(string name, address newOwner) public owner_only(keccak256(name)) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:459:9: Warning: This declaration shadows an existing declaration.
        address transfer = domains[label].transferAddress;
        ^--------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:261:5: The shadowed declaration is here:
    function transfer(string name, address newOwner) public owner_only(keccak256(name)) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:374:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Domain data = domains[label];
        ^---------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:39:17: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        records[0].owner = msg.sender;
                ^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:70:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(node, owner);
        ^-------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:82:23: Warning: "sha3" has been deprecated in favour of "keccak256"
        var subnode = sha3(node, label);
                      ^---------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:82:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        var subnode = sha3(node, label);
                      ^---------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:83:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewOwner(node, label, owner);
        ^--------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:93:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewResolver(node, resolver);
        ^-------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:103:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewTTL(node, ttl);
        ^---------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:261:72: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function transfer(string name, address newOwner) public owner_only(keccak256(name)) {
                                                                       ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:261:72: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function transfer(string name, address newOwner) public owner_only(keccak256(name)) {
                                                                       ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:262:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:262:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:263:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        OwnerChanged(keccak256(name), domains[label].owner, newOwner);
                     ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:263:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        OwnerChanged(keccak256(name), domains[label].owner, newOwner);
                     ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:263:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnerChanged(keccak256(name), domains[label].owner, newOwner);
        ^-----------------------------------------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:272:75: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function setResolver(string name, address resolver) public owner_only(keccak256(name)) {
                                                                          ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:272:75: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function setResolver(string name, address resolver) public owner_only(keccak256(name)) {
                                                                          ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:273:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:273:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:274:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 node = keccak256(TLD_NODE, label);
                       ^------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:298:132: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function configureDomainFor(string name, uint price, uint referralFeePPM, address _owner, address _transfer) public owner_only(keccak256(name)) {
                                                                                                                                   ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:298:132: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function configureDomainFor(string name, uint price, uint referralFeePPM, address _owner, address _transfer) public owner_only(keccak256(name)) {
                                                                                                                                   ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:299:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:299:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:309:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (keccak256(domain.name) != label) {
            ^--------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:309:13: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
        if (keccak256(domain.name) != label) {
            ^--------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:319:13: Warning: Invoking events without "emit" prefix is deprecated.
            TransferAddressSet(label, _transfer);
            ^----------------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        DomainConfigured(label);
        ^---------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:330:82: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function setTransferAddress(string name, address transfer) public owner_only(keccak256(name)) {
                                                                                 ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:330:82: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function setTransferAddress(string name, address transfer) public owner_only(keccak256(name)) {
                                                                                 ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:331:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:331:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:337:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransferAddressSet(label, transfer);
        ^---------------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:345:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function unlistDomain(string name) public owner_only(keccak256(name)) {
                                                         ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:345:58: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function unlistDomain(string name) public owner_only(keccak256(name)) {
                                                         ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:346:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:346:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:348:9: Warning: Invoking events without "emit" prefix is deprecated.
        DomainUnlisted(label);
        ^-------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:367:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 node = keccak256(TLD_NODE, label);
                       ^------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:368:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 subnode = keccak256(node, keccak256(subdomain));
                                          ^------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:368:43: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 subnode = keccak256(node, keccak256(subdomain));
                                          ^------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:368:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 subnode = keccak256(node, keccak256(subdomain));
                          ^-----------------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:386:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 domainNode = keccak256(TLD_NODE, label);
                             ^------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:387:34: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 subdomainLabel = keccak256(subdomain);
                                 ^------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:387:34: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 subdomainLabel = keccak256(subdomain);
                                 ^------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:390:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ens.owner(keccak256(domainNode, subdomainLabel)) == address(0));
                          ^-----------------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:395:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(keccak256(domain.name) == label);
                ^--------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:395:17: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
        require(keccak256(domain.name) == label);
                ^--------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:424:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewRegistration(label, subdomain, subdomainOwner, referrer, domain.price);
        ^-----------------------------------------------------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:431:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 subnode = keccak256(node, label);
                          ^--------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:457:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function upgrade(string name) public owner_only(keccak256(name)) new_registrar {
                                                    ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:457:53: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function upgrade(string name) public owner_only(keccak256(name)) new_registrar {
                                                    ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:458:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:458:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:466:9: Warning: Invoking events without "emit" prefix is deprecated.
        DomainTransferred(label, name);
        ^----------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:490:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    function migrate(string name) public owner_only(keccak256(name)) {
                                                    ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:490:53: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    function migrate(string name) public owner_only(keccak256(name)) {
                                                    ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:494:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:494:25: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 label = keccak256(name);
                        ^-------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:509:9: Warning: Invoking events without "emit" prefix is deprecated.
        DomainTransferred(label, name);
        ^----------------------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:449:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function rentDue(bytes32 label, string subdomain) public view returns (uint timestamp) {
                     ^-----------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:449:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function rentDue(bytes32 label, string subdomain) public view returns (uint timestamp) {
                                    ^--------------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:516:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function payRent(bytes32 label, string subdomain) public payable {
                     ^-----------^
/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:516:37: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function payRent(bytes32 label, string subdomain) public payable {
                                    ^--------------^

INFO:Detectors:[91m
SubdomainRegistrar.register (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#390-436) sends eth to arbitrary user
	Dangerous calls:
	- referrer.transfer(referralFee) (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#424)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Reentrancy in SubdomainRegistrar.migrate (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#507-524):
	External calls:
	- hashRegistrar.transfer(label,migration) (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#516-517)
	- SubdomainRegistrar(migration).configureDomainFor(domain.name,domain.price,domain.referralFeePPM,domain.owner,domain.transferAddress) (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#518-524)
	State variables written after the call(s):
	- domains (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol)
Reentrancy in SubdomainRegistrar.unlistDomain (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#357-363):
	External calls:
	- domain.owner = owner(label) (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#361)
	State variables written after the call(s):
	- domains (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#362)
	- domains (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#362)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ENS.setOwner.owner (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#70-71) shadows:
	- ENS.owner (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#45-50)
ENS.setSubnodeOwner.owner (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#82-83) shadows:
	- ENS.owner (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#45-50)
ENS.setResolver.resolver (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#94) shadows:
	- ENS.resolver (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#52-57)
ENS.setTTL.ttl (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#105-108) shadows:
	- ENS.ttl (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#59-64)
Resolver.setAddr.addr (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#155-157) shadows:
	- Resolver.addr (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#152-155)
SubdomainRegistrar.setTransferAddress.transfer (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#342) shadows:
	- SubdomainRegistrar.transfer (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#268-272)
SubdomainRegistrar.upgrade.transfer (local variable @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#478-479) shadows:
	- SubdomainRegistrar.transfer (function @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#268-272)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in SubdomainRegistrar.SubdomainRegistrar (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#233-235):
	External calls:
	- hashRegistrar = HashRegistrarSimplified(ens.owner(TLD_NODE)) (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#234-235)
	State variables written after the call(s):
	- registrarOwner (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#235)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deed.owner should be constant (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#116)
Deed.previousOwner should be constant (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#116)
HashRegistrarSimplified.rootNode should be constant (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#121)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#84-85:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#35-36:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ENS.owner (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#45-50) should be declared external
ENS.resolver (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#52-57) should be declared external
ENS.ttl (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#59-64) should be declared external
ENS.setOwner (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#69-75) should be declared external
ENS.setSubnodeOwner (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#81-89) should be declared external
ENS.setResolver (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#93-100) should be declared external
ENS.setTTL (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#104-112) should be declared external
HashRegistrarSimplified.entries (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#121-126) should be declared external
HashRegistrarSimplified.transfer (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#126-127) should be declared external
RegistrarInterface.query (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#135-137) should be declared external
SubdomainRegistrar.query (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#374-385) should be declared external
RegistrarInterface.register (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#137-138) should be declared external
SubdomainRegistrar.register (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#390-436) should be declared external
RegistrarInterface.rentDue (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#138-144) should be declared external
SubdomainRegistrar.rentDue (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#459-466) should be declared external
RegistrarInterface.payRent (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#144-147) should be declared external
SubdomainRegistrar.payRent (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol) should be declared external
Resolver.supportsInterface (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#149-152) should be declared external
Resolver.addr (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#152-155) should be declared external
Resolver.setAddr (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#155-157) should be declared external
SubdomainRegistrar.transfer (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#268-272) should be declared external
SubdomainRegistrar.setResolver (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#279-284) should be declared external
SubdomainRegistrar.configureDomain (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#290-293) should be declared external
SubdomainRegistrar.setTransferAddress (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#339-350) should be declared external
SubdomainRegistrar.unlistDomain (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#357-363) should be declared external
SubdomainRegistrar.supportsInterface (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#454-459) should be declared external
SubdomainRegistrar.upgrade (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#473-486) should be declared external
SubdomainRegistrar.stop (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#488-491) should be declared external
SubdomainRegistrar.setMigrationAddress (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#495-501) should be declared external
SubdomainRegistrar.migrate (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#507-524) should be declared external
SubdomainRegistrar.transferOwnership (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol:
	- pragma solidity^0.4.17 (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'ENS.ENS' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#39-43) is not in mixedCase
Modifier 'ENS.only_owner' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#30-36) is not in mixedCase
Function 'SubdomainRegistrar.SubdomainRegistrar' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#233-235) is not in mixedCase
Parameter '_ens' of SubdomainRegistrar.SubdomainRegistrar (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#233) is not in mixedCase
Parameter '_owner' of SubdomainRegistrar.configureDomainFor (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#303) is not in mixedCase
Parameter '_transfer' of SubdomainRegistrar.configureDomainFor (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#303) is not in mixedCase
Parameter '_migration' of SubdomainRegistrar.setMigrationAddress (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#497) is not in mixedCase
Modifier 'SubdomainRegistrar.new_registrar' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#210-218) is not in mixedCase
Modifier 'SubdomainRegistrar.owner_only' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#218-223) is not in mixedCase
Modifier 'SubdomainRegistrar.not_stopped' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#223-224) is not in mixedCase
Modifier 'SubdomainRegistrar.registrar_owner_only' (/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol#224-228) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/6/0x0b07463b30b302a98407d3e3df85ebc073b0dbd1.sol analyzed (6 contracts), 57 result(s) found