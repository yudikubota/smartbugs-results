INFO:Detectors:[91m
SpinWin._sendLotteryContribution (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1119-1135) sends eth to arbitrary user
	Dangerous calls:
	- ! lotteryAddress.call.gas(_setting.uintSettings(gasForLottery)).value(lotteryContribution)() (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in SpinWin.rollDice (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#646-659):
	External calls:
	- betInternalId = _storeBet(msg.value,msg.sender,playerNumber,houseEdge) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#650-652)
	- _clearSingleBet(msg.sender,clearBetId,_setting.uintSettings(blockSecurityCount)) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#653-655)
	- _rewardReferree(referreeAddress,betInternalId) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#655)
	External calls sending eth:
	- _clearSingleBet(msg.sender,clearBetId,_setting.uintSettings(blockSecurityCount)) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#653-655)
	State variables written after the call(s):
	- lotteryBlocksAmount (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#655)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
SpinWin._clearSingleBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin._clearSingleBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.betExist (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#517-523) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
SpinWin._clearSingleBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.betExist (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#517-523) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
SpinWin.clearBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#663-688) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin._clearSingleBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.betExist (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#517-523) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
SpinWin.clearBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#663-688) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.playerGetBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#823-840) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId)
SpinWin._clearSingleBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.betExist (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#517-523) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
SpinWin.clearBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#663-688) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.playerGetBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#823-840) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId)
SpinWin.playerGetPendingBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#859-866) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId)
SpinWin._clearSingleBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.betExist (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#517-523) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId && bets[betIdLookup[betId]].playerAddress == playerAddress)
SpinWin.clearBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#663-688) uses a dangerous strict equality:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount
SpinWin.playerGetBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#823-840) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId)
SpinWin.playerGetPendingBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#859-866) uses a dangerous strict equality:
	- require(bool)(betIdLookup[betId] > 0 && bets[betIdLookup[betId]].betId == betId)
SpinWin.playerGetPendingBetIds (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#841-855) uses a dangerous strict equality:
	- _bet.processed == false
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in SpinWin._storeBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#891-921):
	External calls:
	- _setting.spinwinRollDice(betValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#895-898)
	- betInternalId = _setting.uintSettings(totalBets) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#898)
	- _bet.rewardValue = calculateWinningReward(betValue,playerNumber,houseEdge) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#911-914)
	- _bet.tokenRewardValue = calculateTokenReward(betValue,playerNumber,houseEdge) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#914-916)
	State variables written after the call(s):
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#914-916)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#916-918)
Reentrancy in SpinWin.exchangeToken (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#705-752):
	External calls:
	- (weiValue,sendWei,tokenRemainder,burnToken) = _lib.calculateExchangeTokenValue(settingAddress,tokenAmount) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#710-717)
	- _setting.spinwinIncrementUintSetting(totalTokenExchanges) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#717-718)
	- _exchangeId = keccak256()(abi.encodePacked(this,msg.sender,_setting.uintSettings(totalTokenExchanges))) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#718-722)
	- _setting.spinwinUpdateExchangeMetric(sendWei) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#725-727)
	State variables written after the call(s):
	- tokenExchanges (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#730-731)
	- tokenExchanges (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#731-733)
	- tokenExchanges (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#733)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
betStatus in SpinWin._payLoser (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1085-1087) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
developed.withdrawToken (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#337-345) does not use the value returned by external calls:
	-_token.transfer(developer,_token.balanceOf(this)) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#344-345)
SpinWin.rollDice (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#646-659) does not use the value returned by external calls:
	-_advertising.incrementBetCounter() (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#655-656)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SpinWin.clearBets has external calls inside a loop:
	- _bet.processed == false && _setting.uintSettings(contractBalance) >= _bet.rewardValue && (block.number.sub(_bet.blockNumber)) >= blockSecurityCount (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#675-680)
SpinWin.playerGetPendingBetIds has external calls inside a loop:
	- i <= _setting.uintSettings(totalBets) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#847-854)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in SpinWin._payLoser (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1079-1108):
	External calls:
	- _setting.spinwinUpdateLoseMetric(betValue,tokenRewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1082-1083)
	External calls sending eth:
	- ! _bet.playerAddress.send(1) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1089-1096)
	State variables written after the call(s):
	- playerPendingTokenWithdrawals (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1101-1105)
	- playerPendingWithdrawals (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1094-1096)
Reentrancy in SpinWin._payWinner (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1043-1076):
	External calls:
	- _setting.spinwinUpdateWinMetric(playerProfit) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1050-1052)
	External calls sending eth:
	- ! _bet.playerAddress.send(playerProfit) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1064-1072)
	State variables written after the call(s):
	- playerPendingWithdrawals (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1068-1072)
Reentrancy in SpinWin._processBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#969-1017):
	External calls:
	- _bet.diceResult = _lib.generateRandomNumber(settingAddress,_bet.blockNumber,_setting.uintSettings(totalBets).add(_setting.uintSettings(totalWeiWagered)),100) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#982-984)
	External calls sending eth:
	- _refundPlayer(betInternalId,_betValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#988)
	State variables written after the call(s):
	- playerPendingWithdrawals (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#988)
Reentrancy in SpinWin._processBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#969-1017):
	External calls:
	- _bet.diceResult = _lib.generateRandomNumber(settingAddress,_bet.blockNumber,_setting.uintSettings(totalBets).add(_setting.uintSettings(totalWeiWagered)),100) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#982-984)
	- _payWinner(betInternalId,_betValue,_rewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#990-991)
	- _payLoser(betInternalId,_betValue,_tokenRewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#996-997)
	External calls sending eth:
	- _refundPlayer(betInternalId,_betValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#988)
	- _payWinner(betInternalId,_betValue,_rewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#990-991)
	- _payLoser(betInternalId,_betValue,_tokenRewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#996-997)
	State variables written after the call(s):
	- totalPendingBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#998)
Reentrancy in SpinWin._processBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#969-1017):
	External calls:
	- _bet.diceResult = _lib.generateRandomNumber(settingAddress,_bet.blockNumber,_setting.uintSettings(totalBets).add(_setting.uintSettings(totalWeiWagered)),100) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#982-984)
	- _payWinner(betInternalId,_betValue,_rewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#990-991)
	- _payLoser(betInternalId,_betValue,_tokenRewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#996-997)
	- _setting.spinwinUpdateTokenToWeiExchangeRate() (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1000)
	- lotteryBlocksReward = calculateClearBetBlocksReward() (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1003-1004)
	- multiplier = _setting.uintSettings(clearSingleBetMultiplier) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1007-1009)
	- multiplier = _setting.uintSettings(clearMultipleBetsMultiplier) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1009-1011)
	External calls sending eth:
	- _refundPlayer(betInternalId,_betValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#988)
	- _payWinner(betInternalId,_betValue,_rewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#990-991)
	- _payLoser(betInternalId,_betValue,_tokenRewardValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#996-997)
	State variables written after the call(s):
	- lotteryBlocksAmount (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1012-1014)
Reentrancy in SpinWin._rewardReferree (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol):
	External calls:
	- _tokenForLotto = _bet.tokenRewardValue.mul(_setting.uintSettings(referralPercent)).div(PERCENTAGE_DIVISOR) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol)
	State variables written after the call(s):
	- lotteryBlocksAmount (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol)
Reentrancy in SpinWin._storeBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#891-921):
	External calls:
	- _setting.spinwinRollDice(betValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#895-898)
	- betInternalId = _setting.uintSettings(totalBets) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#898)
	State variables written after the call(s):
	- betIdLookup (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#906-907)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#907-908)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#909)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#909)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#909)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#909)
Reentrancy in SpinWin._storeBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#891-921):
	External calls:
	- _setting.spinwinRollDice(betValue) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#895-898)
	- betInternalId = _setting.uintSettings(totalBets) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#898)
	- _bet.rewardValue = calculateWinningReward(betValue,playerNumber,houseEdge) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#911-914)
	- _bet.tokenRewardValue = calculateTokenReward(betValue,playerNumber,houseEdge) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#914-916)
	State variables written after the call(s):
	- totalPendingBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#918)
Reentrancy in SpinWin.claimLotteryBlocks (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#691-701):
	External calls:
	- require(bool)(_lottery.isActive() == true) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#692-693)
	State variables written after the call(s):
	- lotteryBlocksAmount (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#693-695)
	- lotteryBlocksAmount (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#698)
Reentrancy in SpinWin.exchangeToken (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#705-752):
	External calls:
	- (weiValue,sendWei,tokenRemainder,burnToken) = _lib.calculateExchangeTokenValue(settingAddress,tokenAmount) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#710-717)
	- _setting.spinwinIncrementUintSetting(totalTokenExchanges) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#717-718)
	- _exchangeId = keccak256()(abi.encodePacked(this,msg.sender,_setting.uintSettings(totalTokenExchanges))) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#718-722)
	- _setting.spinwinUpdateExchangeMetric(sendWei) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#725-727)
	- ! _spintoken.burnAt(_tokenExchange.playerAddress,burnToken) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#733-744)
	External calls sending eth:
	- ! _tokenExchange.playerAddress.send(sendWei) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#737-744)
	State variables written after the call(s):
	- playerPendingWithdrawals (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#741-743)
Reentrancy in SpinWin.refundPendingBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#607-626):
	External calls:
	- totalBets = _setting.uintSettings(totalBets) (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#615-616)
	State variables written after the call(s):
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#619)
	- bets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#619-620)
	- playerPendingWithdrawals (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#620-621)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
TokenERC20.decimals should be constant (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#143)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
TokenERC20.transfer (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#209-213) should be declared external
TokenERC20.transferFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#218-228) should be declared external
TokenERC20.approveAndCall (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#250-263) should be declared external
TokenERC20.burn (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#265-278) should be declared external
TokenERC20.burnFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#281-308) should be declared external
developed.changeDeveloper (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#320-334) should be declared external
developed.withdrawToken (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#337-345) should be declared external
SpinWinInterface.refundPendingBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#7-11) should be declared external
SpinWin.refundPendingBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#607-626) should be declared external
SpinWin.devSetLotteryAddress (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#535-543) should be declared external
SpinWin.devSetAdvertisingAddress (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#548-554) should be declared external
SpinWin.devGetBetInternalId (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#556) should be declared external
SpinWin.devGetBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#564-578) should be declared external
SpinWin.devRefundBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#588-598) should be declared external
SpinWin.fallback (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#600-602) should be declared external
SpinWin.rollDice (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#646-659) should be declared external
SpinWin.clearBets (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#663-688) should be declared external
SpinWin.claimLotteryBlocks (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#691-701) should be declared external
SpinWin.exchangeToken (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#705-752) should be declared external
SpinWin.playerWithdrawPendingTransactions (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#783-798) should be declared external
SpinWin.playerWithdrawPendingTokenTransactions (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#803-820) should be declared external
SpinWin.playerGetBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#823-840) should be declared external
SpinWin.playerGetPendingBetIds (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#841-855) should be declared external
SpinWin.playerGetPendingBet (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#859-866) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in SpinWin._sendLotteryContribution (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1119-1135):
	-! lotteryAddress.call.gas(_setting.uintSettings(gasForLottery)).value(lotteryContribution)() /unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#135-140) is not in CapWords
Function 'TokenERC20._transfer' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#178-201) is not in mixedCase
Parameter '_from' of TokenERC20._transfer (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#179) is not in mixedCase
Parameter '_to' of TokenERC20._transfer (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#179) is not in mixedCase
Parameter '_value' of TokenERC20._transfer (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#179-180) is not in mixedCase
Parameter '_to' of TokenERC20.transfer (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#209) is not in mixedCase
Parameter '_value' of TokenERC20.transfer (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#209-211) is not in mixedCase
Parameter '_from' of TokenERC20.transferFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#218-219) is not in mixedCase
Parameter '_to' of TokenERC20.transferFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#219-220) is not in mixedCase
Parameter '_value' of TokenERC20.transferFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#220-223) is not in mixedCase
Parameter '_spender' of TokenERC20.approve (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#238-239) is not in mixedCase
Parameter '_value' of TokenERC20.approve (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#239) is not in mixedCase
Parameter '_spender' of TokenERC20.approveAndCall (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#251-252) is not in mixedCase
Parameter '_value' of TokenERC20.approveAndCall (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#253-256) is not in mixedCase
Parameter '_extraData' of TokenERC20.approveAndCall (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#256-258) is not in mixedCase
Parameter '_value' of TokenERC20.burn (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#265-266) is not in mixedCase
Parameter '_from' of TokenERC20.burnFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#281) is not in mixedCase
Parameter '_value' of TokenERC20.burnFrom (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#281) is not in mixedCase
Contract 'developed' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#308-346) is not in CapWords
Parameter '_developer' of developed.changeDeveloper (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#321) is not in mixedCase
Parameter '_tokenAddress' of SpinWin. (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#493) is not in mixedCase
Parameter '_settingAddress' of SpinWin. (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#493) is not in mixedCase
Parameter '_libraryAddress' of SpinWin. (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#493-495) is not in mixedCase
Parameter '_lotteryAddress' of SpinWin.devSetLotteryAddress (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#535-539) is not in mixedCase
Parameter '_advertisingAddress' of SpinWin.devSetAdvertisingAddress (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#549) is not in mixedCase
Function 'SpinWin._storeBet' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#891-921) is not in mixedCase
Function 'SpinWin._clearSingleBet' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#933-946) is not in mixedCase
Function 'SpinWin._processBet' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#969-1017) is not in mixedCase
Function 'SpinWin._refundPlayer' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1023-1041) is not in mixedCase
Function 'SpinWin._payWinner' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1043-1076) is not in mixedCase
Function 'SpinWin._payLoser' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1079-1108) is not in mixedCase
Function 'SpinWin._sendLotteryContribution' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#1119-1135) is not in mixedCase
Function 'SpinWin._rewardReferree' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol) is not in mixedCase
Variable 'SpinWin._spintoken' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#357-359) is not in mixedCase
Variable 'SpinWin._setting' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#359-360) is not in mixedCase
Variable 'SpinWin._lottery' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#360-362) is not in mixedCase
Variable 'SpinWin._lib' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#362-364) is not in mixedCase
Variable 'SpinWin._advertising' (/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol#365-366) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0x453939ddbb64a8ce1da8b0648281ca281dfaa2ef.sol analyzed (11 contracts), 90 result(s) found