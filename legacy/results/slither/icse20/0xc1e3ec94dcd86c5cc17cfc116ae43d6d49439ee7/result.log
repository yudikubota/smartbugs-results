INFO:Slither:Compilation warnings/errors on /unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:7:5: Warning: Functions in interfaces should be declared external.
    function totalSupply() public view returns (uint supply);
    ^-------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:8:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address _owner) public view returns (uint balance);
    ^--------------------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:9:5: Warning: Functions in interfaces should be declared external.
    function transfer(address _to, uint _value) public returns (bool success);
    ^------------------------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:10:5: Warning: Functions in interfaces should be declared external.
    function transferFrom(address _from, address _to, uint _value) public returns (bool success);
    ^-------------------------------------------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:11:5: Warning: Functions in interfaces should be declared external.
    function approve(address _spender, uint _value) public returns (bool success);
    ^----------------------------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:12:5: Warning: Functions in interfaces should be declared external.
    function allowance(address _owner, address _spender) public view returns (uint remaining);
    ^----------------------------------------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:13:5: Warning: Functions in interfaces should be declared external.
    function decimals() public view returns(uint digits);
    ^---------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:21:5: Warning: Functions in interfaces should be declared external.
    function trade(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:33:5: Warning: Functions in interfaces should be declared external.
    function getConversionRate(ERC20 src, ERC20 dest, uint srcQty, uint blockNumber) public view returns(uint);
    ^---------------------------------------------------------------------------------------------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:265:5: Warning: Functions in interfaces should be declared external.
    function getExpectedRate(ERC20 src, ERC20 dest, uint srcQty) public view
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:391:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (perSupplierListedPairs[supplier])[keccak256(src, dest)] = add;
                                           ^------------------^
/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:477:57: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (!(perSupplierListedPairs[suppliers[i]])[keccak256(src, dest)]) continue;
                                                        ^------------------^

INFO:Detectors:[93m
MartletInstantlyTrader.listPairForSupplier (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#397-419) does not use the value returned by external calls:
	-src.approve(supplier,2 ** 255) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#410)
	-src.approve(supplier,0) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#415-417)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
MartletInstantlyTrader.findBestRate has external calls inside a loop:
	- rates[i] = suppliers[i].getConversionRate(src,dest,srcQty,block.number) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#493-494)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in MartletInstantlyTrader.listPairForSupplier (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#397-419):
	External calls:
	- src.approve(supplier,2 ** 255) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#410)
	- src.approve(supplier,0) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#415-417)
	- setDecimals(src) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#417-418)
	State variables written after the call(s):
	- decimals (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#417-418)
Reentrancy in MartletInstantlyTrader.listPairForSupplier (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#397-419):
	External calls:
	- src.approve(supplier,2 ** 255) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#410)
	- src.approve(supplier,0) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#415-417)
	- setDecimals(src) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#417-418)
	- setDecimals(dest) (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#418)
	State variables written after the call(s):
	- decimals (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#418)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20.totalSupply (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#7-8) should be declared external
ERC20.balanceOf (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#8-9) should be declared external
ERC20.transfer (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#9-10) should be declared external
ERC20.transferFrom (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#10-11) should be declared external
ERC20.approve (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#11-12) should be declared external
ERC20.allowance (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#12-13) should be declared external
ERC20.decimals (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#13-14) should be declared external
SupplierInterface.trade (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#22-33) should be declared external
SupplierInterface.getConversionRate (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#33-36) should be declared external
PermissionGroups.transferAdmin (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#82-88) should be declared external
PermissionGroups.transferAdminQuickly (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#92-101) should be declared external
PermissionGroups.claimAdmin (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#105-112) should be declared external
PermissionGroups.addOperator (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#113-123) should be declared external
PermissionGroups.removeOperator (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#123-138) should be declared external
PermissionGroups.addQuoter (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#139-150) should be declared external
PermissionGroups.removeQuoter (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#150-165) should be declared external
ExpectedRateInterface.getExpectedRate (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#273-275) should be declared external
MartletInstantlyTrader.fallback (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#299-300) should be declared external
MartletInstantlyTrader.trade (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#323-362) should be declared external
MartletInstantlyTrader.addSupplier (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#371-389) should be declared external
MartletInstantlyTrader.listPairForSupplier (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#397-419) should be declared external
MartletInstantlyTrader.setParams (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#420-441) should be declared external
MartletInstantlyTrader.setEnable (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#441-447) should be declared external
MartletInstantlyTrader.setInfo (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#448-451) should be declared external
MartletInstantlyTrader.getNumSuppliers (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#454-455) should be declared external
MartletInstantlyTrader.getSuppliers (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#462-463) should be declared external
MartletInstantlyTrader.getExpectedRate (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#526-536) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol:
	- pragma solidity^0.4.22 (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_admin' of MartletInstantlyTrader. (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#293) is not in mixedCase
Parameter '_whiteList' of MartletInstantlyTrader.setParams (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#421-422) is not in mixedCase
Parameter '_expectedRate' of MartletInstantlyTrader.setParams (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#422-423) is not in mixedCase
Parameter '_maxGasPrice' of MartletInstantlyTrader.setParams (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#423-424) is not in mixedCase
Parameter '_negligibleRateDiff' of MartletInstantlyTrader.setParams (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#424-427) is not in mixedCase
Parameter '_enable' of MartletInstantlyTrader.setEnable (/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol#441) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xc1e3ec94dcd86c5cc17cfc116ae43d6d49439ee7.sol analyzed (8 contracts), 38 result(s) found