INFO:Slither:Compilation warnings/errors on /unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:111:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ReserveToken() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:164:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PolarisDEX(address admin_, address feeAccount_, address accountLevelsAddr_, uint feeMake_, uint feeTake_, uint feeRebate_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:243:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:250:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:252:40: Warning: "sha3" has been deprecated in favour of "keccak256"
      (orders[user][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user) &&
                                       ^--------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:252:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user) &&
                                       ^--------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:286:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:288:40: Warning: "sha3" has been deprecated in favour of "keccak256"
      (orders[user][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user) &&
                                       ^--------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:288:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == user) &&
                                       ^--------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:298:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:303:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:304:49: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
                                                ^--------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:304:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) revert();
                                                ^--------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:24:51: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function totalSupply() constant public returns (uint256 supply) {}
                                                  ^------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:28:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function balanceOf(address _owner) constant public returns (uint256 balance) {}
                     ^------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:28:63: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function balanceOf(address _owner) constant public returns (uint256 balance) {}
                                                              ^-------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:34:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) public returns (bool success) {}
                    ^---------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:34:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) public returns (bool success) {}
                                 ^------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:34:66: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) public returns (bool success) {}
                                                                 ^----------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:41:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                        ^-----------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:41:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                       ^---------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:41:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                                    ^------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:41:85: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                                                                    ^----------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:47:20: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) public returns (bool success) {}
                   ^--------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:47:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) public returns (bool success) {}
                                     ^------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:47:70: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) public returns (bool success) {}
                                                                     ^----------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:52:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
                     ^------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:52:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
                                     ^--------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:52:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
                                                                                ^---------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:132:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function accountLevel(address user) constant public returns(uint) {}
                        ^----------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:297:135: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... uint8 v ... 
     ^-----^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:297:144: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 r ... 
     ^-------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:297:155: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 s ... 
     ^-------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:24:3: Warning: Function state mutability can be restricted to pure
  function totalSupply() constant public returns (uint256 supply) {}
  ^----------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:28:3: Warning: Function state mutability can be restricted to pure
  function balanceOf(address _owner) constant public returns (uint256 balance) {}
  ^-----------------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:34:3: Warning: Function state mutability can be restricted to pure
  function transfer(address _to, uint256 _value) public returns (bool success) {}
  ^-----------------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:41:3: Warning: Function state mutability can be restricted to pure
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
  ^------------------------------------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:47:3: Warning: Function state mutability can be restricted to pure
  function approve(address _spender, uint256 _value) public returns (bool success) {}
  ^---------------------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:52:3: Warning: Function state mutability can be restricted to pure
  function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
  ^-------------------------------------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:4:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:10:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:15:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:132:3: Warning: Function state mutability can be restricted to pure
  function accountLevel(address user) constant public returns(uint) {}
  ^------------------------------------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:291:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint available1 = safeSub(amountGet, orderFills[user][hash]);
                      ^----------------------------------------^
/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:292:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint available2 = safeMul(tokens[tokenGive][user], amountGet) / amountGive;
                      ^-----------------------------------------^

INFO:Detectors:[93m
Reentrancy in PolarisDEX.trade (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#250-264):
	External calls:
	- tradeBalances(tokenGet,amountGet,tokenGive,amountGive,user,amount) (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#261)
	State variables written after the call(s):
	- orderFills (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#261-262)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in PolarisDEX.depositToken (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#225-234):
	External calls:
	- ! Token(token).transferFrom(msg.sender,this,amount) (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#230-231)
	State variables written after the call(s):
	- tokens (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#231-233)
Reentrancy in PolarisDEX.tradeBalances (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#264-279):
	External calls:
	- accountLevel = AccountLevels(accountLevelsAddr).accountLevel(user) (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#270-271)
	State variables written after the call(s):
	- tokens (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#272-273)
	- tokens (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#273-274)
	- tokens (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#274-277)
	- tokens (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#277)
	- tokens (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#277-279)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Token.decimals should be constant (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#61)
Token.name should be constant (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#62-63)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#256-261:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#292-297:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.totalSupply (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#24-26) should be declared external
StandardToken.balanceOf (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#89-93) should be declared external
Token.balanceOf (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#28-30) should be declared external
StandardToken.transfer (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#63-76) should be declared external
Token.transfer (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#34-36) should be declared external
StandardToken.transferFrom (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#76-89) should be declared external
Token.transferFrom (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#41-43) should be declared external
StandardToken.approve (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#93-98) should be declared external
Token.approve (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#47-49) should be declared external
Token.allowance (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#52-54) should be declared external
StandardToken.allowance (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#98-104) should be declared external
ReserveToken.create (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#116-121) should be declared external
ReserveToken.destroy (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#121-130) should be declared external
AccountLevels.accountLevel (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#136-138) should be declared external
AccountLevelsTest.accountLevel (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#148-149) should be declared external
AccountLevelsTest.setAccountLevel (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#142-147) should be declared external
PolarisDEX.fallback (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#182) should be declared external
PolarisDEX.changeAdmin (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#182-187) should be declared external
PolarisDEX.changeAccountLevelsAddr (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#187-193) should be declared external
PolarisDEX.changeFeeAccount (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#193-198) should be declared external
PolarisDEX.changeFeeMake (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#198-204) should be declared external
PolarisDEX.changeFeeTake (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#204-210) should be declared external
PolarisDEX.changeFeeRebate (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#210-215) should be declared external
PolarisDEX.deposit (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#215-218) should be declared external
PolarisDEX.withdraw (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#219-224) should be declared external
PolarisDEX.depositToken (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#225-234) should be declared external
PolarisDEX.withdrawToken (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#234-242) should be declared external
PolarisDEX.balanceOf (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#242-244) should be declared external
PolarisDEX.order (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#244-250) should be declared external
PolarisDEX.trade (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#250-264) should be declared external
PolarisDEX.testTrade (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#280-286) should be declared external
PolarisDEX.amountFilled (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#299-304) should be declared external
PolarisDEX.cancelOrder (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#304-308) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol:
	- pragma solidity^0.4.20 (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in PolarisDEX.withdraw (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#219-224):
	-! msg.sender.call.value(amount)() /unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#223
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_owner' of StandardToken.balanceOf (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#89-92) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#64) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#64) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#76-77) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#77) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#77) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#93) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#93-94) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#99) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#99-102) is not in mixedCase
Function 'ReserveToken.ReserveToken' (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#114-116) is not in mixedCase
Function 'PolarisDEX.PolarisDEX' (/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol#166-182) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/6/0x25066b77ae6174d372a9fe2b1d7886a2be150e9b.sol analyzed (7 contracts), 54 result(s) found