INFO:Slither:Compilation warnings/errors on /unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:48:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:183:7: Warning: Use of the "var" keyword is deprecated.
      var _allowance = allowed[_from][msg.sender];
      ^------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:314:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function JincorToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:416:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function JincorTokenPreSale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:452:7: Warning: This declaration shadows an existing declaration.
      uint refund = balance.div(price);
      ^---------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:445:5: The shadowed declaration is here:
    function refund() external preSaleEnded inNormalState {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:149:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(msg.sender, _to, _value);
      ^-------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:191:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(_from, _to, _value);
      ^--------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:209:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, _spender, _value);
      ^------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:240:7: Warning: Invoking events without "emit" prefix is deprecated.
      Burn(msg.sender, _value);
      ^----------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:250:7: Warning: Invoking events without "emit" prefix is deprecated.
      Burn(_from, _value);
      ^-----------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:453:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if (refund > this.balance) {
                   ^----------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:454:18: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        refund = this.balance;
                 ^----------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:460:7: Warning: Invoking events without "emit" prefix is deprecated.
      Refunded(msg.sender, refund);
      ^--------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:477:9: Warning: Invoking events without "emit" prefix is deprecated.
        SoftCapReached(softCap);
        ^---------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:490:7: Warning: Invoking events without "emit" prefix is deprecated.
      NewContribution(_owner, tokens, msg.value);
      ^----------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:493:9: Warning: Invoking events without "emit" prefix is deprecated.
        GoalReached(hardCap);
        ^------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:115:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint256);
    ^---------------------------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:116:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint256 value) returns (bool);
    ^----------------------------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint256);
    ^----------------------------------------------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:127:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint256 value) returns (bool);
    ^----------------------------------------------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:128:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint256 value) returns (bool);
    ^--------------------------------------------------------------^
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:158:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:182:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:200:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:219:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:236:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:244:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:254:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:260:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:314:5: Warning: No visibility specified. Defaulting to "public". 
    function JincorToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:342:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) canTransfer(msg.sender) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:347:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value) canTransfer(_from) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:352:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:356:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:416:5: Warning: No visibility specified. Defaulting to "public". 
    function JincorTokenPreSale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:440:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:463:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:9:5: Warning: Function state mutability can be restricted to pure
    function mul(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:15:5: Warning: Function state mutability can be restricted to pure
    function div(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:22:5: Warning: Function state mutability can be restricted to pure
    function sub(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:27:5: Warning: Function state mutability can be restricted to pure
    function add(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in JincorTokenPreSale.refund (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#459-475):
	External calls:
	- balance = token.balanceOf(msg.sender) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#465-466)
	External calls sending eth:
	- assert(bool)(msg.sender.send(refund)) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#472-473)
	State variables written after the call(s):
	- refunded (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#473)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
JincorTokenPreSale.doPurchase (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#482-496) uses a dangerous strict equality:
	- token.balanceOf(msg.sender) == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in JincorTokenPreSale.doPurchase (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#482-496):
	External calls:
	- require(bool)(token.balanceOf(msg.sender).add(tokens) <= purchaseLimit) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	- token.balanceOf(msg.sender) == 0 (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	State variables written after the call(s):
	- collected (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
JincorTokenPreSale.withdraw (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#476-482) does not use the value returned by external calls:
	-token.transfer(beneficiary,token.balanceOf(this)) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#480)
JincorTokenPreSale.doPurchase (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#482-496) does not use the value returned by external calls:
	-token.transfer(msg.sender,tokens) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
JincorTokenPreSale.refund.refund (local variable @ /unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#467-470) shadows:
	- JincorTokenPreSale.refund (function @ /unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#459-475)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in JincorTokenPreSale.doPurchase (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#482-496):
	External calls:
	- require(bool)(token.balanceOf(msg.sender).add(tokens) <= purchaseLimit) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	- token.balanceOf(msg.sender) == 0 (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	State variables written after the call(s):
	- investorCount (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
Reentrancy in JincorTokenPreSale.doPurchase (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#482-496):
	External calls:
	- require(bool)(token.balanceOf(msg.sender).add(tokens) <= purchaseLimit) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	- token.balanceOf(msg.sender) == 0 (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	- token.transfer(msg.sender,tokens) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol)
Reentrancy in JincorTokenPreSale.refund (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#459-475):
	External calls:
	- balance = token.balanceOf(msg.sender) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#465-466)
	External calls sending eth:
	- assert(bool)(msg.sender.send(refund)) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#472-473)
	State variables written after the call(s):
	- weiRefunded (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#475)
Reentrancy in JincorTokenPreSale.withdraw (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#476-482):
	External calls:
	- token.transfer(beneficiary,token.balanceOf(this)) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#480)
	External calls sending eth:
	- assert(bool)(beneficiary.send(collected)) (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#479)
	State variables written after the call(s):
	- crowdsaleFinished (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#480-482)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
JincorToken.INITIAL_SUPPLY should be constant (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#283-284)
JincorToken.decimals should be constant (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#283)
JincorToken.name should be constant (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#281-283)
JincorToken.symbol should be constant (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#283)
JincorTokenPreSale.name should be constant (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#388-391)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#67-78) should be declared external
ERC20Basic.balanceOf (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#116-117) should be declared external
BasicToken.balanceOf (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#166-169) should be declared external
StandardToken.allowance (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#230-234) should be declared external
ERC20.allowance (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#127-128) should be declared external
StandardToken.approve (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#203-216) should be declared external
ERC20.approve (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#129-134) should be declared external
JincorToken.setReleaseAgent (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#333-338) should be declared external
JincorToken.release (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#339-342) should be declared external
JincorToken.setTransferAgent (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#347-349) should be declared external
JincorTokenPreSale.fallback (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#455-459) should be declared external
JincorTokenPreSale.withdraw (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#476-482) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol:
	- pragma solidity^0.4.15 (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#50-54) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#167) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#148) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#149) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#230) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#231) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#185) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#185) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#185-186) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#203-204) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#204) is not in mixedCase
Parameter '_to' of Burnable.transfer (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#261) is not in mixedCase
Parameter '_value' of Burnable.transfer (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#261-263) is not in mixedCase
Parameter '_from' of Burnable.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#273) is not in mixedCase
Parameter '_to' of Burnable.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#273) is not in mixedCase
Parameter '_value' of Burnable.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#273-275) is not in mixedCase
Parameter '_value' of Burnable.burn (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#239) is not in mixedCase
Parameter '_from' of Burnable.burnFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#247) is not in mixedCase
Parameter '_value' of Burnable.burnFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#247) is not in mixedCase
Parameter '_to' of JincorToken.transfer (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#349) is not in mixedCase
Parameter '_value' of JincorToken.transfer (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#349-350) is not in mixedCase
Parameter '_from' of JincorToken.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#356) is not in mixedCase
Parameter '_to' of JincorToken.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#356) is not in mixedCase
Parameter '_value' of JincorToken.transferFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#356-357) is not in mixedCase
Parameter '_value' of JincorToken.burn (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#366) is not in mixedCase
Parameter '_from' of JincorToken.burnFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#374) is not in mixedCase
Parameter '_value' of JincorToken.burnFrom (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#374-376) is not in mixedCase
Function 'JincorToken.JincorToken' (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#325-327) is not in mixedCase
Variable 'JincorToken.INITIAL_SUPPLY' (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#283-284) is not in mixedCase
Function 'JincorTokenPreSale.JincorTokenPreSale' (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#432-454) is not in mixedCase
Parameter '_hardCapUSD' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#432) is not in mixedCase
Parameter '_softCapUSD' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#432) is not in mixedCase
Parameter '_token' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#433) is not in mixedCase
Parameter '_beneficiary' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#433-434) is not in mixedCase
Parameter '_totalTokens' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#434-436) is not in mixedCase
Parameter '_priceETH' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#436) is not in mixedCase
Parameter '_purchaseLimitUSD' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#436-437) is not in mixedCase
Parameter '_startBlock' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#438-440) is not in mixedCase
Parameter '_endBlock' of JincorTokenPreSale.JincorTokenPreSale (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#440-441) is not in mixedCase
Parameter '_owner' of JincorTokenPreSale.doPurchase (/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol#482-484) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/23/0x221b9e453391c24d52c551542d791206f5747c57.sol analyzed (10 contracts), 64 result(s) found