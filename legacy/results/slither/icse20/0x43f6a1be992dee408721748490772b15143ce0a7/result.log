INFO:Slither:Compilation warnings/errors on /unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:45:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Potatoin(uint256 _relief, uint256 _decay, uint256 _growth) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:71:9: Warning: Use of the "var" keyword is deprecated.
        var elapsed = block.timestamp - recycled[farmer];
        ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:76:9: Warning: Use of the "var" keyword is deprecated.
        var list = fields[farmer];
        ^------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:89:9: Warning: Use of the "var" keyword is deprecated.
        var list = fields[farmer];
        ^------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:92:13: Warning: Use of the "var" keyword is deprecated.
            var elapsed = block.timestamp - list[i].sowed;
            ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:109:9: Warning: Use of the "var" keyword is deprecated.
        var elapsed = block.timestamp - recycled[farmer];
        ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:111:13: Warning: Use of the "var" keyword is deprecated.
            var rotten = cellars[farmer];
            ^--------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:118:9: Warning: Use of the "var" keyword is deprecated.
        var list = fields[farmer];
        ^------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:180:9: Warning: Use of the "var" keyword is deprecated.
        var list = fields[farmer];
        ^------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:182:13: Warning: Use of the "var" keyword is deprecated.
            var elapsed = block.timestamp - list[i].sowed;
            ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:185:21: Warning: Use of the "var" keyword is deprecated.
                    var harvested = (2 * list[i].potatoes * (decay-elapsed+growth) + decay-1) / decay;
                    ^-----------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:186:21: Warning: Use of the "var" keyword is deprecated.
                    var rotten    = 2 * list[i].potatoes - harvested;
                    ^--------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:211:9: Warning: Use of the "var" keyword is deprecated.
        var elapsed = block.timestamp - recycled[farmer];
        ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:215:9: Warning: Use of the "var" keyword is deprecated.
        var rotten = cellars[farmer];
        ^--------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:54:53: Warning: This declaration shadows an existing declaration.
    function totalSupply() constant public returns (uint totalSupply) {
                                                    ^--------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:54:5: The shadowed declaration is here:
    function totalSupply() constant public returns (uint totalSupply) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:146:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, 1);
        ^---------------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:168:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, potatoes);
            ^----------------------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:189:21: Warning: Invoking events without "emit" prefix is deprecated.
                    Transfer(this, farmer, harvested);
                    ^-------------------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:193:25: Warning: Invoking events without "emit" prefix is deprecated.
                        Transfer(this, 0, rotten);
                        ^-----------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:197:21: Warning: Invoking events without "emit" prefix is deprecated.
                    Transfer(this, 0, 2 * list[i].potatoes);
                    ^-------------------------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:223:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(farmer, 0, rotten);
            ^-------------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:240:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, potatoes);
        ^--------------------------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:245:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:245:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transferFrom(address _from, address _to, uint _value) returns (bool success) {
                          ^-----------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:245:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transferFrom(address _from, address _to, uint _value) returns (bool success) {
                                         ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:245:55: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function transferFrom(address _from, address _to, uint _value) returns (bool success) {
                                                      ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:250:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:250:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function approve(address _spender, uint _value) returns (bool success) {
                     ^--------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:250:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function approve(address _spender, uint _value) returns (bool success) {
                                       ^---------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:255:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function allowance(address _owner, address _spender) constant returns (uint remaining) {
                       ^------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:255:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function allowance(address _owner, address _spender) constant returns (uint remaining) {
                                       ^--------------^
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:245:5: Warning: Function state mutability can be restricted to pure
    function transferFrom(address _from, address _to, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:250:5: Warning: Function state mutability can be restricted to pure
    function approve(address _spender, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:255:5: Warning: Function state mutability can be restricted to pure
    function allowance(address _owner, address _spender) constant returns (uint remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Potatoin.recycle (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#216-231) uses a dangerous strict equality:
	- elapsed == 0
Potatoin.recycle (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#216-231) uses a dangerous strict equality:
	- elapsed == 0
Potatoin.request (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#136-150) uses a dangerous strict equality:
	- require(bool)(donated[msg.sender] == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Potatoin.totalSupply.totalSupply (local variable @ /unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#55) shadows:
	- Potatoin.totalSupply (function @ /unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#54-61)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Potatoin.unsowed (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#69-87) uses timestamp for comparisons
	Dangerous comparisons:
	- elapsed >= growth && elapsed - growth < decay (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#80-86)
	- elapsed < decay (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#73-76)
Potatoin.sowed (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#89-103) uses timestamp for comparisons
	Dangerous comparisons:
	- elapsed >= growth (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#96-97)
Potatoin.trashed (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#105-133) uses timestamp for comparisons
	Dangerous comparisons:
	- elapsed - growth < decay (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#125-132)
	- elapsed < decay (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#115-118)
	- elapsed >= growth (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#123-133)
	- elapsed >= 0 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#113-119)
Potatoin.request (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#136-150) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < genesis + relief) (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#139-140)
	- require(bool)(donated[msg.sender] == 0) (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#140-142)
Potatoin.sow (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#156-174) uses timestamp for comparisons
	Dangerous comparisons:
	- cellars[msg.sender] > 0 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#165-174)
	- potatoes == 0 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#162-163)
	- potatoes > cellars[msg.sender] (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#165-168)
Potatoin.harvest (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#179-213) uses timestamp for comparisons
	Dangerous comparisons:
	- elapsed - growth < decay (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#186-203)
	- elapsed >= growth (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#186-205)
	- rotten > 0 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#196-199)
Potatoin.recycle (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#216-231) uses timestamp for comparisons
	Dangerous comparisons:
	- elapsed == 0 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#220-221)
	- rotten > 0 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#228-230)
	- elapsed < decay (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#223-228)
Potatoin.transfer (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#233-250) uses timestamp for comparisons
	Dangerous comparisons:
	- cellars[msg.sender] < potatoes (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#238-241)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Potatoin.totalSupply (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#54-61) should be declared external
Potatoin.trashed (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#105-133) should be declared external
Potatoin.request (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#136-150) should be declared external
Potatoin.sow (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#156-174) should be declared external
Potatoin.transfer (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#233-250) should be declared external
Potatoin.transferFrom (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#250-255) should be declared external
Potatoin.approve (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#256-258) should be declared external
Potatoin.allowance (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol:
	- pragma solidity^0.4.18 (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Struct 'Potatoin.field' (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#34-37) is not in CapWords
Function 'Potatoin.Potatoin' (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#45-52) is not in mixedCase
Parameter '_relief' of Potatoin.Potatoin (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#45-46) is not in mixedCase
Parameter '_decay' of Potatoin.Potatoin (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#46) is not in mixedCase
Parameter '_growth' of Potatoin.Potatoin (/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol#46) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/8/0x43f6a1be992dee408721748490772b15143ce0a7.sol analyzed (1 contracts), 25 result(s) found