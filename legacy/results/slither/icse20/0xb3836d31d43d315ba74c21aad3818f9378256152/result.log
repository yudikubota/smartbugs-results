INFO:Slither:Compilation warnings/errors on /unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:24:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function PlayersStorage() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:276:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TheGame(address ponziTokenAddr) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:578:5: Warning: Invoking events without "emit" prefix is deprecated.
    PonziPriceChanged(msg.sender, m_ponziPriceInWei);
    ^----------------------------------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:593:9: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(newState) == keccak256(NOT_ACTIVE_STR)) {
        ^-----------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:593:9: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    if (keccak256(newState) == keccak256(NOT_ACTIVE_STR)) {
        ^-----------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:593:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (keccak256(newState) == keccak256(NOT_ACTIVE_STR)) {
                               ^-----------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:593:32: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    if (keccak256(newState) == keccak256(NOT_ACTIVE_STR)) {
                               ^-----------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:595:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    } else if (keccak256(newState) == keccak256(ACTIVE_STR)) {
               ^-----------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:595:16: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    } else if (keccak256(newState) == keccak256(ACTIVE_STR)) {
               ^-----------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:595:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    } else if (keccak256(newState) == keccak256(ACTIVE_STR)) {
                                      ^-------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:595:39: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    } else if (keccak256(newState) == keccak256(ACTIVE_STR)) {
                                      ^-------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:603:5: Warning: Invoking events without "emit" prefix is deprecated.
    StateChanged(msg.sender, m_state);
    ^-------------------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:655:5: Warning: Invoking events without "emit" prefix is deprecated.
    NewPlayer(addr, input, now);
    ^-------------------------^
/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:690:5: Warning: Invoking events without "emit" prefix is deprecated.
    NewLevel(now, m_level);
    ^--------------------^

INFO:Detectors:[91m
TheGame.exit (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#309-360) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(outputInWei) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#337-338)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
TheGame.bytesToAddress (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
TheGame.exit (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#309-360) uses a dangerous strict equality:
	- assert(bool)(m_ponziToken.balanceOf(address(this)).add(outputInPonzi) == oldPonziBalance)
	- assert(bool)(m_ponziToken.balanceOf(address(this)) == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in TheGame.exit (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#309-360):
	External calls:
	- timestamp = m_playersStorage.playerTimestamp(msg.sender) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#313-315)
	- input = m_playersStorage.playerInput(msg.sender) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#315-318)
	- m_playersStorage.deletePlayer(msg.sender) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#330-331)
	- assert(bool)(m_ponziToken.transfer(msg.sender,m_ponziToken.balanceOf(address(this)))) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#353-354)
	- assert(bool)(m_ponziToken.balanceOf(address(this)) == 0) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#356-358)
	- nextLevel() (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#359)
	State variables written after the call(s):
	- m_interestRateNumerator (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#359)
	- m_playersStorage (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#359)
Reentrancy in TheGame.nextLevel (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#707-713):
	External calls:
	- m_playersStorage.kill() (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#707-708)
	State variables written after the call(s):
	- m_playersStorage (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#708-709)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
TheGame.atState.state (local variable @ /unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#256-257) shadows:
	- TheGame.state (function @ /unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#514-522)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in TheGame.exit (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#309-360):
	External calls:
	- timestamp = m_playersStorage.playerTimestamp(msg.sender) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#313-315)
	- input = m_playersStorage.playerInput(msg.sender) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#315-318)
	- m_playersStorage.deletePlayer(msg.sender) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#330-331)
	- assert(bool)(m_ponziToken.transfer(msg.sender,m_ponziToken.balanceOf(address(this)))) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#353-354)
	- assert(bool)(m_ponziToken.balanceOf(address(this)) == 0) (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#356-358)
	- nextLevel() (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#359)
	State variables written after the call(s):
	- m_levelStartupTimestamp (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#359)
Reentrancy in TheGame.nextLevel (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#707-713):
	External calls:
	- m_playersStorage.kill() (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#707-708)
	State variables written after the call(s):
	- m_interestRateNumerator (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#710-711)
	- m_level (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#709)
	- m_levelStartupTimestamp (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#711-712)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
TheGame.bytesToAddress uses assembly (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol)
	- /unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
PlayersStorage.newPlayer (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#41-56) should be declared external
PlayersStorage.deletePlayer (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#60-65) should be declared external
PlayersStorage.playerInfo (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#73-83) should be declared external
PlayersStorage.playerInput (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#90-97) should be declared external
PlayersStorage.playerExist (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#105-112) should be declared external
PlayersStorage.playerTimestamp (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#120-126) should be declared external
PlayersStorage.playerSetInput (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#134-150) should be declared external
PlayersStorage.kill (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#150-152) should be declared external
TheGame.tokenFallback (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#576-590) should be declared external
ERC677Recipient.tokenFallback (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#189-190) should be declared external
PonziTokenMinInterface.balanceOf (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#191-196) should be declared external
PonziTokenMinInterface.transfer (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#196-197) should be declared external
PonziTokenMinInterface.transferFrom (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#197-199) should be declared external
TheGame.fallback (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#298-300) should be declared external
TheGame.playerInfo (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#369-378) should be declared external
TheGame.playerOutputAtNow (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#383-400) should be declared external
TheGame.playerDelayOnExit (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#406-423) should be declared external
TheGame.setPonziPriceinWei (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#593-598) should be declared external
TheGame.disown (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#600-604) should be declared external
TheGame.setState (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#609-626) should be declared external
TheGame.setPriceSetter (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#632-635) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol:
	- pragma solidity^0.4.18 (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'PlayersStorage.PlayersStorage' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#24-28) is not in mixedCase
Variable 'PlayersStorage.m_players' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#16-17) is not in mixedCase
Variable 'PlayersStorage.m_owner' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#17-19) is not in mixedCase
Function 'TheGame.TheGame' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#283-294) is not in mixedCase
Variable 'TheGame.m_state' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#214-215) is not in mixedCase
Variable 'TheGame.m_owner' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#215) is not in mixedCase
Variable 'TheGame.m_level' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#215-216) is not in mixedCase
Variable 'TheGame.m_playersStorage' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#216-217) is not in mixedCase
Variable 'TheGame.m_ponziToken' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#217) is not in mixedCase
Variable 'TheGame.m_interestRateNumerator' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#218) is not in mixedCase
Variable 'TheGame.m_creationTimestamp' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#220) is not in mixedCase
Variable 'TheGame.m_levelStartupTimestamp' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#233) is not in mixedCase
Variable 'TheGame.m_ponziPriceInWei' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#233-234) is not in mixedCase
Variable 'TheGame.m_priceSetter' (/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol#234-235) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/5/0xb3836d31d43d315ba74c21aad3818f9378256152.sol analyzed (5 contracts), 45 result(s) found