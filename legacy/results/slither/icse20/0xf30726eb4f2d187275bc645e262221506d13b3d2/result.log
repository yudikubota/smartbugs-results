INFO:Slither:Compilation warnings/errors on /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:59:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:68:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (crowdsaleClosed > 0) throw;		
                                 ^---^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:70:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:76:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:29:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:39:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:50:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:72:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, daoMultisig, msg.value);		
        ^------------------------------------------^
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:25:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:34:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:54:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrice(uint256 newSellPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function stoppCrowdsale(uint256 newStoppSign) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:90:5: Warning: No visibility specified. Defaulting to "public". 
    function setMultisigAddress(address newMultisig) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Contract locking ether found in /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:
	Contract testeot has payable functions:
	 - fallback (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#69-83)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
testeot.decimals should be constant (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#9-10)
testeot.name should be constant (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#12-13)
testeot.standard should be constant (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#11-12)
testeot.symbol should be constant (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#13)
testeot.totalSupply should be constant (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#6-7)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#71-72:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#72:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#79:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#63:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
testeot.transfer (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#25-34) should be declared external
testeot.transferFrom (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#34-44) should be declared external
testeot.balanceOf (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#44-48) should be declared external
testeot.approve (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#48-54) should be declared external
testeot.allowance (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#54-59) should be declared external
testeot.transferOwnership (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#64-68) should be declared external
testeot.fallback (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#69-83) should be declared external
testeot.setPrice (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#83-87) should be declared external
testeot.stoppCrowdsale (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#87-91) should be declared external
testeot.setMultisigAddress (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#91-94) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol:
	- pragma solidity^0.4.12 (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'testeot' (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#3-94) is not in CapWords
Parameter '_to' of testeot.transfer (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#25) is not in mixedCase
Parameter '_value' of testeot.transfer (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#25) is not in mixedCase
Parameter '_from' of testeot.transferFrom (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#34) is not in mixedCase
Parameter '_to' of testeot.transferFrom (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#34) is not in mixedCase
Parameter '_value' of testeot.transferFrom (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#34-35) is not in mixedCase
Parameter '_owner' of testeot.balanceOf (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#44-45) is not in mixedCase
Parameter '_spender' of testeot.approve (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#48-49) is not in mixedCase
Parameter '_value' of testeot.approve (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#49) is not in mixedCase
Parameter '_owner' of testeot.allowance (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#54) is not in mixedCase
Parameter '_spender' of testeot.allowance (/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol#54-55) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/31/0xf30726eb4f2d187275bc645e262221506d13b3d2.sol analyzed (1 contracts), 28 result(s) found