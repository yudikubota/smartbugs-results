INFO:Slither:Compilation warnings/errors on /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:765:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MyWill (address _owner, string _listHeirs, string _listHeirsPercentages, string _listWitnesses, address _club, uint256 _gasPrice, uint256 _gasCost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:776:9: Warning: Use of the "var" keyword is deprecated.
        var s = _listHeirsPercentages.toSlice().copy();
        ^---^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:777:9: Warning: Use of the "var" keyword is deprecated.
        var delim = ";".toSlice();
        ^-------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:778:9: Warning: Use of the "var" keyword is deprecated.
        var parts = new uint256[](s.count(delim) + 1);
        ^-------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:809:9: Warning: Use of the "var" keyword is deprecated.
        var s = listHeirs.toSlice().copy();
        ^---^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:810:9: Warning: Use of the "var" keyword is deprecated.
        var delim = ";".toSlice();
        ^-------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:831:9: Warning: Use of the "var" keyword is deprecated.
        var s = listWitnesses.toSlice().copy();
        ^---^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:832:9: Warning: Use of the "var" keyword is deprecated.
        var delim = ";".toSlice();
        ^-------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:861:13: Warning: Use of the "var" keyword is deprecated.
            var witnessesList = listWitnesses.toSlice().copy();
            ^---------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:862:13: Warning: Use of the "var" keyword is deprecated.
            var witnessesLength = witnessesList.count(";".toSlice()) + 1;
            ^-----------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:863:13: Warning: Use of the "var" keyword is deprecated.
            var needed = getWitnessWeiCost() * witnessesLength + getCreationWeiCost();
            ^--------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:871:17: Warning: Use of the "var" keyword is deprecated.
                var witnessAddress = parseAddr(witnessesList.split(";".toSlice()).toString());
                ^----------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:893:9: Warning: Use of the "var" keyword is deprecated.
        var users = listWitnesses.toSlice().copy();
        ^-------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:909:13: Warning: Use of the "var" keyword is deprecated.
            var  percentages = listHeirsPercentages.toSlice().copy();
            ^--------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1044:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BackToLife () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1053:9: Warning: Use of the "var" keyword is deprecated.
        var s = _listHeirs.toSlice().copy();
        ^---^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1082:9: Warning: Use of the "var" keyword is deprecated.
        var delim = ";".toSlice();
        ^-------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1087:9: Warning: Use of the "var" keyword is deprecated.
        var myWillAddressString = addressToString(myWillAddress);
        ^---------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:818:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
               ^----------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:818:16: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
               ^----------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:818:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
                                                 ^----------------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:818:50: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
                                                 ^----------------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:840:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
               ^----------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:840:16: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
               ^----------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:840:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
                                                 ^----------------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:840:50: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if(keccak256(senderStringAddress) == keccak256(s.split(delim).toString())){
                                                 ^----------------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:879:13: Warning: Invoking events without "emit" prefix is deprecated.
            Deposit(msg.sender, msg.value);
            ^----------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:881:13: Warning: Invoking events without "emit" prefix is deprecated.
            Deposit(msg.sender, msg.value);
            ^----------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:888:18: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require (this.balance > 0);
                 ^----------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:913:77: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
 ... this.balance ... 
     ^----------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:917:71: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            parseAddr(users.split(";".toSlice()).toString()).transfer(this.balance);
                                                                      ^----------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:928:9: Warning: Invoking events without "emit" prefix is deprecated.
        SingleTransact(msg.sender, _value, _to, _data);
        ^--------------------------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:929:9: Warning: Return value of low-level calls not used.
        _to.call.value(_value)(_data);
        ^---------------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:765:5: Warning: No visibility specified. Defaulting to "public". 
    function MyWill (address _owner, string _listHeirs, string _listHeirsPercentages, string _listWitnesses, address _club, uint256 _gasPrice, uint256 _gasCost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:856:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable onlyAlive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:886:5: Warning: No visibility specified. Defaulting to "public". 
    function ownerDied() onlyWitness onlyAlive {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:936:5: Warning: No visibility specified. Defaulting to "public". 
    function isOwner() returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:940:5: Warning: No visibility specified. Defaulting to "public". 
    function getStatus() returns (Status){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:944:5: Warning: No visibility specified. Defaulting to "public". 
    function getCreationWeiCost() returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:948:5: Warning: No visibility specified. Defaulting to "public". 
    function getWitnessWeiCost() returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:952:5: Warning: No visibility specified. Defaulting to "public". 
    function getHeirs() returns (string, string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:956:5: Warning: No visibility specified. Defaulting to "public". 
    function getWitnesses() returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:960:5: Warning: No visibility specified. Defaulting to "public". 
    function getWitnessesCount() returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:964:5: Warning: No visibility specified. Defaulting to "public". 
    function getBalance() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:968:5: Warning: No visibility specified. Defaulting to "public". 
    function hasVoted() returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1044:5: Warning: No visibility specified. Defaulting to "public". 
    function BackToLife () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1049:5: Warning: No visibility specified. Defaulting to "public". 
    function createLastWill (address _owner, string _listHeirs, string _listHeirsPercentages, string _listWitnesses, uint256 _gasPrice, uint256 _gasCost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1083:9: Warning: Unused local variable.
        uint256 listWitnessLength = s.count(delim) + 1;
        ^-----------------------^
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1092:5: Warning: No visibility specified. Defaulting to "public". 
    function getContracts(address owner) returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1096:5: Warning: No visibility specified. Defaulting to "public". 
    function addressToString(address x) returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1110:5: Warning: No visibility specified. Defaulting to "public". 
    function char(byte b) returns (byte c) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1133:5: Warning: No visibility specified. Defaulting to "public". 
    function getBalance() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:936:5: Warning: Function state mutability can be restricted to view
    function isOwner() returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:940:5: Warning: Function state mutability can be restricted to view
    function getStatus() returns (Status){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:944:5: Warning: Function state mutability can be restricted to view
    function getCreationWeiCost() returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:948:5: Warning: Function state mutability can be restricted to view
    function getWitnessWeiCost() returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:952:5: Warning: Function state mutability can be restricted to view
    function getHeirs() returns (string, string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:956:5: Warning: Function state mutability can be restricted to view
    function getWitnesses() returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:960:5: Warning: Function state mutability can be restricted to view
    function getWitnessesCount() returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:976:5: Warning: Function state mutability can be restricted to pure
    function stringToUint(string s) constant private returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1002:5: Warning: Function state mutability can be restricted to pure
    function char(byte b) private returns (byte c) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1008:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1092:5: Warning: Function state mutability can be restricted to view
    function getContracts(address owner) returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:1110:5: Warning: Function state mutability can be restricted to pure
    function char(byte b) returns (byte c) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
MyWill.fallback (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#875-913) sends eth to arbitrary user
	Dangerous calls:
	- club.transfer(getCreationWeiCost()) (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#894-897)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
strings.memcpy (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#49-69) is declared view but contains assembly code
strings.toSlice (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#74-83) is declared view but contains assembly code
strings.toSliceB32 (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#120-133) is declared view but contains assembly code
strings.toString (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#147-155) is declared view but contains assembly code
strings.len (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#163-188) is declared view but contains assembly code
strings.compare (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#207-236) is declared view but contains assembly code
strings.nextRune (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#259-291) is declared view but contains assembly code
strings.ord (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#311-356) is declared view but contains assembly code
strings.keccak (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#359-362) is declared view but contains assembly code
strings.startsWith (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#374-388) is declared view but contains assembly code
strings.beyond (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#397-421) is declared view but contains assembly code
strings.endsWith (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#430-449) is declared view but contains assembly code
strings.until (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#455-476) is declared view but contains assembly code
strings.findPtr (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#482-519) is declared view but contains assembly code
strings.rfindPtr (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#523-560) is declared view but contains assembly code
strings.concat (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#699-709) is declared view but contains assembly code
strings.join (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#721-758) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
ret in strings.len (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#90) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1076-1124) does not use the value returned by external calls:
	-_listHeirs.toSlice().concat(;.toSlice()) (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1082-1083)
	-_listWitnesses.toSlice().concat(;.toSlice()) (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1086)
	-_listHeirsPercentages.toSlice().concat(;.toSlice()) (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1088)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
strings.memcpy.len (local variable @ /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#50) shadows:
	- strings.len (function @ /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#88-114)
	- strings.len (function @ /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#163-188)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
MyWill.fallback has external calls inside a loop:
	- witnessAddress.transfer(getWitnessWeiCost()) (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#904-906)
MyWill.ownerDied has external calls inside a loop:
	- parseAddr(users.split(;.toSlice()).toString()).transfer(((this.balance * stringToUint(percentages.split(;.toSlice()).toString())) / 100000)) (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#948-953)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
strings.memcpy uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#49-69)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#53-59
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#62-69
strings.toSlice uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#74-83)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#78-82
strings.toSliceB32 uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#120-133)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#125-132
strings.toString uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#147-155)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#154-155
strings.len uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#163-188)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#172-174
strings.compare uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#207-236)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#218-220
strings.nextRune uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#259-291)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#271-273
strings.ord uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#311-356)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#320-323
strings.keccak uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#359-362)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#361-362
strings.startsWith uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#374-388)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#382-388
strings.beyond uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#397-421)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#407-416
strings.endsWith uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#430-449)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#441-449
strings.until uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#455-476)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#469-474
strings.findPtr uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#482-519)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#491-494
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#495-498
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#501-503
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#510-511
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#512-515
strings.rfindPtr uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#523-560)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#533-535
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#536-538
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#541-543
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#551
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#555-557
strings.concat uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#699-709)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#703-705
strings.join uses assembly (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#721-758)
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#743-746
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:
	- Version used: ['^0.4.14', '^0.4.15']
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1 declares pragma solidity^0.4.15
	- /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#43-45 declares pragma solidity^0.4.14
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
MyWill.fallback (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#875-913) should be declared external
MyWill.ownerDied (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#913-961) should be declared external
MyWill.isOwner (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#973-976) should be declared external
MyWill.getStatus (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#976-978) should be declared external
MyWill.getHeirs (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#986-989) should be declared external
MyWill.getWitnesses (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#989-992) should be declared external
MyWill.getWitnessesCount (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#993-995) should be declared external
MyWill.getBalance (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#995-998) should be declared external
MyWill.hasVoted (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#999-1003) should be declared external
BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1076-1124) should be declared external
BackToLife.getContracts (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1125-1127) should be declared external
BackToLife.getBalance (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol:
	- pragma solidity^0.4.15 (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1): it allows old versions
	- pragma solidity^0.4.14 (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#43-45): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in MyWill.execute (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#964-969):
	-_to.call.value(_value)(_data) /unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#969
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Contract 'strings' (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#45-758) is not in CapWords
Struct 'strings.slice' (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#46-49) is not in CapWords
Event 'strings.log_bytemask' (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#476-478) is not in CapWords
Function 'MyWill.MyWill' (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#782-819) is not in mixedCase
Parameter '_owner' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#783-785) is not in mixedCase
Parameter '_listHeirs' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#785) is not in mixedCase
Parameter '_listHeirsPercentages' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#785-788) is not in mixedCase
Parameter '_listWitnesses' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#788-789) is not in mixedCase
Parameter '_club' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#789-790) is not in mixedCase
Parameter '_gasPrice' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#790-792) is not in mixedCase
Parameter '_gasCost' of MyWill.MyWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#792) is not in mixedCase
Parameter '_to' of MyWill.execute (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#964) is not in mixedCase
Parameter '_value' of MyWill.execute (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#965) is not in mixedCase
Parameter '_data' of MyWill.execute (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#965) is not in mixedCase
Parameter '_a' of MyWill.parseAddr (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1049) is not in mixedCase
Function 'BackToLife.BackToLife' (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1075-1076) is not in mixedCase
Parameter '_owner' of BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1077) is not in mixedCase
Parameter '_listHeirs' of BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1077) is not in mixedCase
Parameter '_listHeirsPercentages' of BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1077) is not in mixedCase
Parameter '_listWitnesses' of BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1077) is not in mixedCase
Parameter '_gasPrice' of BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1077) is not in mixedCase
Parameter '_gasCost' of BackToLife.createLastWill (/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol#1077) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/44/0x88e2f006f55009cdcdb1985bafecf616c51c3688.sol analyzed (3 contracts), 77 result(s) found