INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:36:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSAuth() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:332:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSTokenBase(uint supply) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:405:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DSToken(bytes32 symbol_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:505:14: Warning: Use of the "var" keyword is deprecated.
        var (wut, haz) = peek();
             ^-^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:505:19: Warning: Use of the "var" keyword is deprecated.
        var (wut, haz) = peek();
                  ^-^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:550:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiVox(uint par_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:582:9: Warning: Use of the "var" keyword is deprecated.
        var age = era() - tau;
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:589:9: Warning: Use of the "var" keyword is deprecated.
        var wag = int128(how * age);
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:706:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SaiTub(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:817:9: Warning: Use of the "var" keyword is deprecated.
        var rho_ = era();
        ^------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:818:9: Warning: Use of the "var" keyword is deprecated.
        var age = rho_ - rho;
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:822:9: Warning: Use of the "var" keyword is deprecated.
        var inc = RAY;
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:825:13: Warning: Use of the "var" keyword is deprecated.
            var _chi_ = _chi;
            ^-------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:845:9: Warning: Use of the "var" keyword is deprecated.
        var pro = rmul(tag(), ink(cup));
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:846:9: Warning: Use of the "var" keyword is deprecated.
        var con = rmul(vox.par(), tab(cup));
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:847:9: Warning: Use of the "var" keyword is deprecated.
        var min = rmul(con, mat);
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:898:9: Warning: Use of the "var" keyword is deprecated.
        var owe = rmul(wad, rdiv(rap(cup), tab(cup)));
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:906:14: Warning: Use of the "var" keyword is deprecated.
        var (val, ok) = pep.peek();
             ^-^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:906:19: Warning: Use of the "var" keyword is deprecated.
        var (val, ok) = pep.peek();
                  ^^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:922:9: Warning: Use of the "var" keyword is deprecated.
        var rue = tab(cup);
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:929:9: Warning: Use of the "var" keyword is deprecated.
        var owe = rdiv(rmul(rmul(rue, axe), vox.par()), tag());
        ^-----^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:38:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(msg.sender);
        ^---------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:46:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetOwner(owner);
        ^----------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:54:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogSetAuthority(authority);
        ^------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:112:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);
        ^---------------------------------------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:231:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:231:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return bytes4(keccak256(s));
                      ^----------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:362:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:370:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, guy, wad);
        ^----------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:432:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:456:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(guy, wad);
        ^------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:465:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(guy, wad);
        ^------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:859:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogNewCup(msg.sender, cup);
        ^------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:989:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(msg.sender, msg.value);
        ^----------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:995:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdrawal(msg.sender, wad);
        ^-------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:999:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:1004:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, guy, wad);
        ^----------------------------^
/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol:1026:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(src, dst, wad);
        ^---------------------^

INFO:Detectors:[93m
Reentrancy in SaiTub.bite (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#949-964):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#951-954)
	- rue = tab(cup) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956)
Reentrancy in SaiTub.bite (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#949-964):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#951-954)
	- rue = tab(cup) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956)
	- sin.mint(tap,rue) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956-957)
	State variables written after the call(s):
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#957-958)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#958)
	- rum (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#957)
Reentrancy in SaiTub.bite (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#949-964):
	External calls:
	- require(bool)(! safe(cup) || off) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#951-954)
	- rue = tab(cup) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956)
	- sin.mint(tap,rue) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#956-957)
	- owe = rdiv(rmul(rmul(rue,axe),vox.par()),tag()) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#961)
	- skr.push(tap,owe) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#963)
	State variables written after the call(s):
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#963-964)
Reentrancy in SaiTub.draw (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#907-923):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#912-913)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
Reentrancy in SaiTub.draw (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#907-923):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#912-913)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
	- rum (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
Reentrancy in SaiTub.draw (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#907-923):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#912-913)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
	- cups[cup].ire = add(cups[cup].ire,rdiv(wad,rhi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#918-919)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#918-919)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#918-919)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#918-919)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#918-919)
Reentrancy in SaiTub.draw (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#907-923):
	External calls:
	- require(bool)(rdiv(wad,chi()) > 0) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#912-913)
	- cups[cup].art = add(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#913-914)
	- rum = add(rum,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#914-916)
	- cups[cup].ire = add(cups[cup].ire,rdiv(wad,rhi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#918-919)
	- sai.mint(cups[cup].lad,wad) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#919-921)
	- require(bool)(safe(cup)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#921)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#921)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#921)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#921)
Reentrancy in SaiTub.mold (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#766-782):
	External calls:
	- drip() (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#774)
	State variables written after the call(s):
	- tax (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#774)
Reentrancy in SaiTub.mold (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#766-782):
	External calls:
	- drip() (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#777)
	State variables written after the call(s):
	- fee (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#777)
Reentrancy in SaiTub.shut (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#941-949):
	External calls:
	- tab(cup) != 0 (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#945-946)
	- wipe(cup,tab(cup)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
	- rum (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
Reentrancy in SaiTub.shut (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#941-949):
	External calls:
	- tab(cup) != 0 (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#945-946)
	- wipe(cup,tab(cup)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#946)
	- free(cup,ink(cup)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#947)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#947)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#947)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#947)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#948-949)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#947)
Reentrancy in SaiTub.wipe (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#923-941):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#926-928)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
Reentrancy in SaiTub.wipe (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#923-941):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#926-928)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
	- rum = sub(rum,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#929-931)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#929-931)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#929-931)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#929-931)
	- rum (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#929-931)
Reentrancy in SaiTub.wipe (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#923-941):
	External calls:
	- owe = rmul(wad,rdiv(rap(cup),tab(cup))) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#926-928)
	- cups[cup].art = sub(cups[cup].art,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#928-929)
	- rum = sub(rum,rdiv(wad,chi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#929-931)
	- cups[cup].ire = sub(cups[cup].ire,rdiv(add(wad,owe),rhi())) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#931-935)
	State variables written after the call(s):
	- _chi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#931-935)
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#931-935)
	- cups (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#931-935)
	- rho (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#931-935)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
CDPCreator.constructor (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1773-1777) does not use the value returned by external calls:
	-weth.approve(address(tub),uint256(- 1)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol)
	-peth.approve(address(tub),uint256(- 1)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol)
CDPCreator.createCDP (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol) does not use the value returned by external calls:
	-dai.transfer(msg.sender,amountDAI) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol)
CDPCreator.convertETHToPETH (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol) does not use the value returned by external calls:
	-peth.transfer(msg.sender,amountPETH) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SaiTub.safe.min (local variable @ /unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#874-875) shadows:
	- DSMath.min (function @ /unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#150-153)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in SaiTub.drip (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#843-861):
	External calls:
	- sai.mint(tap,rmul(sub(_chi,_chi_),rum)) (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#855-856)
	State variables written after the call(s):
	- _rhi (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#861)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DSToken.decimals should be constant (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#416)
WETH9.decimals should be constant (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1002-1003)
WETH9.name should be constant (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#999-1002)
WETH9.symbol should be constant (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1002)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DSAuthority.canCall (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#23-27) should be declared external
DSAuth.setOwner (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#42-49) should be declared external
DSAuth.setAuthority (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#50-58) should be declared external
DSStop.stop (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#279-281) should be declared external
DSStop.start (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#281-282) should be declared external
DSTokenBase.totalSupply (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#347-348) should be declared external
ERC20.totalSupply (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#298-299) should be declared external
DSTokenBase.balanceOf (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#348-353) should be declared external
ERC20.balanceOf (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#299-301) should be declared external
DSTokenBase.allowance (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#353-356) should be declared external
ERC20.allowance (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#301-305) should be declared external
ERC20.transfer (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#309) should be declared external
DSTokenBase.transfer (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#357-362) should be declared external
DSToken.approve (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#425-427) should be declared external
DSToken.push (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#451-454) should be declared external
DSToken.pull (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#454-458) should be declared external
DSToken.move (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#458-459) should be declared external
DSToken.mint (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#459-460) should be declared external
DSToken.burn (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#460-463) should be declared external
DSToken.setName (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#486-487) should be declared external
DSValue.read (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#523-525) should be declared external
DSValue.poke (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#526-527) should be declared external
DSValue.void (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#527-530) should be declared external
SaiVox.mold (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#583-586) should be declared external
SaiVox.par (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#588-590) should be declared external
SaiVox.way (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#590-594) should be declared external
SaiVox.tell (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#594-595) should be declared external
SaiVox.tune (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#596-598) should be declared external
SaiTub.lad (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#700-704) should be declared external
SaiTub.din (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#721-727) should be declared external
SaiTub.air (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#728-734) should be declared external
SaiTub.mold (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#766-782) should be declared external
SaiTub.setPip (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#784-787) should be declared external
SaiTub.setPep (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#787-789) should be declared external
SaiTub.setVox (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#789-791) should be declared external
SaiTub.turn (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#794-797) should be declared external
SaiTub.join (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#819-828) should be declared external
SaiTub.exit (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#828-833) should be declared external
SaiTub.open (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#878-886) should be declared external
SaiTub.give (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#886-890) should be declared external
SaiTub.lock (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#890-900) should be declared external
SaiTub.draw (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#907-923) should be declared external
SaiTub.shut (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#941-949) should be declared external
SaiTub.bite (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#949-964) should be declared external
SaiTub.cage (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#967-976) should be declared external
SaiTub.flow (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#976-977) should be declared external
WETH9.fallback (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1018-1019) should be declared external
WETH9.withdraw (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1024-1037) should be declared external
WETH9.totalSupply (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1037-1038) should be declared external
WETH9.approve (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1039-1044) should be declared external
WETH9.transfer (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1044-1047) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in CDPCreator.createCDP (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol):
	-require(bool)(address(weth).call.value(msg.value)()) /unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol
Low level call in CDPCreator.lockETH (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol):
	-require(bool)(address(weth).call.value(msg.value)()) /unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol
Low level call in CDPCreator.convertETHToPETH (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol):
	-require(bool)(address(weth).call.value(msg.value)()) /unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'DSAuth.DSAuth' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#37-41) is not in mixedCase
Function 'DSThing.S' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#239-242) is not in mixedCase
Function 'DSTokenBase.DSTokenBase' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#343-347) is not in mixedCase
Variable 'DSTokenBase._supply' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#337-338) is not in mixedCase
Variable 'DSTokenBase._balances' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#338-340) is not in mixedCase
Variable 'DSTokenBase._approvals' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#340-343) is not in mixedCase
Function 'DSToken.DSToken' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#417-421) is not in mixedCase
Function 'SaiVox.SaiVox' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#574-579) is not in mixedCase
Variable 'SaiVox._par' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#567-569) is not in mixedCase
Variable 'SaiVox._way' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#569) is not in mixedCase
Function 'SaiTub.SaiTub' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#746-760) is not in mixedCase
Variable 'SaiTub._chi' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#682-683) is not in mixedCase
Variable 'SaiTub._rhi' (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#684) is not in mixedCase
Parameter '_weth' of CDPCreator. (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1774) is not in mixedCase
Parameter '_peth' of CDPCreator. (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1774) is not in mixedCase
Parameter '_dai' of CDPCreator. (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1774) is not in mixedCase
Parameter '_tub' of CDPCreator. (/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol#1774-1775) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0xdc919494349e803fbd2d4064106944418381edb3.sol analyzed (17 contracts), 91 result(s) found