INFO:Detectors:[91m
Revolution.sendDividends (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#591-595) sends eth to arbitrary user
	Dangerous calls:
	- addr.send(value) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol)
Revolution.sendDividendsWithRefBonus (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol) sends eth to arbitrary user
	Dangerous calls:
	- addr.send(value + refBonus) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Revolution.payout (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#514-563):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#523-528)
	- size = m_investors.size() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#532)
	- investorAddr = m_investors.keyFromIndex(i) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#540-541)
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#541-544)
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#550-554)
	External calls sending eth:
	- sendDividendsWithRefBonus(investorAddr,value,refBonus) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#554-556)
	- sendDividends(investorAddr,value) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#558)
	State variables written after the call(s):
	- m_nextWave (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#548)
	- m_paysys (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#562-563)
Reentrancy in Revolution.payout (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#514-563):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#523-528)
	- size = m_investors.size() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#532)
	- investorAddr = m_investors.keyFromIndex(i) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#540-541)
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#541-544)
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#550-554)
	- m_paysys.latestKeyIndex = m_investors.iterStart() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#562)
	External calls sending eth:
	- sendDividendsWithRefBonus(investorAddr,value,refBonus) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#554-556)
	- sendDividends(investorAddr,value) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#558)
	State variables written after the call(s):
	- m_paysys (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#562)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
ToAddress.toAddr (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#324-327) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Revolution.doInvest (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#467-512) uses a dangerous strict equality:
	- m_paysys.mode == Paymode.Pull
Revolution.doInvest (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#467-512) uses a dangerous strict equality:
	- m_paysys.mode == Paymode.Pull
Revolution.payout (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#514-563) uses a dangerous strict equality:
	- m_paysys.latestKeyIndex == m_investors.iterStart()
	- i == size
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Revolution.doInvest (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#467-512):
	External calls:
	- notZeroNotSender(refs[0]) && m_investors.contains(refs[0]) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#474-496)
	- assert(bool)(m_investors.addRefBonus(refs[0],reward)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#476)
	State variables written after the call(s):
	- m_referrals (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#476-477)
Reentrancy in Revolution.getMyDividends (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#434-467):
	External calls:
	- investor = getMemInvestor(msg.sender) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#438-439)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,m_paysys.latestTime)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#443-444)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#452-454)
	- nextWave() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
	State variables written after the call(s):
	- m_investors (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
	- m_paysys (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
Reentrancy in Revolution.payout (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#514-563):
	External calls:
	- m_paysys.latestKeyIndex == m_investors.iterStart() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#523-528)
	State variables written after the call(s):
	- m_paysys (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#527)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
refs in Revolution.fallback (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#400-403) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Revolution.payout has external calls inside a loop:
	- investorAddr = m_investors.keyFromIndex(i) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#540-541)
Revolution.payout has external calls inside a loop:
	- (value,refBonus) = m_investors.investorShortInfo(investorAddr) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#541-544)
Revolution.payout has external calls inside a loop:
	- require(bool,string)(m_investors.setRefBonus(investorAddr,0),internal error) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#550-554)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Revolution.constructor (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#379-394):
	External calls:
	- nextWave() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#390)
	State variables written after the call(s):
	- waveStartup (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#390-394)
Reentrancy in Revolution.doInvest (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#467-512):
	External calls:
	- notZeroNotSender(refs[0]) && m_investors.contains(refs[0]) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#474-496)
	- assert(bool)(m_investors.addRefBonus(refs[0],reward)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#476)
	- notZeroNotSender(refs[1]) && m_investors.contains(refs[1]) && refs[0] != refs[1] (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#484-496)
	- assert(bool)(m_investors.addRefBonus(refs[1],reward)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#487-488)
	- notZeroNotSender(refs[2]) && m_investors.contains(refs[2]) && refs[0] != refs[2] && refs[1] != refs[2] (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#489-496)
	- assert(bool)(m_investors.addRefBonus(refs[2],reward)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#492-495)
	- m_investors.contains(msg.sender) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#502-509)
	- assert(bool)(m_investors.addValue(msg.sender,value)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#504-508)
	- assert(bool)(m_investors.insert(msg.sender,value)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#508)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#509-510)
	External calls sending eth:
	- adminAddr.transfer(m_adminPercent.mul(msg.value)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#498-499)
	- payerAddr.transfer(m_payerPercent.mul(msg.value)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#499-502)
	State variables written after the call(s):
	- investmentsNum (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#511)
Reentrancy in Revolution.getMyDividends (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#434-467):
	External calls:
	- investor = getMemInvestor(msg.sender) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#438-439)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,m_paysys.latestTime)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#443-444)
	- assert(bool)(m_investors.setPaymentTime(msg.sender,now)) (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#452-454)
	- nextWave() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
	State variables written after the call(s):
	- investmentsNum (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
	- m_nextWave (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
	- waveStartup (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#459-460)
Reentrancy in Revolution.nextWave (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol):
	External calls:
	- m_paysys.latestKeyIndex = m_investors.iterStart() (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol)
	State variables written after the call(s):
	- investmentsNum (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol)
	- m_nextWave (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol)
	- waveStartup (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ToAddress.toAddr uses assembly (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#324-327)
	- /unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#325-327
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
InvestorsStorage.insert (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#74-84) should be declared external
InvestorsStorage.investorFullInfo (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#84-94) should be declared external
InvestorsStorage.investorBaseInfo (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#94-103) should be declared external
InvestorsStorage.investorShortInfo (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#103-109) should be declared external
InvestorsStorage.addRefBonus (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#109-115) should be declared external
InvestorsStorage.addValue (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#115-121) should be declared external
InvestorsStorage.setPaymentTime (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#121-127) should be declared external
InvestorsStorage.setRefBonus (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#127-136) should be declared external
InvestorsStorage.keyFromIndex (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#136-140) should be declared external
InvestorsStorage.contains (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#140-145) should be declared external
InvestorsStorage.size (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#145-151) should be declared external
InvestorsStorage.iterStart (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#151-152) should be declared external
Accessibility.provideAccess (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#244-257) should be declared external
Accessibility.access (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#258-262) should be declared external
PaymentSystem.paymode (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#279-280) should be declared external
Revolution.fallback (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#394-404) should be declared external
Revolution.investorsNumber (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#404-408) should be declared external
Revolution.balanceETH (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#408-411) should be declared external
Revolution.payerPercent (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#411-415) should be declared external
Revolution.dividendsPercent (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#415-419) should be declared external
Revolution.adminPercent (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#419-424) should be declared external
Revolution.referrerPercent (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#424-428) should be declared external
Revolution.investorInfo (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#428-433) should be declared external
Revolution.latestPayout (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#433-434) should be declared external
Revolution.payout (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#514-563) should be declared external
Revolution.setAdminAddr (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#564-568) should be declared external
Revolution.setPayerAddr (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#569-576) should be declared external
Revolution.setPullPaymode (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#576-579) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol:
	- pragma solidity^0.4.23 (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Struct 'InvestorsStorage.investor' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#53-58) is not in CapWords
Struct 'InvestorsStorage.itmap' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#59-64) is not in CapWords
Parameter '_a' of SafeMath.mul (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#153) is not in mixedCase
Parameter '_b' of SafeMath.mul (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#153) is not in mixedCase
Parameter '_a' of SafeMath.div (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#168) is not in mixedCase
Parameter '_b' of SafeMath.div (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#168) is not in mixedCase
Parameter '_a' of SafeMath.sub (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#180) is not in mixedCase
Parameter '_b' of SafeMath.sub (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#180) is not in mixedCase
Parameter '_a' of SafeMath.add (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#187) is not in mixedCase
Parameter '_b' of SafeMath.add (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#187-188) is not in mixedCase
Struct 'Percent.percent' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#208) is not in CapWords
Variable 'Accessibility.m_admins' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#234) is not in mixedCase
Variable 'PaymentSystem.m_paysys' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#273-274) is not in mixedCase
Variable 'Revolution.m_investors' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#334-335) is not in mixedCase
Variable 'Revolution.m_referrals' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#335-336) is not in mixedCase
Variable 'Revolution.m_nextWave' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#336) is not in mixedCase
Constant 'Revolution.minInvesment' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#340) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution.maxBalance' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#341) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'Revolution.pauseOnNextWave' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#341-342) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Revolution.m_dividendsPercent' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#342-345) is not in mixedCase
Variable 'Revolution.m_adminPercent' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#345-346) is not in mixedCase
Variable 'Revolution.m_payerPercent' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#346-347) is not in mixedCase
Variable 'Revolution.m_refPercent' (/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol#348) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x59be7a1937c3b7bc5e9103aefd4ab5c97af6d179.sol analyzed (8 contracts), 71 result(s) found