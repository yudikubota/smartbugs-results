INFO:Slither:Compilation warnings/errors on /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:33:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:71:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:76:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:81:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:359:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:368:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:372:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:378:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:385:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:396:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:416:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:423:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:457:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:474:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:495:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:512:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:516:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:533:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:548:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:560:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:572:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:576:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:644:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:709:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function AllocatedCrowdsaleMixin(address _beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:744:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!token.transferFrom(beneficiary, receiver, tokenAmount)) throw;
                                                                ^---^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:916:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function KYCCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) AllocatedCrowdsaleMixin(_beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:940:12: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
           ^----------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:940:32: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
                               ^--------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:940:44: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
                                           ^----^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:940:52: Warning: Use of the "var" keyword is deprecated.
      var (whitelistedAddress, customerId, minETH, maxETH) = getKYCPayload(dataframe);
                                                   ^----^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:22:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Ownable {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:51:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:460:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:520:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:575:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:629:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:968:5: Warning: Invoking events without "emit" prefix is deprecated.
    SignerChanged(signerAddress);
    ^--------------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:116:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:122:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:127:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:201:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:210:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:256:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:359:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:395:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:490:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:509:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:528:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:618:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:627:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:668:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:709:3: Warning: No visibility specified. Defaulting to "public". 
  function AllocatedCrowdsaleMixin(address _beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:716:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:716:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:716:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:716:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:772:3: Warning: No visibility specified. Defaulting to "public". 
  function slice32(bytes b, uint offset) constant returns (bytes32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:784:3: Warning: No visibility specified. Defaulting to "public". 
  function sliceAddress(bytes b, uint offset) constant returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:796:3: Warning: No visibility specified. Defaulting to "public". 
  function slice16(bytes b, uint offset) constant returns (bytes16) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:808:3: Warning: No visibility specified. Defaulting to "public". 
  function slice4(bytes b, uint offset) constant returns (bytes4) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:820:3: Warning: No visibility specified. Defaulting to "public". 
  function slice2(bytes b, uint offset) constant returns (bytes2) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:916:3: Warning: No visibility specified. Defaulting to "public". 
  function KYCCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) AllocatedCrowdsaleMixin(_beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:966:3: Warning: No visibility specified. Defaulting to "public". 
  function setSignerAddress(address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:116:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:122:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:127:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:193:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:201:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:210:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:244:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:634:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:772:3: Warning: Function state mutability can be restricted to pure
  function slice32(bytes b, uint offset) constant returns (bytes32) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:784:3: Warning: Function state mutability can be restricted to pure
  function sliceAddress(bytes b, uint offset) constant returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:796:3: Warning: Function state mutability can be restricted to pure
  function slice16(bytes b, uint offset) constant returns (bytes16) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:808:3: Warning: Function state mutability can be restricted to pure
  function slice4(bytes b, uint offset) constant returns (bytes4) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol:820:3: Warning: Function state mutability can be restricted to pure
  function slice2(bytes b, uint offset) constant returns (bytes2) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#488-502):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#500-502)
	State variables written after the call(s):
	- finalized (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#502)
Reentrancy in CrowdsaleBase.investInternal (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#419-479):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#428-439)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#441-445)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#457-459)
	- weiRaised (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#456-457)
Reentrancy in CrowdsaleBase.investInternal (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#419-479):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#428-439)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#441-445)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#459-466)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#460-463)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
minETH in KYCCrowdsale.buyWithKYCData (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#965) is a local variable never initialiazed
maxETH in KYCCrowdsale.buyWithKYCData (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#965) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#371-406):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#388-389)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#403)
	- minimumFundingGoal (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#406)
	- multisigWallet (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#389-393)
	- startsAt (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#400-401)
Reentrancy in CrowdsaleBase.investInternal (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#419-479):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#428-439)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#441-445)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#452-454)
	- investorCount (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#451)
	- tokenAmountOf (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#454-456)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#613-642) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#627-642)
	- block.timestamp < startsAt (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#627-642)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#284-287)
FractionalERC20.decimals should be constant (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#183)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#76:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#82-83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#85-86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#393:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#396-398:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#402:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#405:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#410:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#429:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#436-437:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#477:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#493:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#533:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#538:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#552-554:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#570:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#580:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#594:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#597-598:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#664:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#773:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#49-61) should be declared external
SafeMathLib.times (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#119-127) should be declared external
SafeMathLib.minus (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#127-136) should be declared external
SafeMathLib.plus (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#136-138) should be declared external
ERC20Basic.totalSupply (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#153-154) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#154-159) should be declared external
ERC20Basic.transfer (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#160-161) should be declared external
ERC20.allowance (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#165-167) should be declared external
ERC20.transferFrom (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#167-172) should be declared external
ERC20.approve (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#172-174) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#199-201) should be declared external
PricingStrategy.isSane (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#207-210) should be declared external
PricingStrategy.isPresalePurchase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#218-219) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#229-231) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#251-253) should be declared external
FinalizeAgent.isSane (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#265-266) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#269) should be declared external
CrowdsaleBase.fallback (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#408-410) should be declared external
CrowdsaleBase.finalize (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#488-502) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#506-517) should be declared external
CrowdsaleBase.setEndsAt (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#531-540) should be declared external
CrowdsaleBase.setMultisig (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#565-570) should be declared external
CrowdsaleBase.loadRefund (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#575-582) should be declared external
CrowdsaleBase.refund (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#587-600) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#607-608) should be declared external
CrowdsaleBase.isPricingSane (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#609-611) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#644-654) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#657-661) should be declared external
CrowdsaleBase.isCrowdsale (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#661-662) should be declared external
BytesDeserializer.slice32 (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#802-812) should be declared external
BytesDeserializer.sliceAddress (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#818-824) should be declared external
BytesDeserializer.slice16 (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#835-838) should be declared external
BytesDeserializer.slice4 (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#843-848) should be declared external
BytesDeserializer.slice2 (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#849-855) should be declared external
KYCPayloadDeserializer.getKYCPresalePayload (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#907-923) should be declared external
KYCCrowdsale.buyWithKYCData (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#953-971) should be declared external
KYCCrowdsale.setSignerAddress (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#34-38) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#371-406) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#372-375) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#375-377) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#377-379) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#381) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#381-383) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#383-384) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#544) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#284-287) is not in mixedCase
Function 'AllocatedCrowdsaleMixin.AllocatedCrowdsaleMixin' (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#734-739) is not in mixedCase
Parameter '_beneficiary' of AllocatedCrowdsaleMixin.AllocatedCrowdsaleMixin (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#734-735) is not in mixedCase
Function 'KYCCrowdsale.KYCCrowdsale' (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol#940-946) is not in mixedCase
Parameter '_signerAddress' of KYCCrowdsale.setSignerAddress (/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xd1876a2432f7b93e62e774bdc213c3fad12448b3.sol analyzed (13 contracts), 82 result(s) found