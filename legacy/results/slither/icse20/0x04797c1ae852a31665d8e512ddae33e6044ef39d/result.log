INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:
/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:471:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes4 _sig = bytes4(keccak256(_callbackFn));
                             ^--------------------^
/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:471:30: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes4 _sig = bytes4(keccak256(_callbackFn));
                             ^--------------------^
/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:628:1: Warning: Base constructor arguments given twice.
contract InstaDice is
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:340:9: First constructor call is here: 
        UsingRegistry(_registry)
        ^----------------------^
/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:580:9: Second constructor call is here: 
        UsingRegistry(_registry)
        ^----------------------^

/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:942:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return uint8(uint(keccak256(_blockHash, _id)) % 100 + 1);
                          ^------------------------^

INFO:Detectors:[91m
Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#465-493) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(_bankroller.call.value(_amount)(_sig)) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#488-489)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in InstaDice.payoutPreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#818-845):
	External calls:
	- _finalizePreviousRoll(_prevUser,_stats) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#843-844)
	State variables written after the call(s):
	- stats (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#844)
Reentrancy in InstaDice.roll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#763-806):
	External calls:
	- ! _validateBetOrRefund(_number) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#769)
	- _finalizePreviousRoll(_prevUser,_stats) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#793-795)
	State variables written after the call(s):
	- stats (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#801)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
InstaDice.computeResult (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#964-973) uses a dangerous strict equality:
	- _blockHash == 0
InstaDice.computeResult (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#964-973) uses a dangerous strict equality:
	- _blockHash == 0
InstaDice.payoutPreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#818-845) uses a dangerous strict equality:
	- _prevUser.r_block == uint32(block.number)
	- _prevUser.r_block == 0
InstaDice.computeResult (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#964-973) uses a dangerous strict equality:
	- _blockHash == 0
InstaDice.payoutPreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#818-845) uses a dangerous strict equality:
	- _prevUser.r_block == uint32(block.number)
	- _prevUser.r_block == 0
Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#465-493) uses a dangerous strict equality:
	- _amount == 0
InstaDice.computeResult (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#964-973) uses a dangerous strict equality:
	- _blockHash == 0
InstaDice.payoutPreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#818-845) uses a dangerous strict equality:
	- _prevUser.r_block == uint32(block.number)
	- _prevUser.r_block == 0
Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#465-493) uses a dangerous strict equality:
	- _amount == 0
InstaDice.roll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#763-806) uses a dangerous strict equality:
	- _prevUser.r_block == uint32(block.number)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
Reentrancy in Bankrollable.addBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#457-463):
	External calls:
	- require(bool)(whitelist.size() == 0 || whitelist.has(msg.sender)) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#459-460)
	- ledger.add(msg.sender,msg.value) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#460-461)
	- bankroll = ledger.total() (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#461-462)
	State variables written after the call(s):
	- bankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#461-462)
Reentrancy in Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#465-493):
	External calls:
	- _amount = ledger.subtract(_bankroller,_amount) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#482-484)
	- bankroll = ledger.total() (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#484-485)
	State variables written after the call(s):
	- bankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#484-485)
Reentrancy in InstaDice.roll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#763-806):
	External calls:
	- ! _validateBetOrRefund(_number) (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#769)
	State variables written after the call(s):
	- users (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#786-788)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
UsingRegistry.getRegistry (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#51-59) should be declared external
Ledger.add (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#107-124) should be declared external
Ledger.subtract (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#125-150) should be declared external
Ledger.balanceOf (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#174-180) should be declared external
Ledger.balances (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#180-198) should be declared external
AddressSet.add (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#239-263) should be declared external
AddressSet.remove (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#263-286) should be declared external
AddressSet.has (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#309-313) should be declared external
AddressSet.addresses (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#313-331) should be declared external
Bankrollable.addToWhitelist (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#433-440) should be declared external
Bankrollable.removeFromWhitelist (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#440-448) should be declared external
Bankrollable.fallback (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#454-455) should be declared external
Bankrollable.addBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#457-463) should be declared external
Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#465-493) should be declared external
Bankrollable.sendProfits (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#494-506) should be declared external
Bankrollable.profitsTotal (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#539-543) should be declared external
Bankrollable.bankrolledBy (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#575-584) should be declared external
Bankrollable.bankrollerTable (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#584-592) should be declared external
InstaDice.changeSettings (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#717-743) should be declared external
InstaDice.roll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#763-806) should be declared external
InstaDice.payoutPreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#818-845) should be declared external
InstaDice.effectiveMaxBet (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#938-942) should be declared external
InstaDice.numUsers (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#975-978) should be declared external
InstaDice.numRolls (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.totalWagered (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.totalWon (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.minBet (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.maxBet (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.minNumber (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.maxNumber (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
InstaDice.feeBips (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:
	- pragma solidity^0.4.23 (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#465-493):
	-require(bool)(_bankroller.call.value(_amount)(_sig)) /unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#488-489
Low level call in Bankrollable.sendProfits (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#494-506):
	-require(bool)(_tr.call.value(_profits)()) /unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#503-504
Low level call in InstaDice._finalizePreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#883-900):
	-require(bool)(msg.sender.call.value(_user.r_payout)()) /unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#894
Low level call in InstaDice._errorAndRefund (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#905-908):
	-require(bool)(msg.sender.call.value(msg.value)()) /unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#907
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_registry' of UsingRegistry. (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#27-29) is not in mixedCase
Parameter '_name' of UsingRegistry.addressOf (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#35-36) is not in mixedCase
Parameter '_owner' of Ledger. (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#99) is not in mixedCase
Parameter '_address' of Ledger.add (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#107) is not in mixedCase
Parameter '_amt' of Ledger.add (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#107-108) is not in mixedCase
Parameter '_address' of Ledger.subtract (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#126) is not in mixedCase
Parameter '_amt' of Ledger.subtract (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#126) is not in mixedCase
Parameter '_address' of Ledger.balanceOf (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#175-176) is not in mixedCase
Parameter '_owner' of AddressSet. (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#230) is not in mixedCase
Parameter '_address' of AddressSet.add (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#240) is not in mixedCase
Parameter '_address' of AddressSet.remove (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#263) is not in mixedCase
Parameter '_address' of AddressSet.has (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#309-310) is not in mixedCase
Parameter '_addr' of Bankrollable.addToWhitelist (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#436) is not in mixedCase
Parameter '_addr' of Bankrollable.removeFromWhitelist (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#440) is not in mixedCase
Parameter '_amount' of Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#466) is not in mixedCase
Parameter '_callbackFn' of Bankrollable.removeBankroll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#466) is not in mixedCase
Parameter '_addr' of Bankrollable.bankrolledBy (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#576-577) is not in mixedCase
Parameter '_minBet' of InstaDice.changeSettings (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#718) is not in mixedCase
Parameter '_maxBet' of InstaDice.changeSettings (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#718-722) is not in mixedCase
Parameter '_minNumber' of InstaDice.changeSettings (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#722) is not in mixedCase
Parameter '_maxNumber' of InstaDice.changeSettings (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#722) is not in mixedCase
Parameter '_feeBips' of InstaDice.changeSettings (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#723) is not in mixedCase
Parameter '_number' of InstaDice.roll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#763-764) is not in mixedCase
Function 'InstaDice._validateBetOrRefund' (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#852-879) is not in mixedCase
Parameter '_number' of InstaDice._validateBetOrRefund (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#852-853) is not in mixedCase
Function 'InstaDice._finalizePreviousRoll' (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#883-900) is not in mixedCase
Parameter '_user' of InstaDice._finalizePreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#883-884) is not in mixedCase
Parameter '_stats' of InstaDice._finalizePreviousRoll (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#884) is not in mixedCase
Function 'InstaDice._errorAndRefund' (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#905-908) is not in mixedCase
Parameter '_msg' of InstaDice._errorAndRefund (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#906) is not in mixedCase
Parameter '_bet' of InstaDice._errorAndRefund (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#906) is not in mixedCase
Parameter '_number' of InstaDice._errorAndRefund (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#906) is not in mixedCase
Parameter '_bet' of InstaDice.computePayout (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#946) is not in mixedCase
Parameter '_number' of InstaDice.computePayout (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#946) is not in mixedCase
Parameter '_blockNumber' of InstaDice.computeResult (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#964) is not in mixedCase
Parameter '_id' of InstaDice.computeResult (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#964-965) is not in mixedCase
Constant 'InstaDice.version' (/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol#677-678) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/3/0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol analyzed (9 contracts), 83 result(s) found