INFO:Slither:Compilation warnings/errors on /unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:105:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BlackBox() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:37:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            index = sha256(x, caller);
                    ^---------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:38:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            operator = sha256(x)^bytes32(receiver);
                       ^-------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:38:24: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            operator = sha256(x)^bytes32(receiver);
                       ^-------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:39:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            check = x^sha256(receiver);
                      ^--------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:39:23: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            check = x^sha256(receiver);
                      ^--------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:41:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            index = keccak256(x, caller);
                    ^------------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:42:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            operator = keccak256(x)^bytes32(receiver);
                       ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:42:24: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            operator = keccak256(x)^bytes32(receiver);
                       ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:43:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            check = x^keccak256(receiver);
                      ^-----------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:43:23: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            check = x^keccak256(receiver);
                      ^-----------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:53:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return sha256(seed);
                   ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:53:20: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            return sha256(seed);
                   ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:55:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return keccak256(seed);
                   ^-------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:55:20: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            return keccak256(seed);
                   ^-------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:65:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return sha256(key);
                   ^---------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:65:20: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            return sha256(key);
                   ^---------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:67:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return keccak256(key);
                   ^------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:67:20: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            return keccak256(key);
                   ^------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:77:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return sha256(addr);
                   ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:77:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            return sha256(addr);
                   ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:79:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            return keccak256(addr);
                   ^-------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:79:20: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
            return keccak256(addr);
                   ^-------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Locked(hash, operator, check);
        ^---------------------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:164:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (bal <= this.balance && bal > 0) {
                   ^----------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:171:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unlocked(seed, hash, receiver);
        ^----------------------------^
/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:178:9: Warning: Invoking events without "emit" prefix is deprecated.
        Donation(msg.sender, msg.value);
        ^-----------------------------^

INFO:Detectors:[92m
Secure.generateProof (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#16-29) should be declared external
BlackBox.lockAmount (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#117-135) should be declared external
BlackBox.unlockAmount (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#141-178) should be declared external
BlackBox.fallback (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Secure._escrow' (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#29-47) is not in mixedCase
Function 'Secure.hash_seed' (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#50-60) is not in mixedCase
Function 'Secure.hash_data' (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#62-72) is not in mixedCase
Function 'BlackBox.BlackBox' (/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol#109-111) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x0f690a76ad438222ce694d84b2902b0ee2270e69.sol analyzed (2 contracts), 9 result(s) found