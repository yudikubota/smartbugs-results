INFO:Slither:Compilation warnings/errors on /unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:29:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
           ^--------------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:12: Warning: The provided argument of type bytes1 is not implicitly convertible to expected type bytes memory.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
           ^--------------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:38: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                     ^------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:38: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                     ^------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:56: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                       ^--------------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:56: Warning: The provided argument of type bytes1 is not implicitly convertible to expected type bytes memory.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                       ^--------------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:82: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                                                 ^------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:82: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                                                 ^------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:100: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                                                                   ^--------------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:100: Warning: The provided argument of type bytes1 is not implicitly convertible to expected type bytes memory.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                                                                   ^--------------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:126: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                                                                                             ^------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:96:126: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
        if(keccak256(strBytes[i]) == keccak256(Ast) || keccak256(strBytes[i]) == keccak256(Bst) || keccak256(strBytes[i]) == keccak256(Cst)){ 
                                                                                                                             ^------------^
/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:148:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomA = uint256(block.blockhash(block.number-1))%9 + 1; //uint
                          ^-------------^

INFO:Detectors:[92m
bjTest.Commission should be constant (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#42-43)
bjTest.RateEth should be constant (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#44)
bjTest.TotalRate should be constant (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#45-46)
bjTest.captcha should be constant (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#90-91)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#150-152:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#32-39) should be declared external
bjTest.ApushJoustUser (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#68-82) should be declared external
bjTest.ArJoust (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#82-88) should be declared external
bjTest.kill (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol:
	- pragma solidity^0.4.21 (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#29-32) is not in mixedCase
Contract 'bjTest' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#39-159) is not in CapWords
Function 'bjTest.ApushJoustUser' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#68-82) is not in mixedCase
Parameter '_address' of bjTest.ApushJoustUser (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#69) is not in mixedCase
Function 'bjTest.ArJoust' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#82-88) is not in mixedCase
Parameter '_n' of bjTest.ArJoust (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#83) is not in mixedCase
Parameter '_n2' of bjTest.ArJoust (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#83) is not in mixedCase
Parameter 'Jnum' of bjTest.substring (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#93) is not in mixedCase
Parameter 'Usnum' of bjTest.substring (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#93) is not in mixedCase
Function 'bjTest.Distribution' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#107-123) is not in mixedCase
Function 'bjTest.Random' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#150-159) is not in mixedCase
Variable 'bjTest.JoustNum' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#41) is not in mixedCase
Variable 'bjTest.NumberOfPart' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#42) is not in mixedCase
Variable 'bjTest.Commission' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#42-43) is not in mixedCase
Variable 'bjTest.RateEth' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#44) is not in mixedCase
Variable 'bjTest.TotalRate' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#45-46) is not in mixedCase
Variable 'bjTest.BJJtable' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#52-54) is not in mixedCase
Variable 'bjTest.BJJhis' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#62-63) is not in mixedCase
Variable 'bjTest.AllCaptcha' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#63-64) is not in mixedCase
Variable 'bjTest.BetOverlap' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#64) is not in mixedCase
Variable 'bjTest.Ast' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#88-89) is not in mixedCase
Variable 'bjTest.Bst' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#89) is not in mixedCase
Variable 'bjTest.Cst' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#90) is not in mixedCase
Variable 'bjTest.Winn' (/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol#106-107) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/23/0x209f98bc320133681458125bc57ecc03718311cc.sol analyzed (3 contracts), 31 result(s) found