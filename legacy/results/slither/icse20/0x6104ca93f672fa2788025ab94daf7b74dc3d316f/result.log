INFO:Slither:Compilation warnings/errors on /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:62:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BackdoorBurner(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:78:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:79:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:80:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:81:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:90:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:98:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:99:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:100:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:101:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:102:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:111:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.sender != owner)throw;
                               ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:112:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;            // Check if the sender has enough
                                       ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:113:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:121:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:122:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:130:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:131:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:140:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:84:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:106:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:116:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:125:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:134:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function BackdoorBurner(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:97:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:110:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(address _from, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:120:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:129:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:139:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:145:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
BackdoorBurner (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#37-147) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#78-88)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#31-37) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#80:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#94-96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#102:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#103:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#114:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#123:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
BackdoorBurner.transfer (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#78-88) should be declared external
BackdoorBurner.approve (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#90-97) should be declared external
BackdoorBurner.transferFrom (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#98-111) should be declared external
BackdoorBurner.burn (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#112-121) should be declared external
BackdoorBurner.freeze (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#121-130) should be declared external
BackdoorBurner.unfreeze (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#130-142) should be declared external
BackdoorBurner.withdrawEther (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#145-147) should be declared external
BackdoorBurner.fallback (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'BackdoorBurner.BackdoorBurner' (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#64-77) is not in mixedCase
Parameter '_to' of BackdoorBurner.transfer (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#78) is not in mixedCase
Parameter '_value' of BackdoorBurner.transfer (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#78) is not in mixedCase
Parameter '_spender' of BackdoorBurner.approve (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#90-91) is not in mixedCase
Parameter '_value' of BackdoorBurner.approve (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#91) is not in mixedCase
Parameter '_from' of BackdoorBurner.transferFrom (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#98) is not in mixedCase
Parameter '_to' of BackdoorBurner.transferFrom (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#98) is not in mixedCase
Parameter '_value' of BackdoorBurner.transferFrom (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#98) is not in mixedCase
Parameter '_from' of BackdoorBurner.burn (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#112) is not in mixedCase
Parameter '_value' of BackdoorBurner.burn (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#112) is not in mixedCase
Parameter '_value' of BackdoorBurner.freeze (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#121) is not in mixedCase
Parameter '_value' of BackdoorBurner.unfreeze (/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol#130-131) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/37/0x6104ca93f672fa2788025ab94daf7b74dc3d316f.sol analyzed (2 contracts), 41 result(s) found