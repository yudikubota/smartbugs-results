INFO:Detectors:[93m
CertiMe.getCertsByIssuer (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#123-134) uses a dangerous strict equality:
	- certificates[i].issuer_addr == value
CertiMe.getCertsByIssuer (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#123-134) uses a dangerous strict equality:
	- certificates[i].issuer_addr == value
CertiMe.getCertsByRecepient (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#134-147) uses a dangerous strict equality:
	- certificates[i].recepient_addr == value
CertiMe.getCertsByIssuer (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#123-134) uses a dangerous strict equality:
	- certificates[i].issuer_addr == value
CertiMe.getCertsByRecepient (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#134-147) uses a dangerous strict equality:
	- certificates[i].recepient_addr == value
CertiMe.getMatchCountAddress (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#114-123) uses a dangerous strict equality:
	- (addr_type == 0 && certificates[i].issuer_addr == value) || (addr_type == 1 && certificates[i].recepient_addr == value)
	- (addr_type == 0 && certificates[i].issuer_addr == value) || (addr_type == 1 && certificates[i].recepient_addr == value)
CertiMe.getCertsByIssuer (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#123-134) uses a dangerous strict equality:
	- certificates[i].issuer_addr == value
CertiMe.getCertsByRecepient (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#134-147) uses a dangerous strict equality:
	- certificates[i].recepient_addr == value
CertiMe.getMatchCountAddress (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#114-123) uses a dangerous strict equality:
	- (addr_type == 0 && certificates[i].issuer_addr == value) || (addr_type == 1 && certificates[i].recepient_addr == value)
	- (addr_type == 0 && certificates[i].issuer_addr == value) || (addr_type == 1 && certificates[i].recepient_addr == value)
CertiMe.revokeCertificate (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#86-95) uses a dangerous strict equality:
	- msg.sender == certificates[targetCertID].issuer_addr
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
CertiMe.revokeCertificate (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#86-95) uses timestamp for comparisons
	Dangerous comparisons:
	- msg.sender == certificates[targetCertID].issuer_addr (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#87-95)
CertiMe.getMatchCountAddress (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#114-123) uses timestamp for comparisons
	Dangerous comparisons:
	- (addr_type == 0 && certificates[i].issuer_addr == value) || (addr_type == 1 && certificates[i].recepient_addr == value) (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#117-122)
CertiMe.getCertsByIssuer (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#123-134) uses timestamp for comparisons
	Dangerous comparisons:
	- certificates[i].issuer_addr == value (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#131-133)
CertiMe.getCertsByRecepient (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#134-147) uses timestamp for comparisons
	Dangerous comparisons:
	- certificates[i].recepient_addr == value (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#142-145)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CertiMe.batchNewCertificate (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#54-85) should be declared external
CertiMe.revokeCertificate (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#86-95) should be declared external
CertiMe.getCertsByIssuer (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#123-134) should be declared external
CertiMe.getCertsByRecepient (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#134-147) should be declared external
CertiMe.getCertsByProof (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#169-180) should be declared external
CertiMe.getCertsByVersion (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#180-192) should be declared external
CertiMe.getCertsByContent (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#192-202) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol:
	- pragma solidity^0.4.11 (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter 'addr_type' of CertiMe.getMatchCountAddress (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#115) is not in mixedCase
Parameter 'string_type' of CertiMe.getMatchCountString (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#148) is not in mixedCase
Parameter '_a' of CertiMe.stringsEqual (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#211-212) is not in mixedCase
Parameter '_b' of CertiMe.stringsEqual (/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol#212) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/24/0x8dffd6644cf466d083fc6db8c61ad88443e48c99.sol analyzed (1 contracts), 20 result(s) found