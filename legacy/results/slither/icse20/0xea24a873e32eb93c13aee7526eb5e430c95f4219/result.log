INFO:Slither:Compilation warnings/errors on /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:34:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:45:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (x > MAX_UINT256 - y) throw;
                                 ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:50:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (x < y) throw;
                   ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:56:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (x > MAX_UINT256 / y) throw;
                                 ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:135:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (allowances[_from][msg.sender] < _value) throw;
                                                    ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:145:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_from == _to) throw;
                          ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:146:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value == 0) throw;
                         ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:147:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(_from) < _value) throw;
                                       ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:187:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DASToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:203:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != secretaryGeneral) throw;
                                            ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:226:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:233:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:240:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:268:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DASCrowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:331:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ethToWithdraw == 0 && dasToWithdraw == 0) throw;
                                                      ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:350:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != secretaryGeneral) throw;
                                            ^---^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:108:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value, _metadata);
        ^------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:157:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:314:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundsReceived(msg.sender, receivedAmount);
        ^---------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:6:5: Warning: No visibility specified. Defaulting to "public". 
    function name() constant returns (string _name);
    ^----------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function symbol() constant returns (string _symbol);
    ^--------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:8:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns (uint8 _decimals);
    ^-----------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:9:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 _supply);
    ^--------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 _balance);
    ^---------------------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:13:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool _success);
    ^-------------------------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address spender) constant returns (uint256 _remaining);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool _success);
    ^---------------------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:17:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value, bytes _metadata) returns (bool _success);
    ^--------------------------------------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:18:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool _success);
    ^----------------------------------------------------------------------------------------^
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:28:5: Warning: No visibility specified. Defaulting to "public". 
    function erc223Fallback(address _from, uint256 _value, bytes _data){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:81:5: Warning: No visibility specified. Defaulting to "public". 
    function name() constant returns (string _name) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function symbol() constant returns (string _symbol) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:89:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns (uint8 _decimals) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 _supply) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:97:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 _balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:106:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool _success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 _remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool _success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:127:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value, bytes _metadata) returns (bool _success)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:134:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool _success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:187:5: Warning: No visibility specified. Defaulting to "public". 
    function DASToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:209:5: Warning: No visibility specified. Defaulting to "public". 
    function blockAccount(address _account) onlySecretaryGeneral {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:214:5: Warning: No visibility specified. Defaulting to "public". 
    function unblockAccount(address _account) onlySecretaryGeneral {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:219:5: Warning: No visibility specified. Defaulting to "public". 
    function isAccountBlocked(address _account) returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:224:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool _success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:231:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value, bytes _metadata) returns (bool _success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:238:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool _success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:268:5: Warning: No visibility specified. Defaulting to "public". 
    function DASCrowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:285:5: Warning: No visibility specified. Defaulting to "public". 
    function __setSecretaryGeneral(address _secretaryGeneral) onlySecretaryGeneral {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:289:5: Warning: No visibility specified. Defaulting to "public". 
    function __setBeneficiary(address _crowdsaleBeneficiary) onlyAfterCrowdsaleDeadline {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:293:5: Warning: No visibility specified. Defaulting to "public". 
    function __setBeneficiaryForDasTokensChange(address _crowdsaleDasTokensChangeBeneficiary) onlySecretaryGeneral {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function __setDeadline(uint256 _durationInSeconds) onlySecretaryGeneral {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:301:5: Warning: No visibility specified. Defaulting to "public". 
    function __setTokenPrice(uint256 _crowdsaleTokenPriceInWei) onlySecretaryGeneral {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:307:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable onlyBeforeCrowdsaleDeadline {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:317:5: Warning: No visibility specified. Defaulting to "public". 
    function erc223Fallback(address _from, uint256 _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:327:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw() onlyAfterCrowdsaleDeadline {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:28:5: Warning: Function state mutability can be restricted to pure
    function erc223Fallback(address _from, uint256 _value, bytes _data){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:44:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:49:5: Warning: Function state mutability can be restricted to pure
    function safeSub(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:54:5: Warning: Function state mutability can be restricted to pure
    function safeMul(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:166:5: Warning: Function state mutability can be restricted to view
    function isContract(address _addr) internal returns (bool _isContract) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:219:5: Warning: Function state mutability can be restricted to view
    function isAccountBlocked(address _account) returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
DASCrowdsale.withdraw (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#334-353) sends eth to arbitrary user
	Dangerous calls:
	- crowdsaleBeneficiary.transfer(ethToWithdraw) (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#345-346)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
DASCrowdsale.withdraw (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#334-353) uses a dangerous strict equality:
	- ethToWithdraw == 0 && dasToWithdraw == 0
	- ethToWithdraw == 0 && dasToWithdraw == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
emptyMetadata in ERC223Token.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#127) is a local variable never initialiazed
emptyMetadata in ERC223Token.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#143) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
DASCrowdsale.fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#314-327) does not use the value returned by external calls:
	-dasToken.transfer(msg.sender,receivedAmount / crowdsaleTokenPrice) (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#320-323)
DASCrowdsale.withdraw (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#334-353) does not use the value returned by external calls:
	-dasToken.transfer(crowdsaleDasTokensChangeBeneficiary,dasToWithdraw) (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#349-351)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC223Token.isContract uses assembly (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#170-183)
	- /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#174-182
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#39:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#49:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#54:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#62:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#149-150:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#150:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#152:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#234:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#241:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#253:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#214:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#344:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC223Token.name (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#85-86) should be declared external
ERC223TokenInterface.name (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#6-7) should be declared external
ERC223Token.symbol (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#89-90) should be declared external
ERC223TokenInterface.symbol (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#7-8) should be declared external
ERC223TokenInterface.decimals (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#8-9) should be declared external
ERC223Token.decimals (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#92-94) should be declared external
ERC223Token.totalSupply (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#95-98) should be declared external
ERC223TokenInterface.totalSupply (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#9-11) should be declared external
ERC223Token.approve (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#107-113) should be declared external
ERC223TokenInterface.approve (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#13-14) should be declared external
ERC223TokenInterface.allowance (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#14-16) should be declared external
ERC223Token.allowance (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#113-122) should be declared external
DASCrowdsale.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#327-333) should be declared external
ERC223ContractInterface.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#28-39) should be declared external
DASToken.blockAccount (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#215-219) should be declared external
DASToken.unblockAccount (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#220-224) should be declared external
DASToken.isAccountBlocked (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#224-228) should be declared external
DASCrowdsale.__setSecretaryGeneral (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#292-294) should be declared external
DASCrowdsale.__setBeneficiary (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#294-298) should be declared external
DASCrowdsale.__setBeneficiaryForDasTokensChange (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#298-302) should be declared external
DASCrowdsale.__setDeadline (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#303-310) should be declared external
DASCrowdsale.__setTokenPrice (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#310-313) should be declared external
DASCrowdsale.fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#314-327) should be declared external
DASCrowdsale.withdraw (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#334-353) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol:
	- pragma solidity^0.4.11 (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_from' of ERC223ContractInterface.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#28) is not in mixedCase
Parameter '_value' of ERC223ContractInterface.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#28-29) is not in mixedCase
Parameter '_data' of ERC223ContractInterface.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#29) is not in mixedCase
Parameter '_owner' of ERC223Token.balanceOf (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#102-103) is not in mixedCase
Parameter '_spender' of ERC223Token.approve (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#107-108) is not in mixedCase
Parameter '_value' of ERC223Token.approve (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#108) is not in mixedCase
Parameter '_owner' of ERC223Token.allowance (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#113-115) is not in mixedCase
Parameter '_spender' of ERC223Token.allowance (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#117-118) is not in mixedCase
Parameter '_to' of ERC223Token.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#123) is not in mixedCase
Parameter '_value' of ERC223Token.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#123) is not in mixedCase
Parameter '_to' of ERC223Token.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#129-130) is not in mixedCase
Parameter '_value' of ERC223Token.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#130) is not in mixedCase
Parameter '_metadata' of ERC223Token.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#130) is not in mixedCase
Parameter '_from' of ERC223Token.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#137) is not in mixedCase
Parameter '_to' of ERC223Token.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#137) is not in mixedCase
Parameter '_value' of ERC223Token.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#137) is not in mixedCase
Function 'ERC223Token.__transfer' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#146-166) is not in mixedCase
Parameter '_from' of ERC223Token.__transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#147) is not in mixedCase
Parameter '_to' of ERC223Token.__transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#147) is not in mixedCase
Parameter '_value' of ERC223Token.__transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#147) is not in mixedCase
Parameter '_metadata' of ERC223Token.__transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#147-149) is not in mixedCase
Parameter '_addr' of ERC223Token.isContract (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#171) is not in mixedCase
Parameter '_to' of DASToken.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#231) is not in mixedCase
Parameter '_value' of DASToken.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#231) is not in mixedCase
Parameter '_to' of DASToken.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#238) is not in mixedCase
Parameter '_value' of DASToken.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#238) is not in mixedCase
Parameter '_metadata' of DASToken.transfer (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#238) is not in mixedCase
Parameter '_from' of DASToken.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#248) is not in mixedCase
Parameter '_to' of DASToken.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#248-250) is not in mixedCase
Parameter '_value' of DASToken.transferFrom (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#250) is not in mixedCase
Function 'DASToken.DASToken' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#193-210) is not in mixedCase
Parameter '_name' of DASToken.DASToken (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#193-194) is not in mixedCase
Parameter '_symbol' of DASToken.DASToken (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#195) is not in mixedCase
Parameter '_decimals' of DASToken.DASToken (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#196) is not in mixedCase
Parameter '_totalSupply' of DASToken.DASToken (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#197) is not in mixedCase
Parameter '_initialTokensHolder' of DASToken.DASToken (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#198) is not in mixedCase
Parameter '_account' of DASToken.blockAccount (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#215) is not in mixedCase
Parameter '_account' of DASToken.unblockAccount (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#220-221) is not in mixedCase
Parameter '_account' of DASToken.isAccountBlocked (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#224-225) is not in mixedCase
Parameter '_from' of DASCrowdsale.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#327) is not in mixedCase
Parameter '_value' of DASCrowdsale.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#328) is not in mixedCase
Parameter '_data' of DASCrowdsale.erc223Fallback (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#328) is not in mixedCase
Function 'DASCrowdsale.DASCrowdsale' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#275-290) is not in mixedCase
Parameter '_secretaryGeneral' of DASCrowdsale.DASCrowdsale (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#276-277) is not in mixedCase
Parameter '_crowdsaleBeneficiary' of DASCrowdsale.DASCrowdsale (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#277) is not in mixedCase
Parameter '_crowdsaleDasTokensChangeBeneficiary' of DASCrowdsale.DASCrowdsale (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#278) is not in mixedCase
Parameter '_durationInSeconds' of DASCrowdsale.DASCrowdsale (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#278-279) is not in mixedCase
Parameter '_crowdsaleTokenPriceInWei' of DASCrowdsale.DASCrowdsale (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#279) is not in mixedCase
Parameter '_dasTokenAddress' of DASCrowdsale.DASCrowdsale (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#279-280) is not in mixedCase
Function 'DASCrowdsale.__setSecretaryGeneral' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#292-294) is not in mixedCase
Parameter '_secretaryGeneral' of DASCrowdsale.__setSecretaryGeneral (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#293) is not in mixedCase
Function 'DASCrowdsale.__setBeneficiary' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#294-298) is not in mixedCase
Parameter '_crowdsaleBeneficiary' of DASCrowdsale.__setBeneficiary (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#294) is not in mixedCase
Function 'DASCrowdsale.__setBeneficiaryForDasTokensChange' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#298-302) is not in mixedCase
Parameter '_crowdsaleDasTokensChangeBeneficiary' of DASCrowdsale.__setBeneficiaryForDasTokensChange (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#298-301) is not in mixedCase
Function 'DASCrowdsale.__setDeadline' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#303-310) is not in mixedCase
Parameter '_durationInSeconds' of DASCrowdsale.__setDeadline (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#306-307) is not in mixedCase
Function 'DASCrowdsale.__setTokenPrice' (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#310-313) is not in mixedCase
Parameter '_crowdsaleTokenPriceInWei' of DASCrowdsale.__setTokenPrice (/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol#311) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/31/0xea24a873e32eb93c13aee7526eb5e430c95f4219.sol analyzed (6 contracts), 105 result(s) found