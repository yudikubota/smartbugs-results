INFO:Slither:Compilation warnings/errors on /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:39:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:47:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:152:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:157:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:162:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:187:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:192:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:197:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:202:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:229:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:256:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function CryptoCopyToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:286:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:325:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:170:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:213:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:236:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:56:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address _newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:148:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:183:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:225:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:248:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:256:5: Warning: No visibility specified. Defaulting to "public". 
    function CryptoCopyToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:267:5: Warning: No visibility specified. Defaulting to "public". 
    function unlock() onlyOwner returns (bool success)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:277:5: Warning: No visibility specified. Defaulting to "public". 
    function lock() onlyOwner returns (bool success)  {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:295:5: Warning: No visibility specified. Defaulting to "public". 
    function setMaxTotalSupply(uint256 _maxTotalSupply) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:306:5: Warning: No visibility specified. Defaulting to "public". 
    function issue(address _recipient, uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:324:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:8:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:21:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:26:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
CryptoCopyToken.decimals should be constant (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#123-125)
CryptoCopyToken.name should be constant (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#119-121)
CryptoCopyToken.standard should be constant (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#116-117)
CryptoCopyToken.symbol should be constant (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#122-123)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#52:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#160:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#165-166:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#170:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#196:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#207:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#212:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#242:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#300:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Owned.transferOwnership (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#56-61) should be declared external
Token.balanceOf (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#69-72) should be declared external
CryptoCopyToken.balanceOf (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#142-145) should be declared external
Token.transfer (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#77) should be declared external
CryptoCopyToken.transfer (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#152-179) should be declared external
Token.transferFrom (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#82-85) should be declared external
CryptoCopyToken.transferFrom (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#187-222) should be declared external
CryptoCopyToken.approve (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#233-245) should be declared external
Token.approve (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#90-91) should be declared external
Token.allowance (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#95-96) should be declared external
CryptoCopyToken.allowance (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#254-260) should be declared external
CryptoCopyToken.unlock (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#276-280) should be declared external
CryptoCopyToken.lock (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#291-295) should be declared external
CryptoCopyToken.setMaxTotalSupply (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#303-306) should be declared external
CryptoCopyToken.issue (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#319-327) should be declared external
CryptoCopyToken.fallback (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol:
	- pragma solidity^0.4.6 (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#40-44) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#57-61) is not in mixedCase
Parameter '_owner' of CryptoCopyToken.balanceOf (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#142) is not in mixedCase
Parameter '_to' of CryptoCopyToken.transfer (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#153-155) is not in mixedCase
Parameter '_value' of CryptoCopyToken.transfer (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#155) is not in mixedCase
Parameter '_from' of CryptoCopyToken.transferFrom (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#190) is not in mixedCase
Parameter '_to' of CryptoCopyToken.transferFrom (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#190) is not in mixedCase
Parameter '_value' of CryptoCopyToken.transferFrom (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#190-191) is not in mixedCase
Parameter '_spender' of CryptoCopyToken.approve (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#233-235) is not in mixedCase
Parameter '_value' of CryptoCopyToken.approve (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#235) is not in mixedCase
Parameter '_owner' of CryptoCopyToken.allowance (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#255-256) is not in mixedCase
Parameter '_spender' of CryptoCopyToken.allowance (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#256) is not in mixedCase
Function 'CryptoCopyToken.CryptoCopyToken' (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#265-269) is not in mixedCase
Parameter '_maxTotalSupply' of CryptoCopyToken.setMaxTotalSupply (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#304) is not in mixedCase
Parameter '_recipient' of CryptoCopyToken.issue (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#319) is not in mixedCase
Parameter '_value' of CryptoCopyToken.issue (/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol#319) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x423475e0a0a90dde8bd813ebdcc21162cd5ed63f.sol analyzed (4 contracts), 45 result(s) found