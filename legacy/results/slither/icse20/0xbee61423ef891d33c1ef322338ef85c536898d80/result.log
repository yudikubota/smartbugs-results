INFO:Detectors:[91m
Market.sendMoneyMother (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#545-572) sends eth to arbitrary user
	Dangerous calls:
	- publicContract.ownerOf(mother[m]).transfer(motherMoney) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#563-564)
Market.sendMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#580-588) sends eth to arbitrary user
	Dangerous calls:
	- _to.transfer(procentOne * (100 - (commission + percentBank + commission_mom))) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#582-584)
	- ownerMoney.transfer(procentOne * commission) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#586-588)
Market.getMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#659-667) sends eth to arbitrary user
	Dangerous calls:
	- ownerMoney.transfer(_value) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#663-664)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#496-529):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#498-500)
	- require(bool)(publicContract.ownerOf(_bunnyId) != msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#501)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- lastmoney = currentPrice(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- sendMoney(publicContract.ownerOf(_bunnyId),lastmoney) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#515-516)
	- publicContract.transferFrom(publicContract.ownerOf(_bunnyId),msg.sender,_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#516-518)
	- sendMoneyMother(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#518-520)
	- stopMarket(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#520)
	External calls sending eth:
	- checkTimeWin() (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- sendMoney(publicContract.ownerOf(_bunnyId),lastmoney) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#515-516)
	- sendMoneyMother(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#518-520)
	State variables written after the call(s):
	- currentTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#521-522)
	- lastOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#523-526)
	- lastSaleTime (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#526-527)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Market.transferFromBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#486-489) does not use the value returned by external calls:
	-publicContract.transferFrom(publicContract.ownerOf(_bunnyId),msg.sender,_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#487-489)
Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#496-529) does not use the value returned by external calls:
	-publicContract.transferFrom(publicContract.ownerOf(_bunnyId),msg.sender,_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#516-518)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Market.sendMoneyMother has external calls inside a loop:
	- publicContract.ownerOf(mother[m]).transfer(motherMoney) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#563-564)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Market.buyAdvert (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#644-652):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#649-650)
	State variables written after the call(s):
	- added_to_the_bank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#652)
	- advertising (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#651)
	- bankMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#652)
Reentrancy in Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#496-529):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#498-500)
	- require(bool)(publicContract.ownerOf(_bunnyId) != msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#501)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- lastmoney = currentPrice(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	State variables written after the call(s):
	- lastmoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- totalClosedBID (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#509-510)
Reentrancy in Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#496-529):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#498-500)
	- require(bool)(publicContract.ownerOf(_bunnyId) != msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#501)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- lastmoney = currentPrice(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	External calls sending eth:
	- checkTimeWin() (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	State variables written after the call(s):
	- added_to_the_bank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- advertising (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- bankMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- currentTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- lastSaleTime (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- numberOfWins (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- reallyPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
Reentrancy in Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#496-529):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#498-500)
	- require(bool)(publicContract.ownerOf(_bunnyId) != msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#501)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- lastmoney = currentPrice(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#503)
	- sendMoney(publicContract.ownerOf(_bunnyId),lastmoney) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#515-516)
	- publicContract.transferFrom(publicContract.ownerOf(_bunnyId),msg.sender,_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#516-518)
	- sendMoneyMother(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#518-520)
	- stopMarket(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#520)
	External calls sending eth:
	- checkTimeWin() (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#511-512)
	- sendMoney(publicContract.ownerOf(_bunnyId),lastmoney) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#515-516)
	- sendMoneyMother(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#518-520)
	State variables written after the call(s):
	- reallyPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#521)
Reentrancy in Market.startMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#436-453):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#438)
	- require(bool)(currentPrice(_bunnyId) != _money) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#440-443)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#444)
	- require(bool)(publicContract.ownerOf(_bunnyId) == msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#446-447)
	State variables written after the call(s):
	- timeCost (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#448-449)
Reentrancy in Market.startMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#436-453):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#438)
	- require(bool)(currentPrice(_bunnyId) != _money) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#440-443)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#444)
	- require(bool)(publicContract.ownerOf(_bunnyId) == msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#446-447)
	- storageContract.setBunnyCost(_bunnyId,_money) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#449)
	- StartMarket(_bunnyId,currentPrice(_bunnyId),block.timestamp,stepTimeSale) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#450-453)
	State variables written after the call(s):
	- marketCount (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#453)
Reentrancy in Market.startMarketOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#359-371):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#360)
	- require(bool)(currentPrice(_bunnyId) != _money) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#361-365)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#365)
	State variables written after the call(s):
	- timeCost (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#366-368)
Reentrancy in Market.startMarketOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#359-371):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#360)
	- require(bool)(currentPrice(_bunnyId) != _money) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#361-365)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#365)
	- storageContract.setBunnyCost(_bunnyId,_money) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#368)
	- StartMarket(_bunnyId,currentPrice(_bunnyId),block.timestamp,stepTimeSale) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#369-371)
	State variables written after the call(s):
	- marketCount (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#371)
Reentrancy in Market.stopMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#457-468):
	External calls:
	- require(bool)(checkContract()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#459)
	- require(bool)(publicContract.ownerOf(_bunnyId) == msg.sender) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#460-462)
	- require(bool)(storageContract.isPauseSave()) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#463-464)
	- storageContract.deleteBunnyCost(_bunnyId) (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#464-465)
	State variables written after the call(s):
	- marketCount (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#467-468)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Market.timeBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#468-485) uses timestamp for comparisons
	Dangerous comparisons:
	- timeCost[_bunnyId] > 0 && block.timestamp >= _tmp (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#475-485)
	- _tmp > 0 (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#481-485)
Market.checkTimeWin (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#589-594) uses timestamp for comparisons
	Dangerous comparisons:
	- lastSaleTime + currentTimeBank < block.timestamp (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#589-591)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Market.commission_mom should be constant (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#244)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#43-50) should be declared external
Ownable.transferOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#50-56) should be declared external
Ownable.getOwnerMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#56-67) should be declared external
Whitelist.getInWhitelist (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#102-107) should be declared external
Whitelist.addAddressesToWhitelist (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#111-121) should be declared external
Whitelist.removeAddressesFromWhitelist (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#139-152) should be declared external
StorageInterface.getBunnyCost (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#186-194) should be declared external
StorageInterface.isPauseSave (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#195-196) should be declared external
PublicInterface.transferFrom (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#197-198) should be declared external
PublicInterface.ownerOf (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#198-199) should be declared external
PublicInterface.isUIntPublic (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#199-202) should be declared external
PublicInterface.getRabbitMother (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#203-206) should be declared external
PublicInterface.getRabbitMotherSumm (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#206-207) should be declared external
Market.setRangePrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#286-294) should be declared external
Market.setReallyPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#294-299) should be declared external
Market.setStepTimeSale (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#299-305) should be declared external
Market.setRangeTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#305-310) should be declared external
Market.setMinTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#311-316) should be declared external
Market.setMaxTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#316-323) should be declared external
Market.setCoefficientTimeStep (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#324-332) should be declared external
Market.setPercentCommission (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#332-336) should be declared external
Market.setPercentBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#337-342) should be declared external
Market.setMinPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#347-351) should be declared external
Market.setCurrentTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#351-354) should be declared external
Market.startMarketOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#359-371) should be declared external
Market.setPause (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#397-400) should be declared external
Market.getReallyPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#429-432) should be declared external
Market.startMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#436-453) should be declared external
Market.transferFromBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#486-489) should be declared external
Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#496-529) should be declared external
Market.addCountInvestors (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#621-625) should be declared external
Market.ownerOf (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#634-640) should be declared external
Market.buyAdvert (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#644-652) should be declared external
Market.noAdvert (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#656-658) should be declared external
Market.getMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#659-667) should be declared external
Market.getProperty (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#668-681) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol:
	- pragma solidity^0.4.23 (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_add' of Ownable.transferMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#44) is not in mixedCase
Parameter '_add' of Ownable.transferOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#51) is not in mixedCase
Parameter '_rangePrice' of Market.setRangePrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#292) is not in mixedCase
Parameter '_reallyPrice' of Market.setReallyPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#297) is not in mixedCase
Parameter '_stepTimeSale' of Market.setStepTimeSale (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#302) is not in mixedCase
Parameter '_rangeTimeBank' of Market.setRangeTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#305-308) is not in mixedCase
Parameter '_minTimeBank' of Market.setMinTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#314) is not in mixedCase
Parameter '_maxTimeBank' of Market.setMaxTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#317) is not in mixedCase
Parameter '_coefficientTimeStep' of Market.setCoefficientTimeStep (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#327) is not in mixedCase
Parameter '_commission' of Market.setPercentCommission (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#334) is not in mixedCase
Parameter '_percentBank' of Market.setPercentBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#340) is not in mixedCase
Parameter '_minPrice' of Market.setMinPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#347-348) is not in mixedCase
Parameter '_currentTimeBank' of Market.setCurrentTimeBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#351) is not in mixedCase
Parameter '_bunnyId' of Market.startMarketOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#359) is not in mixedCase
Parameter '_money' of Market.startMarketOwner (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#359-360) is not in mixedCase
Parameter '_pubAddress' of Market.transferContract (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#378) is not in mixedCase
Parameter '_storageAddress' of Market.transferStorage (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#392-393) is not in mixedCase
Parameter '_bunnyid' of Market.currentPrice (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#404-406) is not in mixedCase
Parameter '_bunnyId' of Market.startMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#438) is not in mixedCase
Parameter '_money' of Market.startMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#438) is not in mixedCase
Parameter '_bunnyId' of Market.stopMarket (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#458) is not in mixedCase
Parameter '_bunnyId' of Market.timeBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#470-473) is not in mixedCase
Parameter '_bunnyId' of Market.transferFromBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#486-487) is not in mixedCase
Parameter '_bunnyId' of Market.buyBunny (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#497) is not in mixedCase
Parameter '_bunnyId' of Market.sendMoneyMother (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#545-546) is not in mixedCase
Parameter '_to' of Market.sendMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#580) is not in mixedCase
Parameter '_money' of Market.sendMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#580-581) is not in mixedCase
Parameter '_money' of Market.addBank (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#628-631) is not in mixedCase
Parameter '_bunnyId' of Market.ownerOf (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#637-638) is not in mixedCase
Parameter '_text' of Market.buyAdvert (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#646-647) is not in mixedCase
Parameter '_value' of Market.getMoney (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#660) is not in mixedCase
Variable 'Market.commission_mom' (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#244) is not in mixedCase
Variable 'Market.added_to_the_bank' (/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol#248) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/6/0xbee61423ef891d33c1ef322338ef85c536898d80.sol analyzed (6 contracts), 89 result(s) found