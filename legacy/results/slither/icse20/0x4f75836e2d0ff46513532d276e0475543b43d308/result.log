INFO:Slither:Compilation warnings/errors on /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:51:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(isMaintaining == true) throw;
                                  ^---^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:64:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (!found) throw;
                        ^---^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:69:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherCheque() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:154:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Cheque cheque = items[chequeIdHash];
        ^-----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:178:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Cheque cheque = items[chequeIdHash];
        ^-----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:202:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Cheque cheque = items[chequeIdHash];
        ^-----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:223:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Cheque cheque = items[chequeIdHash];
        ^-----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:240:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Cheque cheque = items[hashChequeId];
        ^-----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:318:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Cheque cheque = items[chequeIdHash];
        ^-----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:85:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(owner);
        ^------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:139:30: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint currentProfit = this.balance - (totalChequeValue - totalRedeemedValue);
                             ^----------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:141:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogWithdrawEther(_sendTo, ResultCode.ERROR_INVALID_AMOUNT, 0);
            ^-----------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:146:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogWithdrawEther(_sendTo, ResultCode.SUCCESS, _amount);
        ^----------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:153:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:153:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:153:32: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:156:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRefundCheque(chequeIdHash, ResultCode.ERROR_NOT_EXIST);
            ^-------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:160:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRefundCheque(chequeIdHash, ResultCode.ERROR_USED);
            ^--------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:172:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRefundCheque(chequeIdHash, ResultCode.SUCCESS);
        ^-----------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:180:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRefundCheque(chequeIdHash, ResultCode.ERROR_NOT_EXIST);
            ^-------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:184:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRefundCheque(chequeIdHash, ResultCode.ERROR_USED);
            ^--------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:196:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRefundCheque(chequeIdHash, ResultCode.SUCCESS);
        ^-----------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:222:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:222:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:222:32: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:230:31: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (cheque.pinHash != sha3(_chequeId, _pin)) {
                              ^-------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:230:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (cheque.pinHash != sha3(_chequeId, _pin)) {
                              ^-------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:239:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 hashChequeId = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:239:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hashChequeId = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:239:32: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 hashChequeId = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:275:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogCreate(chequeIdHash, uint(ResultCode.ERROR_INVALID_AMOUNT), chequeValue);
            ^-------------------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:282:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogCreate(chequeIdHash, uint(ResultCode.ERROR_MIN), chequeValue);
            ^--------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:287:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogCreate(chequeIdHash, uint(ResultCode.ERROR_MAX), chequeValue);
            ^--------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:292:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogCreate(chequeIdHash, uint(ResultCode.ERROR_EXIST), chequeValue);
            ^----------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:308:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogCreate(chequeIdHash, uint(ResultCode.SUCCESS), chequeValue);
        ^------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:317:32: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:317:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:317:32: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 chequeIdHash = sha3(_chequeId);
                               ^-------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:320:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRedeem(chequeIdHash, ResultCode.ERROR_NOT_EXIST, 0, _sendTo);
            ^-------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:324:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRedeem(chequeIdHash, ResultCode.ERROR_USED, 0, _sendTo);
            ^--------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:329:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogRedeem(chequeIdHash, ResultCode.ERROR_INVALID_STATUS, 0, _sendTo);
                ^------------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:333:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogRedeem(chequeIdHash, ResultCode.ERROR_LOCKED, 0, _sendTo);
                ^----------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:337:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogRedeem(chequeIdHash, ResultCode.ERROR_EXPIRED, 0, _sendTo);
                ^-----------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:343:31: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (cheque.pinHash != sha3(_chequeId, _pin)) {
                              ^-------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:343:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (cheque.pinHash != sha3(_chequeId, _pin)) {
                              ^-------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:345:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogRedeem(chequeIdHash, ResultCode.ERROR_INVALID_STATUS, 0, _sendTo);
            ^------------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:357:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRedeem(chequeIdHash, ResultCode.SUCCESS, sendMount, _sendTo);
        ^-------------------------------------------------------------^
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function EtherCheque() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:80:5: Warning: No visibility specified. Defaulting to "public". 
    function ChangeOwner(address _newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function Kill() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function AddModerator(address _newModerator) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:97:5: Warning: No visibility specified. Defaulting to "public". 
    function RemoveModerator(address _oldModerator) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function SetCommissionRate(uint _commissionRate) onlyModerators {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:117:5: Warning: No visibility specified. Defaulting to "public". 
    function SetMinFee(uint _minFee) onlyModerators {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function SetMinChequeValue(uint _minChequeValue) onlyModerators {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:125:5: Warning: No visibility specified. Defaulting to "public". 
    function SetMaxChequeValue(uint _maxChequeValue) onlyModerators {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:129:5: Warning: No visibility specified. Defaulting to "public". 
    function SetMaxAttempt(uint8 _maxAttempt) onlyModerators {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:133:5: Warning: No visibility specified. Defaulting to "public". 
    function UpdateMaintenance(bool _isMaintaining) onlyModerators {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function WithdrawEther(address _sendTo, uint _amount) onlyModerators returns(ResultCode) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function RefundChequeById(string _chequeId) onlyModerators returns(ResultCode) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:176:5: Warning: No visibility specified. Defaulting to "public". 
    function RefundChequeByHash(uint256 _chequeIdHash) onlyModerators returns(ResultCode) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:200:5: Warning: No visibility specified. Defaulting to "public". 
    function GetChequeInfoByHash(uint256 _chequeIdHash) onlyModerators constant returns(Status, uint, uint, uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:221:5: Warning: No visibility specified. Defaulting to "public". 
    function VerifyCheque(string _chequeId, string _pin) onlyModerators constant returns(ResultCode, Status, uint, uint, uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:238:5: Warning: No visibility specified. Defaulting to "public". 
    function GetChequeInfo(string _chequeId) constant returns(Status, uint, uint, uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:260:5: Warning: No visibility specified. Defaulting to "public". 
    function Create(uint256 _chequeIdHash, uint256 _pinHash, uint32 _expiringPeriod) payable isActive returns(ResultCode) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:312:5: Warning: No visibility specified. Defaulting to "public". 
    function Redeem(string _chequeId, string _pin, address _sendTo) payable returns (ResultCode){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#88-89:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#156:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#227-228:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#235-239:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#245-246:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#324:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#351-358:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#55:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#69-70:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
EtherCheque.ChangeOwner (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#82-88) should be declared external
EtherCheque.Kill (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#88-89) should be declared external
EtherCheque.AddModerator (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#89-98) should be declared external
EtherCheque.RemoveModerator (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#99-114) should be declared external
EtherCheque.SetCommissionRate (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#115-121) should be declared external
EtherCheque.SetMinFee (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#121-123) should be declared external
EtherCheque.SetMinChequeValue (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#125-127) should be declared external
EtherCheque.SetMaxChequeValue (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#129-133) should be declared external
EtherCheque.SetMaxAttempt (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#133-137) should be declared external
EtherCheque.UpdateMaintenance (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#137-138) should be declared external
EtherCheque.WithdrawEther (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#138-152) should be declared external
EtherCheque.RefundChequeById (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#154-178) should be declared external
EtherCheque.RefundChequeByHash (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#178-202) should be declared external
EtherCheque.GetChequeInfoByHash (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#202-223) should be declared external
EtherCheque.VerifyCheque (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#224-241) should be declared external
EtherCheque.GetChequeInfo (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#242-264) should be declared external
EtherCheque.Create (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#264-317) should be declared external
EtherCheque.Redeem (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#317-361) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'EtherCheque.EtherCheque' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#73-74) is not in mixedCase
Function 'EtherCheque.ChangeOwner' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#82-88) is not in mixedCase
Parameter '_newOwner' of EtherCheque.ChangeOwner (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#84) is not in mixedCase
Function 'EtherCheque.Kill' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#88-89) is not in mixedCase
Function 'EtherCheque.AddModerator' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#89-98) is not in mixedCase
Parameter '_newModerator' of EtherCheque.AddModerator (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#89-90) is not in mixedCase
Function 'EtherCheque.RemoveModerator' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#99-114) is not in mixedCase
Parameter '_oldModerator' of EtherCheque.RemoveModerator (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#99) is not in mixedCase
Function 'EtherCheque.SetCommissionRate' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#115-121) is not in mixedCase
Parameter '_commissionRate' of EtherCheque.SetCommissionRate (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#117) is not in mixedCase
Function 'EtherCheque.SetMinFee' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#121-123) is not in mixedCase
Parameter '_minFee' of EtherCheque.SetMinFee (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#121) is not in mixedCase
Function 'EtherCheque.SetMinChequeValue' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#125-127) is not in mixedCase
Parameter '_minChequeValue' of EtherCheque.SetMinChequeValue (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#125) is not in mixedCase
Function 'EtherCheque.SetMaxChequeValue' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#129-133) is not in mixedCase
Parameter '_maxChequeValue' of EtherCheque.SetMaxChequeValue (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#129) is not in mixedCase
Function 'EtherCheque.SetMaxAttempt' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#133-137) is not in mixedCase
Parameter '_maxAttempt' of EtherCheque.SetMaxAttempt (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#133) is not in mixedCase
Function 'EtherCheque.UpdateMaintenance' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#137-138) is not in mixedCase
Parameter '_isMaintaining' of EtherCheque.UpdateMaintenance (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#137) is not in mixedCase
Function 'EtherCheque.WithdrawEther' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#138-152) is not in mixedCase
Parameter '_sendTo' of EtherCheque.WithdrawEther (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#138-139) is not in mixedCase
Parameter '_amount' of EtherCheque.WithdrawEther (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#139) is not in mixedCase
Function 'EtherCheque.RefundChequeById' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#154-178) is not in mixedCase
Parameter '_chequeId' of EtherCheque.RefundChequeById (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#155) is not in mixedCase
Function 'EtherCheque.RefundChequeByHash' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#178-202) is not in mixedCase
Parameter '_chequeIdHash' of EtherCheque.RefundChequeByHash (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#179) is not in mixedCase
Function 'EtherCheque.GetChequeInfoByHash' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#202-223) is not in mixedCase
Parameter '_chequeIdHash' of EtherCheque.GetChequeInfoByHash (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#203) is not in mixedCase
Function 'EtherCheque.VerifyCheque' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#224-241) is not in mixedCase
Parameter '_chequeId' of EtherCheque.VerifyCheque (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#224) is not in mixedCase
Parameter '_pin' of EtherCheque.VerifyCheque (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#224-225) is not in mixedCase
Function 'EtherCheque.GetChequeInfo' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#242-264) is not in mixedCase
Parameter '_chequeId' of EtherCheque.GetChequeInfo (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#242-244) is not in mixedCase
Function 'EtherCheque.Create' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#264-317) is not in mixedCase
Parameter '_chequeIdHash' of EtherCheque.Create (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#265) is not in mixedCase
Parameter '_pinHash' of EtherCheque.Create (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#265) is not in mixedCase
Parameter '_expiringPeriod' of EtherCheque.Create (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#266) is not in mixedCase
Function 'EtherCheque.Redeem' (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#317-361) is not in mixedCase
Parameter '_chequeId' of EtherCheque.Redeem (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#317-318) is not in mixedCase
Parameter '_pin' of EtherCheque.Redeem (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#318) is not in mixedCase
Parameter '_sendTo' of EtherCheque.Redeem (/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol#318) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x4f75836e2d0ff46513532d276e0475543b43d308.sol analyzed (1 contracts), 70 result(s) found