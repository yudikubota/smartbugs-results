INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:2:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract CardMintingFacilitator {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:3:36: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x08584271Df3D0249C2C06AC1bC1237A1Dd30cb9a'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    CardConfig schema = CardConfig(0x08584271df3d0249c2c06ac1bc1237a1dd30cb9a); 
                                   ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:4:49: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x677aA1dc08B9429c595efD4425b2D218cC22fD6E'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    EtherGenCore storageContract = EtherGenCore(0x677aa1dc08b9429c595efd4425b2d218cc22fd6e);
                                                ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:10:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:10:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:19:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:19:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:30:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:30:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:34:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:34:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:40:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:40:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:50:33: Warning: "sha3" has been deprecated in favour of "keccak256"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:50:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:52:37: Warning: "sha3" has been deprecated in favour of "keccak256"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:52:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:69:37: Warning: "sha3" has been deprecated in favour of "keccak256"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:69:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                    ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:89:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:89:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:96:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:96:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:114:29: Warning: "sha3" has been deprecated in favour of "keccak256"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:114:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                            ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:126:33: Warning: "sha3" has been deprecated in favour of "keccak256"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:126:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                ^---------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:202:63: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xC3D2736b3E4f0f78457D75b3b5f0191a14e8BD57'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    MappedMarketplace marketplaceContract = MappedMarketplace(0xc3d2736b3e4f0f78457d75b3b5f0191a14e8bd57);
                                                              ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:249:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:378:91: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xD9861D9a6111bfBB9235a71151f654D0Fe7Ed954'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    TransferRestrictionVerifier transferRestrictionVerifier = TransferRestrictionVerifier(0xd9861d9a6111bfbb9235a71151f654d0fe7ed954); 
                                                                                          ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:407:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, newOwner, castCardId); // Emit Event
        ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:420:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(currentOwner, newOwner, castCardId); // Emit Event
        ^------------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:428:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, approved, castCardId); // Emit Event
        ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:797:63: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xC3D2736b3E4f0f78457D75b3b5f0191a14e8BD57'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    MappedMarketplace marketplaceContract = MappedMarketplace(0xc3d2736b3e4f0f78457d75b3b5f0191a14e8bd57);
                                                              ^----------------------------------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:969:24: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.transfer(this.balance);
                       ^----------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:10:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:19:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:30:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:34:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:40:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:50:38: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                     ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:52:42: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                         ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:69:42: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
                randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                         ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:89:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:96:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:114:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                 ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:126:38: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            randomSeed = uint32(sha3(block.blockhash(block.number), randomSeed));
                                     ^-------------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:566:29: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getCostForRace(uint8 race) public constant returns (uint8 cost) {
                            ^--------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:582:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getSpellAbilityCost(uint8 spell) public constant returns (uint24 cost) {
                                 ^---------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:627:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getRaceMutationCost(Race race, uint8 mutation) public constant returns (uint24 cost) {
                                 ^-------^
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:532:5: Warning: Function state mutability can be restricted to pure
    function getType(uint32 randomSeed) public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:540:5: Warning: Function state mutability can be restricted to pure
    function getRace(uint32 randomSeed) public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:544:5: Warning: Function state mutability can be restricted to pure
    function getTrait(uint32 randomSeed) public constant returns (uint8) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:566:5: Warning: Function state mutability can be restricted to pure
    function getCostForRace(uint8 race) public constant returns (uint8 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:570:5: Warning: Function state mutability can be restricted to pure
    function getCostForTrait(uint8 trait) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:582:5: Warning: Function state mutability can be restricted to pure
    function getSpellAbilityCost(uint8 spell) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:591:5: Warning: Function state mutability can be restricted to pure
    function getNeutralMutationCost(uint8 mutation) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:627:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutationCost(Race race, uint8 mutation) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:634:5: Warning: Function state mutability can be restricted to pure
    function getCostForHealth(uint8 health) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:638:5: Warning: Function state mutability can be restricted to pure
    function getHealthForCost(uint32 cost) public constant returns (uint32 health) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:646:5: Warning: Function state mutability can be restricted to pure
    function getCostForAttack(uint8 attack) public constant returns (uint24 cost) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:650:5: Warning: Function state mutability can be restricted to pure
    function getAttackForCost(uint32 cost) public constant returns (uint32 attack) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:669:5: Warning: Function state mutability can be restricted to pure
    function getSpell(uint32 randomSeed) public constant returns (Spells spell) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:681:5: Warning: Function state mutability can be restricted to pure
    function getMutation(uint32 randomSeed) public constant returns (Mutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:691:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:700:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:709:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:718:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:727:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:736:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:745:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:754:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:763:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:772:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:781:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:790:5: Warning: Function state mutability can be restricted to pure
    function getRaceMutation(uint32 randomSeed) public constant returns (RaceMutations mutation) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol:872:5: Warning: Function state mutability can be restricted to pure
    function getCurrentPrice(uint128 startPrice, uint128 endPrice, uint24 priceChangeDuration, uint64 secondsSinceListing) public constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
MappedMarketplace.isWhitelisted (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#962-969) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
ERC721 (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#265-293) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#271-272)
	-transfer (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#272-274)
	-transferFrom (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#274-276)
EtherGenCore (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#375-533) has incorrect ERC20 function interface(s):
	-approve (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#431-437)
	-transfer (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#406-415)
	-transferFrom (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#416-431)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
CardMintingFacilitator.generateRandomCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#7-27) uses a dangerous strict equality:
	- cardDetails[0] == uint8(CardConfig.Type.Monster)
	- randomSeed % 200 == 13
CardMintingFacilitator.generateRandomCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#7-27) uses a dangerous strict equality:
	- cardDetails[0] == uint8(CardConfig.Type.Monster)
	- randomSeed % 200 == 13
CardMintingFacilitator.generateRandomMonster (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#27-109) uses a dangerous strict equality:
	- bool(randomSeed % 3 == 0)
	- cardDetails[6] == 0
	- cardDetails[6] > 0 && cardDetails[7] == 0 && cardDetails[6] != newMutation
	- cardDetails[6] > 0 && cardDetails[7] > 0 && cardDetails[8] == 0 && cardDetails[6] != newMutation && cardDetails[7] != newMutation
	- cardDetails[9] == 0
	- cardDetails[9] > 0 && cardDetails[10] == 0 && cardDetails[9] != newMutation
	- cardDetails[9] > 0 && cardDetails[10] > 0 && cardDetails[11] == 0 && cardDetails[9] != newMutation && cardDetails[10] != newMutation
CardMintingFacilitator.generateRandomCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#7-27) uses a dangerous strict equality:
	- cardDetails[0] == uint8(CardConfig.Type.Monster)
	- randomSeed % 200 == 13
CardMintingFacilitator.generateRandomMonster (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#27-109) uses a dangerous strict equality:
	- bool(randomSeed % 3 == 0)
	- cardDetails[6] == 0
	- cardDetails[6] > 0 && cardDetails[7] == 0 && cardDetails[6] != newMutation
	- cardDetails[6] > 0 && cardDetails[7] > 0 && cardDetails[8] == 0 && cardDetails[6] != newMutation && cardDetails[7] != newMutation
	- cardDetails[9] == 0
	- cardDetails[9] > 0 && cardDetails[10] == 0 && cardDetails[9] != newMutation
	- cardDetails[9] > 0 && cardDetails[10] > 0 && cardDetails[11] == 0 && cardDetails[9] != newMutation && cardDetails[10] != newMutation
CardMintingFacilitator.generateRandomSpell (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#110-150) uses a dangerous strict equality:
	- cardDetails[9] == 0
	- cardDetails[9] > 0 && cardDetails[10] == 0 && cardDetails[9] != newAbility
	- cardDetails[9] > 0 && cardDetails[10] > 0 && cardDetails[11] == 0 && cardDetails[9] != newAbility && cardDetails[10] != newAbility
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in LimitedEditionSeedCardsDistributor.listNextFourCards (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#214-233):
	External calls:
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229)
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229-230)
	State variables written after the call(s):
	- mintedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229-230)
Reentrancy in LimitedEditionSeedCardsDistributor.listNextFourCards (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#214-233):
	External calls:
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229)
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229-230)
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#230)
	State variables written after the call(s):
	- mintedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#230)
Reentrancy in LimitedEditionSeedCardsDistributor.listNextFourCards (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#214-233):
	External calls:
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229)
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#229-230)
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#230)
	- listSingleCard() (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#230-231)
	State variables written after the call(s):
	- mintedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#230-231)
	- nextMarketListingTimeStamp (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#232-233)
Reentrancy in LimitedEditionSeedCardsDistributor.listSingleCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#233-248):
	External calls:
	- cardInfo = storageContract.getCard(cardId) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#235-237)
	- marketplaceContract.listCard(cardId,startPrice,endPrice,86400) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#241-245)
	State variables written after the call(s):
	- mintedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#245-247)
	- mintedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#247-248)
Reentrancy in LimitedEditionSeedCardsDistributor.mintNextCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#208-214):
	External calls:
	- newCard = generateRandomCard(uint32(storageContract.totalSupply() * now)) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#209-212)
	State variables written after the call(s):
	- cardsMinted (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#212-213)
Reentrancy in MappedMarketplace.purchaseCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#872-889):
	External calls:
	- seller = storageContract.ownerOf(cardId) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#877)
	State variables written after the call(s):
	- listedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#878)
	- listings (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#878)
Reentrancy in MappedMarketplace.removeListing (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#904-906):
	External calls:
	- require(bool)(storageContract.ownerOf(cardId) == msg.sender || (now - listings[cardId].listTime) > removalDuration) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#904-906)
	State variables written after the call(s):
	- listedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#906)
	- listings (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#906)
Reentrancy in EtherGenCore.transfer (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#406-415):
	External calls:
	- require(bool)(transferRestrictionVerifier.isAvailableForTransfer(castCardId)) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#411-413)
	State variables written after the call(s):
	- cardIdMapping (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#413-414)
	- cardIdMapping (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#414)
	- playersCollections (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#413-414)
	- playersCollections (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#414)
Reentrancy in EtherGenCore.transferFrom (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#416-431):
	External calls:
	- require(bool)(transferRestrictionVerifier.isAvailableForTransfer(castCardId)) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#425-427)
	State variables written after the call(s):
	- cardIdMapping (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#427-428)
	- cardIdMapping (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#428)
	- playersCollections (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#427-428)
	- playersCollections (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#428)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
card in EtherGenCore.mintCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#473-474) is a local variable never initialiazed
totalCost in CardMintingFacilitator.generateRandomSpell (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#114) is a local variable never initialiazed
totalCost in CardMintingFacilitator.generateRandomMonster (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#30) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
MappedMarketplace.getListings has external calls inside a loop:
	- cardDetails[i] = storageContract.getCard(listing.cardId) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#932)
MappedMarketplace.getListings has external calls inside a loop:
	- cardOwners[i] = storageContract.ownerOf(listing.cardId) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#932-934)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in MappedMarketplace.listCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#851-869):
	External calls:
	- require(bool)(storageContract.ownerOf(cardId) == msg.sender) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#855)
	- require(bool)(storageContract.isCardTradeable(cardId)) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#855)
	- require(bool)(transferRestrictionVerifier.isAvailableForTransfer(cardId)) (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#855-857)
	State variables written after the call(s):
	- listedCardIds (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#867-869)
	- listings (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#865-866)
	- listings (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#867-869)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
MappedMarketplace.isWhitelisted uses assembly (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#962-969)
	- /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#964-967
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#10-11:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#19-20:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#30-31:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#34-35:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#40-42:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#50-51:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#52-54:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#69-71:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#90:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#97:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#116:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#128-129:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
LimitedEditionSeedCardsDistributor.fallback (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#253-254) should be declared external
ERC721.totalSupply (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#266-267) should be declared external
EtherGenCore.totalSupply (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#391-394) should be declared external
ERC721.balanceOf (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#267-268) should be declared external
EtherGenCore.balanceOf (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#399-402) should be declared external
PlayersCollectionStorage.getPlayersCollection (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#326-353) should be declared external
PlayersCollectionStorage.getCard (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#353-370) should be declared external
CardConfig.getType (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#545-551) should be declared external
CardConfig.getRace (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#552-554) should be declared external
CardConfig.getTrait (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#554-556) should be declared external
CardConfig.getCostForRace (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#580-586) should be declared external
CardConfig.getCostForTrait (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#586-588) should be declared external
CardConfig.getSpellAbility (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#588-598) should be declared external
CardConfig.getNeutralMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#600-603) should be declared external
CardConfig.getMutationForRace (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#606-646) should be declared external
CardConfig.getCostForHealth (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#652-661) should be declared external
CardConfig.getHealthForCost (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#661-663) should be declared external
CardConfig.getCostForAttack (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#663-664) should be declared external
CardConfig.getAttackForCost (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#664-665) should be declared external
SpellAbilities.getSpell (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#678-681) should be declared external
SharedNeutralMutations.getMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#698-701) should be declared external
DragonMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#707-710) should be declared external
SpiderlingMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#716-719) should be declared external
VampireMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#727-732) should be declared external
DemonMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#736-741) should be declared external
HumanoidMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#745-750) should be declared external
BeastMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#754-759) should be declared external
UndeadMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#763-768) should be declared external
SerpentMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#772-777) should be declared external
MechMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#781-787) should be declared external
GolemMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#790-795) should be declared external
ElementalMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#797-800) should be declared external
ParasiteMutations.getRaceMutation (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#806-808) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Constant 'LimitedEditionSeedCardsDistributor.mintingLimit' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#196) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'LimitedEditionSeedCardsDistributor.startingPriceMultiplier' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#196-199) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'LimitedEditionSeedCardsDistributor.endPriceMultiplier' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#200-202) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CardConfig.numRaces' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#540-541) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CardConfig.numTraits' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#544-545) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SpellAbilities.numSpells' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#678) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SharedNeutralMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#697) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DragonMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#706) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SpiderlingMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#715-716) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'VampireMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#725) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DemonMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#734-736) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'HumanoidMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#743-745) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'BeastMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#752-754) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'UndeadMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#761-763) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SerpentMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#770-772) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'MechMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#781) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GolemMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#790) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ElementalMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#797) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'ParasiteMutations.numMutations' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#806) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'MappedMarketplace.removalDuration' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#828-829) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'MappedMarketplace.marketCut' (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#832-833) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
ERC721 (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#265-293) does not mark important ERC20 parameters as 'indexed':
	-Transfer (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#276-279) does not index parameter 'from'
	-Transfer (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#276-279) does not index parameter 'to'
	-Approval (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#279) does not index parameter 'owner'
	-Approval (/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol#279) does not index parameter 'approved'
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unindexed-erc20-event-parameters[0m
INFO:Slither:/unique_chucks/10/0xaac277020580e1e9b5bf68d979c1c20e51c7e1d9.sol analyzed (22 contracts), 89 result(s) found