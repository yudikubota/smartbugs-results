INFO:Slither:Compilation warnings/errors on /unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:286:5: Warning: Use of the "var" keyword is deprecated.
    var timestamp =  proofs[sha256];
    ^-----------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:8:9: Warning: This declaration shadows an existing declaration.
        struct DateTime {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:3:1: The shadowed declaration is here:
contract DateTime {
^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:273:21: Warning: This declaration shadows a builtin symbol.
  function notarize(string sha256) {
                    ^-----------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:285:19: Warning: This declaration shadows a builtin symbol.
  function verify(string sha256) constant returns (string) {
                  ^-----------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:27:9: Warning: No visibility specified. Defaulting to "public". 
        function isLeapYear(uint16 year) constant returns (bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:40:9: Warning: No visibility specified. Defaulting to "public". 
        function leapYearsBefore(uint year) constant returns (uint) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:45:9: Warning: No visibility specified. Defaulting to "public". 
        function getDaysInMonth(uint8 month, uint16 year) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:105:9: Warning: No visibility specified. Defaulting to "public". 
        function getYear(uint timestamp) constant returns (uint16) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:129:9: Warning: No visibility specified. Defaulting to "public". 
        function getMonth(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:133:9: Warning: No visibility specified. Defaulting to "public". 
        function getDay(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:137:9: Warning: No visibility specified. Defaulting to "public". 
        function getHour(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:141:9: Warning: No visibility specified. Defaulting to "public". 
        function getMinute(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:145:9: Warning: No visibility specified. Defaulting to "public". 
        function getSecond(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:149:9: Warning: No visibility specified. Defaulting to "public". 
        function getWeekday(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:153:9: Warning: No visibility specified. Defaulting to "public". 
        function toTimestamp(uint16 year, uint8 month, uint8 day) constant returns (uint timestamp) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:157:9: Warning: No visibility specified. Defaulting to "public". 
        function toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour) constant returns (uint timestamp) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:161:9: Warning: No visibility specified. Defaulting to "public". 
        function toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute) constant returns (uint timestamp) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:165:9: Warning: No visibility specified. Defaulting to "public". 
        function toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second) constant returns (uint timestamp) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:223:5: Warning: No visibility specified. Defaulting to "public". 
    function uintToString(uint v) constant returns (string str) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:273:3: Warning: No visibility specified. Defaulting to "public". 
  function notarize(string sha256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:285:3: Warning: No visibility specified. Defaulting to "public". 
  function verify(string sha256) constant returns (string) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:27:9: Warning: Function state mutability can be restricted to pure
        function isLeapYear(uint16 year) constant returns (bool) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:40:9: Warning: Function state mutability can be restricted to pure
        function leapYearsBefore(uint year) constant returns (uint) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:60:9: Warning: Function state mutability can be restricted to view
        function parseTimestamp(uint timestamp) internal  returns (DateTime dt) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:130:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                return parseTimestamp(timestamp).month;
                       ^-----------------------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:134:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                return parseTimestamp(timestamp).day;
                       ^-----------------------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:137:9: Warning: Function state mutability can be restricted to pure
        function getHour(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:141:9: Warning: Function state mutability can be restricted to pure
        function getMinute(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:145:9: Warning: Function state mutability can be restricted to pure
        function getSecond(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:149:9: Warning: Function state mutability can be restricted to pure
        function getWeekday(uint timestamp) constant returns (uint8) {
        ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:223:5: Warning: Function state mutability can be restricted to pure
    function uintToString(uint v) constant returns (string str) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:240:1: Warning: Function state mutability can be restricted to pure
function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string){
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:299:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat(uintToString(year) , "-" , uintToString(month),"-",uintToString(day));
        ^----^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:299:18: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat(uintToString(year) , "-" , uintToString(month),"-",uintToString(day));
                 ^-----------------------------------------------------------------------------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:300:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat(result," ");
        ^----^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:300:18: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat(result," ");
                 ^-------------------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:301:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat( uintToString(hour) , ":" , uintToString(minute),":",uintToString(second));
        ^----^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:301:18: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat( uintToString(hour) , ":" , uintToString(minute),":",uintToString(second));
                 ^----------------------------------------------------------------------------------^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:302:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat(result," UTC");
        ^----^
/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:302:18: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        result = strConcat(result," UTC");
                 ^----------------------^

INFO:Detectors:[93m
ProofOfExistence.verify (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#293-312) is declared view but changes state variables:
	- ProofOfExistence.result
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
ProofOfExistence.notarize (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#284-292) uses a dangerous strict equality:
	- proofs[sha256] == 0
ProofOfExistence.notarize (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#284-292) uses a dangerous strict equality:
	- proofs[sha256] == 0
ProofOfExistence.verify (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#293-312) uses a dangerous strict equality:
	- timestamp == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
ProofOfExistence.notarize.sha256 (local variable @ /unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#284-285) shadows built-in symbol "sha256"
ProofOfExistence.verify.sha256 (local variable @ /unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#293-294) shadows built-in symbol "sha256"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in ProofOfExistence.verify (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#293-312):
	External calls:
	- year = dt.getYear(timestamp) (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#299)
	- month = dt.getMonth(timestamp) (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#299-300)
	- day = dt.getDay(timestamp) (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#300-301)
	- hour = dt.getHour(timestamp) (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#301)
	- minute = dt.getMinute(timestamp) (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#301)
	- second = dt.getSecond(timestamp) (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#302-303)
	State variables written after the call(s):
	- result (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#306-312)
	- result (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol)
	- result (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol)
	- result (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ProofOfExistence.uintToString (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#228-244) uses timestamp for comparisons
	Dangerous comparisons:
	- v != 0 (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#234-240)
ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#245-262) uses timestamp for comparisons
	Dangerous comparisons:
	- i < _be.length (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#261-262)
	- i < _ba.length (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#253-254)
	- i < _bc.length (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#257-258)
ProofOfExistence.notarize (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#284-292) uses timestamp for comparisons
	Dangerous comparisons:
	- proofs[sha256] == 0 (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#288-292)
ProofOfExistence.verify (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#293-312) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp == 0 (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#295-312)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
DateTime.getMonth (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#133-135) should be declared external
DateTime.getDay (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#137-139) should be declared external
DateTime.toTimestamp (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#154-158) should be declared external
DateTime.toTimestamp (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#158-162) should be declared external
DateTime.toTimestamp (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#162-166) should be declared external
ProofOfExistence.notarize (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#284-292) should be declared external
ProofOfExistence.verify (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#293-312) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol:
	- pragma solidity^0.4.2 (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_a' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#245) is not in mixedCase
Parameter '_b' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#245-246) is not in mixedCase
Parameter '_c' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#246) is not in mixedCase
Parameter '_d' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#246) is not in mixedCase
Parameter '_e' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#246) is not in mixedCase
Parameter '_a' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#265) is not in mixedCase
Parameter '_b' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#265) is not in mixedCase
Parameter '_c' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#265) is not in mixedCase
Parameter '_d' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#265) is not in mixedCase
Parameter '_a' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#270) is not in mixedCase
Parameter '_b' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#270-271) is not in mixedCase
Parameter '_c' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#271) is not in mixedCase
Parameter '_a' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#274-275) is not in mixedCase
Parameter '_b' of ProofOfExistence.strConcat (/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol#275-276) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/45/0x64c6000e088bfe297cb7c8a1fcaf01c440153cb9.sol analyzed (2 contracts), 32 result(s) found