INFO:Slither:Compilation warnings/errors on /unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:149:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:264:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function _VecreumToken() public onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:175:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:264:37: Warning: Modifier-style base constructor call without arguments.
    function _VecreumToken() public onlyOwner{
                                    ^-------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:293:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(this), owner, tokensMinted); 
        ^------------------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:304:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );
                              ^--------------------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:337:15: Warning: Invoking events without "emit" prefix is deprecated.
              Mint(msg.sender, reward_amount, epochCount, challengeNumber );
              ^-----------------------------------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:463:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);
                         ^------------------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:472:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);
                           ^------------------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:526:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, tokens);
        ^------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:554:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:588:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);
        ^------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:626:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:371:25: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
      challengeNumber = block.blockhash(block.number - 1);
                        ^-------------^
/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:461:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {
                                          ^----------------------^

INFO:Detectors:[93m
Contract locking ether found in /unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:
	Contract _VecreumToken has payable functions:
	 - fallback (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
_VecreumToken._BLOCKS_PER_READJUSTMENT should be constant (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#226-227)
_VecreumToken._MAXIMUM_TARGET should be constant (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#240-241)
_VecreumToken._MINIMUM_TARGET should be constant (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#230-232)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#390:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#96-98) should be declared external
_VecreumToken.totalSupply (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#510-512) should be declared external
ERC20Interface.balanceOf (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#98) should be declared external
_VecreumToken.balanceOf (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#520-524) should be declared external
_VecreumToken.allowance (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#622-628) should be declared external
ERC20Interface.allowance (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#98-102) should be declared external
ERC20Interface.transfer (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#102-104) should be declared external
_VecreumToken.transfer (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#542-550) should be declared external
_VecreumToken.approve (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#572-580) should be declared external
ERC20Interface.approve (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#104-107) should be declared external
_VecreumToken.transferFrom (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#602-614) should be declared external
ERC20Interface.transferFrom (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#107-109) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#133-137) should be declared external
Owned.transferOwnership (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#173-179) should be declared external
Owned.acceptOwnership (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#179-191) should be declared external
_VecreumToken.mint (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#304-350) should be declared external
_VecreumToken.getChallengeNumber (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#450-451) should be declared external
_VecreumToken.getMiningDifficulty (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#452-456) should be declared external
_VecreumToken.getMiningTarget (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#458-461) should be declared external
_VecreumToken.getMintDigest (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#472-484) should be declared external
_VecreumToken.checkMintSolution (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#486-500) should be declared external
_VecreumToken.approveAndCall (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#650-658) should be declared external
_VecreumToken.fallback (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol) should be declared external
_VecreumToken.transferAnyERC20Token (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol:
	- pragma solidity^0.4.18 (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#164-165) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#175) is not in mixedCase
Contract '_VecreumToken' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#205-662) is not in CapWords
Function '_VecreumToken._VecreumToken' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#279-304) is not in mixedCase
Parameter 'challenge_digest' of _VecreumToken.mint (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#306) is not in mixedCase
Function '_VecreumToken._startNewMiningEpoch' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#351-391) is not in mixedCase
Function '_VecreumToken._reAdjustDifficulty' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#396-443) is not in mixedCase
Parameter 'challenge_digest' of _VecreumToken.getMintDigest (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#472-474) is not in mixedCase
Parameter 'challenge_number' of _VecreumToken.getMintDigest (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#474) is not in mixedCase
Parameter 'challenge_digest' of _VecreumToken.checkMintSolution (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#486-488) is not in mixedCase
Parameter 'challenge_number' of _VecreumToken.checkMintSolution (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#488) is not in mixedCase
Variable '_VecreumToken._totalSupply' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#221-222) is not in mixedCase
Variable '_VecreumToken._BLOCKS_PER_READJUSTMENT' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#226-227) is not in mixedCase
Variable '_VecreumToken._MINIMUM_TARGET' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#230-232) is not in mixedCase
Variable '_VecreumToken._MAXIMUM_TARGET' (/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol#240-241) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xdcf456f2f46e2e8142e37d2ee3e8b745bcd6976b.sol analyzed (6 contracts), 43 result(s) found