INFO:Detectors:[93m
ANKRTokenVault.allocate (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#254-293) uses a dangerous strict equality:
	- require(bool,string)(token.balanceOf(address(this)) == totalAllocation,Token should not be allocated yet.)
ANKRTokenVault.allocate (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#254-293) uses a dangerous strict equality:
	- require(bool,string)(token.balanceOf(address(this)) == totalAllocation,Token should not be allocated yet.)
ANKRTokenVault.notLocked (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#217-221) uses a dangerous strict equality:
	- require(bool,string)(lockedAt == 0,lockedAt should be zero.)
	- require(bool,string)(lockedAt == 0,lockedAt should be zero.)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in ANKRTokenVault.distribute (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#293-308):
	External calls:
	- claimTokenReserve(marketingAddress) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#298)
	- claimTokenReserve(unLockedInvestorsIndices[i]) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#304-306)
	State variables written after the call(s):
	- claimed (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#304-306)
Reentrancy in ANKRTokenVault.preDistribute (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#340-343):
	External calls:
	- claimTokenReserve(opentokenAddress) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#341)
	- claimTokenReserve(tokenmanAddress) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#341)
	State variables written after the call(s):
	- claimed (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#341)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in ANKRTokenVault.allocate (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#254-293):
	External calls:
	- require(bool,string)(token.balanceOf(address(this)) == totalAllocation,Token should not be allocated yet.) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#256-258)
	State variables written after the call(s):
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#258)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#260)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#261)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#262)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#263-264)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#276-282)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#278-279)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#286-292)
	- allocations (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#289-291)
Reentrancy in ANKRTokenVault.distribute (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#293-308):
	External calls:
	- claimTokenReserve(marketingAddress) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#298)
	State variables written after the call(s):
	- lockedAt (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#306)
	- timeLocks (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#306)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ANKRTokenVault.distributeInvestorsReserve (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#361-371) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp.sub(lockedAt) > investorTimeLock,Still in locking period.) (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#365-366)
ANKRTokenVault.nonInvestorVestingStage (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#401-407) uses timestamp for comparisons
	Dangerous comparisons:
	- stage > othersVestingStages (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
ANKRTokenVault.communityReserveAllocation should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#152-154)
ANKRTokenVault.communityReserveWallet should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#145-146)
ANKRTokenVault.investorTimeLock should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#156-157)
ANKRTokenVault.marketingAddress should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#141-142)
ANKRTokenVault.marketingAllocation should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#148-149)
ANKRTokenVault.opentokenAddress should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#135-137)
ANKRTokenVault.opentokenAllocation should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#146-147)
ANKRTokenVault.othersTimeLock should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#159)
ANKRTokenVault.othersVestingStages should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#160-162)
ANKRTokenVault.teamReserveAllocation should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#149-152)
ANKRTokenVault.teamReserveWallet should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#142-145)
ANKRTokenVault.tokenmanAddress should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#138)
ANKRTokenVault.tokenmanAllocation should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#147-148)
ANKRTokenVault.totalAllocation should be constant (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#155-156)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.renounceOwnership (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#42-48) should be declared external
Ownable.transferOwnership (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#51-56) should be declared external
ERC20Basic.totalSupply (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#124) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#124-125) should be declared external
ERC20Basic.transfer (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#125-129) should be declared external
ANKRTokenVault.addUnlockedInvestor (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#235-243) should be declared external
ANKRTokenVault.addLockedInvestor (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#243-254) should be declared external
ANKRTokenVault.allocate (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#254-293) should be declared external
ANKRTokenVault.distribute (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#293-308) should be declared external
ANKRTokenVault.getTotalBalance (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#327-333) should be declared external
ANKRTokenVault.getLockedBalance (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#334-339) should be declared external
ANKRTokenVault.distributeInvestorsReserve (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#361-371) should be declared external
ANKRTokenVault.claimNonInvestorReserve (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#372-399) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol:
	- pragma solidity^0.4.23 (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Ownable.transferOwnership (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#52) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#60-68) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#60) is not in mixedCase
Parameter '_token' of ANKRTokenVault. (/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol#234) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x1d40c0998131f4a0254468eaf3ce8fc1f21d9da6.sol analyzed (4 contracts), 27 result(s) found