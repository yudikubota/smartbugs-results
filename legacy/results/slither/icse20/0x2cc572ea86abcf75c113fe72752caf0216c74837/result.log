INFO:Slither:Compilation warnings/errors on /unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:17:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned() public {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:65:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function YourMomTokenCrowdsale(string contractName, address ifSuccessfulSendTo, uint durationInDays, uint howManyTokensAnEtherCanBuy, address addressOfTokenUsedAsReward, address adressOfTokenHolder, uint crowdsaleStartTimeTimestamp, uint ifInFailSafeTimeInDaysAfterDeadlineToReclaimForgottenEther) public {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:4:2: Warning: Functions in interfaces should be declared external.
	function transferFrom(address _holder, address _receiver, uint amount) public returns (bool success);
	^---------------------------------------------------------------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:5:2: Warning: Functions in interfaces should be declared external.
	function allowance(address _owner, address _spender) public returns (uint256 remaining);
	^--------------------------------------------------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:6:2: Warning: Functions in interfaces should be declared external.
	function balanceOf(address _owner) public returns (uint256 balance);
	^------------------------------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:22:3: Warning: Invoking events without "emit" prefix is deprecated.
		TransferOwnership (owner, newOwner);
		^---------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:90:124: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
 ... this.balance ... 
     ^----------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:91:3: Warning: Invoking events without "emit" prefix is deprecated.
		TokenPurchase(msg.sender, msg.value, msg.value * price);	//Event to inform about the purchase
		^-----------------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:93:38: Warning: Invoking events without "emit" prefix is deprecated.
 ... FundWithdrawal(beneficiary, msg.value, true) ... 
     ^------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:101:3: Warning: Invoking events without "emit" prefix is deprecated.
		PurchasingAllowed(true);
		^---------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:113:3: Warning: Invoking events without "emit" prefix is deprecated.
		PurchasingAllowed(false);
		^----------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:123:6: Warning: Invoking events without "emit" prefix is deprecated.
					FundWithdrawal(beneficiary, amountRaised, true);
					^---------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:133:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				_etherAmount = this.balance;
				               ^----------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:135:5: Warning: Invoking events without "emit" prefix is deprecated.
				FundWithdrawal(beneficiary, _etherAmount, true);
				^---------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:140:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				_etherAmount = this.balance;
				               ^----------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:142:5: Warning: Invoking events without "emit" prefix is deprecated.
				FundWithdrawal(beneficiary, _etherAmount, true);
				^---------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:147:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				require(this.balance > 0 );	//Can't return ether if there is no ether on the contract
				        ^----------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:151:8: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				if(this.balance >= etherBalanceOf[msg.sender]) {	//If the contract has not enough either, it will send all it can
				   ^----------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:153:29: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
				} else { _etherAmount = this.balance; }				//Which is all the contract's balance
				                        ^----------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:157:5: Warning: Invoking events without "emit" prefix is deprecated.
				FundWithdrawal(msg.sender, _etherAmount, false);	//Call the event to inform the withdrawal
				^---------------------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:178:3: Warning: Invoking events without "emit" prefix is deprecated.
[91m		ExecutionError("Critical error");[0m
		^------------------------------^
/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:179:3: Warning: Invoking events without "emit" prefix is deprecated.
		FailSafeActivated(true);
		^---------------------^

INFO:Detectors:[93m
Reentrancy in YourMomTokenCrowdsale.Withdrawal (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#118-164):
	External calls:
	- require(bool)(tokenReward.balanceOf(msg.sender) >= balanceOf[msg.sender]) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#149)
	- require(bool)(tokenReward.allowance(msg.sender,this) >= balanceOf[msg.sender]) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#150)
	- require(bool)(tokenReward.transferFrom(msg.sender,tokenHolder,balanceOf[msg.sender])) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#151)
	State variables written after the call(s):
	- balanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#156)
	- etherBalanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#156-157)
Reentrancy in YourMomTokenCrowdsale.enablePurchase (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#98-111):
	External calls:
	- require(bool)(tokenReward.allowance(beneficiary,this) > 0) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#103-104)
	- initialContractAllowance = tokenReward.allowance(beneficiary,this) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#105-110)
	State variables written after the call(s):
	- allowanceSetted (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#111)
Reentrancy in YourMomTokenCrowdsale.fallback (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#79-98):
	External calls:
	- require(bool)(tokenReward.transferFrom(tokenHolder,msg.sender,msg.value * price)) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#84-85)
	State variables written after the call(s):
	- amountRaised (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#86)
Reentrancy in YourMomTokenCrowdsale.fallback (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#79-98):
	External calls:
	- require(bool)(tokenReward.transferFrom(tokenHolder,msg.sender,msg.value * price)) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#84-85)
	- currentContractAllowance = tokenReward.allowance(beneficiary,this) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#89-90)
	State variables written after the call(s):
	- failSafeMode (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#90-91)
	- purchasingAllowed (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#90-91)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in YourMomTokenCrowdsale.Withdrawal (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#118-164):
	External calls:
	- require(bool)(tokenReward.balanceOf(msg.sender) >= balanceOf[msg.sender]) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#149)
	- require(bool)(tokenReward.allowance(msg.sender,this) >= balanceOf[msg.sender]) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#150)
	- require(bool)(tokenReward.transferFrom(msg.sender,tokenHolder,balanceOf[msg.sender])) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#151)
	State variables written after the call(s):
	- _etherAmount (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#154-155)
	- _etherAmount (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#155)
Reentrancy in YourMomTokenCrowdsale.enablePurchase (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#98-111):
	External calls:
	- require(bool)(tokenReward.allowance(beneficiary,this) > 0) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#103-104)
	- initialContractAllowance = tokenReward.allowance(beneficiary,this) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#105-110)
	State variables written after the call(s):
	- currentContractAllowance (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#110-111)
	- initialContractAllowance (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#105-110)
Reentrancy in YourMomTokenCrowdsale.fallback (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#79-98):
	External calls:
	- require(bool)(tokenReward.transferFrom(tokenHolder,msg.sender,msg.value * price)) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#84-85)
	State variables written after the call(s):
	- balanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#88-89)
	- etherBalanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#87-88)
	- tokensIssued (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#87)
Reentrancy in YourMomTokenCrowdsale.fallback (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#79-98):
	External calls:
	- require(bool)(tokenReward.transferFrom(tokenHolder,msg.sender,msg.value * price)) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#84-85)
	- currentContractAllowance = tokenReward.allowance(beneficiary,this) (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#89-90)
	State variables written after the call(s):
	- currentContractAllowance (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#89-90)
	- currentContractAllowance (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#90-91)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
token.transferFrom (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#4-5) should be declared external
token.allowance (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#5-6) should be declared external
token.balanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#6-10) should be declared external
owned.transferOwnership (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#21-27) should be declared external
YourMomTokenCrowdsale.fallback (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#79-98) should be declared external
YourMomTokenCrowdsale.enablePurchase (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#98-111) should be declared external
YourMomTokenCrowdsale.disablePurchase (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#111-118) should be declared external
YourMomTokenCrowdsale.Withdrawal (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#118-164) should be declared external
YourMomTokenCrowdsale.name (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#185-186) should be declared external
YourMomTokenCrowdsale.tokenBalanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#186-187) should be declared external
YourMomTokenCrowdsale.etherContributionOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#187-188) should be declared external
YourMomTokenCrowdsale.currentPrice (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#188-189) should be declared external
YourMomTokenCrowdsale.discount (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#189-190) should be declared external
YourMomTokenCrowdsale.remainingTokens (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#190-191) should be declared external
YourMomTokenCrowdsale.crowdsaleStarted (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#191-192) should be declared external
YourMomTokenCrowdsale.reclaimEtherDeadline (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol:
	- pragma solidity^0.4.16 (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'token' (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#3-10) is not in CapWords
Contract 'owned' (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#10-34) is not in CapWords
Function 'YourMomTokenCrowdsale.YourMomTokenCrowdsale' (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#65-78) is not in mixedCase
Function 'YourMomTokenCrowdsale.Withdrawal' (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#118-164) is not in mixedCase
Function 'YourMomTokenCrowdsale._currentTokenRewardCalculator' (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#164-174) is not in mixedCase
Function 'YourMomTokenCrowdsale._activateFailSafe' (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#174-185) is not in mixedCase
Parameter '_owner' of YourMomTokenCrowdsale.tokenBalanceOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#186) is not in mixedCase
Parameter '_owner' of YourMomTokenCrowdsale.etherContributionOf (/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol#187) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x2cc572ea86abcf75c113fe72752caf0216c74837.sol analyzed (3 contracts), 33 result(s) found