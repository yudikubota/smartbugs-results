INFO:Slither:Compilation warnings/errors on /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:66:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() { owner = msg.sender; }
    ^--------------------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:100:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Locksmith() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:13:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        lock = sha3(sha3(key),receiver);
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:13:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha3(sha3(key),receiver);
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:13:21: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        lock = sha3(sha3(key),receiver);
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:13:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        lock = sha3(sha3(key),receiver);
               ^----------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:13:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha3(sha3(key),receiver);
               ^----------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:18:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha256(sha256(key),receiver);
                      ^---------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:18:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        lock = sha256(sha256(key),receiver);
                      ^---------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:18:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha256(sha256(key),receiver);
               ^--------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:26: Warning: "sha3" has been deprecated in favour of "keccak256"
        lock = sha3(sha3(sha3(key),caller),receiver);
                         ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha3(sha3(sha3(key),caller),receiver);
                         ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        lock = sha3(sha3(sha3(key),caller),receiver);
                         ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        lock = sha3(sha3(sha3(key),caller),receiver);
                    ^--------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha3(sha3(sha3(key),caller),receiver);
                    ^--------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:16: Warning: "sha3" has been deprecated in favour of "keccak256"
        lock = sha3(sha3(sha3(key),caller),receiver);
               ^-----------------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:23:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha3(sha3(sha3(key),caller),receiver);
               ^-----------------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:28:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha256(sha256(sha256(key),caller),receiver);
                             ^---------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:28:30: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        lock = sha256(sha256(sha256(key),caller),receiver);
                             ^---------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:28:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha256(sha256(sha256(key),caller),receiver);
                      ^------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:28:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        lock = sha256(sha256(sha256(key),caller),receiver);
               ^-----------------------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:34:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        sha256_hash = sha256(key);  
                      ^---------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:34:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        sha256_hash = sha256(key);  
                      ^---------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:36:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            sha256_hash = sha256(sha256_hash);  
                          ^-----------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:36:27: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            sha256_hash = sha256(sha256_hash);  
                          ^-----------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:43:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        sha3_hash = sha3(key);  
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:43:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        sha3_hash = sha3(key);  
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:43:21: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        sha3_hash = sha3(key);  
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:45:25: Warning: "sha3" has been deprecated in favour of "keccak256"
            sha3_hash = sha3(sha3_hash);  
                        ^-------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:45:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            sha3_hash = sha3(sha3_hash);  
                        ^-------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:45:25: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            sha3_hash = sha3(sha3_hash);  
                        ^-------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:52:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        r160_hash = sha3(key);  
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:52:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        r160_hash = sha3(key);  
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:52:21: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        r160_hash = sha3(key);  
                    ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:54:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            r160_hash = ripemd160(r160_hash);  
                        ^------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:54:25: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
            r160_hash = ripemd160(r160_hash);  
                        ^------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:113:26: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 k = sha3(sha3(key),msg.sender);
                         ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:113:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 k = sha3(sha3(key),msg.sender);
                         ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:113:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 k = sha3(sha3(key),msg.sender);
                         ^-------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:113:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 k = sha3(sha3(key),msg.sender);
                    ^------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:113:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 k = sha3(sha3(key),msg.sender);
                    ^------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:114:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (uint(receiver) > 0) k = sha3(k,receiver);
                                    ^--------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:114:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (uint(receiver) > 0) k = sha3(k,receiver);
                                    ^--------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:119:13: Warning: Invoking events without "emit" prefix is deprecated.
            Unlock(msg.sender, key, lock);
            ^---------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:130:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if (this.balance > 0)
                ^----------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:131:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                require(owner.send(this.balance));
                                   ^----------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:138:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance >= value && value > 0);
                ^----------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:144:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogEvent(nonce++, msg.sender, msg.sig, msg.data, now, tx.gasprice);
        ^----------------------------------------------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:154:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(msg.sender, msg.value);
        ^----------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:5:5: Warning: No visibility specified. Defaulting to "public". 
    function eccVerify(bytes32 hash, uint8 curve, bytes32 r, bytes32 s) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:11:5: Warning: No visibility specified. Defaulting to "public". 
    function calcBindedBlindHash3(string key, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function calcBindedBlindHash256(string key, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:21:5: Warning: No visibility specified. Defaulting to "public". 
    function calcDoubleBindedBlindHash3(string key, address caller, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:26:5: Warning: No visibility specified. Defaulting to "public". 
    function calcDoubleBindedBlindHash256(string key, address caller, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:31:5: Warning: No visibility specified. Defaulting to "public". 
    function hash_sha256(string key, uint rounds) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function hash_sha3(string key, uint rounds)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:49:5: Warning: No visibility specified. Defaulting to "public". 
    function hash_ripemd160(string key, uint rounds)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:66:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() { owner = msg.sender; }
    ^--------------------------------------^
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function Locksmith() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:104:5: Warning: No visibility specified. Defaulting to "public". 
    function setLock(bytes32 _lock, string _protocol) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:112:5: Warning: No visibility specified. Defaulting to "public". 
    function unlock(string key, address receiver, bytes32 newLock, string _protocol) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:136:5: Warning: No visibility specified. Defaulting to "public". 
    function sendTo(address _to, uint value) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function kill() onlyOwner { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:152:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:5:5: Warning: Function state mutability can be restricted to pure
    function eccVerify(bytes32 hash, uint8 curve, bytes32 r, bytes32 s) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:11:5: Warning: Function state mutability can be restricted to pure
    function calcBindedBlindHash3(string key, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:16:5: Warning: Function state mutability can be restricted to pure
    function calcBindedBlindHash256(string key, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:21:5: Warning: Function state mutability can be restricted to pure
    function calcDoubleBindedBlindHash3(string key, address caller, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:26:5: Warning: Function state mutability can be restricted to pure
    function calcDoubleBindedBlindHash256(string key, address caller, address receiver) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:31:5: Warning: Function state mutability can be restricted to pure
    function hash_sha256(string key, uint rounds) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:40:5: Warning: Function state mutability can be restricted to pure
    function hash_sha3(string key, uint rounds)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:49:5: Warning: Function state mutability can be restricted to pure
    function hash_ripemd160(string key, uint rounds)
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Locksmith.unlock (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#113-138) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(owner.send(this.balance)) (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#136-138)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#13-15:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#23-26:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#44:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#47-49:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#53-54:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#115-116:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#117:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
helper.eccVerify (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#5-11) should be declared external
helper.calcBindedBlindHash3 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#11-16) should be declared external
helper.calcBindedBlindHash256 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#16-21) should be declared external
helper.calcDoubleBindedBlindHash3 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#21-26) should be declared external
helper.calcDoubleBindedBlindHash256 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#26-31) should be declared external
helper.hash_sha256 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#31-40) should be declared external
helper.hash_sha3 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#40-49) should be declared external
helper.hash_ripemd160 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#49-61) should be declared external
Locksmith.setLock (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#105-113) should be declared external
Locksmith.unlock (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#113-138) should be declared external
Locksmith.sendTo (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#139-147) should be declared external
Locksmith.kill (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#153-157) should be declared external
Locksmith.fallback (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol:
	- pragma solidity^0.4.15 (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'helper' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#3-61) is not in CapWords
Function 'helper.hash_sha256' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#31-40) is not in mixedCase
Function 'helper.hash_sha3' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#40-49) is not in mixedCase
Function 'helper.hash_ripemd160' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#49-61) is not in mixedCase
Contract 'owned' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#61-71) is not in CapWords
Contract 'logger' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#71-85) is not in CapWords
Struct 'Locksmith.proof' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#94-100) is not in CapWords
Function 'Locksmith.Locksmith' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#104-105) is not in mixedCase
Parameter '_lock' of Locksmith.setLock (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#106-107) is not in mixedCase
Parameter '_protocol' of Locksmith.setLock (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#107) is not in mixedCase
Parameter '_protocol' of Locksmith.unlock (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#114-115) is not in mixedCase
Parameter '_to' of Locksmith.sendTo (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#139) is not in mixedCase
Variable 'Locksmith.m_proofs' (/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol#88) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xce51f6cac9fb2695d944f2d5e2699d68aa7b656e.sol analyzed (4 contracts), 35 result(s) found