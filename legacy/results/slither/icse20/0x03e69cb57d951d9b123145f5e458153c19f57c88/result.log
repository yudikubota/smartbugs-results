INFO:Detectors:[93m
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) uses a dangerous strict equality:
	- require(bool)(msg.sender == addOwner.initiator)
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) uses a dangerous strict equality:
	- require(bool)(msg.sender == addOwner.initiator)
GangMultisig.cancelFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#234-246) uses a dangerous strict equality:
	- require(bool)(msg.sender == finishMintingStruct.initiator)
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) uses a dangerous strict equality:
	- require(bool)(msg.sender == addOwner.initiator)
GangMultisig.cancelFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#234-246) uses a dangerous strict equality:
	- require(bool)(msg.sender == finishMintingStruct.initiator)
GangMultisig.cancelMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#157-169) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewMint.initiator)
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) uses a dangerous strict equality:
	- require(bool)(msg.sender == addOwner.initiator)
GangMultisig.cancelFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#234-246) uses a dangerous strict equality:
	- require(bool)(msg.sender == finishMintingStruct.initiator)
GangMultisig.cancelMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#157-169) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewMint.initiator)
GangMultisig.cancelNewOwnersCountRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#310-324) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewApproves.initiator)
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) uses a dangerous strict equality:
	- require(bool)(msg.sender == addOwner.initiator)
GangMultisig.cancelFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#234-246) uses a dangerous strict equality:
	- require(bool)(msg.sender == finishMintingStruct.initiator)
GangMultisig.cancelMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#157-169) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewMint.initiator)
GangMultisig.cancelNewOwnersCountRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#310-324) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewApproves.initiator)
GangMultisig.cancelRemoveOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#460-465) uses a dangerous strict equality:
	- require(bool)(msg.sender == removeOwners.initiator)
GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) uses a dangerous strict equality:
	- setNewMint.initiator == _oldOwner
	- setNewMint.confirmators[i] == _oldOwner
	- finishMintingStruct.initiator == _oldOwner
	- finishMintingStruct.confirmators[i] == _oldOwner
	- setNewApproves.initiator == _oldOwner
	- setNewApproves.confirmators[i] == _oldOwner
	- addOwner.initiator == _oldOwner
	- addOwner.confirmators[i] == _oldOwner
	- removeOwners.initiator == _oldOwner
	- removeOwners.confirmators[i] == _oldOwner
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) uses a dangerous strict equality:
	- require(bool)(msg.sender == addOwner.initiator)
GangMultisig.cancelFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#234-246) uses a dangerous strict equality:
	- require(bool)(msg.sender == finishMintingStruct.initiator)
GangMultisig.cancelMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#157-169) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewMint.initiator)
GangMultisig.cancelNewOwnersCountRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#310-324) uses a dangerous strict equality:
	- require(bool)(msg.sender == setNewApproves.initiator)
GangMultisig.cancelRemoveOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#460-465) uses a dangerous strict equality:
	- require(bool)(msg.sender == removeOwners.initiator)
GangMultisig.cancelRemoveOwnerRequest2 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#527-533) uses a dangerous strict equality:
	- require(bool)(msg.sender == removeOwners2.initiator)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in GangMultisig.ApproveFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#204-230):
	External calls:
	- token.finishMinting() (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#222-226)
	State variables written after the call(s):
	- finishMintingStruct (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#226)
	- mintingFinished (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#226-227)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
addr in GangMultisig.removeOwnerRequest2 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#484) is a local variable never initialiazed
addr in GangMultisig.removeOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#415) is a local variable never initialiazed
addr in GangMultisig.setNewMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#120-121) is a local variable never initialiazed
addr in GangMultisig.setNewOwnersCountToApprove (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#274) is a local variable never initialiazed
addr in GangMultisig.setAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#348-349) is a local variable never initialiazed
addr in GangMultisig.finishMintingRequestSetup (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#195) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Reentrancy in GangMultisig.constructor (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#30-50):
	External calls:
	- token.setupMultisig(address(this)) (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#46-47)
	State variables written after the call(s):
	- ownersCount (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#50)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
GangMultisig.lifeTime should be constant (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#27-29)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
TokenContract.mint (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#8-9) should be declared external
TokenContract.finishMinting (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#9-10) should be declared external
TokenContract.setupMultisig (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#10-14) should be declared external
GangMultisig.setNewMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#114-130) should be declared external
GangMultisig.approveNewMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#132-155) should be declared external
GangMultisig.cancelMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#157-169) should be declared external
GangMultisig.finishMintingRequestSetup (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#186-202) should be declared external
GangMultisig.ApproveFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#204-230) should be declared external
GangMultisig.cancelFinishMintingRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#234-246) should be declared external
GangMultisig.setNewOwnersCountToApprove (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#265-279) should be declared external
GangMultisig.approveNewOwnersCount (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#282-304) should be declared external
GangMultisig.cancelNewOwnersCountRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#310-324) should be declared external
GangMultisig.setAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#340-354) should be declared external
GangMultisig.approveAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#358-388) should be declared external
GangMultisig.cancelAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#390-396) should be declared external
GangMultisig.removeOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#408-421) should be declared external
GangMultisig.approveRemoveOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#424-457) should be declared external
GangMultisig.cancelRemoveOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#460-465) should be declared external
GangMultisig.removeOwnerRequest2 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#480-491) should be declared external
GangMultisig.approveRemoveOwnerRequest2 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#495-525) should be declared external
GangMultisig.cancelRemoveOwnerRequest2 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#527-533) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol:
	- pragma solidity^0.4.22 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_token' of GangMultisig. (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#30) is not in mixedCase
Parameter '_needApprovesToConfirm' of GangMultisig. (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#30-31) is not in mixedCase
Parameter '_owners' of GangMultisig. (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#31) is not in mixedCase
Parameter '_owners' of GangMultisig.addInitialOwners (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#54) is not in mixedCase
Parameter '_spender' of GangMultisig.setNewMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#114) is not in mixedCase
Parameter '_value' of GangMultisig.setNewMintRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#114) is not in mixedCase
Function 'GangMultisig.ApproveFinishMintingRequest' (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#204-230) is not in mixedCase
Parameter '_count' of GangMultisig.setNewOwnersCountToApprove (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#267) is not in mixedCase
Parameter '_newOwner' of GangMultisig.setAddOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#342) is not in mixedCase
Parameter '_removeOwner' of GangMultisig.removeOwnerRequest (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#408-411) is not in mixedCase
Parameter '_removeOwner' of GangMultisig.removeOwnerRequest2 (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#480) is not in mixedCase
Function 'GangMultisig._removeOwnersAproves' (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#537-671) is not in mixedCase
Parameter '_oldOwner' of GangMultisig._removeOwnersAproves (/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol#539) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/27/0x03e69cb57d951d9b123145f5e458153c19f57c88.sol analyzed (2 contracts), 51 result(s) found