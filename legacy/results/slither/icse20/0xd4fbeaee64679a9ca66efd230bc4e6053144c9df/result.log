INFO:Slither:Compilation warnings/errors on /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:62:4: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  	function DeepToken() {
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:74:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:75:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:76:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:77:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:86:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:94:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:95:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:96:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:97:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:98:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:107:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:108:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:116:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:117:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:125:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:126:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:135:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:80:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:102:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:111:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:120:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:129:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:62:4: Warning: No visibility specified. Defaulting to "public". 
  	function DeepToken() {
   ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:73:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:84:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:93:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:106:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:115:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:124:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:134:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:140:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
DeepToken (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#38-142) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#74-84)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#31-37) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#37:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#74:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#76:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#77:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#78:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#95:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#99:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#118:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#118:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
DeepToken.transfer (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#74-84) should be declared external
DeepToken.approve (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#85-93) should be declared external
DeepToken.transferFrom (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#94-107) should be declared external
DeepToken.burn (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#107-116) should be declared external
DeepToken.freeze (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#116-125) should be declared external
DeepToken.unfreeze (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#125-136) should be declared external
DeepToken.withdrawEther (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#140-142) should be declared external
DeepToken.fallback (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol:
	- pragma solidity^0.4.13 (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'DeepToken.DeepToken' (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#63-73) is not in mixedCase
Parameter '_to' of DeepToken.transfer (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#74) is not in mixedCase
Parameter '_value' of DeepToken.transfer (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#74) is not in mixedCase
Parameter '_spender' of DeepToken.approve (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#86-87) is not in mixedCase
Parameter '_value' of DeepToken.approve (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#87) is not in mixedCase
Parameter '_from' of DeepToken.transferFrom (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#94) is not in mixedCase
Parameter '_to' of DeepToken.transferFrom (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#94) is not in mixedCase
Parameter '_value' of DeepToken.transferFrom (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#94) is not in mixedCase
Parameter '_value' of DeepToken.burn (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#107) is not in mixedCase
Parameter '_value' of DeepToken.freeze (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#116) is not in mixedCase
Parameter '_value' of DeepToken.unfreeze (/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol#125-126) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/32/0xd4fbeaee64679a9ca66efd230bc4e6053144c9df.sol analyzed (2 contracts), 40 result(s) found