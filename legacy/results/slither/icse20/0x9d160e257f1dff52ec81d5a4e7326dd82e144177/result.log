INFO:Slither:Compilation warnings/errors on /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:222:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:274:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Exchange(uint _takerFee, address _feeAccount, VaultInterface _vault) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:337:9: Warning: This declaration shadows an existing declaration.
        OrderLibrary.Order memory order = OrderLibrary.createOrder(
        ^-----------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:336:5: The shadowed declaration is here:
    function order(address[2] addresses, uint[4] values) external {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:374:9: Warning: This declaration shadows an existing declaration.
        OrderLibrary.Order memory order = OrderLibrary.createOrder(addresses, values);
        ^-----------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:336:5: The shadowed declaration is here:
    function order(address[2] addresses, uint[4] values) external {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:393:9: Warning: This declaration shadows an existing declaration.
        OrderLibrary.Order memory order = OrderLibrary.createOrder(addresses, values);
        ^-----------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:336:5: The shadowed declaration is here:
    function order(address[2] addresses, uint[4] values) external {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:435:20: Warning: This declaration shadows an existing declaration.
    function trade(OrderLibrary.Order memory order, address taker, bytes signature, uint maxFillAmount) internal {
                   ^-----------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:336:5: The shadowed declaration is here:
    function order(address[2] addresses, uint[4] values) external {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:480:23: Warning: This declaration shadows an existing declaration.
    function canTrade(OrderLibrary.Order memory order, bytes signature, bytes32 hash)
                      ^-----------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:336:5: The shadowed declaration is here:
    function order(address[2] addresses, uint[4] values) external {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:521:30: Warning: This declaration shadows an existing declaration.
    function availableAmount(OrderLibrary.Order memory order, bytes32 hash) internal view returns (uint) {
                             ^-----------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:336:5: The shadowed declaration is here:
    function order(address[2] addresses, uint[4] values) external {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:45:5: Warning: Functions in interfaces should be declared external.
    function isOrdered(address user, bytes32 hash) public view returns (bool);
    ^------------------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:46:5: Warning: Functions in interfaces should be declared external.
    function vault() public view returns (VaultInterface);
    ^----------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:71:5: Warning: Functions in interfaces should be declared external.
    function tokenFallback(address from, uint value, bytes data) public;
    ^------------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:72:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address token, address user) public view returns (uint);
    ^-------------------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:145:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            hash = keccak256("\x19Ethereum Signed Message:\n32", hash);
                   ^-------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:147:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            hash = keccak256("\x19Ethereum Signed Message:\n\x20", hash);
                   ^---------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:156:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public HASH_SCHEME = keccak256(
                                          ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:183:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            keccak256(
            ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:181:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(
               ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:237:5: Warning: Functions in interfaces should be declared external.
    function totalSupply() public view returns (uint);
    ^------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:238:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address owner) public view returns (uint);
    ^-----------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:239:5: Warning: Functions in interfaces should be declared external.
    function allowance(address owner, address spender) public view returns (uint);
    ^----------------------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:240:5: Warning: Functions in interfaces should be declared external.
    function transfer(address to, uint value) public returns (bool);
    ^--------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:241:5: Warning: Functions in interfaces should be declared external.
    function transferFrom(address from, address to, uint value) public returns (bool);
    ^--------------------------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:242:5: Warning: Functions in interfaces should be declared external.
    function approve(address spender, uint value) public returns (bool);
    ^------------------------------------------------------------------^
/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:461:13: Warning: Return value of low-level calls not used.
            order.maker.call.gas(MAX_HOOK_GAS)(HookSubscriber(order.maker).tradeExecuted.selector, order.takerToken, fillAmount);
            ^------------------------------------------------------------------------------------------------------------------^

INFO:Detectors:[93m
SignatureValidator.isValidSignature (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#133-159) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in Exchange.trade (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#444-485):
	External calls:
	- require(bool)(canTrade(order,signature,hash)) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#448)
	- fillAmount = SafeMath.min256(maxFillAmount,availableAmount(order,hash)) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#450-451)
	- require(bool)(vault.balanceOf(order.takerToken,taker) >= fillAmount) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#455)
	- vault.transfer(order.makerToken,order.maker,feeAccount,tradeTakerFee) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#461)
	- vault.transfer(order.takerToken,taker,order.maker,fillAmount) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#464-467)
	- vault.transfer(order.makerToken,order.maker,taker,makeAmount.sub(tradeTakerFee)) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#467-470)
	State variables written after the call(s):
	- fills (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#471-475)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Exchange.withdraw (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#294-301) does not use the value returned by external calls:
	-ERC20(token).transfer(msg.sender,amount) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#300-301)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Exchange.cancel.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#327-332) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Exchange.order.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#344-350) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Exchange.canTrade.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#384-386) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Exchange.availableAmount.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#404-406) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Exchange.trade.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#444) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Exchange.canTrade.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#491-493) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Exchange.availableAmount.order (local variable @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#532-533) shadows:
	- Exchange.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369)
	- ExchangeInterface.order (function @ /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#35-37)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Exchange.order (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#343-369):
	External calls:
	- require(bool)(vault.isApproved(order.maker,this)) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#350-351)
	- require(bool)(vault.balanceOf(order.makerToken,order.maker) >= order.makerTokenAmount) (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#351-355)
	State variables written after the call(s):
	- orders (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#365)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
SignatureValidator.isValidSignature uses assembly (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#133-159)
	- /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#144-146
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ExchangeInterface.vault (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#46-52) should be declared external
Exchange.vault (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#430-431) should be declared external
VaultInterface.tokenFallback (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#72) should be declared external
VaultInterface.balanceOf (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#72-78) should be declared external
Ownable.transferOwnership (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#235-238) should be declared external
ERC20.totalSupply (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#240-241) should be declared external
ERC20.balanceOf (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#241) should be declared external
ERC20.allowance (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#242-246) should be declared external
ERC20.transfer (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#246-248) should be declared external
ERC20.transferFrom (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#248-254) should be declared external
ERC20.approve (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#254-257) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol:
	- pragma solidity^0.4.21 (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Exchange.trade (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#444-485):
	-order.maker.call.gas(MAX_HOOK_GAS)(HookSubscriber(order.maker).tradeExecuted.selector,order.takerToken,fillAmount) /unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#476-479
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#230-235) is not in mixedCase
Parameter '_newOwner' of Ownable.transferOwnership (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#237) is not in mixedCase
Parameter '_address' of Ownable.isOwner (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#238-239) is not in mixedCase
Function 'Exchange.Exchange' (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#281-286) is not in mixedCase
Parameter '_takerFee' of Exchange.Exchange (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#282) is not in mixedCase
Parameter '_feeAccount' of Exchange.Exchange (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#282) is not in mixedCase
Parameter '_vault' of Exchange.Exchange (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#282-283) is not in mixedCase
Parameter '_takerFee' of Exchange.setFees (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#418) is not in mixedCase
Parameter '_feeAccount' of Exchange.setFeeAccount (/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol#426) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/10/0x9d160e257f1dff52ec81d5a4e7326dd82e144177.sol analyzed (9 contracts), 34 result(s) found