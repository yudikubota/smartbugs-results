INFO:Slither:Compilation warnings/errors on /unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:100:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goo() public payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:915:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GooGameConfig() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:4:5: Warning: Functions in interfaces should be declared external.
    function totalSupply() public constant returns (uint);
    ^----------------------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:5:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address tokenOwner) public constant returns (uint balance);
    ^----------------------------------------------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:6:5: Warning: Functions in interfaces should be declared external.
    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);
    ^-----------------------------------------------------------------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:7:5: Warning: Functions in interfaces should be declared external.
    function transfer(address to, uint tokens) public returns (bool success);
    ^-----------------------------------------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:8:5: Warning: Functions in interfaces should be declared external.
    function approve(address spender, uint tokens) public returns (bool success);
    ^---------------------------------------------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:9:5: Warning: Functions in interfaces should be declared external.
    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    ^-----------------------------------------------------------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:102:32: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x21912E81d7EFf8bfF895302B45dA76f7F070e3b9'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        schema = GooGameConfig(0x21912e81d7eff8bff895302b45da76f7f070e3b9);
                               ^----------------------------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable { }
    ^--------------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:577:46: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        raffleTicketThatWon = addmod(uint256(block.blockhash(block.number-1)), seed, raffleTicketsBought);
                                             ^-------------^
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1015:5: Warning: Function state mutability can be restricted to pure
    function getWeakenedDefensePower(uint256 defendingPower) external constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1019:5: Warning: Function state mutability can be restricted to pure
    function validUnitId(uint256 unitId) external constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1023:5: Warning: Function state mutability can be restricted to pure
    function validUpgradeId(uint256 upgradeId) external constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1027:5: Warning: Function state mutability can be restricted to pure
    function validRareId(uint256 rareId) external constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1055:5: Warning: Function state mutability can be restricted to pure
    function productionUnitIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1059:5: Warning: Function state mutability can be restricted to pure
    function battleUnitIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1063:5: Warning: Function state mutability can be restricted to pure
    function upgradeIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:1067:5: Warning: Function state mutability can be restricted to pure
    function rareIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Goo.assignRafflePrize (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#569-583):
	External calls:
	- rareItemPrice[raffleRareId] = (schema.rareStartPrice(raffleRareId) * 21) / 20 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#572-574)
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(raffleRareId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#577-578)
	- upgradeUnitMultipliers(winner,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#579-583)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#579-583)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#579-583)
Reentrancy in Goo.attackPlayer (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#599-643):
	External calls:
	- (attackingPower,defendingPower,stealingPower) = getPlayersBattlePower(msg.sender,target) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#606-608)
	- defendingPower = schema.getWeakenedDefensePower(defendingPower) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#610-612)
	State variables written after the call(s):
	- battleCooldown (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#613-615)
	- battleCooldown (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#642)
Reentrancy in Goo.buyBasicUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#219-239):
	External calls:
	- require(bool)(schema.validUnitId(unitId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#221-222)
	- unitCost = schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#225-227)
	- require(bool)(schema.unitEthCost(unitId) == 0) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#229)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#232-233)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#232-233)
Reentrancy in Goo.buyBasicUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#219-239):
	External calls:
	- require(bool)(schema.validUnitId(unitId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#221-222)
	- unitCost = schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#225-227)
	- require(bool)(schema.unitEthCost(unitId) == 0) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#229)
	- schema.unitGooProduction(unitId) > 0 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#233-238)
	- increasePlayersGooProduction(getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#236-237)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#236-237)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#236-237)
	- unitsOwned (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#238-239)
Reentrancy in Goo.buyEthUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#240-271):
	External calls:
	- require(bool)(schema.validUnitId(unitId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#242)
	- unitCost = schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#245-247)
	- ethCost = SafeMath.mul(schema.unitEthCost(unitId),amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#248-250)
	- schema.unitGooProduction(unitId) > 0 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#265-269)
	- increasePlayersGooProduction(getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#267-269)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#267-269)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#267-269)
	- unitsOwned (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#269-271)
Reentrancy in Goo.buyRareItem (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#378-420):
	External calls:
	- require(bool)(schema.validRareId(rareId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#379-381)
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#391-393)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#393-394)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#396)
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#393-394)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#393-394)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#396)
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#396)
Reentrancy in Goo.buyRareItem (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#378-420):
	External calls:
	- require(bool)(schema.validRareId(rareId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#379-381)
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#391-393)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#393-394)
	- removeUnitMultipliers(previousOwner,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#402-403)
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#406-407)
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#414-415)
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#419-420)
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- rareItemOwner (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#418)
	- rareItemPrice (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#418)
	- totalGooProduction (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitAttackIncreases (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitAttackMultiplier (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitDefenseIncreases (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitDefenseMultiplier (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitGooProductionIncreases (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitGooProductionMultiplier (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitGooStealingIncreases (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- unitGooStealingMultiplier (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
Reentrancy in Goo.buyUpgrade (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#293-323):
	External calls:
	- require(bool)(schema.validUpgradeId(upgradeId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#297)
	- (gooCost,ethCost,upgradeClass,unitId,upgradeValue) = schema.getUpgradeInfo(upgradeId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#303-304)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#321-322)
	State variables written after the call(s):
	- upgradesOwned (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#322-323)
Reentrancy in Goo.sellUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#271-292):
	External calls:
	- unitSalePrice = (schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) * 3) / 4 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#273-277)
	- schema.unitGooProduction(unitId) > 0 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
	- reducePlayersGooProduction(msg.sender,getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
Reentrancy in Goo.updateGooConfig (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#815-823):
	External calls:
	- requireExistingUnitsSame(newSchema) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#821)
	- requireExistingUpgradesSame(newSchema) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#821-822)
	State variables written after the call(s):
	- schema (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#822-823)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
referalDivs in Goo.claimResearchDividends (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#458) is a local variable never initialiazed
existingCost in GooGameConfig.getGooCostForUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#1027) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitEthCost(startId) == newSchema.unitEthCost(startId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#831-834)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitGooProduction(startId) == newSchema.unitGooProduction(startId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#835-839)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitEthCost(startId) == newSchema.unitEthCost(startId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#843-845)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitAttack(startId) == newSchema.unitAttack(startId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#845-846)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitDefense(startId) == newSchema.unitDefense(startId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#846-848)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitStealingCapacity(startId) == newSchema.unitStealingCapacity(startId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#849-850)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- (oldGooCost,oldEthCost,oldClass,oldUnitId,oldValue) = schema.getUpgradeInfo(startId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#864-867)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- (newGooCost,newEthCost,newClass,newUnitId,newValue) = newSchema.getUpgradeInfo(startId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#871-878)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- (oldClass,oldUnitId,oldValue) = schema.getRareInfo(startId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#889-892)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- (newClass,newUnitId,newValue) = newSchema.getRareInfo(startId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#892-894)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Goo.assignRafflePrize (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#569-583):
	External calls:
	- rareItemPrice[raffleRareId] = (schema.rareStartPrice(raffleRareId) * 21) / 20 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#572-574)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#576)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#576)
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#576)
Reentrancy in Goo.attackPlayer (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#599-643):
	External calls:
	- (attackingPower,defendingPower,stealingPower) = getPlayersBattlePower(msg.sender,target) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#606-608)
	- defendingPower = schema.getWeakenedDefensePower(defendingPower) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#610-612)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#623-624)
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#626)
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#627-628)
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#634)
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#636)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#638-640)
Reentrancy in Goo.buyBasicUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#219-239):
	External calls:
	- require(bool)(schema.validUnitId(unitId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#221-222)
	- unitCost = schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#225-227)
	- require(bool)(schema.unitEthCost(unitId) == 0) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#229)
	State variables written after the call(s):
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#232-233)
Reentrancy in Goo.buyEthUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#240-271):
	External calls:
	- require(bool)(schema.validUnitId(unitId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#242)
	- unitCost = schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#245-247)
	- ethCost = SafeMath.mul(schema.unitEthCost(unitId),amount) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#248-250)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#255-256)
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#264)
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#254-255)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#254-255)
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#254-255)
	- totalEtherGooResearchPool (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#263)
Reentrancy in Goo.buyRareItem (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#378-420):
	External calls:
	- require(bool)(schema.validRareId(rareId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#379-381)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#388)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#388)
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#388)
Reentrancy in Goo.buyRareItem (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#378-420):
	External calls:
	- require(bool)(schema.validRareId(rareId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#379-381)
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#391-393)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#393-394)
	- removeUnitMultipliers(previousOwner,upgradeClass,unitId,upgradeValue) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	State variables written after the call(s):
	- gooProductionZeroedSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#397-399)
	- totalEtherGooResearchPool (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#413-414)
Reentrancy in Goo.buyUpgrade (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#293-323):
	External calls:
	- require(bool)(schema.validUpgradeId(upgradeId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#297)
	- (gooCost,ethCost,upgradeClass,unitId,upgradeValue) = schema.getUpgradeInfo(upgradeId) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#303-304)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#309-312)
	- ethBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#319)
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#319-321)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#319-321)
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#319-321)
	- totalEtherGooResearchPool (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#315-316)
Reentrancy in Goo.removeUnitMultipliers (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#348-378):
	External calls:
	- productionLoss = (unitsOwned[player][unitId] * upgradeValue * (schema.unitGooProduction(unitId) + unitGooProductionIncreases[player][unitId])) / 10 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#356-359)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#359-360)
	- gooProductionZeroedSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#359-360)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#359-360)
	- totalGooProduction (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#359-360)
Reentrancy in Goo.sellUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#271-292):
	External calls:
	- unitSalePrice = (schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) * 3) / 4 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#273-277)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#281-282)
	- lastGooSaveTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#278-281)
	- roughSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#281)
Reentrancy in Goo.sellUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#271-292):
	External calls:
	- unitSalePrice = (schema.getGooCostForUnit(unitId,unitsOwned[msg.sender][unitId],amount) * 3) / 4 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#273-277)
	- schema.unitGooProduction(unitId) > 0 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
	- reducePlayersGooProduction(msg.sender,getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
	State variables written after the call(s):
	- gooProductionZeroedSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#282-287)
Reentrancy in Goo.startRareRaffle (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#517-528):
	External calls:
	- require(bool)(schema.validRareId(rareId)) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#518-519)
	State variables written after the call(s):
	- raffleEndTime (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#526-527)
	- raffleRareId (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#527-528)
	- raffleTicketThatWon (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#523)
	- raffleTicketsBought (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#525-526)
	- raffleWinner (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#523-524)
	- raffleWinningTicketSelected (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#522-523)
Reentrancy in Goo.upgradeUnitMultipliers (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#323-348):
	External calls:
	- productionGain = (unitsOwned[player][unitId] * upgradeValue * (schema.unitGooProduction(unitId) + unitGooProductionIncreases[player][unitId])) / 10 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#331-334)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#334-335)
	- lastGooProductionUpdate (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#334-335)
	- totalGooProduction (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#334-335)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Goo.balanceOfUnclaimedGoo (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#125-134) uses timestamp for comparisons
	Dangerous comparisons:
	- lastGooSaveTime[player] > 0 && lastGooSaveTime[player] < block.timestamp (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#126-132)
Goo.buyRaffleTicket (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#482-514) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(raffleEndTime >= block.timestamp) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#484-485)
Goo.awardRafflePrize (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#528-567) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(raffleEndTime < block.timestamp) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#529)
	- raffleTicketThatWon >= checkTicket.startId && raffleTicketThatWon <= checkTicket.endId (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#541-545)
	- raffleTicketThatWon >= playersTickets.ticketsBought[0].startId && raffleTicketThatWon <= playersTickets.ticketsBought[endIndex].endId (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#552-567)
	- raffleTicketThatWon >= playerTicket.startId && raffleTicketThatWon <= playerTicket.endId (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#562-567)
Goo.drawRandomWinner (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#585-595) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(raffleEndTime < block.timestamp) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#586-589)
Goo.attackPlayer (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#599-643) uses timestamp for comparisons
	Dangerous comparisons:
	- battleCooldown[target] > block.timestamp (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#608-612)
	- require(bool)(battleCooldown[msg.sender] < block.timestamp) (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#600-603)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Goo.MAX_PRODUCTION_UNITS should be constant (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#33)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#591-593:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20.totalSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#4-5) should be declared external
Goo.totalSupply (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#117-121) should be declared external
ERC20.allowance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#6-7) should be declared external
Goo.allowance (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#168-169) should be declared external
Goo.transfer (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#137-148) should be declared external
ERC20.transfer (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#7-8) should be declared external
Goo.approve (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#160-168) should be declared external
ERC20.approve (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#8-9) should be declared external
ERC20.transferFrom (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#9-11) should be declared external
Goo.transferFrom (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#148-160) should be declared external
Goo.fallback (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#108) should be declared external
Goo.etherBalanceOf (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#135-137) should be declared external
GooGameConfig.getGooCostForUnit (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#1015-1043) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol:
	- pragma solidity^0.4.0 (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Goo.Goo' (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#102-107) is not in mixedCase
Variable 'Goo.MAX_PRODUCTION_UNITS' (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#33) is not in mixedCase
Function 'GooGameConfig.GooGameConfig' (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#933-1015) is not in mixedCase
Constant 'GooGameConfig.currentNumberOfUnits' (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#915-917) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GooGameConfig.currentNumberOfUpgrades' (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#917-918) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GooGameConfig.currentNumberOfRares' (/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol#918-919) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/2/0xdda9bcd985b1169607546b52910a0269dff5baf1.sol analyzed (4 contracts), 61 result(s) found