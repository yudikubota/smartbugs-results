INFO:Slither:Compilation warnings/errors on /unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:89:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ethex(address admin_, address feeAccount_, uint256 makeFee_, uint256 takeFee_, address etxAddress_, uint256 _lastFreeBlock) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:32:53: Warning: This declaration shadows an existing declaration.
    function totalSupply() public constant returns (uint256 totalSupply);
                                                    ^-----------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:32:5: The shadowed declaration is here:
    function totalSupply() public constant returns (uint256 totalSupply);
    ^-------------------------------------------------------------------^

/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:189:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, msg.sender);
                    ^-----------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:204:9: Warning: Invoking events without "emit" prefix is deprecated.
        MakeSellOrder(h, token, tokenAmount, weiAmount, msg.sender);
        ^---------------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:214:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, valueNoFee, msg.sender);
                    ^------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:220:9: Warning: Invoking events without "emit" prefix is deprecated.
        MakeBuyOrder(h, token, tokenAmount, valueNoFee, msg.sender);
        ^---------------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:226:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, msg.sender);
                    ^-----------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:232:9: Warning: Invoking events without "emit" prefix is deprecated.
        CancelSellOrder(h, token, tokenAmount, weiAmount, msg.sender);
        ^-----------------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:237:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, msg.sender);
                    ^-----------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:245:9: Warning: Invoking events without "emit" prefix is deprecated.
        CancelBuyOrder(h, token, tokenAmount, weiAmount, msg.sender);
        ^----------------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:254:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, buyer);
                    ^------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:301:9: Warning: Invoking events without "emit" prefix is deprecated.
        TakeBuyOrder(h, token, tokenAmount, weiAmount, totalTokens, buyer, msg.sender);
        ^----------------------------------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:310:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, seller);
                    ^-------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:346:9: Warning: Invoking events without "emit" prefix is deprecated.
        TakeSellOrder(h, token, tokenAmount, weiAmount, transactionWeiAmountNoFee, msg.sender, seller);
        ^--------------------------------------------------------------------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:5:5: Warning: Function state mutability can be restricted to pure
    function safeMul(uint256 a, uint256 b) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:11:5: Warning: Function state mutability can be restricted to pure
    function safeSub(uint256 a, uint256 b) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:16:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 a, uint256 b) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:137:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        if (Etx(etxAddress).isActive(account)) {
            ^-------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:152:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 cost = safeMul(totalCost, (1 ether)) / safeAdd((1 ether), feeAmount);
                       ^---------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:152:56: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 cost = safeMul(totalCost, (1 ether)) / safeAdd((1 ether), feeAmount);
                                                       ^---------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:155:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 remainder = safeMul(totalCost, (1 ether)) % safeAdd((1 ether), feeAmount);
                            ^---------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:155:61: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 remainder = safeMul(totalCost, (1 ether)) % safeAdd((1 ether), feeAmount);
                                                            ^---------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:157:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            cost = safeAdd(cost, 1);
                   ^--------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:160:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 fee = safeSub(totalCost, cost);
                      ^----------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:165:13: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        if (Etx(etxAddress).isActive(account)) {
            ^-------------------------------^
/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:180:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 fee = safeMul(cost, feeAmount) / (1 ether);
                      ^----------------------^

INFO:Detectors:[93m
Reentrancy in Ethex.changeETXAddress (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#109-115):
	External calls:
	- require(bool)(block.number > Etx(etxAddress).expirationBlock()) (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#113)
	State variables written after the call(s):
	- etxAddress (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#114)
Reentrancy in Ethex.takeBuyOrder (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#254-312):
	External calls:
	- currentTakeFee = calculateFeeForAccount(transactionWeiAmountNoFee,takeFee,msg.sender) (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#271-272)
	- currentMakeFee = calculateFeeForAccount(transactionWeiAmountNoFee,makeFee,buyer) (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#272-275)
	State variables written after the call(s):
	- buyOrderBalances (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#277-279)
Reentrancy in Ethex.takeSellOrder (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#312-348):
	External calls:
	- currentTakeFee = feeFromTotalCostForAccount(msg.value,takeFee,msg.sender) (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#318-319)
	- currentMakeFee = calculateFeeForAccount(transactionWeiAmountNoFee,makeFee,seller) (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#327-329)
	State variables written after the call(s):
	- sellOrderBalances (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#337-341)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Ethex.cancelAllSellOrders (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#228-237) does not use the value returned by external calls:
	-ERC20Interface(token).transfer(msg.sender,remain) (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#235-236)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply.totalSupply (local variable @ /unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#34) shadows:
	- ERC20Interface.totalSupply (function @ /unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#32-34)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Etx.expirationBlock should be constant (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#61)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#32-34) should be declared external
ERC20Interface.balanceOf (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#35-37) should be declared external
ERC20Interface.transfer (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#38-40) should be declared external
ERC20Interface.transferFrom (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#41-43) should be declared external
ERC20Interface.approve (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#46-48) should be declared external
ERC20Interface.allowance (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#49-52) should be declared external
Etx.isActive (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#61-66) should be declared external
Ethex.fallback (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#103-104) should be declared external
Ethex.changeAdmin (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#104-109) should be declared external
Ethex.changeETXAddress (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#109-115) should be declared external
Ethex.changeLastFreeBlock (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#115-121) should be declared external
Ethex.changeFeeAccount (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#121-126) should be declared external
Ethex.changeMakeFee (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#126-132) should be declared external
Ethex.changeTakeFee (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#133-137) should be declared external
Ethex.makeSellOrder (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#189-210) should be declared external
Ethex.makeBuyOrder (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#213-226) should be declared external
Ethex.cancelAllSellOrders (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#228-237) should be declared external
Ethex.cancelAllBuyOrders (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#239-250) should be declared external
Ethex.takeBuyOrder (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#254-312) should be declared external
Ethex.takeSellOrder (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#312-348) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol:
	- pragma solidity^0.4.19 (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ethex.Ethex' (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#89-102) is not in mixedCase
Parameter '_lastFreeBlock' of Ethex.Ethex (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#91-92) is not in mixedCase
Parameter '_lastFreeBlock' of Ethex.changeLastFreeBlock (/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol#115) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/2/0xb746aed479f18287dc8fc202fe06f25f1a0a60ae.sol analyzed (4 contracts), 30 result(s) found