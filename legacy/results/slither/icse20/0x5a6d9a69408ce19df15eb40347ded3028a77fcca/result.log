INFO:Slither:Compilation warnings/errors on /unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:260:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bool isRegistered = ethicHubStorage.getBool(keccak256("user", profile, msg.sender));
                                                    ^------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:266:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        address arbiter = ethicHubStorage.getAddress(keccak256("arbiter", this));
                                                     ^------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:277:51: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bool isInvestor = ethicHubStorage.getBool(keccak256("user", "investor", msg.sender));
                                                  ^---------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:278:57: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bool isPaymentGateway = ethicHubStorage.getBool(keccak256("user", "paymentGateway", msg.sender));
                                                        ^---------------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:301:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "representative", _borrower)));
                                        ^--------------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:304:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "localNode", _localNode)));
                                        ^----------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:329:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "community", _community)));
                                        ^----------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:330:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.maxDelayDays", this), _maxDelayDays);
                                ^-------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:331:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setAddress(keccak256("lending.community", this), _community);
                                   ^----------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:332:36: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setAddress(keccak256("lending.localNode", this), localNode);
                                   ^----------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:333:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.tier", this), _tier);
                                ^-----------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:334:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.communityMembers", this), _communityMembers);
                                ^-----------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:343:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "representative", _borrower)));
                                        ^--------------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:350:41: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require(ethicHubStorage.getBool(keccak256("user", "investor", newInvestor)));
                                        ^----------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:370:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            require(ethicHubStorage.getBool(keccak256("user", "investor", msg.sender)));
                                            ^---------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:399:105: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        EthicHubReputationInterface reputation = EthicHubReputationInterface(ethicHubStorage.getAddress(keccak256("contract.name", "reputation")));
                                                                                                        ^--------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:401:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ethicHubStorage.setUint(keccak256("lending.delayDays", this), maxDelayDays);
                                ^----------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:506:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      doReclaim(ethicHubTeam, this.balance);
                              ^----------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:510:10: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if(this.balance < amount) {
         ^----------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:511:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        target.transfer(this.balance);
                        ^----------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:607:105: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        EthicHubReputationInterface reputation = EthicHubReputationInterface(ethicHubStorage.getAddress(keccak256("contract.name", "reputation")));
                                                                                                        ^--------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:610:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            ethicHubStorage.setUint(keccak256("lending.delayDays", this), delayDays);
                                    ^----------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:613:69: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            uint completedProjectsByTier  = ethicHubStorage.getUint(keccak256("community.completedProjectsByTier", this, tier)).add(1);
                                                                    ^--------------------------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:614:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            ethicHubStorage.setUint(keccak256("community.completedProjectsByTier", this, tier), completedProjectsByTier);
                                    ^--------------------------------------------------------^
/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:674:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return ethicHubStorage.getUint(keccak256("lending.maxDelayDays", this));
                                       ^-------------------------------------^

INFO:Detectors:[91m
EthicHubLending.doReclaim (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#524-526) sends eth to arbitrary user
	Dangerous calls:
	- target.transfer(this.balance) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#525-526)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Reentrancy in EthicHubLending.constructor (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#292-328):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,representative,_borrower))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#306-307)
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,localNode,_localNode))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#310-312)
	State variables written after the call(s):
	- fundingStartTime (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#319-320)
Reentrancy in EthicHubLending.declareProjectDefault (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#400-413):
	External calls:
	- maxDelayDays = getMaxDelayDays() (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#402-403)
	- reputation = EthicHubReputationInterface(ethicHubStorage.getAddress(keccak256()(contract.name,reputation))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#405-408)
	- ethicHubStorage.setUint(keccak256()(lending.delayDays,this),maxDelayDays) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#409-410)
	- reputation.burnReputation(maxDelayDays) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#410-413)
	State variables written after the call(s):
	- state (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#413)
Reentrancy in EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#329-348):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,community,_community))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#332-333)
	- ethicHubStorage.setUint(keccak256()(lending.maxDelayDays,this),_maxDelayDays) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#334)
	- ethicHubStorage.setAddress(keccak256()(lending.community,this),_community) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#334-336)
	- ethicHubStorage.setAddress(keccak256()(lending.localNode,this),localNode) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#337-341)
	- ethicHubStorage.setUint(keccak256()(lending.tier,this),_tier) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#341-342)
	- ethicHubStorage.setUint(keccak256()(lending.communityMembers,this),_communityMembers) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#343-344)
	State variables written after the call(s):
	- state (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#345-348)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in EthicHubLending.changeInvestorAddress (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#353-367):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,investor,newInvestor))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#354-356)
	State variables written after the call(s):
	- investors (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#362-363)
	- investors (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#363)
	- investors (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#363-365)
	- investors (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#365-366)
Reentrancy in EthicHubLending.constructor (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#292-328):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,representative,_borrower))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#306-307)
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,localNode,_localNode))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#310-312)
	State variables written after the call(s):
	- annualInterest (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#324)
	- borrower (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#324)
	- ethicHubTeam (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#324)
	- ethichubFee (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#326)
	- fundingEndTime (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#320-321)
	- lendingDays (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#325)
	- localNode (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#321)
	- localNodeFee (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#326-327)
	- reclaimedContributions (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#317)
	- reclaimedSurpluses (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#318)
	- state (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#327-328)
	- totalLendingAmount (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#324)
	- version (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#316-317)
Reentrancy in EthicHubLending.fallback (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#367-384):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,investor,msg.sender))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#379-384)
	External calls sending eth:
	- contributeWithAddress(msg.sender) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#384)
	State variables written after the call(s):
	- capReached (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#384)
	- fundingEndTime (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#384)
	- investorCount (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#384)
	- investors (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#384)
	- totalContributed (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#384)
Reentrancy in EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#329-348):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,community,_community))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#332-333)
	- ethicHubStorage.setUint(keccak256()(lending.maxDelayDays,this),_maxDelayDays) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#334)
	- ethicHubStorage.setAddress(keccak256()(lending.community,this),_community) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#334-336)
	- ethicHubStorage.setAddress(keccak256()(lending.localNode,this),localNode) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#337-341)
	- ethicHubStorage.setUint(keccak256()(lending.tier,this),_tier) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#341-342)
	- ethicHubStorage.setUint(keccak256()(lending.communityMembers,this),_communityMembers) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#343-344)
	State variables written after the call(s):
	- tier (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#344-345)
Reentrancy in EthicHubLending.setBorrower (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#348-352):
	External calls:
	- require(bool)(ethicHubStorage.getBool(keccak256()(user,representative,_borrower))) (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#350-351)
	State variables written after the call(s):
	- borrower (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#351-352)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
EthicHubLending.borrowerReturnDate should be constant (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#230-231)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
EthicHubReputationInterface.getCommunityReputation (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#56-57) should be declared external
EthicHubReputationInterface.getLocalNodeReputation (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#57-62) should be declared external
Ownable.renounceOwnership (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#124-126) should be declared external
Ownable.transferOwnership (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#133-135) should be declared external
Pausable.pause (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#176-180) should be declared external
Pausable.unpause (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#187-189) should be declared external
EthicHubLending.fallback (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#367-384) should be declared external
EthicHubLending.checkInvestorContribution (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#663-666) should be declared external
EthicHubLending.getUserContributionReclaimStatus (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol:
	- pragma solidity^0.4.13 (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Ownable.transferOwnership (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#133-134) is not in mixedCase
Function 'Ownable._transferOwnership' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#138-151) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#139-143) is not in mixedCase
Parameter '_storageAddress' of EthicHubBase. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#196) is not in mixedCase
Event 'EthicHubLending.onCapReached' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#249-250) is not in CapWords
Event 'EthicHubLending.onContribution' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#250-252) is not in CapWords
Event 'EthicHubLending.onCompensated' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#252-254) is not in CapWords
Event 'EthicHubLending.onSurplusSent' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#254) is not in CapWords
Event 'EthicHubLending.onSurplusReclaimed' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#255-256) is not in CapWords
Event 'EthicHubLending.onInitalRateSet' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#256-258) is not in CapWords
Event 'EthicHubLending.onReturnRateSet' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#258-259) is not in CapWords
Event 'EthicHubLending.onReturnAmount' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#259-260) is not in CapWords
Event 'EthicHubLending.onBorrowerChanged' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#260-261) is not in CapWords
Event 'EthicHubLending.onInvestorChanged' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#261-266) is not in CapWords
Parameter '_fundingStartTime' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#293) is not in mixedCase
Parameter '_fundingEndTime' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#294-295) is not in mixedCase
Parameter '_borrower' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#296) is not in mixedCase
Parameter '_annualInterest' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#296-298) is not in mixedCase
Parameter '_totalLendingAmount' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#298) is not in mixedCase
Parameter '_lendingDays' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#299) is not in mixedCase
Parameter '_localNode' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#300) is not in mixedCase
Parameter '_ethicHubTeam' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#301) is not in mixedCase
Parameter '_ethichubFee' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#301) is not in mixedCase
Parameter '_localNodeFee' of EthicHubLending. (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#301-302) is not in mixedCase
Parameter '_maxDelayDays' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#329) is not in mixedCase
Parameter '_tier' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#329) is not in mixedCase
Parameter '_communityMembers' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#329-330) is not in mixedCase
Parameter '_community' of EthicHubLending.saveInitialParametersToStorage (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#330) is not in mixedCase
Parameter '_borrower' of EthicHubLending.setBorrower (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#348) is not in mixedCase
Parameter '_borrowerReturnEthPerFiatRate' of EthicHubLending.setBorrowerReturnEthPerFiatRate (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#414-415) is not in mixedCase
Parameter '_initialEthPerFiatRate' of EthicHubLending.finishInitialExchangingPeriod (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#421) is not in mixedCase
Constant 'EthicHubLending.interestBaseUint' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#237-240) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'EthicHubLending.interestBasePercent' (/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol#240-242) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x5a6d9a69408ce19df15eb40347ded3028a77fcca.sol analyzed (7 contracts), 53 result(s) found