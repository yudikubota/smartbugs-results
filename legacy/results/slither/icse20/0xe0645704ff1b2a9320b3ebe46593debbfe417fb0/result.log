INFO:Slither:Compilation warnings/errors on /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:7:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:12:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:69:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TestekCrowdsale(uint256 _startBlock, address _multisigAddress){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:84:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(msg.value == 0) throw;
                         ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:85:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (crowdsaleHasSucessfulyEnded || block.number > endBlock) throw;        // Throw if the Crowdsale has ended     
                                                                  ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:91:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:124:72: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number <= endBlock || totalEthRaised >= minEthToRaise) throw; // Check if Crowdsale has failed    
                                                                       ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:125:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (participantContribution[msg.sender] == 0) throw;                    // Check if user has participated     
                                                    ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:126:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (hasClaimedEthWhenFail[msg.sender]) throw;                           // Check if this account has already claimed ETH    
                                             ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:136:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;    // Check if Crowdsale failed  
                                                                      ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:165:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!crowdsaleHasSucessfulyEnded) throw; 
                                        ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:166:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (ownerHasClaimedTokens) throw;
                                 ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:187:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (this.balance == 0) throw;                                            // Check if there is balance on the contract     
                             ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:188:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (totalEthRaised < minEthToRaise) throw;                               // Check if minEthToRaise treshold is exceeded     
                                          ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:194:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (totalEthRaised < minEthToRaise) throw;
                                          ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:195:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number < endBlock) throw;
                                   ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:220:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (this.balance == 0) throw;                                         // Check if there is balance on the contract    
                             ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:221:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (block.number < endBlock) throw;                                   // Check if Crowdsale failed    
                                   ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:222:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (participantIndex[lastEthReturnIndex] != 0x0) throw;               // Check if all the participants have been reimbursed     
                                                       ^---^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:23:44: Warning: This declaration shadows an existing declaration.
  function totalSupply() constant returns (uint256 totalSupply);
                                           ^-----------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:23:3: The shadowed declaration is here:
  function totalSupply() constant returns (uint256 totalSupply);
  ^------------------------------------------------------------^

/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:27:44: Warning: This declaration shadows an existing declaration.
  function totalSupply() constant returns (uint256 totalSupply);
                                           ^-----------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:27:3: The shadowed declaration is here:
  function totalSupply() constant returns (uint256 totalSupply);
  ^------------------------------------------------------------^

/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:89:11: Warning: Invoking events without "emit" prefix is deprecated.
          CrowdsaleStarted(block.number);                                       // Raise CrowdsaleStarted event     
          ^----------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:103:11: Warning: Invoking events without "emit" prefix is deprecated.
          CrowdsaleSoftCapReached(block.number);                                // Raise CrowdsalesoftCapReached event        
          ^-----------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:113:9: Warning: Invoking events without "emit" prefix is deprecated.
        CrowdsaleHardCapReached(block.number);
        ^-----------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:115:9: Warning: Invoking events without "emit" prefix is deprecated.
        CrowdsaleEndedSuccessfuly(block.number, totalEthRaised);      
        ^-----------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:117:11: Warning: Invoking events without "emit" prefix is deprecated.
[91m          ErrorSendingETH(msg.sender, toReturn);                               // Raise event for manual return if transaction throws       [0m
          ^-----------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:130:9: Warning: Invoking events without "emit" prefix is deprecated.
[91m        ErrorSendingETH(msg.sender, ethContributed);                          // Raise event if send failed, solve manually     [0m
        ^-----------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:146:14: Warning: Invoking events without "emit" prefix is deprecated.
[91m             ErrorSendingETH(currentParticipantAddress, contribution);           // Raise event if send failed, resolve manually         [0m
             ^------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:187:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if (this.balance == 0) throw;                                            // Check if there is balance on the contract     
          ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:190:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if(multisigAddress.send(this.balance)){}                                 // Send the contract's balance to multisig address   
                              ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:197:7: Warning: Invoking events without "emit" prefix is deprecated.
      CrowdsaleEndedSuccessfuly(block.number, totalEthRaised);
      ^-----------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:220:11: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if (this.balance == 0) throw;                                         // Check if there is balance on the contract    
          ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:223:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      if (multisigAddress.send(this.balance)){}                             // Send remainder so it can be manually processed   
                               ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:16:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function mintTokens(address _to, uint256 _amount);
  ^------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:23:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() constant returns (uint256 totalSupply);
  ^------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:27:3: Warning: No visibility specified. Defaulting to "public". 
  function totalSupply() constant returns (uint256 totalSupply);
  ^------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:28:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {}
  ^----------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:28:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function balanceOf(address _owner) constant returns (uint256 balance) {}
                     ^------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:28:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function balanceOf(address _owner) constant returns (uint256 balance) {}
                                                       ^-------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:29:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool success) {}
  ^----------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:29:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) returns (bool success) {}
                    ^---------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:29:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) returns (bool success) {}
                                 ^------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:29:59: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) returns (bool success) {}
                                                          ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:30:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
  ^-----------------------------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:30:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                        ^-----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:30:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                                       ^---------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:30:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                                                    ^------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:30:78: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                                                                             ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:31:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool success) {}
  ^--------------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:31:20: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) returns (bool success) {}
                   ^--------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:31:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) returns (bool success) {}
                                     ^------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:31:63: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) returns (bool success) {}
                                                              ^----------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:32:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
  ^------------------------------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:32:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
                     ^------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:32:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
                                     ^--------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:32:74: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
                                                                         ^---------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:69:5: Warning: No visibility specified. Defaulting to "public". 
    function TestekCrowdsale(uint256 _startBlock, address _multisigAddress){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:83:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:123:5: Warning: No visibility specified. Defaulting to "public". 
    function claimEthIfFailed(){    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:135:5: Warning: No visibility specified. Defaulting to "public". 
    function batchReturnEthIfFailed(uint256 _numberOfReturns) onlyOwner{    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function changeMultisigAddress(address _newAddress) onlyOwner {     
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:159:5: Warning: No visibility specified. Defaulting to "public". 
    function participantCount() constant returns(uint){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:164:5: Warning: No visibility specified. Defaulting to "public". 
    function claimTeamTokens(address _to) onlyOwner{     
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:173:5: Warning: No visibility specified. Defaulting to "public". 
    function setTokenContract(address _TestekTokenContractAddress) onlyOwner {     
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:177:5: Warning: No visibility specified. Defaulting to "public". 
    function getTestekTokenIssuance(uint256 _blockNumber, uint256 _ethSent) constant returns(uint){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:186:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawEther() onlyOwner{     
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:193:5: Warning: No visibility specified. Defaulting to "public". 
    function endCrowdsale() onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function salvageTokensFromContract(address _tokenAddress, address _to, uint _amount) onlyOwner{
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:206:5: Warning: No visibility specified. Defaulting to "public". 
    function getTSTTokenAddress() constant returns(address _tokenAddress){    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:210:5: Warning: No visibility specified. Defaulting to "public". 
    function crowdsaleInProgress() constant returns (bool answer){    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:214:5: Warning: No visibility specified. Defaulting to "public". 
    function participantContributionInEth(address _querryAddress) constant returns (uint256 answer){    
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:219:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawRemainingBalanceForManualRecovery() onlyOwner{     
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:28:3: Warning: Function state mutability can be restricted to pure
  function balanceOf(address _owner) constant returns (uint256 balance) {}
  ^----------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:29:3: Warning: Function state mutability can be restricted to pure
  function transfer(address _to, uint256 _value) returns (bool success) {}
  ^----------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:30:3: Warning: Function state mutability can be restricted to pure
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
  ^-----------------------------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:31:3: Warning: Function state mutability can be restricted to pure
  function approve(address _spender, uint256 _value) returns (bool success) {}
  ^--------------------------------------------------------------------------^
/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:32:3: Warning: Function state mutability can be restricted to pure
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}
  ^------------------------------------------------------------------------------------------^

INFO:Detectors:[93m
TestekCrowdsale.withdrawEther (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#188-197) uses a dangerous strict equality:
	- this.balance == 0
TestekCrowdsale.withdrawEther (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#188-197) uses a dangerous strict equality:
	- this.balance == 0
TestekCrowdsale.withdrawRemainingBalanceForManualRecovery (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#221-225) uses a dangerous strict equality:
	- this.balance == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in TestekCrowdsale.claimTeamTokens (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#168-173):
	External calls:
	- TestekTokenContract.mintTokens(_to,TestekTokenContract.totalSupply() * 49 / 51) (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#172-173)
	State variables written after the call(s):
	- ownerHasClaimedTokens (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#173)
Reentrancy in TestekCrowdsale.fallback (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#85-123):
	External calls:
	- TestekTokenContract.mintTokens(msg.sender,getTestekTokenIssuance(block.number,maxContribution)) (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#111)
	State variables written after the call(s):
	- crowdsaleHasSucessfulyEnded (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#112-113)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
TestekCrowdsale.salvageTokensFromContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#206-210) does not use the value returned by external calls:
	-IERC20Token(_tokenAddress).transfer(_to,_amount) (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#207-210)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ITestekToken.totalSupply.totalSupply (local variable @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#24-26) shadows:
	- ITestekToken.totalSupply (function @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#23-26)
IERC20Token.totalSupply.totalSupply (local variable @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#28) shadows:
	- IERC20Token.totalSupply (function @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#27-28)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
TestekCrowdsale.batchReturnEthIfFailed has external calls inside a loop:
	- ! currentParticipantAddress.send(contribution) (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#146-154)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in TestekCrowdsale.fallback (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#85-123):
	External calls:
	- TestekTokenContract.mintTokens(msg.sender,getTestekTokenIssuance(block.number,msg.value)) (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#102)
	State variables written after the call(s):
	- softCapReached (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#104-105)
Reentrancy in TestekCrowdsale.fallback (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#85-123):
	External calls:
	- TestekTokenContract.mintTokens(msg.sender,getTestekTokenIssuance(block.number,maxContribution)) (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#111)
	State variables written after the call(s):
	- hardCapReached (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#116)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#13:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#85:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#86:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#94:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#126:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#127:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#168:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#169:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#188:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#190:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#201:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#222:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#223:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#16-21) should be declared external
ITestekToken.mintTokens (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#22-23) should be declared external
ITestekToken.totalSupply (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#23-26) should be declared external
IERC20Token.totalSupply (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#27-28) should be declared external
IERC20Token.balanceOf (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#28-29) should be declared external
IERC20Token.transfer (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#29-30) should be declared external
IERC20Token.transferFrom (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#30-31) should be declared external
IERC20Token.approve (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#31-32) should be declared external
IERC20Token.allowance (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#32-34) should be declared external
TestekCrowdsale.fallback (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#85-123) should be declared external
TestekCrowdsale.claimEthIfFailed (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#124-135) should be declared external
TestekCrowdsale.batchReturnEthIfFailed (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#136-155) should be declared external
TestekCrowdsale.changeMultisigAddress (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#158-163) should be declared external
TestekCrowdsale.participantCount (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#163-165) should be declared external
TestekCrowdsale.claimTeamTokens (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#168-173) should be declared external
TestekCrowdsale.setTokenContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#177-178) should be declared external
TestekCrowdsale.withdrawEther (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#188-197) should be declared external
TestekCrowdsale.endCrowdsale (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#197-205) should be declared external
TestekCrowdsale.salvageTokensFromContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#206-210) should be declared external
TestekCrowdsale.getTSTTokenAddress (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#210-214) should be declared external
TestekCrowdsale.crowdsaleInProgress (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#214-218) should be declared external
TestekCrowdsale.participantContributionInEth (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#218-220) should be declared external
TestekCrowdsale.withdrawRemainingBalanceForManualRecovery (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#221-225) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol:
	- pragma solidity^0.4.17 (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#3-21) is not in CapWords
Function 'TestekCrowdsale.TestekCrowdsale' (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#69-83) is not in mixedCase
Parameter '_startBlock' of TestekCrowdsale.TestekCrowdsale (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#71-72) is not in mixedCase
Parameter '_multisigAddress' of TestekCrowdsale.TestekCrowdsale (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#72) is not in mixedCase
Parameter '_numberOfReturns' of TestekCrowdsale.batchReturnEthIfFailed (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#136-137) is not in mixedCase
Parameter '_newAddress' of TestekCrowdsale.changeMultisigAddress (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#159) is not in mixedCase
Parameter '_to' of TestekCrowdsale.claimTeamTokens (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#168) is not in mixedCase
Parameter '_TestekTokenContractAddress' of TestekCrowdsale.setTokenContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#177) is not in mixedCase
Parameter '_blockNumber' of TestekCrowdsale.getTestekTokenIssuance (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#179) is not in mixedCase
Parameter '_ethSent' of TestekCrowdsale.getTestekTokenIssuance (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#179) is not in mixedCase
Parameter '_tokenAddress' of TestekCrowdsale.salvageTokensFromContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#206) is not in mixedCase
Parameter '_to' of TestekCrowdsale.salvageTokensFromContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#206-207) is not in mixedCase
Parameter '_amount' of TestekCrowdsale.salvageTokensFromContract (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#207) is not in mixedCase
Parameter '_querryAddress' of TestekCrowdsale.participantContributionInEth (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#218-219) is not in mixedCase
Variable 'TestekCrowdsale.TestekTokenContract' (/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol#48-49) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0xe0645704ff1b2a9320b3ebe46593debbfe417fb0.sol analyzed (4 contracts), 66 result(s) found