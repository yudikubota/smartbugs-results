INFO:Slither:Compilation warnings/errors on /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:20:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TravellingFreeToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:42:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:43:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:44:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:52:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:53:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:54:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:55:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:47:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:59:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:20:5: Warning: No visibility specified. Defaulting to "public". 
    function TravellingFreeToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:34:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:51:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
TravellingFreeToken (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#2-62) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#41-50)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#42:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#43:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#45:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#52:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#53-54:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#55:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#56:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
TravellingFreeToken.approve (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#34-41) should be declared external
TravellingFreeToken.transfer (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#41-50) should be declared external
TravellingFreeToken.transferFrom (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#51-62) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol:
	- pragma solidity^0.4.14 (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'TravellingFreeToken.TravellingFreeToken' (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#20-33) is not in mixedCase
Parameter '_spender' of TravellingFreeToken.approve (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#34-35) is not in mixedCase
Parameter '_value' of TravellingFreeToken.approve (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#35) is not in mixedCase
Parameter '_to' of TravellingFreeToken.transfer (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#42) is not in mixedCase
Parameter '_value' of TravellingFreeToken.transfer (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#42) is not in mixedCase
Parameter '_from' of TravellingFreeToken.transferFrom (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#51) is not in mixedCase
Parameter '_to' of TravellingFreeToken.transferFrom (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#51-52) is not in mixedCase
Parameter '_value' of TravellingFreeToken.transferFrom (/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol#52) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/4/0x13ea82d5e1a811f55bda9c86fdd6195a6bd23aed.sol analyzed (1 contracts), 20 result(s) found