INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:122:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Goo() public payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1200:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GooGameConfig() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:4:5: Warning: Functions in interfaces should be declared external.
    function totalSupply() public constant returns (uint);
    ^----------------------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:5:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address tokenOwner) public constant returns (uint balance);
    ^----------------------------------------------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:6:5: Warning: Functions in interfaces should be declared external.
    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);
    ^-----------------------------------------------------------------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:7:5: Warning: Functions in interfaces should be declared external.
    function transfer(address to, uint tokens) public returns (bool success);
    ^-----------------------------------------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:8:5: Warning: Functions in interfaces should be declared external.
    function approve(address spender, uint tokens) public returns (bool success);
    ^---------------------------------------------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:9:5: Warning: Functions in interfaces should be declared external.
    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    ^-----------------------------------------------------------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:119:42: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xf925A82b8C26520170C8D51B65a7dEf6364877b3'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    GooGameConfig schema = GooGameConfig(0xf925a82b8c26520170c8d51b65a7def6364877b3);
                                         ^----------------------------------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:787:50: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        itemRaffleTicketThatWon = addmod(uint256(block.blockhash(block.number-1)), seed, itemRaffleTicketsBought);
                                                 ^-------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:797:50: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        unitRaffleTicketThatWon = addmod(uint256(block.blockhash(block.number-1)), seed, unitRaffleTicketsBought);
                                                 ^-------------^
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1254:5: Warning: Function state mutability can be restricted to pure
    function getWeakenedDefensePower(uint256 defendingPower) external constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1258:5: Warning: Function state mutability can be restricted to pure
    function validRareId(uint256 rareId) external constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1310:5: Warning: Function state mutability can be restricted to pure
    function productionUnitIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1314:5: Warning: Function state mutability can be restricted to pure
    function battleUnitIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1318:5: Warning: Function state mutability can be restricted to pure
    function upgradeIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:1322:5: Warning: Function state mutability can be restricted to pure
    function rareIdRange() external constant returns (uint256, uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Goo.assignItemRafflePrize (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#776-788):
	External calls:
	- rareItemPrice[itemRaffleRareId] = (schema.rareStartPrice(itemRaffleRareId) * 21) / 20 (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#780-781)
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(itemRaffleRareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#786-787)
	- upgradeUnitMultipliers(winner,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#787-788)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#787-788)
	- lastGooProductionUpdate (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#787-788)
Reentrancy in Goo.attackPlayer (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#847-893):
	External calls:
	- (attackingPower,defendingPower,stealingPower) = getPlayersBattlePower(msg.sender,target) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#852-855)
	- defendingPower = schema.getWeakenedDefensePower(defendingPower) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#858-859)
	State variables written after the call(s):
	- battleCooldown (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#860-862)
	- battleCooldown (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#889-890)
Reentrancy in Goo.buyBasicUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#260-289):
	External calls:
	- (schemaUnitId,gooProduction,gooCost,ethCost) = schema.getUnitInfo(unitId,existing,amount) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#266-268)
	- increasePlayersGooProduction(msg.sender,getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#283-285)
	State variables written after the call(s):
	- unitsOwned (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#287-288)
Reentrancy in Goo.buyEthUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#289-329):
	External calls:
	- (schemaUnitId,gooProduction,gooCost,ethCost) = schema.getUnitInfo(unitId,existing,amount) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#296-299)
	- increasePlayersGooProduction(msg.sender,getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#323-324)
	State variables written after the call(s):
	- unitsOwned (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#326)
Reentrancy in Goo.buyRareItem (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#450-490):
	External calls:
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#453-454)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#461-462)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#463-464)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#463-464)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#463-464)
Reentrancy in Goo.buyRareItem (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#450-490):
	External calls:
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#453-454)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#461-462)
	- removeUnitMultipliers(previousOwner,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- lastGooProductionUpdate (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- rareItemOwner (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#488-489)
	- totalGooProduction (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitAttackIncreases (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitAttackMultiplier (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitDefenseIncreases (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitDefenseMultiplier (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitGooProductionIncreases (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitGooProductionMultiplier (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitGooStealingIncreases (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- unitGooStealingMultiplier (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
Reentrancy in Goo.buyUpgrade (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#360-391):
	External calls:
	- (gooCost,ethCost,upgradeClass,unitId,upgradeValue,prerequisiteUpgrade) = schema.getUpgradeInfo(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#366-370)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#390-391)
	State variables written after the call(s):
	- upgradesOwned (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#391)
Reentrancy in Goo.migrateV1Upgrades (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#817-841):
	External calls:
	- unitId = schema.upgradeUnitId(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#828-829)
	- upgradeClass = schema.upgradeClass(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#833-834)
	- upgradeValue = schema.upgradeValue(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#834-835)
	- upgradeUnitMultipliers(player,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#836-838)
	State variables written after the call(s):
	- upgradesOwned (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#839)
Reentrancy in Goo.updateGooConfig (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1113-1120):
	External calls:
	- requireExistingUnitsSame(newSchema) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1115)
	- requireExistingUpgradesSame(newSchema) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1115-1117)
	State variables written after the call(s):
	- schema (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1120)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
referalDivs in Goo.claimResearchDividends (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#534) is a local variable never initialiazed
existingCost in GooGameConfig.getGooCostForUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1275) is a local variable never initialiazed
referalDivs in Goo.claimGooDepositDividends (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#559) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
Goo.migrateV1Upgrades has external calls inside a loop:
	- unitId = schema.upgradeUnitId(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#828-829)
Goo.migrateV1Upgrades has external calls inside a loop:
	- upgradeClass = schema.upgradeClass(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#833-834)
Goo.migrateV1Upgrades has external calls inside a loop:
	- upgradeValue = schema.upgradeValue(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#834-835)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitEthCost(startId) == newSchema.unitEthCost(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1128-1129)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitGooProduction(startId) == newSchema.unitGooProduction(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1129-1130)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitEthCost(startId) == newSchema.unitEthCost(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1131-1135)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitAttack(startId) == newSchema.unitAttack(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1135-1136)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitDefense(startId) == newSchema.unitDefense(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1137-1139)
Goo.requireExistingUnitsSame has external calls inside a loop:
	- require(bool)(schema.unitStealingCapacity(startId) == newSchema.unitStealingCapacity(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1139-1143)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- require(bool)(schema.upgradeGooCost(startId) == newSchema.upgradeGooCost(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1151-1159)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- require(bool)(schema.upgradeEthCost(startId) == newSchema.upgradeEthCost(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1159-1161)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- require(bool)(schema.upgradeClass(startId) == newSchema.upgradeClass(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1161-1163)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- require(bool)(schema.upgradeUnitId(startId) == newSchema.upgradeUnitId(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1164-1165)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- require(bool)(schema.upgradeValue(startId) == newSchema.upgradeValue(startId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1165-1170)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- (oldClass,oldUnitId,oldValue) = schema.getRareInfo(startId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1183-1185)
Goo.requireExistingUpgradesSame has external calls inside a loop:
	- (newClass,newUnitId,newValue) = newSchema.getRareInfo(startId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1186-1188)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Goo.assignItemRafflePrize (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#776-788):
	External calls:
	- rareItemPrice[itemRaffleRareId] = (schema.rareStartPrice(itemRaffleRareId) * 21) / 20 (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#780-781)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#783)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#783)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#783)
Reentrancy in Goo.assignItemRafflePrize (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#776-788):
	External calls:
	- rareItemPrice[itemRaffleRareId] = (schema.rareStartPrice(itemRaffleRareId) * 21) / 20 (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#780-781)
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(itemRaffleRareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#786-787)
	- upgradeUnitMultipliers(winner,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#787-788)
	State variables written after the call(s):
	- unitMaxCap (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#787-788)
Reentrancy in Goo.assignUnitRafflePrize (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#788-796):
	External calls:
	- increasePlayersGooProduction(winner,getUnitsProduction(winner,unitRaffleRareId,1)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#793-794)
	State variables written after the call(s):
	- unitsOwned (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#796)
Reentrancy in Goo.attackPlayer (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#847-893):
	External calls:
	- (attackingPower,defendingPower,stealingPower) = getPlayersBattlePower(msg.sender,target) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#852-855)
	- defendingPower = schema.getWeakenedDefensePower(defendingPower) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#858-859)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#870)
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#875)
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#878)
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#884-886)
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#886)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#886-887)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#871)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#875-876)
Reentrancy in Goo.buyBasicUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#260-289):
	External calls:
	- (schemaUnitId,gooProduction,gooCost,ethCost) = schema.getUnitInfo(unitId,existing,amount) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#266-268)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#279-280)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#279-280)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#279-280)
Reentrancy in Goo.buyEthUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#289-329):
	External calls:
	- (schemaUnitId,gooProduction,gooCost,ethCost) = schema.getUnitInfo(unitId,existing,amount) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#296-299)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#301-302)
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#310-311)
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#318-322)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#318-322)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#318-322)
	- totalEtherGooResearchPool (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#307-310)
Reentrancy in Goo.buyRareItem (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#450-490):
	External calls:
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#453-454)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#459-460)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#459-460)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#459-460)
Reentrancy in Goo.buyRareItem (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#450-490):
	External calls:
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#453-454)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#461-462)
	State variables written after the call(s):
	- unitMaxCap (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#461-462)
Reentrancy in Goo.buyRareItem (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#450-490):
	External calls:
	- (upgradeClass,unitId,upgradeValue) = schema.getRareInfo(rareId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#453-454)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#461-462)
	- removeUnitMultipliers(previousOwner,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#472-473)
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#477)
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#486-487)
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#490)
	- gooProductionZeroedSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#464-466)
	- rareItemPrice (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#489)
	- totalEtherGooResearchPool (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#483-484)
Reentrancy in Goo.buyUpgrade (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#360-391):
	External calls:
	- (gooCost,ethCost,upgradeClass,unitId,upgradeValue,prerequisiteUpgrade) = schema.getUpgradeInfo(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#366-370)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#380-381)
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#387)
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#389-390)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#389-390)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#389-390)
	- totalEtherGooResearchPool (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#384-387)
Reentrancy in Goo.buyUpgrade (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#360-391):
	External calls:
	- (gooCost,ethCost,upgradeClass,unitId,upgradeValue,prerequisiteUpgrade) = schema.getUpgradeInfo(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#366-370)
	- upgradeUnitMultipliers(msg.sender,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#390-391)
	State variables written after the call(s):
	- unitMaxCap (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#390-391)
Reentrancy in Goo.migrateV1Upgrades (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#817-841):
	External calls:
	- unitId = schema.upgradeUnitId(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#828-829)
	- upgradeClass = schema.upgradeClass(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#833-834)
	- upgradeValue = schema.upgradeValue(upgradeId) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#834-835)
	- upgradeUnitMultipliers(player,upgradeClass,unitId,upgradeValue) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#836-838)
	State variables written after the call(s):
	- unitMaxCap (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#836-838)
Reentrancy in Goo.removeUnitMultipliers (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#419-450):
	External calls:
	- productionLoss = unitsOwned[player][unitId] * upgradeValue * (schema.unitGooProduction(unitId) + unitGooProductionIncreases[player][unitId]) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#428-430)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#431)
	- gooProductionZeroedSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#431)
	- lastGooProductionUpdate (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#431)
	- totalGooProduction (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#431)
Reentrancy in Goo.sellUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#330-359):
	External calls:
	- (schemaUnitId,gooProduction,gooCost,ethCost) = schema.getUnitInfo(unitId,existing,amount) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#337-340)
	- require(bool)(schema.unitSellable(unitId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#340-341)
	State variables written after the call(s):
	- gooBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#347-348)
	- lastGooSaveTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#344-345)
	- roughSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#345-346)
Reentrancy in Goo.sellUnit (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#330-359):
	External calls:
	- (schemaUnitId,gooProduction,gooCost,ethCost) = schema.getUnitInfo(unitId,existing,amount) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#337-340)
	- require(bool)(schema.unitSellable(unitId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#340-341)
	- reducePlayersGooProduction(msg.sender,getUnitsProduction(msg.sender,unitId,amount)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#352-354)
	State variables written after the call(s):
	- ethBalance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#358-359)
	- gooProductionZeroedSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#352-354)
Reentrancy in Goo.startItemRaffle (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#656-678):
	External calls:
	- require(bool)(schema.validRareId(rareId)) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#661)
	State variables written after the call(s):
	- itemRaffleEndTime (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#676-677)
	- itemRaffleRareId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#677-678)
	- itemRaffleTicketThatWon (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#671-672)
	- itemRaffleTicketsBought (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#673-675)
	- itemRaffleWinner (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#672-673)
	- itemRaffleWinningTicketSelected (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#670-671)
Reentrancy in Goo.upgradeUnitMultipliers (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#392-419):
	External calls:
	- productionGain = unitsOwned[player][unitId] * upgradeValue * (schema.unitGooProduction(unitId) + unitGooProductionIncreases[player][unitId]) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#400-403)
	State variables written after the call(s):
	- gooProductionSnapshots (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#403-404)
	- lastGooProductionUpdate (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#403-404)
	- totalGooProduction (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#403-404)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Goo.balanceOfUnclaimedGoo (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#161-171) uses timestamp for comparisons
	Dangerous comparisons:
	- lastSave > 0 && lastSave < block.timestamp (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#164-171)
Goo.buyItemRaffleTicket (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#592-623) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(itemRaffleEndTime >= block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#594-595)
Goo.buyUnitRaffleTicket (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#624-656) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(unitRaffleEndTime >= block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#625-626)
Goo.startItemRaffle (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#656-678) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < endTime) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#663)
Goo.startUnitRaffle (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#678-693) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp < endTime) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#681-682)
Goo.awardItemRafflePrize (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#693-733) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(itemRaffleEndTime < block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#694-695)
	- itemRaffleTicketThatWon >= checkTicket.startId && itemRaffleTicketThatWon <= checkTicket.endId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#708-710)
	- itemRaffleTicketThatWon >= playerTicket.startId && itemRaffleTicketThatWon <= playerTicket.endId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#730-732)
	- itemRaffleTicketThatWon >= playersTickets.ticketsBought[0].startId && itemRaffleTicketThatWon <= playersTickets.ticketsBought[endIndex].endId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#722-733)
Goo.awardUnitRafflePrize (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#733-776) uses timestamp for comparisons
	Dangerous comparisons:
	- unitRaffleTicketThatWon >= playerTicket.startId && unitRaffleTicketThatWon <= playerTicket.endId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#769-775)
	- unitRaffleTicketThatWon >= checkTicket.startId && unitRaffleTicketThatWon <= checkTicket.endId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#748-749)
	- require(bool)(unitRaffleEndTime < block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#734)
	- unitRaffleTicketThatWon >= playersTickets.ticketsBought[0].startId && unitRaffleTicketThatWon <= playersTickets.ticketsBought[endIndex].endId (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#762-776)
Goo.drawRandomItemWinner (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#797-804) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(itemRaffleEndTime < block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#800-801)
Goo.drawRandomUnitWinner (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#804-813) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(unitRaffleEndTime < block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#807-808)
Goo.attackPlayer (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#847-893) uses timestamp for comparisons
	Dangerous comparisons:
	- battleCooldown[target] > block.timestamp (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#855-860)
	- require(bool)(battleCooldown[msg.sender] < block.timestamp) (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#848)
Goo.getPlayersBattleStats (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#913-932) uses timestamp for comparisons
	Dangerous comparisons:
	- battleCooldown[player] > block.timestamp (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#928-929)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#802-803:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#811-812:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20.totalSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#4-5) should be declared external
Goo.totalSupply (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#153-157) should be declared external
ERC20.allowance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#6-7) should be declared external
Goo.allowance (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#204-208) should be declared external
Goo.transfer (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#174-184) should be declared external
ERC20.transfer (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#7-8) should be declared external
ERC20.approve (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#8-9) should be declared external
Goo.approve (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#197-204) should be declared external
ERC20.transferFrom (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#9-11) should be declared external
Goo.transferFrom (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#184-197) should be declared external
Goo.fallback (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#131-133) should be declared external
Goo.etherBalanceOf (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#171-173) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol:
	- pragma solidity^0.4.0 (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Goo.Goo' (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#127-129) is not in mixedCase
Function 'GooGameConfig.GooGameConfig' (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1221-1250) is not in mixedCase
Constant 'GooGameConfig.currentNumberOfUnits' (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1204-1206) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GooGameConfig.currentNumberOfUpgrades' (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1206-1207) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GooGameConfig.currentNumberOfRares' (/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol#1207-1208) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/1/0x57b116da40f21f91aec57329ecb763d29c1b2355.sol analyzed (4 contracts), 76 result(s) found