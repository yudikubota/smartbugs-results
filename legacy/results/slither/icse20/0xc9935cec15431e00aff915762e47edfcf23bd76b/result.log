INFO:Slither:Compilation warnings/errors on /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:77:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LockinManager(address _token, address _authenticationManager) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:86:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;
                                                               ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:155:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:167:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:179:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:192:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:246:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function AuthenticationManager() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:297:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:301:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:315:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:319:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:323:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:334:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:338:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:351:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:355:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:366:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:370:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:383:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:387:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:459:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Token(address _authenticationManagerAddress) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:476:72: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!authenticationManager.isCurrentAccountReader(msg.sender)) throw;
                                                                       ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:482:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;
                                                               ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:612:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:631:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:572:9: Warning: This declaration shadows an existing declaration.
        uint256 tokenHolderCount = allTokenHolders.length;
        ^----------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:513:5: The shadowed declaration is here:
    function tokenHolderCount() accountReaderOnly constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:586:9: Warning: This declaration shadows an existing declaration.
        uint256 tokenHolderCount = allTokenHolders.length;
        ^----------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:513:5: The shadowed declaration is here:
    function tokenHolderCount() accountReaderOnly constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:159:9: Warning: Invoking events without "emit" prefix is deprecated.
        LockedDayAdded(msg.sender, _day, now);
        ^-----------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:171:9: Warning: Invoking events without "emit" prefix is deprecated.
        LockedDayRemoved(msg.sender, _day, now);
        ^-------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:184:9: Warning: Invoking events without "emit" prefix is deprecated.
        ValidContractAdded(msg.sender, _address, now);
        ^-------------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:197:9: Warning: Invoking events without "emit" prefix is deprecated.
        ValidContractRemoved(msg.sender, _address, now);
        ^---------------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:249:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminAdded(0, msg.sender);
        ^-----------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:305:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminAdded(msg.sender, _address);
        ^------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:327:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminRemoved(msg.sender, _address);
        ^--------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:342:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccountReaderAdded(msg.sender, _address);
        ^--------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:359:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccountReaderRemoved(msg.sender, _address);
        ^----------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:374:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccountMinterAdded(msg.sender, _address);
        ^--------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:391:9: Warning: Invoking events without "emit" prefix is deprecated.
        AccountMinterRemoved(msg.sender, _address);
        ^----------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:506:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _amount);
            ^---------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:525:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _amount);
        ^-------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:565:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _amount);
        ^--------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:623:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, _address, _amount);
        ^----------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:77:5: Warning: No visibility specified. Defaulting to "public". 
    function LockinManager(address _token, address _authenticationManager) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:98:5: Warning: No visibility specified. Defaulting to "public". 
    function getLocks(address _owner) validContractOnly constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:102:5: Warning: No visibility specified. Defaulting to "public". 
    function getLock(address _owner, uint256 count) validContractOnly returns(uint256 amount, uint256 unlockDate, uint256 lockedFor) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:109:5: Warning: No visibility specified. Defaulting to "public". 
    function getLocksAmount(address _owner, uint256 count) validContractOnly returns(uint256 amount) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function getLocksUnlockDate(address _owner, uint256 count) validContractOnly returns(uint256 unlockDate) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function getLocksLockedFor(address _owner, uint256 count) validContractOnly returns(uint256 lockedFor) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:124:5: Warning: No visibility specified. Defaulting to "public". 
    function defaultLockin(address _address, uint256 _value) validContractOnly
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:130:5: Warning: No visibility specified. Defaulting to "public". 
    function lockForDays(uint256 _value, uint256 _days) 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function ifInAllowedLocks(uint256 _days) constant returns(bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:151:5: Warning: No visibility specified. Defaulting to "public". 
    function addAllowedLock(uint _day) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:163:5: Warning: No visibility specified. Defaulting to "public". 
    function removeAllowedLock(uint _day) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:175:5: Warning: No visibility specified. Defaulting to "public". 
    function addValidContract(address _address) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:188:5: Warning: No visibility specified. Defaulting to "public". 
    function removeValidContract(address _address) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:201:5: Warning: No visibility specified. Defaulting to "public". 
    function setDefaultAllowedLock(uint _days) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:246:5: Warning: No visibility specified. Defaulting to "public". 
    function AuthenticationManager() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:255:5: Warning: No visibility specified. Defaulting to "public". 
    function isCurrentAdmin(address _address) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:260:5: Warning: No visibility specified. Defaulting to "public". 
    function isCurrentOrPastAdmin(address _address) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:268:5: Warning: No visibility specified. Defaulting to "public". 
    function isCurrentAccountReader(address _address) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:273:5: Warning: No visibility specified. Defaulting to "public". 
    function isCurrentOrPastAccountReader(address _address) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:281:5: Warning: No visibility specified. Defaulting to "public". 
    function isCurrentAccountMinter(address _address) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:286:5: Warning: No visibility specified. Defaulting to "public". 
    function isCurrentOrPastAccountMinter(address _address) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:294:5: Warning: No visibility specified. Defaulting to "public". 
    function addAdmin(address _address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:312:5: Warning: No visibility specified. Defaulting to "public". 
    function removeAdmin(address _address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:331:5: Warning: No visibility specified. Defaulting to "public". 
    function addAccountReader(address _address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:348:5: Warning: No visibility specified. Defaulting to "public". 
    function removeAccountReader(address _address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:363:5: Warning: No visibility specified. Defaulting to "public". 
    function addAccountMinter(address _address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:380:5: Warning: No visibility specified. Defaulting to "public". 
    function removeAccountMinter(address _address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:432:5: Warning: No visibility specified. Defaulting to "public". 
    function availableBalance(address _owner) constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:459:5: Warning: No visibility specified. Defaulting to "public". 
    function Token(address _authenticationManagerAddress) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:486:5: Warning: No visibility specified. Defaulting to "public". 
    function setLockinManagerAddress(address _lockinManager) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:490:5: Warning: No visibility specified. Defaulting to "public". 
    function setRefundManagerContract(address _refundManagerContractAddress) adminOnly {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:513:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenHolderCount() accountReaderOnly constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:518:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenHolder(uint256 _index) accountReaderOnly constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:523:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _amount) onlyPayloadSize(2) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:530:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:535:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:540:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:545:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _amount) onlyPayloadSize(2) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:608:5: Warning: No visibility specified. Defaulting to "public". 
    function mintTokens(address _address, uint256 _amount) onlyPayloadSize(2) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:627:5: Warning: No visibility specified. Defaulting to "public". 
    function destroyTokens(address _investor, uint256 tokenCount) returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:8:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:21:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:26:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:102:5: Warning: Function state mutability can be restricted to view
    function getLock(address _owner, uint256 count) validContractOnly returns(uint256 amount, uint256 unlockDate, uint256 lockedFor) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:109:5: Warning: Function state mutability can be restricted to view
    function getLocksAmount(address _owner, uint256 count) validContractOnly returns(uint256 amount) {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:114:5: Warning: Function state mutability can be restricted to view
    function getLocksUnlockDate(address _owner, uint256 count) validContractOnly returns(uint256 unlockDate) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:119:5: Warning: Function state mutability can be restricted to view
    function getLocksLockedFor(address _owner, uint256 count) validContractOnly returns(uint256 lockedFor) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:440:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            if(lockinManager.getLocksUnlockDate(_owner, i) > now) {
               ^-----------------------------------------^
/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:441:34: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
                uint256 _value = lockinManager.getLocksAmount(_owner, i);    
                                 ^-------------------------------------^

INFO:Detectors:[93m
LockinManager.ifInAllowedLocks (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#150-153) uses a dangerous strict equality:
	- allowedLocks[_days] == 0
LockinManager.ifInAllowedLocks (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#150-153) uses a dangerous strict equality:
	- allowedLocks[_days] == 0
LockinManager.removeAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#168-177) uses a dangerous strict equality:
	- allowedLocks[_day] == 0
LockinManager.ifInAllowedLocks (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#150-153) uses a dangerous strict equality:
	- allowedLocks[_days] == 0
LockinManager.removeAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#168-177) uses a dangerous strict equality:
	- allowedLocks[_day] == 0
LockinManager.removeValidContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#193-206) uses a dangerous strict equality:
	- allowedContracts[_address] == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Token.destroyTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol):
	External calls:
	- balance = availableBalance(_investor) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol)
	State variables written after the call(s):
	- balances (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol)
Reentrancy in Token.transferFrom (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#501-523):
	External calls:
	- availableBalance(_from) >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0 && balances[_to].add(_amount) > balances[_to] (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#505-522)
	State variables written after the call(s):
	- allowed (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#513-517)
	- balances (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#513)
	- balances (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#517-518)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Token.tokenOwnerAdd.tokenHolderCount (local variable @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#584-585) shadows:
	- Token.tokenHolderCount (function @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#523-526)
Token.tokenOwnerRemove.tokenHolderCount (local variable @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#603-605) shadows:
	- Token.tokenHolderCount (function @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#523-526)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Token.availableBalance has external calls inside a loop:
	- lockinManager.getLocksUnlockDate(_owner,i) > now (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#452-456)
Token.availableBalance has external calls inside a loop:
	- _value = lockinManager.getLocksAmount(_owner,i) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#453-455)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Token.destroyTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol):
	External calls:
	- balance = availableBalance(_investor) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol)
	State variables written after the call(s):
	- allTokenHolders (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol)
	- totalSupplyAmount (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol)
Reentrancy in LockinManager.lockForDays (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#134-141):
	External calls:
	- require(bool)(token.availableBalance(msg.sender) >= _value) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#139)
	State variables written after the call(s):
	- lockedAddresses (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#140)
Reentrancy in Token.mintTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#626-640):
	External calls:
	- ! authenticationManager.isCurrentAccountMinter(msg.sender) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#627-629)
	State variables written after the call(s):
	- balances (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#630-633)
	- totalSupplyAmount (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#630)
Reentrancy in Token.mintTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#626-640):
	External calls:
	- ! authenticationManager.isCurrentAccountMinter(msg.sender) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#627-629)
	- lockinManager.defaultLockin(_address,_amount) (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#633-635)
	State variables written after the call(s):
	- allTokenHolders (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#639)
Reentrancy in Token.transferFrom (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#501-523):
	External calls:
	- availableBalance(_from) >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0 && balances[_to].add(_amount) > balances[_to] (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#505-522)
	State variables written after the call(s):
	- allTokenHolders (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#518)
	- allTokenHolders (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#519-522)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#162:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#174:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#187:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#200:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#90:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#307:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#312:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#327:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#331:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#333-334:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#344:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#347:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#363:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#366:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#376-377:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#380:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#395:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#399:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#629:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#491:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#494:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
LockinManager.getLocks (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#99-102) should be declared external
LockinManager.getLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#102-109) should be declared external
LockinManager.getLocksAmount (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#110-114) should be declared external
LockinManager.getLocksUnlockDate (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#115-119) should be declared external
LockinManager.getLocksLockedFor (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#120-124) should be declared external
LockinManager.defaultLockin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#126-132) should be declared external
LockinManager.lockForDays (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#134-141) should be declared external
LockinManager.addAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#155-166) should be declared external
LockinManager.removeAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#168-177) should be declared external
LockinManager.addValidContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#179-190) should be declared external
LockinManager.removeValidContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#193-206) should be declared external
LockinManager.setDefaultAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#206-209) should be declared external
AuthenticationManager.isCurrentOrPastAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#267-272) should be declared external
AuthenticationManager.isCurrentAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#273-275) should be declared external
AuthenticationManager.isCurrentOrPastAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#280-285) should be declared external
AuthenticationManager.isCurrentAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#286-289) should be declared external
AuthenticationManager.isCurrentOrPastAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#293-301) should be declared external
AuthenticationManager.addAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#304-319) should be declared external
AuthenticationManager.removeAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#322-338) should be declared external
AuthenticationManager.addAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#341-354) should be declared external
AuthenticationManager.removeAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#358-372) should be declared external
AuthenticationManager.addAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#374-387) should be declared external
AuthenticationManager.removeAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#391-403) should be declared external
Token.setLockinManagerAddress (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#495-497) should be declared external
Token.setRefundManagerContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#497-499) should be declared external
Token.transferFrom (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#501-523) should be declared external
Token.tokenHolderCount (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#523-526) should be declared external
Token.tokenHolder (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#529-530) should be declared external
Token.approve (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#534-540) should be declared external
Token.allowance (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#544-547) should be declared external
Token.totalSupply (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#548-551) should be declared external
Token.balanceOf (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#551-554) should be declared external
Token.transfer (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#556-579) should be declared external
Token.mintTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#626-640) should be declared external
Token.destroyTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol:
	- pragma solidity^0.4.11 (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'LockinManager.LockinManager' (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#78-85) is not in mixedCase
Parameter '_token' of LockinManager.LockinManager (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#79) is not in mixedCase
Parameter '_authenticationManager' of LockinManager.LockinManager (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#79) is not in mixedCase
Parameter '_owner' of LockinManager.getLocks (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#99-100) is not in mixedCase
Parameter '_owner' of LockinManager.getLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#102-103) is not in mixedCase
Parameter '_owner' of LockinManager.getLocksAmount (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#110) is not in mixedCase
Parameter '_owner' of LockinManager.getLocksUnlockDate (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#115) is not in mixedCase
Parameter '_owner' of LockinManager.getLocksLockedFor (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#120) is not in mixedCase
Parameter '_address' of LockinManager.defaultLockin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#129) is not in mixedCase
Parameter '_value' of LockinManager.defaultLockin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#129) is not in mixedCase
Parameter '_value' of LockinManager.lockForDays (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#134) is not in mixedCase
Parameter '_days' of LockinManager.lockForDays (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#134-135) is not in mixedCase
Parameter '_address' of LockinManager.lockIt (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#141) is not in mixedCase
Parameter '_value' of LockinManager.lockIt (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#141-142) is not in mixedCase
Parameter '_days' of LockinManager.lockIt (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#142) is not in mixedCase
Parameter '_days' of LockinManager.ifInAllowedLocks (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#151) is not in mixedCase
Parameter '_day' of LockinManager.addAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#157) is not in mixedCase
Parameter '_day' of LockinManager.removeAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#169-170) is not in mixedCase
Parameter '_address' of LockinManager.addValidContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#181) is not in mixedCase
Parameter '_address' of LockinManager.removeValidContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#194) is not in mixedCase
Parameter '_days' of LockinManager.setDefaultAllowedLock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#206) is not in mixedCase
Function 'AuthenticationManager.AuthenticationManager' (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#251-259) is not in mixedCase
Parameter '_address' of AuthenticationManager.isCurrentAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#261) is not in mixedCase
Parameter '_address' of AuthenticationManager.isCurrentOrPastAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#267) is not in mixedCase
Parameter '_address' of AuthenticationManager.isCurrentAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#274) is not in mixedCase
Parameter '_address' of AuthenticationManager.isCurrentOrPastAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#280) is not in mixedCase
Parameter '_address' of AuthenticationManager.isCurrentAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#287) is not in mixedCase
Parameter '_address' of AuthenticationManager.isCurrentOrPastAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#294) is not in mixedCase
Parameter '_address' of AuthenticationManager.addAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#304-305) is not in mixedCase
Parameter '_address' of AuthenticationManager.removeAdmin (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#323-325) is not in mixedCase
Parameter '_address' of AuthenticationManager.addAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#342) is not in mixedCase
Parameter '_address' of AuthenticationManager.removeAccountReader (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#359) is not in mixedCase
Parameter '_address' of AuthenticationManager.addAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#374-375) is not in mixedCase
Parameter '_address' of AuthenticationManager.removeAccountMinter (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#391-395) is not in mixedCase
Parameter '_owner' of Token.availableBalance (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#443-444) is not in mixedCase
Function 'Token.Token' (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#474-482) is not in mixedCase
Parameter '_authenticationManagerAddress' of Token.Token (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#474) is not in mixedCase
Parameter '_lockinManager' of Token.setLockinManagerAddress (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#495) is not in mixedCase
Parameter '_refundManagerContractAddress' of Token.setRefundManagerContract (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#497) is not in mixedCase
Parameter '_from' of Token.transferFrom (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#502) is not in mixedCase
Parameter '_to' of Token.transferFrom (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#503) is not in mixedCase
Parameter '_amount' of Token.transferFrom (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#503) is not in mixedCase
Parameter '_index' of Token.tokenHolder (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#529) is not in mixedCase
Parameter '_spender' of Token.approve (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#535) is not in mixedCase
Parameter '_amount' of Token.approve (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#535) is not in mixedCase
Parameter '_owner' of Token.allowance (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#545) is not in mixedCase
Parameter '_spender' of Token.allowance (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#545) is not in mixedCase
Parameter '_owner' of Token.balanceOf (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#551-552) is not in mixedCase
Parameter '_to' of Token.transfer (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#556) is not in mixedCase
Parameter '_amount' of Token.transfer (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#556-557) is not in mixedCase
Parameter '_addr' of Token.tokenOwnerAdd (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#583) is not in mixedCase
Parameter '_addr' of Token.tokenOwnerRemove (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#602) is not in mixedCase
Parameter '_address' of Token.mintTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#626) is not in mixedCase
Parameter '_amount' of Token.mintTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#626) is not in mixedCase
Parameter '_investor' of Token.destroyTokens (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
LockinManager.lock (/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol#46-47) is never used in LockinManager
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_contracts/0xc9935cec15431e00aff915762e47edfcf23bd76b.sol analyzed (4 contracts), 128 result(s) found