INFO:Slither:Compilation warnings/errors on /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:109:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:139:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:144:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:149:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:251:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:300:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:307:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(mintingFinished) throw;
                        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:413:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:423:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:427:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:433:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:440:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:451:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:470:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:477:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:487:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:509:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:515:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:558:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:559:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:567:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:568:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:576:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track participants for thank you email
                          ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:577:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:615:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:636:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:684:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:701:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:716:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:728:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:740:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:744:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:801:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:843:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:869:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GetPreCrowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
library SafeMathLib {
^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:227:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:254:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:286:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:294:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:518:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:550:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:557:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:557:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:646:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:658:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:668:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:688:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:743:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:3:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:9:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:14:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:25:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:31:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:32:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:33:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:57:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:72:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:81:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:109:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:127:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:224:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:231:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:241:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:245:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:258:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:413:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:450:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:631:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:644:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:655:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:666:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:681:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:696:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:786:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:825:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:843:3: Warning: No visibility specified. Defaulting to "public". 
  function MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:850:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:850:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:850:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                         ^--------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:850:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:869:5: Warning: No visibility specified. Defaulting to "public". 
    function GetPreCrowdsale(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:877:5: Warning: No visibility specified. Defaulting to "public". 
    function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:877:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
                                         ^----------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:877:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
                                                       ^---------^
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:882:5: Warning: No visibility specified. Defaulting to "public". 
    function() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:3:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:9:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:14:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:45:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:64:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:72:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:81:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:165:3: Warning: Function state mutability can be restricted to pure
  function safeMul(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:171:3: Warning: Function state mutability can be restricted to pure
  function safeDiv(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:178:3: Warning: Function state mutability can be restricted to pure
  function safeSub(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:183:3: Warning: Function state mutability can be restricted to pure
  function safeAdd(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:189:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:193:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:197:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:201:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:220:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol:791:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Crowdsale.earlyParticipantWhitelist (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#388-389) is never initialized. It is used in:
	- investInternal (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#475-532)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#634-649):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#646)
	State variables written after the call(s):
	- finalized (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#646)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#475-532):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#482-496)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#499-503)
	State variables written after the call(s):
	- tokensSold (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#518-522)
	- weiRaised (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#518)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#475-532):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#482-496)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#499-503)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#522-525)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#524-525)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#432-464):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#444-448)
	State variables written after the call(s):
	- endsAt (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#460)
	- minimumFundingGoal (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#461-464)
	- multisigWallet (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#448-449)
	- startsAt (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#457-458)
Reentrancy in Crowdsale.investInternal (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#475-532):
	External calls:
	- getState() == State.PreFunding (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#482-496)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#499-503)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#509-514)
	- investorCount (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#508)
	- tokenAmountOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#514-517)
Reentrancy in Crowdsale.preallocate (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#549-566):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#554-555)
	State variables written after the call(s):
	- investedAmountOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#558-560)
	- tokenAmountOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#560-564)
	- tokensSold (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#557-558)
	- weiRaised (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#556-557)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getState (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#787-818) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#811-818)
	- block.timestamp < startsAt (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#802-818)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#329-330)
FractionalERC20.decimals should be constant (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#43-45)
MintableToken.mintingFinished should be constant (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#276-278)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#148:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#153-154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#260-264:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#316:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#323:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#454-455:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#457:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#458:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#461:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#466:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#483-485:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#496:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#504:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#527:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#530:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#575:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#575-576:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#582-583:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#585:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#594:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#598:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#641:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#658:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#709:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#725:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#741:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#751:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#766-768:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#771:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#825:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SafeMathLib.times (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#3-9) should be declared external
SafeMathLib.minus (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#9-14) should be declared external
SafeMathLib.plus (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#14-22) should be declared external
ERC20Basic.balanceOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#24-25) should be declared external
StandardToken.balanceOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#247-249) should be declared external
StandardToken.transfer (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#227-235) should be declared external
ERC20Basic.transfer (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#25-26) should be declared external
StandardToken.allowance (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#269-273) should be declared external
ERC20.allowance (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#31-32) should be declared external
ERC20.transferFrom (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#32-33) should be declared external
StandardToken.transferFrom (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#235-247) should be declared external
StandardToken.approve (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#249-268) should be declared external
ERC20.approve (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#33-34) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#45-49) should be declared external
FinalizeAgent.isSane (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#56) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#61-63) should be declared external
PricingStrategy.isPricingStrategy (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#65-70) should be declared external
PricingStrategy.isSane (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#73-78) should be declared external
PricingStrategy.isPresalePurchase (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#82-86) should be declared external
PricingStrategy.calculatePrice (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#96-106) should be declared external
Ownable.transferOwnership (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#133-143) should be declared external
StandardToken.isToken (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#226-227) should be declared external
MintableToken.mint (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#285-298) should be declared external
MintableToken.setMintAgent (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#301-313) should be declared external
GetPreCrowdsale.fallback (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol) should be declared external
Crowdsale.fallback (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#466) should be declared external
Crowdsale.preallocate (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#549-566) should be declared external
Crowdsale.buyWithSignedAddress (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#607-611) should be declared external
Crowdsale.buyWithCustomerId (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#613-618) should be declared external
Crowdsale.buy (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#627-629) should be declared external
Crowdsale.finalize (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#634-649) should be declared external
Crowdsale.setFinalizeAgent (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#655-658) should be declared external
Crowdsale.setRequireCustomerId (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#664-668) should be declared external
Crowdsale.setRequireSignedAddress (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#675-684) should be declared external
GetPreCrowdsale.setEarlyParicipantWhitelist (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol) should be declared external
Crowdsale.setEarlyParicipantWhitelist (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#692-696) should be declared external
Crowdsale.setEndsAt (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#708-710) should be declared external
Crowdsale.setMultisig (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#738-742) should be declared external
Crowdsale.loadRefund (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#750-755) should be declared external
Crowdsale.refund (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#762-771) should be declared external
Crowdsale.isFinalizerSane (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#777-779) should be declared external
Crowdsale.isPricingSane (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#780-781) should be declared external
Crowdsale.setOwnerTestValue (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#819) should be declared external
Crowdsale.isCrowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#820-821) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#115-118) is not in mixedCase
Parameter '_owner' of StandardToken.balanceOf (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#248) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#228-231) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#231) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#270) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#270) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#236) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#236) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#236) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#249) is not in mixedCase
Parameter '_value' of StandardToken.approve (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#249-250) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#432-464) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#433) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#434-438) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#438-439) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#439) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#439) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#440-443) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#675-677) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#719-723) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#329-330) is not in mixedCase
Function 'MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale' (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#861-871) is not in mixedCase
Parameter '_maximumSellableTokens' of MintedTokenCappedCrowdsale.MintedTokenCappedCrowdsale (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol#864-867) is not in mixedCase
Function 'GetPreCrowdsale.GetPreCrowdsale' (/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x2d5d88f7e316b01997330640440a4332ed60d177.sol analyzed (14 contracts), 108 result(s) found