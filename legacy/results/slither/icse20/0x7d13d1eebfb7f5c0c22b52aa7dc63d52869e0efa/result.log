INFO:Slither:Compilation warnings/errors on /unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:245:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 documentContentSHA256Keccak256 = keccak256(_documentContentSHA256);
                                                 ^-------------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:245:50: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 documentContentSHA256Keccak256 = keccak256(_documentContentSHA256);
                                                 ^-------------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:248:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(doc.documentContentSHA256)==documentContentSHA256Keccak256) {
                ^----------------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:248:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if (keccak256(doc.documentContentSHA256)==documentContentSHA256Keccak256) {
                ^----------------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:259:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 IPFSdirectoryHashSHA256Keccak256 = keccak256(_IPFSdirectoryHash);
                                                   ^---------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:259:52: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 IPFSdirectoryHashSHA256Keccak256 = keccak256(_IPFSdirectoryHash);
                                                   ^---------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:262:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(doc.IPFSdirectoryHash)==IPFSdirectoryHashSHA256Keccak256) {
                ^------------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:262:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if (keccak256(doc.IPFSdirectoryHash)==IPFSdirectoryHashSHA256Keccak256) {
                ^------------------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:273:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 fileNameKeccak256 = keccak256(_fileName);
                                    ^------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:273:37: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 fileNameKeccak256 = keccak256(_fileName);
                                    ^------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:276:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(doc.fileName)==fileNameKeccak256) {
                ^---------------------^
/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:276:17: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if (keccak256(doc.fileName)==fileNameKeccak256) {
                ^---------------------^

INFO:Detectors:[93m
TrustedDocument.getDocumentIdWithContentHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#246-260) uses a dangerous strict equality:
	- keccak256()(doc.documentContentSHA256) == documentContentSHA256Keccak256
TrustedDocument.getDocumentIdWithContentHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#246-260) uses a dangerous strict equality:
	- keccak256()(doc.documentContentSHA256) == documentContentSHA256Keccak256
TrustedDocument.getDocumentIdWithIPFSdirectoryHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#261-275) uses a dangerous strict equality:
	- keccak256()(doc.IPFSdirectoryHash) == IPFSdirectoryHashSHA256Keccak256
TrustedDocument.getDocumentIdWithContentHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#246-260) uses a dangerous strict equality:
	- keccak256()(doc.documentContentSHA256) == documentContentSHA256Keccak256
TrustedDocument.getDocumentIdWithIPFSdirectoryHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#261-275) uses a dangerous strict equality:
	- keccak256()(doc.IPFSdirectoryHash) == IPFSdirectoryHashSHA256Keccak256
TrustedDocument.getDocumentIdWithName (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#276-287) uses a dangerous strict equality:
	- keccak256()(doc.fileName) == fileNameKeccak256
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
TrustedDocument.transferOwnership (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#109-111) should be declared external
TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#113-140) should be declared external
TrustedDocument.getDocumentsCount (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#143-145) should be declared external
TrustedDocument.retire (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#148-156) should be declared external
TrustedDocument.getDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#157-183) should be declared external
TrustedDocument.getDocumentUpdatedVersionId (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#185-190) should be declared external
TrustedDocument.getBaseUrl (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#197-198) should be declared external
TrustedDocument.setBaseUrl (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#204-207) should be declared external
TrustedDocument.getFirstDocumentIdStartingAtValidFrom (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#208-220) should be declared external
TrustedDocument.getFirstDocumentIdBetweenDatesValidFrom (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#223-245) should be declared external
TrustedDocument.getDocumentIdWithContentHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#246-260) should be declared external
TrustedDocument.getDocumentIdWithIPFSdirectoryHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#261-275) should be declared external
TrustedDocument.getDocumentIdWithName (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#276-287) should be declared external
TrustedDocument.updateDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#290-293) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol:
	- pragma solidity^0.4.8 (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_newOwner' of TrustedDocument.transferOwnership (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#109) is not in mixedCase
Parameter '_fileName' of TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#114) is not in mixedCase
Parameter '_documentContentSHA256' of TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#115) is not in mixedCase
Parameter '_documentMetadataSHA256' of TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#115-116) is not in mixedCase
Parameter '_IPFSdirectoryHash' of TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#116) is not in mixedCase
Parameter '_validFrom' of TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#116) is not in mixedCase
Parameter '_validTo' of TrustedDocument.addDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#117) is not in mixedCase
Parameter '_upgradedVersion' of TrustedDocument.retire (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#148-149) is not in mixedCase
Parameter '_documentId' of TrustedDocument.getDocument (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#158) is not in mixedCase
Parameter '_documentId' of TrustedDocument.getDocumentUpdatedVersionId (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#188) is not in mixedCase
Parameter '_baseUrl' of TrustedDocument.setBaseUrl (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#204-205) is not in mixedCase
Parameter '_unixTimeFrom' of TrustedDocument.getFirstDocumentIdStartingAtValidFrom (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#209-210) is not in mixedCase
Parameter '_unixTimeStarting' of TrustedDocument.getFirstDocumentIdBetweenDatesValidFrom (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#224) is not in mixedCase
Parameter '_unixTimeEnding' of TrustedDocument.getFirstDocumentIdBetweenDatesValidFrom (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#224-225) is not in mixedCase
Parameter '_documentContentSHA256' of TrustedDocument.getDocumentIdWithContentHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#247-248) is not in mixedCase
Parameter '_IPFSdirectoryHash' of TrustedDocument.getDocumentIdWithIPFSdirectoryHash (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#262) is not in mixedCase
Parameter '_fileName' of TrustedDocument.getDocumentIdWithName (/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol#276-277) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/37/0x7d13d1eebfb7f5c0c22b52aa7dc63d52869e0efa.sol analyzed (1 contracts), 35 result(s) found