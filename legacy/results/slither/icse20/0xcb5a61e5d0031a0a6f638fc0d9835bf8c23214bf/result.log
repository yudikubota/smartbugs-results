INFO:Slither:Compilation warnings/errors on /unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:26:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                ^--------------------------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:26:17: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                ^--------------------------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:26:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                                                      ^----------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:26:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                                                      ^----------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:38:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                ^--------------------------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:38:17: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                ^--------------------------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:38:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                                                      ^----------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:38:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                                                      ^----------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:48:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                ^--------------------------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:48:17: Warning: The provided argument of type string storage ref is not implicitly convertible to expected type bytes memory.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                ^--------------------------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:48:55: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                                                      ^----------------^
/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:48:55: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {
                                                      ^----------------^

INFO:Detectors:[92m
Transfiere2018Asistencia.addOrg (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#22-34) should be declared external
Transfiere2018Asistencia.deleteOrg (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#34-46) should be declared external
Transfiere2018Asistencia.checkCode (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#46-57) should be declared external
Transfiere2018Asistencia.destroy (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#57-60) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol:
	- pragma solidity^0.4.20 (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_codigo' of Transfiere2018Asistencia.addOrg (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#22-23) is not in mixedCase
Parameter '_codigo' of Transfiere2018Asistencia.deleteOrg (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#35) is not in mixedCase
Parameter '_codigo' of Transfiere2018Asistencia.checkCode (/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol#46-47) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/9/0xcb5a61e5d0031a0a6f638fc0d9835bf8c23214bf.sol analyzed (1 contracts), 8 result(s) found