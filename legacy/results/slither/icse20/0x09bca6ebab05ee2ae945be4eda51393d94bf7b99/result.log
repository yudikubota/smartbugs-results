INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:15:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:21:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:62:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (x > MAX_UINT256 - y) throw;
                                 ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:67:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (x < y) throw;
                   ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:73:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (x > MAX_UINT256 / y) throw;
                                 ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:102:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ERC223Token_STA() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:115:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (icoAddress == address(0)) throw;                         // ICO address must be set up first
                                      ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:116:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != icoAddress && msg.sender != owner) throw;  // triggering enabled only for ICO or owner
                                                             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:117:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number > icoEndBlock) throw;                       // rewarding enabled only before the end of ICO
                                        ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:118:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (minedTokenCount * multiplier >= maxSupply) throw; 
                                                       ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:121:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (minedTokens[i].block == block.number) throw; 
                                                          ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:133:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= icoEndBlock+14*3456) throw;
                                                 ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:204:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(msg.sender) < _value) throw;
                                            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:213:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(msg.sender) < _value) throw;
                                            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:227:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (icoAddress == address(0)) throw;
                                      ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:228:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner && msg.sender != icoAddress) throw; // only owner and ico contract are allowed
                                                             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:229:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[_address] < _value) throw;                     // Check if the sender has enough tokens
                                         ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:241:14: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        else throw;
             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:260:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ERC223Token_STB() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:339:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(msg.sender) < _value) throw;
                                            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:348:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf(msg.sender) < _value) throw;
                                            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:366:14: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        else throw;
             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:371:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (icoAddress == address(0)) throw;
                                      ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:372:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != icoAddress && msg.sender != owner) throw;     // mint allowed only for ICO contract or owner
                                                             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:373:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (safeAdd(totalSupply, _amount) > maxSupply) throw;
                                                       ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:429:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StableICO() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:445:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number < icoStartBlock) throw;
                                          ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:447:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (_value < 50000000) throw; // minimum 0.5 STA
                                   ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:453:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            } else throw;	
                   ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:457:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // other tokens
            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:464:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value < 100000000000000000) throw;  // minimum 0.1 ETH
                                            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:500:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (msg.sender != owner) throw;  // WARNING: senders ETH may be lost (if transferred after finished ICO)
                                         ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:504:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;  // WARNING: senders ETH may be lost (if transferred after finished ICO)
            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:510:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoSucceeded) throw;
                             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:538:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoSucceeded) throw;
                             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:573:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoSucceeded || isDonatedEthTransferred) throw;
                                                        ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:580:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoFinished || isIcoSucceeded) throw;
                                              ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:592:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoFinished || _amount <= 0 || _amount > ownersEth) throw;
                                                                   ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:599:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoFinished || _amount <= 0) throw;
                                            ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:607:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= icoEndBlock || isIcoFinished) throw;
                                                          ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:621:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!isIcoSucceeded) throw;
                             ^---^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:128:9: Warning: Invoking events without "emit" prefix is deprecated.
        MessageClaimMiningReward(block.coinbase, block.number, 1 * multiplier);
        ^--------------------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:134:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(this); 
        ^-----------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:207:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value, _data);
        ^--------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:218:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value, _data);
        ^--------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:232:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_address, _value);
        ^--------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:342:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value, _data);
        ^--------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:353:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value, _data);
        ^--------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:376:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, _receiver, _amount, new bytes(0)); 
        ^-------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:432:31: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x09BcA6eBAb05Ee2ae945BE4edA51393d94Bf7b99'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        stb = ERC223Token_STB(0x09bca6ebab05ee2ae945be4eda51393d94bf7b99);  // INIT
                              ^----------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:433:23: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xb2E7579F84a8dDAFDB376F9872916B7fcb8dBeC0'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
        beneficiary = 0xb2e7579f84a8ddafdb376f9872916b7fcb8dbec0;  // INIT
                      ^----------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:452:17: Warning: Invoking events without "emit" prefix is deprecated.
                MessageReceiveSta(_from, _value, block.number);
                ^--------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:455:13: Warning: Invoking events without "emit" prefix is deprecated.
            MessageReceiveStb(_from, _value, block.number, _data);
            ^---------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:474:17: Warning: Invoking events without "emit" prefix is deprecated.
                MessageReceiveEth(msg.sender, msg.value, block.number);
                ^----------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:483:17: Warning: Invoking events without "emit" prefix is deprecated.
                MessageReceiveEth(msg.sender, msg.value, block.number);
                ^----------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:530:13: Warning: Invoking events without "emit" prefix is deprecated.
            MessageExchangeStaStb(receivedSta[i].minerAddress, receivedSta[i].staAmount, 
            ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:566:13: Warning: Invoking events without "emit" prefix is deprecated.
            MessageExchangeEthStb(donations[i].donorAddress, donations[i].ethAmount, 
            ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:586:13: Warning: Invoking events without "emit" prefix is deprecated.
            MessageRefundEth(donations[i].donorAddress, donations[i].ethAmount);
            ^-----------------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:15:5: Warning: No visibility specified. Defaulting to "public". 
    function Ownable() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:30:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns (uint);
    ^------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:32:5: Warning: No visibility specified. Defaulting to "public". 
    function name() constant returns (string _name);
    ^----------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function symbol() constant returns (string _symbol);
    ^--------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:34:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns (uint8 _decimals);
    ^-----------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:35:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 _supply);
    ^--------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value) returns (bool ok);
    ^----------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value, bytes data) returns (bool ok);
    ^----------------------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenFallback(address _from, uint _value, bytes _data);
    ^--------------------------------------------------------------^
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:102:5: Warning: No visibility specified. Defaulting to "public". 
    function ERC223Token_STA() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:114:5: Warning: No visibility specified. Defaulting to "public". 
    function claimMiningReward() {  
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:131:5: Warning: No visibility specified. Defaulting to "public". 
    function selfDestroy() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function name() constant returns (string _name) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:143:5: Warning: No visibility specified. Defaulting to "public". 
    function symbol() constant returns (string _symbol) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns (uint8 _decimals) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:151:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 _totalSupply) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function minedTokenCount() constant returns (uint256 _minedTokenCount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:157:5: Warning: No visibility specified. Defaulting to "public". 
    function icoAddress() constant returns (address _icoAddress) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:162:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value, bytes _data) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:174:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:222:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:226:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(address _address, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:237:5: Warning: No visibility specified. Defaulting to "public". 
    function setIcoAddress(address _address) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:260:5: Warning: No visibility specified. Defaulting to "public". 
    function ERC223Token_STB() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:271:5: Warning: No visibility specified. Defaulting to "public". 
    function maxSupply() constant returns (uint256 _maxSupply) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:277:5: Warning: No visibility specified. Defaulting to "public". 
    function name() constant returns (string _name) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:281:5: Warning: No visibility specified. Defaulting to "public". 
    function symbol() constant returns (string _symbol) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:285:5: Warning: No visibility specified. Defaulting to "public". 
    function decimals() constant returns (uint8 _decimals) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:289:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns (uint256 _totalSupply) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:292:5: Warning: No visibility specified. Defaulting to "public". 
    function icoAddress() constant returns (address _icoAddress) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value, bytes _data) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:309:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:357:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:362:5: Warning: No visibility specified. Defaulting to "public". 
    function setIcoAddress(address _address) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:370:5: Warning: No visibility specified. Defaulting to "public". 
    function mint(address _receiver, uint256 _amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:429:5: Warning: No visibility specified. Defaulting to "public". 
    function StableICO() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:444:5: Warning: No visibility specified. Defaulting to "public". 
    function tokenFallback(address _from, uint256 _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:462:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:61:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:66:5: Warning: Function state mutability can be restricted to pure
    function safeSub(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:71:5: Warning: Function state mutability can be restricted to pure
    function safeMul(uint256 x, uint256 y) constant internal returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:186:5: Warning: Function state mutability can be restricted to view
    function isContract(address _addr) private returns (bool is_contract) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:321:5: Warning: Function state mutability can be restricted to view
    function isContract(address _addr) private returns (bool is_contract) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
ERC223Token_STA.claimMiningReward (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#115-132) uses a dangerous strict equality:
	- minedTokens[i].block == block.number
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in StableICO.exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#548-584):
	External calls:
	- stb.mint(address(this),_mintAmount) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#562)
	- stb.transfer(donations[i].donorAddress,10 * ((100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100)) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#573-575)
	State variables written after the call(s):
	- donations (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#575-578)
	- donations (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#578-580)
Reentrancy in StableICO.exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#518-547):
	External calls:
	- stb.mint(address(this),_mintAmount) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#528-529)
	State variables written after the call(s):
	- isStbMintedForStaEx (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#529-530)
Reentrancy in StableICO.exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#518-547):
	External calls:
	- stb.mint(address(this),_mintAmount) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#528-529)
	- stb.transfer(receivedSta[i].minerAddress,receivedSta[i].staAmount / _sta2stb * oneStaIsStb / 10 ** 4) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#533-537)
	State variables written after the call(s):
	- receivedSta (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#537)
	- receivedSta (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#538-539)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ERC223Token_STA.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#88-89) shadows:
	- ERC223.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#30)
ERC223Token_STB.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#261) shadows:
	- ERC223.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#30)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[93m
empty in ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#180-182) is a local variable never initialiazed
empty in ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#321) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
StableICO.exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#518-547) does not use the value returned by external calls:
	-stb.transfer(receivedSta[i].minerAddress,receivedSta[i].staAmount / _sta2stb * oneStaIsStb / 10 ** 4) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#533-537)
	-sta.burn(address(this),_toBurn) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#545-546)
StableICO.exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#548-584) does not use the value returned by external calls:
	-stb.transfer(donations[i].donorAddress,10 * ((100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100)) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#573-575)
StableICO.transferStbToOwner (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#611-615) does not use the value returned by external calls:
	-stb.transfer(owner,_amount) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#614)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
StableICO.exchangeStaStb has external calls inside a loop:
	- stb.transfer(receivedSta[i].minerAddress,receivedSta[i].staAmount / _sta2stb * oneStaIsStb / 10 ** 4) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#533-537)
StableICO.exchangeEthStb has external calls inside a loop:
	- stb.transfer(donations[i].donorAddress,10 * ((100 + _bonus) * (donations[i].ethAmount / _wei2stb) / 100)) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#573-575)
StableICO.refund has external calls inside a loop:
	- donations[i].donorAddress.transfer(donations[i].ethAmount) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#598-599)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in StableICO.fallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#473-517):
	External calls:
	- exchangeStaStb(0,minerNum) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#504)
	- exchangeEthStb(0,donationNum) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#506-508)
	External calls sending eth:
	- msg.sender.transfer(msg.value) (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#500)
	- drawdown() (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#508)
	State variables written after the call(s):
	- isDonatedEthTransferred (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#508)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC223Token_STA.isContract uses assembly (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#189-204)
	- /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#195-203
ERC223Token_STB.isContract uses assembly (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#326-341)
	- /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#337-340
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ERC223.totalSupply should be constant (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#30)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#23:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#71:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#80-81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#116:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#118:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#121:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#125:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#139-140:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#208-209:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#217:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#230:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#230:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#232:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#253:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#347:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#357:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#374:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#377-378:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#382:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#384:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#452:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#454:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#469:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#472:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#474:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#511:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#516:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#523:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#549:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#586:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#593:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#608:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#614:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#624:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC223Token_STA.name (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#143-146) should be declared external
ERC223.name (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#32-33) should be declared external
ERC223Token_STB.name (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#285-288) should be declared external
ERC223Token_STB.symbol (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#289-290) should be declared external
ERC223Token_STA.symbol (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#147-150) should be declared external
ERC223.symbol (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#33-34) should be declared external
ERC223Token_STA.decimals (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#151-153) should be declared external
ERC223Token_STB.decimals (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#292-296) should be declared external
ERC223.decimals (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#34-35) should be declared external
ERC223.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#35-37) should be declared external
ERC223Token_STA.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#154-157) should be declared external
ERC223Token_STB.totalSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#297-298) should be declared external
ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#177-187) should be declared external
ERC223.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#37-38) should be declared external
ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#320-324) should be declared external
ERC223.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#38-39) should be declared external
ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#307-312) should be declared external
ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#164-174) should be declared external
ContractReceiver.tokenFallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#46-52) should be declared external
ERC223Token_STA.claimMiningReward (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#115-132) should be declared external
ERC223Token_STA.selfDestroy (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#133-140) should be declared external
ERC223Token_STA.minedTokenCount (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#157-161) should be declared external
ERC223Token_STA.icoAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#161-162) should be declared external
ERC223Token_STA.burn (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#228-241) should be declared external
ERC223Token_STA.setIcoAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#248-255) should be declared external
ERC223Token_STB.maxSupply (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#280-282) should be declared external
ERC223Token_STB.icoAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#298-302) should be declared external
ERC223Token_STB.setIcoAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#372-375) should be declared external
ERC223Token_STB.mint (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#375-386) should be declared external
StableICO.claimMiningReward (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#448-449) should be declared external
StableICO.tokenFallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#450-472) should be declared external
StableICO.fallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#473-517) should be declared external
StableICO.transferEthToOwner (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#606-609) should be declared external
StableICO.transferStbToOwner (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#611-615) should be declared external
StableICO.backup_finishIcoVars (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#620-628) should be declared external
StableICO.backup_exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) should be declared external
StableICO.backup_exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) should be declared external
StableICO.backup_drawdown (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) should be declared external
StableICO.backup_drawdown_amount (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) should be declared external
StableICO.backup_refund (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol:
	- pragma solidity^0.4.11 (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#15-19) is not in mixedCase
Contract 'ERC223Token_STA' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#83-255) is not in CapWords
Parameter '_owner' of ERC223Token_STA.balanceOf (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#228) is not in mixedCase
Parameter '_to' of ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#179) is not in mixedCase
Parameter '_value' of ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#180) is not in mixedCase
Parameter '_to' of ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#166-167) is not in mixedCase
Parameter '_value' of ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#167) is not in mixedCase
Parameter '_data' of ERC223Token_STA.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#167) is not in mixedCase
Function 'ERC223Token_STA.ERC223Token_STA' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#105-115) is not in mixedCase
Parameter '_addr' of ERC223Token_STA.isContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#189) is not in mixedCase
Parameter '_to' of ERC223Token_STA.transferToAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#206) is not in mixedCase
Parameter '_value' of ERC223Token_STA.transferToAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#206) is not in mixedCase
Parameter '_data' of ERC223Token_STA.transferToAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#206) is not in mixedCase
Parameter '_to' of ERC223Token_STA.transferToContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#215) is not in mixedCase
Parameter '_value' of ERC223Token_STA.transferToContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#215) is not in mixedCase
Parameter '_data' of ERC223Token_STA.transferToContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#215) is not in mixedCase
Parameter '_address' of ERC223Token_STA.burn (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#229) is not in mixedCase
Parameter '_value' of ERC223Token_STA.burn (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#229) is not in mixedCase
Parameter '_address' of ERC223Token_STA.setIcoAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#249) is not in mixedCase
Contract 'ERC223Token_STB' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#256-386) is not in CapWords
Parameter '_owner' of ERC223Token_STB.balanceOf (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#369-370) is not in mixedCase
Parameter '_to' of ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#320) is not in mixedCase
Parameter '_value' of ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#320) is not in mixedCase
Parameter '_to' of ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#307) is not in mixedCase
Parameter '_value' of ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#307) is not in mixedCase
Parameter '_data' of ERC223Token_STB.transfer (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#307) is not in mixedCase
Function 'ERC223Token_STB.ERC223Token_STB' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#263-277) is not in mixedCase
Parameter '_addr' of ERC223Token_STB.isContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#326-327) is not in mixedCase
Parameter '_to' of ERC223Token_STB.transferToAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#346) is not in mixedCase
Parameter '_value' of ERC223Token_STB.transferToAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#346) is not in mixedCase
Parameter '_data' of ERC223Token_STB.transferToAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#346) is not in mixedCase
Parameter '_to' of ERC223Token_STB.transferToContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#352) is not in mixedCase
Parameter '_value' of ERC223Token_STB.transferToContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#352-353) is not in mixedCase
Parameter '_data' of ERC223Token_STB.transferToContract (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#353) is not in mixedCase
Parameter '_address' of ERC223Token_STB.setIcoAddress (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#372) is not in mixedCase
Parameter '_receiver' of ERC223Token_STB.mint (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#375-376) is not in mixedCase
Parameter '_amount' of ERC223Token_STB.mint (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#376) is not in mixedCase
Function 'StableICO.StableICO' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#438-447) is not in mixedCase
Parameter '_from' of StableICO.tokenFallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#451) is not in mixedCase
Parameter '_value' of StableICO.tokenFallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#451) is not in mixedCase
Parameter '_data' of StableICO.tokenFallback (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#451) is not in mixedCase
Parameter '_from' of StableICO.exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#519) is not in mixedCase
Parameter '_to' of StableICO.exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#519-520) is not in mixedCase
Parameter '_from' of StableICO.exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#548) is not in mixedCase
Parameter '_to' of StableICO.exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#548) is not in mixedCase
Parameter '_from' of StableICO.refund (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#591-592) is not in mixedCase
Parameter '_to' of StableICO.refund (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#592) is not in mixedCase
Parameter '_amount' of StableICO.transferEthToOwner (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#606) is not in mixedCase
Parameter '_amount' of StableICO.transferStbToOwner (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#611-612) is not in mixedCase
Function 'StableICO.backup_finishIcoVars' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol#620-628) is not in mixedCase
Function 'StableICO.backup_exchangeStaStb' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_from' of StableICO.backup_exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_to' of StableICO.backup_exchangeStaStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Function 'StableICO.backup_exchangeEthStb' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_from' of StableICO.backup_exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_to' of StableICO.backup_exchangeEthStb (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Function 'StableICO.backup_drawdown' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Function 'StableICO.backup_drawdown_amount' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_amount' of StableICO.backup_drawdown_amount (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Function 'StableICO.backup_refund' (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_from' of StableICO.backup_refund (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Parameter '_to' of StableICO.backup_refund (/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/13/0x09bca6ebab05ee2ae945be4eda51393d94bf7b99.sol analyzed (7 contracts), 159 result(s) found