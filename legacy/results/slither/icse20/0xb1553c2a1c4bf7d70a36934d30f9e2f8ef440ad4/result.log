INFO:Slither:Compilation warnings/errors on /unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:39:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:72:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Destructible() public payable { }
  ^----------------------------------------^
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:657:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function stop() public onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:59:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:545:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    return uint(keccak256(block.blockhash(block.number - 1), now, numCharacters, nonce));
                ^---------------------------------------------------------------------^
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:501:3: Warning: No visibility specified. Defaulting to "public". 
  function isValidAdversary(uint8 characterType, uint8 adversaryType) pure returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:545:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
    return uint(keccak256(block.blockhash(block.number - 1), now, numCharacters, nonce));
                          ^-------------^
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:732:59: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function receiveApproval(address sender, uint256 value, address tokenContract, bytes callData) public {
                                                          ^-------------------^
/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol:908:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function toUint32(bytes b) internal pure returns(uint32) {
                    ^-----^

INFO:Detectors:[93m
DragonKing.toUint32 (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
DragonKing.exit (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#316-356) uses a dangerous strict equality:
	- characters[ids[i]].owner == msg.sender && characters[ids[i]].purchaseTimestamp + 86400 < now && (characters[ids[i]].characterType < BALLOON_MIN_TYPE || characters[ids[i]].characterType > BALLOON_MAX_TYPE)
	- nchars > 0 && characters[ids[nchars - 1]].owner == msg.sender && characters[ids[nchars - 1]].purchaseTimestamp + 86400 < now && (characters[ids[i]].characterType < BALLOON_MIN_TYPE || characters[ids[i]].characterType > BALLOON_MAX_TYPE)
DragonKing.exit (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#316-356) uses a dangerous strict equality:
	- characters[ids[i]].owner == msg.sender && characters[ids[i]].purchaseTimestamp + 86400 < now && (characters[ids[i]].characterType < BALLOON_MIN_TYPE || characters[ids[i]].characterType > BALLOON_MAX_TYPE)
	- nchars > 0 && characters[ids[nchars - 1]].owner == msg.sender && characters[ids[nchars - 1]].purchaseTimestamp + 86400 < now && (characters[ids[i]].characterType < BALLOON_MIN_TYPE || characters[ids[i]].characterType > BALLOON_MAX_TYPE)
DragonKing.sellCharacter (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#721-741) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == characters[characterId].owner,only owners can sell their characters)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in DragonKing.addCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#254-297):
	External calls:
	- amount = uint16(msg.value / config.costs(characterType)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#255-256)
	- characterType >= INVALID_CHARACTER_TYPE || msg.value < config.costs(characterType) || nchars + amount > config.maxCharacters() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#256-259)
	- characters[nid + i] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#269-271)
	State variables written after the call(s):
	- ids (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#269)
	- numCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#272)
Reentrancy in DragonKing.addCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#254-297):
	External calls:
	- amount = uint16(msg.value / config.costs(characterType)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#255-256)
	- characterType >= INVALID_CHARACTER_TYPE || msg.value < config.costs(characterType) || nchars + amount > config.maxCharacters() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#256-259)
	- characters[nid + i] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#269-271)
	- amountSKL = sklToken.balanceOf(msg.sender) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#272-273)
	- amountXPER = xperToken.balanceOf(msg.sender) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#273-274)
	- characters[nid + j] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#293-295)
	State variables written after the call(s):
	- nextId (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#295)
Reentrancy in DragonKing.distributeCastleLoot (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#679-715):
	External calls:
	- require(bool,string)(now >= lastCastleLootDistributionTimestamp + config.castleLootDistributionThreshold(),not enough time passed since the last castle loot distribution) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#680-681)
	State variables written after the call(s):
	- lastCastleLootDistributionTimestamp (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#682-683)
Reentrancy in DragonKing.fight (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#429-505):
	External calls:
	- require(bool,string)(cooldown[characterID] + config.CooldownThreshold() <= now,not enough time passed since the last fight of this character) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#436-438)
	- characterPower = sklToken.balanceOf(character.owner) / 10 ** 15 + xperToken.balanceOf(character.owner) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#451-454)
	- adversaryPower = sklToken.balanceOf(adversary.owner) / 10 ** 15 + xperToken.balanceOf(adversary.owner) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#454-457)
	- base_probability += uint16(100 / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#459-460)
	- base_probability -= uint16(100 / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#460-464)
	- base_probability -= uint16((100 * adversary.value) / character.value / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#466-468)
	- base_probability += uint16((100 * character.value) / adversary.value / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#470-472)
	State variables written after the call(s):
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#477-478)
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#485)
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#494-499)
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#502)
	- cooldown (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#504-505)
	- ids (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#477-478)
	- ids (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#494-499)
	- numCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#480-481)
	- numCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#499)
Reentrancy in DragonKing.receiveApproval (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#747-801):
	External calls:
	- require(bool,string)(characters[id].value == config.values(cType),protection could be bought only before the first fight and before the first volcano eruption) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#765-771)
	- lifePrice = ((cType % NUMBER_OF_LEVELS) + 1) * config.protectionPrice() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#777-782)
	- lifePrice = (((cType + 3) % NUMBER_OF_LEVELS) + 1) * config.protectionPrice() * 2 (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#782-785)
	- lifePrice = (((cType + 3) % NUMBER_OF_LEVELS) + 1) * config.protectionPrice() * 2 (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#788-790)
	- assert(bool)(neverdieToken.transferFrom(sender,this,price)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#793-795)
	State variables written after the call(s):
	- protection (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#795-796)
Reentrancy in DragonKing.triggerVolcanoEruption (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#378-420):
	External calls:
	- require(bool,string)(now >= lastEruptionTimestamp + config.eruptionThreshold(),not enough time passed since last eruption) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#380-382)
	State variables written after the call(s):
	- lastEruptionTimestamp (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#384)
Reentrancy in DragonKing.triggerVolcanoEruption (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#378-420):
	External calls:
	- require(bool,string)(now >= lastEruptionTimestamp + config.eruptionThreshold(),not enough time passed since last eruption) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#380-382)
	- howmany = nchars * config.percentageToKill() / 100 (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#389-390)
	State variables written after the call(s):
	- numCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#416)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
lifePrice in DragonKing.receiveApproval (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#773-774) is a local variable never initialiazed
valueSum in DragonKing.distributeCastleLoot (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#690) is a local variable never initialiazed
max in DragonKing.receiveApproval (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#774) is a local variable never initialiazed
archersCount in DragonKing.distributeCastleLoot (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#693-694) is a local variable never initialiazed
playerBalance in DragonKing.exit (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#317) is a local variable never initialiazed
valueSum in DragonKing.distribute (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#613) is a local variable never initialiazed
pot in DragonKing.triggerVolcanoEruption (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#384) is a local variable never initialiazed
base_probability in DragonKing.fight (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#449-450) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
DragonKing.addCharacters has external calls inside a loop:
	- characters[nid + i] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#269-271)
DragonKing.addCharacters has external calls inside a loop:
	- characters[nid + j] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#293-295)
DragonKing.distribute has external calls inside a loop:
	- shares[m] = amount * config.values(m) / valueSum / numCharactersXType[m] (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#623-625)
DragonKing.distribute has external calls inside a loop:
	- valueSum += config.values(v) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#621)
DragonKing.payOut has external calls inside a loop:
	- characters[ids[i]].owner.transfer(characters[ids[i]].value) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#668-669)
DragonKing.distributeCastleLoot has external calls inside a loop:
	- shares[j] = amount * config.values(ARCHER_MIN_TYPE + j) / valueSum (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#710-711)
DragonKing.distributeCastleLoot has external calls inside a loop:
	- (cType >= ARCHER_MIN_TYPE && cType <= ARCHER_MAX_TYPE) && (((uint64(now) - characters[ids[i]].purchaseTimestamp) / config.eruptionThreshold()) >= 7) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#697-708)
DragonKing.distributeCastleLoot has external calls inside a loop:
	- valueSum += config.values(cType) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#705-706)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in DragonKing.addCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#254-297):
	External calls:
	- amount = uint16(msg.value / config.costs(characterType)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#255-256)
	- characterType >= INVALID_CHARACTER_TYPE || msg.value < config.costs(characterType) || nchars + amount > config.maxCharacters() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#256-259)
	State variables written after the call(s):
	- oldest (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#265-266)
Reentrancy in DragonKing.addCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#254-297):
	External calls:
	- amount = uint16(msg.value / config.costs(characterType)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#255-256)
	- characterType >= INVALID_CHARACTER_TYPE || msg.value < config.costs(characterType) || nchars + amount > config.maxCharacters() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#256-259)
	- characters[nid + i] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#269-271)
	State variables written after the call(s):
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#269-271)
	- numCharactersXType (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#271-272)
Reentrancy in DragonKing.addCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#254-297):
	External calls:
	- amount = uint16(msg.value / config.costs(characterType)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#255-256)
	- characterType >= INVALID_CHARACTER_TYPE || msg.value < config.costs(characterType) || nchars + amount > config.maxCharacters() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#256-259)
	- amountSKL = sklToken.balanceOf(msg.sender) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#272-273)
	- amountXPER = xperToken.balanceOf(msg.sender) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#273-274)
	- characters[nid + j] = Character(characterType,config.values(characterType),msg.sender,uint64(now)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#293-295)
	State variables written after the call(s):
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#293-295)
Reentrancy in DragonKing.distributeCastleLoot (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#679-715):
	External calls:
	- require(bool,string)(now >= lastCastleLootDistributionTimestamp + config.castleLootDistributionThreshold(),not enough time passed since the last castle loot distribution) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#680-681)
	State variables written after the call(s):
	- castleTreasury (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#713)
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#711-713)
Reentrancy in DragonKing.fight (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#429-505):
	External calls:
	- require(bool,string)(cooldown[characterID] + config.CooldownThreshold() <= now,not enough time passed since the last fight of this character) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#436-438)
	- characterPower = sklToken.balanceOf(character.owner) / 10 ** 15 + xperToken.balanceOf(character.owner) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#451-454)
	- adversaryPower = sklToken.balanceOf(adversary.owner) / 10 ** 15 + xperToken.balanceOf(adversary.owner) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#454-457)
	- base_probability += uint16(100 / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#459-460)
	- base_probability -= uint16(100 / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#460-464)
	- base_probability -= uint16((100 * adversary.value) / character.value / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#466-468)
	- base_probability += uint16((100 * character.value) / adversary.value / config.fightFactor()) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#470-472)
	State variables written after the call(s):
	- castleTreasury (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#484-485)
	- castleTreasury (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#502)
	- numCharactersXType (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#477-478)
	- numCharactersXType (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#494-499)
	- oldest (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#477-478)
	- oldest (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#494-499)
	- oldest (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#503)
	- protection (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#477-478)
	- protection (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#494-499)
Reentrancy in DragonKing.receiveApproval (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#747-801):
	External calls:
	- price = config.teleportPrice() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#751)
	- assert(bool)(teleportToken.transferFrom(sender,this,price)) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#758-759)
	State variables written after the call(s):
	- ids (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#759)
	- numCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#759)
	- numCharactersXType (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#759)
	- teleported (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#759)
Reentrancy in DragonKing.stop (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#674-676):
	External calls:
	- withdraw() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#675-676)
	External calls sending eth:
	- payOut() (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#676)
	State variables written after the call(s):
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#676)
	- ids (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#676)
	- numCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#676)
Reentrancy in DragonKing.triggerVolcanoEruption (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#378-420):
	External calls:
	- require(bool,string)(now >= lastEruptionTimestamp + config.eruptionThreshold(),not enough time passed since last eruption) (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#380-382)
	- howmany = nchars * config.percentageToKill() / 100 (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#389-390)
	State variables written after the call(s):
	- characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#406-409)
	- ids (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#406-409)
	- numCharactersXType (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#406-409)
	- oldest (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#406-409)
	- protection (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#406-409)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
DragonKing.toUint32 uses assembly (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol)
	- /unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DragonKing.MIN_SKL_AMOUNT_TO_PURCHASE_ARCHER should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#215-216)
DragonKing.MIN_SKL_AMOUNT_TO_PURCHASE_WIZARD should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#210-212)
DragonKing.MIN_XPER_AMOUNT_TO_PURCHASE_ARCHER should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#212-215)
DragonKing.MIN_XPER_AMOUNT_TO_PURCHASE_WIZARD should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#209-210)
DragonKingConfig.castleLootDistributionThreshold should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#101-102)
DragonKingConfig.eruptionThreshold should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#99-100)
DragonKingConfig.fee should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#96-97)
DragonKingConfig.fightFactor should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#110-111)
DragonKingConfig.maxCharacters should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#98)
DragonKingConfig.percentageToKill should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#104-105)
DragonKingConfig.protectionPrice should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#116)
DragonKingConfig.teleportPrice should be constant (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#115-116)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#555-558:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#57-68) should be declared external
Destructible.destroyAndSend (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#82-90) should be declared external
DragonKing.addCharacters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#254-297) should be declared external
DragonKing.exit (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#316-356) should be declared external
DragonKing.triggerVolcanoEruption (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#378-420) should be declared external
DragonKing.fight (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#429-505) should be declared external
DragonKing.collectFees (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#647-655) should be declared external
DragonKing.stop (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#674-676) should be declared external
DragonKing.sellCharacter (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#721-741) should be declared external
DragonKing.receiveApproval (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#747-801) should be declared external
DragonKing.getCharacter (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#840-842) should be declared external
DragonKing.get10Characters (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#865-882) should be declared external
DragonKing.getNumDragons (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#885-891) should be declared external
DragonKing.getNumWizards (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#895-903) should be declared external
DragonKing.getNumArchers (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#907-915) should be declared external
DragonKing.getNumKnights (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#40-45) is not in mixedCase
Function 'Destructible.Destructible' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#75) is not in mixedCase
Parameter '_recipient' of Destructible.destroyAndSend (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#86) is not in mixedCase
Constant 'DragonKingConfig.CooldownThreshold' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#105-108) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_configAddress' of DragonKing. (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#244-248) is not in mixedCase
Constant 'DragonKing.noKing' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#177) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'DragonKing.MIN_XPER_AMOUNT_TO_PURCHASE_WIZARD' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#209-210) is not in mixedCase
Variable 'DragonKing.MIN_SKL_AMOUNT_TO_PURCHASE_WIZARD' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#210-212) is not in mixedCase
Variable 'DragonKing.MIN_XPER_AMOUNT_TO_PURCHASE_ARCHER' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#212-215) is not in mixedCase
Variable 'DragonKing.MIN_SKL_AMOUNT_TO_PURCHASE_ARCHER' (/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol#215-216) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/30/0xb1553c2a1c4bf7d70a36934d30f9e2f8ef440ad4.sol analyzed (5 contracts), 63 result(s) found