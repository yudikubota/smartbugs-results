INFO:Slither:Compilation warnings/errors on /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:107:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:246:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Escapable(address _escapeHatchCaller, address _escapeHatchDestination) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:412:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LiquidPledgingBase(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:949:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LiquidPledging(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1732:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Controlled() public { controller = msg.sender;}
    ^------------------------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1872:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MiniMeToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1948:12: Warning: Use of the "var" keyword is deprecated.
           var previousBalanceFrom = balanceOfAt(_from, block.number);
           ^---------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1964:12: Warning: Use of the "var" keyword is deprecated.
           var previousBalanceTo = balanceOfAt(_to, block.number);
           ^-------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2377:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LPPDacs(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2415:16: Warning: Use of the "var" keyword is deprecated.
        var (, toOwner, , toIntendedProject, , , toPledgeState ) = liquidPledging.getPledge(pledgeTo);
               ^-----^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2415:27: Warning: Use of the "var" keyword is deprecated.
        var (, toOwner, , toIntendedProject, , , toPledgeState ) = liquidPledging.getPledge(pledgeTo);
                          ^---------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2415:50: Warning: Use of the "var" keyword is deprecated.
        var (, toOwner, , toIntendedProject, , , toPledgeState ) = liquidPledging.getPledge(pledgeTo);
                                                 ^-----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2416:16: Warning: Use of the "var" keyword is deprecated.
        var (, fromOwner, , , , , ) = liquidPledging.getPledge(pledgeFrom);
               ^-------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2417:14: Warning: Use of the "var" keyword is deprecated.
        var (toAdminType, toAddr, , , , , , ) = liquidPledging.getPledgeAdmin(toOwner);
             ^---------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2417:27: Warning: Use of the "var" keyword is deprecated.
        var (toAdminType, toAddr, , , , , , ) = liquidPledging.getPledgeAdmin(toOwner);
                          ^----^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2433:20: Warning: Use of the "var" keyword is deprecated.
            var (, fromAddr , , , , , , ) = liquidPledging.getPledgeAdmin(fromOwner);
                   ^------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:878:27: Warning: This declaration shadows an existing declaration.
    function useWhitelist(bool useWhitelist) external onlyOwner {
                          ^---------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:878:5: The shadowed declaration is here:
    function useWhitelist(bool useWhitelist) external onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:126:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipRequested(msg.sender, newOwnerCandidate);
        ^-----------------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:138:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(oldOwner, owner);
        ^-----------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:152:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(oldOwner, owner);
        ^-----------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:164:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipRemoved();     
        ^----------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:264:9: Warning: Invoking events without "emit" prefix is deprecated.
        EscapeHatchBlackistedToken(_token);
        ^--------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:285:23: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            balance = this.balance;
                      ^----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:287:13: Warning: Invoking events without "emit" prefix is deprecated.
            EscapeHatchCalled(_token, balance);
            ^--------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:294:9: Warning: Invoking events without "emit" prefix is deprecated.
        EscapeHatchCalled(_token, balance);
        ^--------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:338:5: Warning: Functions in interfaces should be declared external.
    function authorizePayment(bytes32 _ref, address _dest, uint _amount);
    ^-------------------------------------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:339:5: Warning: Functions in interfaces should be declared external.
    function () payable;
    ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:456:9: Warning: Invoking events without "emit" prefix is deprecated.
        GiverAdded(idGiver);
        ^-----------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:484:9: Warning: Invoking events without "emit" prefix is deprecated.
        GiverUpdated(idGiver);
        ^-------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:520:9: Warning: Invoking events without "emit" prefix is deprecated.
        DelegateAdded(idDelegate);
        ^-----------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:549:9: Warning: Invoking events without "emit" prefix is deprecated.
        DelegateUpdated(idDelegate);
        ^-------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:595:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProjectAdded(idProject);
        ^---------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:625:9: Warning: Invoking events without "emit" prefix is deprecated.
        ProjectUpdated(idProject);
        ^-----------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:749:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 hPledge = sha3(
                          ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:749:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hPledge = sha3(
                          ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:977:9: Warning: Using contract member "transfer" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).transfer" instead.
        vault.transfer(amount); // Sends the `msg.value` (in wei) to the `vault`
        ^------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:991:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, idPledge, amount); // An event
        ^---------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1209:9: Warning: Invoking events without "emit" prefix is deprecated.
        CancelProject(idProject);
        ^----------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1492:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, amount);
        ^------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1969:12: Warning: Invoking events without "emit" prefix is deprecated.
           Transfer(_from, _to, _amount);
           ^---------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2001:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _amount);
        ^-------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2132:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewCloneToken(address(cloneToken), _snapshotBlock);
        ^------------------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2152:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, _owner, _amount);
        ^--------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2169:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_owner, 0, _amount);
        ^--------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2267:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            controller.transfer(this.balance);
                                ^----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2274:9: Warning: Invoking events without "emit" prefix is deprecated.
        ClaimedTokens(_token, controller, balance);
        ^----------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2418:9: Warning: Uninitialized storage pointer.
        Dac storage d;
        ^-----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2436:13: Warning: Invoking events without "emit" prefix is deprecated.
            GenerateTokens(idDelegate, fromAddr, amount);
            ^------------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2450:17: Warning: Invoking events without "emit" prefix is deprecated.
                DestroyTokens(fromOwner, toAddr, amount);
                ^--------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:48:5: Warning: No visibility specified. Defaulting to "public". 
    function beforeTransfer(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function afterTransfer(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:338:5: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
    function authorizePayment(bytes32 _ref, address _dest, uint _amount);
    ^-------------------------------------------------------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:339:5: Warning: No visibility specified. Defaulting to "public". In interfaces it defaults to external.
    function () payable;
    ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:435:5: Warning: No visibility specified. Defaulting to "public". 
    function addGiver(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:470:5: Warning: No visibility specified. Defaulting to "public". 
    function updateGiver(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:499:5: Warning: No visibility specified. Defaulting to "public". 
    function addDelegate(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:536:5: Warning: No visibility specified. Defaulting to "public". 
    function updateDelegate(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:566:5: Warning: No visibility specified. Defaulting to "public". 
    function addProject(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:611:5: Warning: No visibility specified. Defaulting to "public". 
    function updateProject(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:637:5: Warning: No visibility specified. Defaulting to "public". 
    function numberOfPledges() constant returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:646:5: Warning: No visibility specified. Defaulting to "public". 
    function getPledge(uint64 idPledge) constant returns(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:668:5: Warning: No visibility specified. Defaulting to "public". 
    function getPledgeDelegate(uint64 idPledge, uint idxDelegate) constant returns(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:682:5: Warning: No visibility specified. Defaulting to "public". 
    function numberOfPledgeAdmins() constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:699:5: Warning: No visibility specified. Defaulting to "public". 
    function getPledgeAdmin(uint64 idAdmin) constant returns (
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:834:5: Warning: No visibility specified. Defaulting to "public". 
    function isProjectCanceled(uint64 projectId) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:949:5: Warning: No visibility specified. Defaulting to "public". 
    function LiquidPledging(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:965:5: Warning: No visibility specified. Defaulting to "public". 
    function donate(uint64 idGiver, uint64 idReceiver) payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1005:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer( 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1136:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw(uint64 idPledge, uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1161:5: Warning: No visibility specified. Defaulting to "public". 
    function confirmPayment(uint64 idPledge, uint amount) onlyVault {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1182:5: Warning: No visibility specified. Defaulting to "public". 
    function cancelPayment(uint64 idPledge, uint amount) onlyVault {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1204:5: Warning: No visibility specified. Defaulting to "public". 
    function cancelProject(uint64 idProject) { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1217:5: Warning: No visibility specified. Defaulting to "public". 
    function cancelPledge(uint64 idPledge, uint amount) { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1252:5: Warning: No visibility specified. Defaulting to "public". 
    function mTransfer(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1270:5: Warning: No visibility specified. Defaulting to "public". 
    function mWithdraw(uint[] pledgesAmounts) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1283:5: Warning: No visibility specified. Defaulting to "public". 
    function mConfirmPayment(uint[] pledgesAmounts) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1296:5: Warning: No visibility specified. Defaulting to "public". 
    function mCancelPayment(uint[] pledgesAmounts) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1308:5: Warning: No visibility specified. Defaulting to "public". 
    function mNormalizePledge(uint64[] pledges) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1513:5: Warning: No visibility specified. Defaulting to "public". 
    function normalizePledge(uint64 idPledge) returns(uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2392:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        uint64 pledgeManager,
        ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2393:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        uint64 pledgeFrom,
        ^---------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2394:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        uint64 pledgeTo,
        ^-------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2395:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        uint64 context,
        ^------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2407:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
        uint64 pledgeManager,
        ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2559:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function proxyPayment(address _owner) public payable returns(bool) {
                          ^------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2569:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {
                        ^-----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2569:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {
                                       ^---------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2569:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function onTransfer(address _from, address _to, uint _amount) public returns(bool) {
                                                    ^----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2579:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {
                       ^------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2579:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {
                                       ^--------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2579:58: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {
                                                         ^----------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:655:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        Pledge storage p = findPledge(idPledge);
                           ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:673:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        Pledge storage p = findPledge(idPledge);
                           ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:675:40: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        PledgeAdmin storage delegate = findAdmin(idDelegate);
                                       ^-------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:709:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        PledgeAdmin storage m = findAdmin(idAdmin);
                                ^----------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:763:5: Warning: Function state mutability can be restricted to view
    function findAdmin(uint64 idAdmin) internal returns (PledgeAdmin storage) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:771:5: Warning: Function state mutability can be restricted to view
    function findPledge(uint64 idPledge) internal returns (Pledge storage) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:787:5: Warning: Function state mutability can be restricted to pure
    function getDelegateIdx(Pledge p, uint64 idDelegate) internal returns(uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:835:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        PledgeAdmin storage m = findAdmin(projectId);
                                ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:849:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        Pledge storage p = findPledge(idPledge);
                           ^------------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:850:37: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        PledgeAdmin storage admin = findAdmin(p.owner);
                                    ^----------------^
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:890:5: Warning: Function state mutability can be restricted to view
    function getCodeHash(address addr) public returns(bytes32) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:1712:5: Warning: Function state mutability can be restricted to view
    function getTime() internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:2391:5: Warning: Function state mutability can be restricted to view
    function beforeTransfer(
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
MiniMeToken.balances (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1885-1886) is never initialized. It is used in:
	- doTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1981-2015)
	- balanceOfAt (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2095-2118)
	- generateTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2194-2210)
	- destroyTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2218-2227)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
MiniMeToken.isContract (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2302-2305) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in MiniMeToken.approve (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2026-2052):
	External calls:
	- require(bool)(TokenController(controller).onApprove(msg.sender,_spender,_amount)) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2048-2050)
	State variables written after the call(s):
	- allowed (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2050-2051)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- transferOwnershipToGiver(idPledge,amount,idReceiver) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1043-1044)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1043-1044)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1043-1044)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- transferOwnershipToProject(idPledge,amount,idReceiver) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1046-1047)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1046-1047)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1046-1047)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1060-1069)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1060-1069)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- undelegate(idPledge,amount,p.delegationChain.length - receiverDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1072-1073)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1072-1073)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1072-1073)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1080-1084)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1080-1084)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1080-1084)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1080-1084)
	- appendDelegate(idPledge,amount,idReceiver) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1084-1085)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1084-1085)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1084-1085)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- undelegate(idPledge,amount,p.delegationChain.length) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1099-1100)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1099-1100)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1099-1100)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length - senderDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length - senderDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106)
	- appendDelegate(idPledge,amount,idReceiver) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106-1108)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106-1108)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1106-1108)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length - senderDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1117-1121)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1117-1121)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1117-1121)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length - senderDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1117-1121)
	- appendDelegate(idPledge,amount,idReceiver) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1122)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1122)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1122)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- undelegate(idPledge,amount,p.delegationChain.length - receiverDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1135-1138)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1135-1138)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1135-1138)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length - senderDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1147-1154)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1147-1154)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1147-1154)
Reentrancy in LiquidPledging.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1031-1159):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1033)
	- idPledge = undelegate(idPledge,amount,p.delegationChain.length - senderDIdx - 1) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1147-1154)
	- proposeAssignProject(idPledge,amount,idReceiver) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1154-1157)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1154-1157)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1154-1157)
Reentrancy in LiquidPledging.withdraw (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1168-1187):
	External calls:
	- idPledge = normalizePledge(idPledge) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1171-1172)
	State variables written after the call(s):
	- hPledge2idx (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1180-1183)
	- pledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1180-1183)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
MiniMeToken.claimTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2334-2345) does not use the value returned by external calls:
	-token.transfer(controller,balance) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2342)
LPPDacs.afterTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2473-2559) does not use the value returned by external calls:
	-d.token.generateTokens(fromAddr,amount) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2531-2533)
	-d.token.destroyTokens(toAddr,amount) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2557-2558)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
LiquidPledgingBase.getPledge.owner (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#667) shadows:
	- Owned.owner (state variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#102)
LiquidPledgingBase.findOrCreatePledge.owner (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#762) shadows:
	- Owned.owner (state variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#102)
LiquidPledgingBase.useWhitelist.useWhitelist (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#901) shadows:
	- LiquidPledgingBase.useWhitelist (function @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#900-902)
LiquidPledging.withdraw.owner (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1178-1179) shadows:
	- Owned.owner (state variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#102)
LiquidPledging.mNormalizePledge.pledges (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1346) shadows:
	- LiquidPledgingBase.pledges (state variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#392-394)
MiniMeToken.getValueAt.min (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2261) shadows:
	- MiniMeToken.min (function @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2307-2308)
LPPDacs.getDac.owner (local variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) shadows:
	- Owned.owner (state variable @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#102)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in LPPDacs.addDac (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2560-2574):
	External calls:
	- idDelegate = liquidPledging.addDelegate(name,url,commitTime,ILiquidPledgingPlugin(this)) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2565-2568)
	State variables written after the call(s):
	- dacs (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2573-2574)
Reentrancy in LPPDacs.addDac (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2574-2580):
	External calls:
	- idDelegate = liquidPledging.addDelegate(name,url,commitTime,ILiquidPledgingPlugin(this)) (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2577-2579)
	State variables written after the call(s):
	- dacs (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2579)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
LiquidPledgingBase.getCodeHash uses assembly (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#913-933)
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#916-928
MiniMeToken.isContract uses assembly (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2302-2305)
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2304-2305
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
MiniMeToken.version should be constant (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1861)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:
	- Version used: ['^0.4.11', '^0.4.15', '^0.4.17', '^0.4.18']
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2-3 declares pragma solidity^0.4.11
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#89-90 declares pragma solidity^0.4.15
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#175-178 declares pragma solidity^0.4.15
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#209 declares pragma solidity^0.4.15
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#319 declares pragma solidity^0.4.11
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#934 declares pragma solidity^0.4.11
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1763 declares pragma solidity^0.4.18
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1780-1781 declares pragma solidity^0.4.18
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1812 declares pragma solidity^0.4.18
	- /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2409-2410 declares pragma solidity^0.4.17
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#768-770:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ILiquidPledgingPlugin.beforeTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#49-55) should be declared external
ILiquidPledgingPlugin.afterTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#77-85) should be declared external
Owned.proposeOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#126-131) should be declared external
Owned.acceptOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#135-142) should be declared external
Owned.changeOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#149-156) should be declared external
Owned.removeOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#164-175) should be declared external
ERC20.totalSupply (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#183-185) should be declared external
ERC20.balanceOf (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#186-188) should be declared external
ERC20.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#189-191) should be declared external
ERC20.transferFrom (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#191-194) should be declared external
ERC20.approve (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#195-197) should be declared external
ERC20.allowance (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#198-202) should be declared external
Escapable.isTokenEscapable (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#277-278) should be declared external
Escapable.escapeHatch (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#286-300) should be declared external
Escapable.changeHatchEscapeCaller (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#310-314) should be declared external
LPVault.authorizePayment (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#347-348) should be declared external
LPVault.fallback (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#348-349) should be declared external
LiquidPledgingBase.updateGiver (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#483-494) should be declared external
LiquidPledgingBase.addDelegate (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#520-531) should be declared external
LiquidPledgingBase.updateDelegate (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#549-561) should be declared external
LiquidPledgingBase.addProject (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#584-608) should be declared external
LiquidPledgingBase.updateProject (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#635-644) should be declared external
LiquidPledgingBase.numberOfPledges (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#652-655) should be declared external
LiquidPledgingBase.getPledge (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#666-680) should be declared external
LiquidPledgingBase.getPledgeDelegate (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#686-692) should be declared external
LiquidPledgingBase.numberOfPledgeAdmins (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#695-697) should be declared external
LiquidPledgingBase.getPledgeAdmin (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#725-734) should be declared external
LiquidPledging.donate (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#994-1016) should be declared external
LiquidPledging.cancelProject (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1240-1245) should be declared external
LiquidPledging.cancelPledge (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1249-1258) should be declared external
LiquidPledging.mTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1284-1294) should be declared external
LiquidPledging.mWithdraw (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1301-1310) should be declared external
LiquidPledging.mConfirmPayment (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1319-1324) should be declared external
LiquidPledging.mCancelPayment (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1331-1340) should be declared external
LiquidPledging.mNormalizePledge (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1345-1350) should be declared external
Controlled.changeController (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1776-1778) should be declared external
LPPDacs.proxyPayment (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) should be declared external
TokenController.proxyPayment (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1789-1791) should be declared external
LPPDacs.onTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) should be declared external
TokenController.onTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1800-1801) should be declared external
TokenController.onApprove (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1810-1811) should be declared external
LPPDacs.onApprove (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) should be declared external
ApproveAndCallFallBack.receiveApproval (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1843-1844) should be declared external
MiniMeToken.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1944-1947) should be declared external
MiniMeToken.transferFrom (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1956-1974) should be declared external
MiniMeToken.allowance (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2058-2061) should be declared external
MiniMeToken.approveAndCall (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2076-2081) should be declared external
MiniMeToken.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2165-2188) should be declared external
MiniMeToken.generateTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2194-2210) should be declared external
MiniMeToken.destroyTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2218-2227) should be declared external
MiniMeToken.enableTransfers (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2233-2236) should be declared external
MiniMeToken.fallback (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2314-2319) should be declared external
MiniMeToken.claimTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2334-2345) should be declared external
MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2390-2408) should be declared external
LPPDacs.addDac (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2560-2574) should be declared external
LPPDacs.addDac (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2574-2580) should be declared external
LPPDacs.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2580-2582) should be declared external
LPPDacs.changeOwner (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) should be declared external
LPPDacs.updateDac (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) should be declared external
LPPDacs.getDac (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol:
	- pragma solidity^0.4.11 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2-3): it allows old versions
	- pragma solidity^0.4.15 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#89-90): it allows old versions
	- pragma solidity^0.4.15 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#175-178): it allows old versions
	- pragma solidity^0.4.15 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#209): it allows old versions
	- pragma solidity^0.4.11 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#319): it allows old versions
	- pragma solidity^0.4.11 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#934): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1763): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1780-1781): it allows old versions
	- pragma solidity^0.4.18 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1812): it allows old versions
	- pragma solidity^0.4.17 (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2409-2410): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#111-113) is not in mixedCase
Parameter '_newOwnerCandidate' of Owned.proposeOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#126) is not in mixedCase
Parameter '_newOwner' of Owned.changeOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#150) is not in mixedCase
Parameter '_dac' of Owned.removeOwnership (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#167-168) is not in mixedCase
Function 'Escapable.Escapable' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#251-254) is not in mixedCase
Parameter '_escapeHatchCaller' of Escapable.Escapable (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#251-252) is not in mixedCase
Parameter '_escapeHatchDestination' of Escapable.Escapable (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#252) is not in mixedCase
Parameter '_token' of Escapable.blacklistEscapeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#269) is not in mixedCase
Parameter '_token' of Escapable.isTokenEscapable (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#277) is not in mixedCase
Parameter '_token' of Escapable.escapeHatch (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#286-287) is not in mixedCase
Parameter '_newEscapeHatchCaller' of Escapable.changeHatchEscapeCaller (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#310-311) is not in mixedCase
Function 'LiquidPledgingBase.LiquidPledgingBase' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#424-431) is not in mixedCase
Parameter '_vault' of LiquidPledgingBase.LiquidPledgingBase (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#425-427) is not in mixedCase
Function 'LiquidPledging.LiquidPledging' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#969-974) is not in mixedCase
Parameter '_amount' of LiquidPledging.doTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1512-1513) is not in mixedCase
Function 'Controlled.Controlled' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1770-1775) is not in mixedCase
Parameter '_newController' of Controlled.changeController (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1777) is not in mixedCase
Function 'MiniMeToken.MiniMeToken' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1916-1933) is not in mixedCase
Parameter '_tokenFactory' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1917) is not in mixedCase
Parameter '_parentToken' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1918) is not in mixedCase
Parameter '_parentSnapShotBlock' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1918-1919) is not in mixedCase
Parameter '_tokenName' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1919-1921) is not in mixedCase
Parameter '_decimalUnits' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1921) is not in mixedCase
Parameter '_tokenSymbol' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1921-1922) is not in mixedCase
Parameter '_transfersEnabled' of MiniMeToken.MiniMeToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1922) is not in mixedCase
Parameter '_to' of MiniMeToken.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1944) is not in mixedCase
Parameter '_amount' of MiniMeToken.transfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1944) is not in mixedCase
Parameter '_from' of MiniMeToken.transferFrom (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1958) is not in mixedCase
Parameter '_to' of MiniMeToken.transferFrom (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1958) is not in mixedCase
Parameter '_amount' of MiniMeToken.transferFrom (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1958) is not in mixedCase
Parameter '_from' of MiniMeToken.doTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1982) is not in mixedCase
Parameter '_to' of MiniMeToken.doTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1982) is not in mixedCase
Parameter '_amount' of MiniMeToken.doTransfer (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#1982-1983) is not in mixedCase
Parameter '_owner' of MiniMeToken.balanceOf (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2017) is not in mixedCase
Parameter '_spender' of MiniMeToken.approve (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2026) is not in mixedCase
Parameter '_amount' of MiniMeToken.approve (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2026-2027) is not in mixedCase
Parameter '_owner' of MiniMeToken.allowance (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2059) is not in mixedCase
Parameter '_spender' of MiniMeToken.allowance (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2059-2060) is not in mixedCase
Parameter '_spender' of MiniMeToken.approveAndCall (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2076) is not in mixedCase
Parameter '_amount' of MiniMeToken.approveAndCall (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2076-2077) is not in mixedCase
Parameter '_extraData' of MiniMeToken.approveAndCall (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2077) is not in mixedCase
Parameter '_owner' of MiniMeToken.balanceOfAt (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2098-2099) is not in mixedCase
Parameter '_blockNumber' of MiniMeToken.balanceOfAt (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2099-2100) is not in mixedCase
Parameter '_blockNumber' of MiniMeToken.totalSupplyAt (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2124-2125) is not in mixedCase
Parameter '_cloneTokenName' of MiniMeToken.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2166) is not in mixedCase
Parameter '_cloneDecimalUnits' of MiniMeToken.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2167) is not in mixedCase
Parameter '_cloneTokenSymbol' of MiniMeToken.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2167) is not in mixedCase
Parameter '_snapshotBlock' of MiniMeToken.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2168) is not in mixedCase
Parameter '_transfersEnabled' of MiniMeToken.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2168) is not in mixedCase
Parameter '_owner' of MiniMeToken.generateTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2194-2196) is not in mixedCase
Parameter '_amount' of MiniMeToken.generateTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2196) is not in mixedCase
Parameter '_owner' of MiniMeToken.destroyTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2218-2219) is not in mixedCase
Parameter '_amount' of MiniMeToken.destroyTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2219) is not in mixedCase
Parameter '_transfersEnabled' of MiniMeToken.enableTransfers (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2234) is not in mixedCase
Parameter '_block' of MiniMeToken.getValueAt (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2250) is not in mixedCase
Parameter '_value' of MiniMeToken.updateValueAtNow (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2280) is not in mixedCase
Parameter '_addr' of MiniMeToken.isContract (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2302) is not in mixedCase
Parameter '_token' of MiniMeToken.claimTokens (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2335) is not in mixedCase
Parameter '_parentToken' of MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2392) is not in mixedCase
Parameter '_snapshotBlock' of MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2393) is not in mixedCase
Parameter '_tokenName' of MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2394-2395) is not in mixedCase
Parameter '_decimalUnits' of MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2395-2396) is not in mixedCase
Parameter '_tokenSymbol' of MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2396-2397) is not in mixedCase
Parameter '_transfersEnabled' of MiniMeTokenFactory.createCloneToken (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2397-2399) is not in mixedCase
Function 'LPPDacs.LPPDacs' (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2439-2443) is not in mixedCase
Parameter '_liquidPledging' of LPPDacs.LPPDacs (/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol#2440) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/33/0x79bddecb728afda275923998701bac34d277fb19.sol analyzed (13 contracts), 161 result(s) found