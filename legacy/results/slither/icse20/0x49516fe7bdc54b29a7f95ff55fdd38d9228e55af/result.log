INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:43:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (cardIndex >= totalCards) throw;
		                             ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:62:8: Warning: Use of the "var" keyword is deprecated.
		var (suit, number) = cardDescription(self);
		     ^--^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:62:14: Warning: Use of the "var" keyword is deprecated.
		var (suit, number) = cardDescription(self);
		           ^----^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:84:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (blockHash == 0x0) throw;
		                      ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:192:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!tick(self)) throw; // Forces tick, commitment to play actually happened past block
                     ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:204:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self.state != GameState.Waiting) throw;
                                         ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:205:103: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (decision != GameState.Hit && decision != GameState.Stand && decision != GameState.DoubleDown) throw;
                                                                                                      ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:208:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!canDoubleDown(self)) throw;
                                ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:242:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self.closed) throw; // cannot re-close
                     ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:243:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (self.state != GameState.Finished) throw; // not closable
                                          ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:248:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!self.player.send(self.payout)) throw;
                                          ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:342:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!isOwner[msg.sender]) throw;
                              ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:347:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != x) throw;
                         ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:352:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != games[gameID].player) throw;
                                            ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:358:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (blockActions[block.number] > maxBlockActions) throw;
                                                      ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:362:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Blockjack(address _DX, address _DEV) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:377:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!allowsNewGames) throw;
                         ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:378:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value < minBet) throw;
                            ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:379:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.value > maxBet) throw;
                            ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:386:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (!openedGame.tick()) throw;
	                        ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:387:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if (!openedGame.closed) throw; // cannot start game with on-going game
	                        ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:401:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!game.tick()) throw;
                      ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:408:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!game.tick()) throw;
                      ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:415:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!game.tick()) throw;
                      ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:422:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (openedGame.closed) throw;
                           ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:423:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!openedGame.tick()) throw;
                            ^---^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:277:52: Warning: This declaration shadows an existing declaration.
  function bestSum(uint8[] possibleSums)  returns (uint8 bestSum) {
                                                   ^-----------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:277:3: The shadowed declaration is here:
  function bestSum(uint8[] possibleSums)  returns (uint8 bestSum) {
  ^ (Relevant source part starts here and spans across multiple lines).

/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:384:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      GameLib.Game openedGame = games[currentGameId];
      ^---------------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:400:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[gameID];
    ^---------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:407:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[gameID];
    ^---------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:414:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[gameID];
    ^---------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:421:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game openedGame = games[gameID];
    ^---------------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:428:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game openedGame = games[gameID];
    ^---------------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:453:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    GameLib.Game game = games[i];
    ^---------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:85:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		return uint(uint256(keccak256(blockHash, player, gameID, n)) % m);
		                    ^-------------------------------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:435:5: Warning: Invoking events without "emit" prefix is deprecated.
    GameEnded(
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:447:5: Warning: Invoking events without "emit" prefix is deprecated.
    GameNeedsTick(game.gameID, game.player, game.actionBlock);
    ^-------------------------------------------------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:512:5: Warning: "suicide" has been deprecated in favour of "selfdestruct"
    suicide(DX);
    ^---------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:5:2: Warning: No visibility specified. Defaulting to "public". 
	function insertInPlace(uint8[] storage self, uint8 n) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:35:2: Warning: No visibility specified. Defaulting to "public". 
	function init(Deck storage self, uint256 gameID)  {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:41:2: Warning: No visibility specified. Defaulting to "public". 
	function getCard(Deck storage self, uint256 blockNumber)  returns (uint8)  {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:55:2: Warning: No visibility specified. Defaulting to "public". 
	function cardDescription(uint8 self) constant returns (Suit, uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:59:2: Warning: No visibility specified. Defaulting to "public". 
	function cardEmojified(uint8 self) constant returns (uint8, string) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:71:2: Warning: No visibility specified. Defaulting to "public". 
	function cardFacevalue(uint8 self) constant returns (uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:75:2: Warning: No visibility specified. Defaulting to "public". 
	function blackjackValue(uint8 self) constant returns (uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:80:2: Warning: No visibility specified. Defaulting to "public". 
	function getRandomNumber(uint b, address player, uint256 gameID, uint n, uint m) constant returns (uint) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:83:23: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
		bytes32 blockHash = block.blockhash(b);
		                    ^-------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:120:3: Warning: No visibility specified. Defaulting to "public". 
  function init(Game storage self, uint256 gameID) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:135:3: Warning: No visibility specified. Defaulting to "public". 
  function tick(Game storage self) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:159:3: Warning: No visibility specified. Defaulting to "public". 
  function needsTick(Game storage self) constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:166:3: Warning: No visibility specified. Defaulting to "public". 
  function checkGameResult(Game storage self)  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:178:3: Warning: No visibility specified. Defaulting to "public". 
  function checkGameContinues(Game storage self)  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:188:3: Warning: No visibility specified. Defaulting to "public". 
  function forceStand(Game storage self) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:195:3: Warning: No visibility specified. Defaulting to "public". 
  function canDoubleDown(Game storage self) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:203:3: Warning: No visibility specified. Defaulting to "public". 
  function playerDecision(Game storage self, GameState decision)  {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:233:3: Warning: No visibility specified. Defaulting to "public". 
  function endGame(Game storage self, GameResult result) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:260:3: Warning: No visibility specified. Defaulting to "public". 
  function countHand(uint8[] memory hand)  returns (uint8) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:277:3: Warning: No visibility specified. Defaulting to "public". 
  function bestSum(uint8[] possibleSums)  returns (uint8 bestSum) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:287:3: Warning: No visibility specified. Defaulting to "public". 
  function appendArray(uint8[] memory array, uint8 n)  returns (uint8[] memory) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:296:3: Warning: No visibility specified. Defaulting to "public". 
  function compareHands(uint8 a, uint8 b)  returns (ComparaisonResult) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:362:3: Warning: No visibility specified. Defaulting to "public". 
  function Blockjack(address _DX, address _DEV) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:372:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:376:3: Warning: No visibility specified. Defaulting to "public". 
  function startGame() blockActionProtected payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:399:3: Warning: No visibility specified. Defaulting to "public". 
  function hit(uint256 gameID) onlyPlayer(gameID) blockActionProtected {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:406:3: Warning: No visibility specified. Defaulting to "public". 
  function doubleDown(uint256 gameID) onlyPlayer(gameID) blockActionProtected payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:413:3: Warning: No visibility specified. Defaulting to "public". 
  function stand(uint256 gameID) onlyPlayer(gameID) blockActionProtected {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:420:3: Warning: No visibility specified. Defaulting to "public". 
  function gameTick(uint256 gameID) blockActionProtected {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:452:3: Warning: No visibility specified. Defaulting to "public". 
  function gameState(uint i) constant returns (uint8[], uint8[], uint8, uint8, uint256, uint256, uint8, uint8, bool, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:470:3: Warning: No visibility specified. Defaulting to "public". 
  function changeDev(address newDev) only(DEV) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:476:3: Warning: No visibility specified. Defaulting to "public". 
  function changeDX(address newDX) only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:482:3: Warning: No visibility specified. Defaulting to "public". 
  function setSettings(uint256 _min, uint256 _max, uint256 _maxBlockActions) only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:488:3: Warning: No visibility specified. Defaulting to "public". 
  function registerOwner(address _new_watcher) only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:492:3: Warning: No visibility specified. Defaulting to "public". 
  function removeOwner(address _old_watcher) only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:496:3: Warning: No visibility specified. Defaulting to "public". 
  function stopBlockjack() onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:500:3: Warning: No visibility specified. Defaulting to "public". 
  function startBlockjack() only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:504:3: Warning: No visibility specified. Defaulting to "public". 
  function addBankroll() only(DX) payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:509:3: Warning: No visibility specified. Defaulting to "public". 
  function migrateBlockjack() only(DX) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:519:3: Warning: No visibility specified. Defaulting to "public". 
  function shareProfits() onlyOwner{
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:71:2: Warning: Function state mutability can be restricted to pure
	function cardFacevalue(uint8 self) constant returns (uint8) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:252:3: Warning: Function state mutability can be restricted to pure
  function payoutForResult(GameResult result, uint256 bet) private returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:287:3: Warning: Function state mutability can be restricted to pure
  function appendArray(uint8[] memory array, uint8 n)  returns (uint8[] memory) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:296:3: Warning: Function state mutability can be restricted to pure
  function compareHands(uint8 a, uint8 b)  returns (ComparaisonResult) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:458:6: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
	    GameLib.countHand(game.houseCards),
	    ^--------------------------------^
/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:459:6: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
	    GameLib.countHand(game.playerCards),
	    ^---------------------------------^

INFO:Detectors:[93m
emojiSuit in DeckLib.cardEmojified (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#62-63) is a local variable never initialiazed
notSent in Blockjack.shareProfits (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
GameLib.bestSum.bestSum (local variable @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#287) shadows:
	- GameLib.bestSum (function @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#284-296)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Blockjack.DEV_PROFITS should be constant (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol)
Blockjack.DX_PROFITS should be constant (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#529-533)
Blockjack.PROFITS_BASE should be constant (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#44:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#85:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#92-93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#197:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#209:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#216:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#217:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#252:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#253:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#255:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#386:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#387:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#387:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#400:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#401:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#414:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#422:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#430:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#436:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#437:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#529:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#362:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#365:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#368:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#377:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ArrayLib.insertInPlace (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#5-21) should be declared external
DeckLib.init (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#35-41) should be declared external
DeckLib.getCard (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#41-55) should be declared external
DeckLib.cardEmojified (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#59-72) should be declared external
DeckLib.blackjackValue (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#76-80) should be declared external
GameLib.init (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#124-137) should be declared external
Blockjack.fallback (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#385) should be declared external
Blockjack.hit (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#409-416) should be declared external
Blockjack.doubleDown (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#416-424) should be declared external
Blockjack.stand (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#424-431) should be declared external
Blockjack.gameTick (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#431-439) should be declared external
Blockjack.gameState (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#470-489) should be declared external
Blockjack.changeDev (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#489-496) should be declared external
Blockjack.changeDX (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#496-501) should be declared external
Blockjack.setSettings (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#501-510) should be declared external
Blockjack.registerOwner (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#510-516) should be declared external
Blockjack.removeOwner (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#516-520) should be declared external
Blockjack.startBlockjack (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#521-523) should be declared external
Blockjack.addBankroll (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#523-526) should be declared external
Blockjack.migrateBlockjack (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#526-529) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol:
	- pragma solidity^0.4.8 (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Constant 'DeckLib.cardsPerSuit' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#25-26) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DeckLib.suits' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#26-27) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'DeckLib.totalCards' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#27-30) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GameLib.houseLimit' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#98-99) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'GameLib.target' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#99) is not in UPPER_CASE_WITH_UNDERSCORES
Function 'Blockjack.Blockjack' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#378-384) is not in mixedCase
Parameter '_DX' of Blockjack.Blockjack (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#378) is not in mixedCase
Parameter '_DEV' of Blockjack.Blockjack (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#379) is not in mixedCase
Parameter '_min' of Blockjack.setSettings (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#504) is not in mixedCase
Parameter '_max' of Blockjack.setSettings (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#504) is not in mixedCase
Parameter '_maxBlockActions' of Blockjack.setSettings (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#504-505) is not in mixedCase
Parameter '_new_watcher' of Blockjack.registerOwner (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#511-512) is not in mixedCase
Parameter '_old_watcher' of Blockjack.removeOwner (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#517-519) is not in mixedCase
Variable 'Blockjack.DX' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#352) is not in mixedCase
Variable 'Blockjack.DEV' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#352) is not in mixedCase
Variable 'Blockjack.DX_PROFITS' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#529-533) is not in mixedCase
Variable 'Blockjack.DEV_PROFITS' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol) is not in mixedCase
Variable 'Blockjack.PROFITS_BASE' (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
DeckLib.suits (/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol#26-27) is never used in DeckLib
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/3/0x49516fe7bdc54b29a7f95ff55fdd38d9228e55af.sol analyzed (4 contracts), 69 result(s) found