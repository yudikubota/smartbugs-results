INFO:Slither:Compilation warnings/errors on /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:768:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_nbytes == 0)||(_nbytes > 32)) throw;
                                            ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:859:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_proof[0] != "L")||(_proof[1] != "P")||(_proof[2] != 1)) throw;
                                                                      ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:862:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (proofVerified == false) throw;
                                    ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:880:14: Warning: Use of the "var" keyword is deprecated.
        for (var i=0; i<prefix.length; i++){
             ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:943:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw; // Should be a better way?
            ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1047:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if (msg.sender != owner) throw;
                                  ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1052:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != oraclize_cbAddress()) throw;
                                                ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1101:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EtherFlip() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1128:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (msg.value > maxBet || msg.value < minBet) throw;
                                                          ^---^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:783:50: Warning: "sha3" has been deprecated in favour of "keccak256"
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:783:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));
                                                 ^-----------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:815:21: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (address(sha3(pubkey)) == signer) return true;
                    ^----------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:818:29: Warning: "sha3" has been deprecated in favour of "keccak256"
            return (address(sha3(pubkey)) == signer);
                            ^----------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:833:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        tosign2[0] = 1; //role
                     ^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:880:14: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        for (var i=0; i<prefix.length; i++){
             ^-----^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:895:20: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                   ^-----------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:895:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                         ^---------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:895:37: Warning: "sha3" has been deprecated in favour of "keccak256"
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:895:37: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:895:37: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        checkok = (sha3(keyhash) == sha3(sha256(context_name, queryId)));
                                    ^---------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:917:48: Warning: "sha3" has been deprecated in favour of "keccak256"
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:917:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match
                                               ^---------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1143:13: Warning: Invoking events without "emit" prefix is deprecated.
            proofFailed(playerAddress[_queryId], amount);
            ^------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1148:13: Warning: Invoking events without "emit" prefix is deprecated.
            newRandomValue(bytes(_result), playerAddress[_queryId], amount);
            ^-------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1149:35: Warning: "sha3" has been deprecated in favour of "keccak256"
            generatedBytes = uint(sha3(_result)) % 2**(2 *8);
                                  ^-----------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1149:35: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            generatedBytes = uint(sha3(_result)) % 2**(2 *8);
                                  ^-----------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1149:35: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
            generatedBytes = uint(sha3(_result)) % 2**(2 *8);
                                  ^-----------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:35:5: Warning: No visibility specified. Defaulting to "public". 
    function query(uint _timestamp, string _datasource, string _arg) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:36:5: Warning: No visibility specified. Defaulting to "public". 
    function query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit) payable returns (bytes32 _id);
    ^--------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function query2(uint _timestamp, string _datasource, string _arg1, string _arg2) payable returns (bytes32 _id);
    ^-------------------------------------------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:38:5: Warning: No visibility specified. Defaulting to "public". 
    function query2_withGasLimit(uint _timestamp, string _datasource, string _arg1, string _arg2, uint _gaslimit) payable returns (bytes32 _id);
    ^------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN(uint _timestamp, string _datasource, bytes _argN) payable returns (bytes32 _id);
    ^----------------------------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:40:5: Warning: No visibility specified. Defaulting to "public". 
    function queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit) payable returns (bytes32 _id);
    ^---------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource) returns (uint _dsprice);
    ^------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function getPrice(string _datasource, uint gaslimit) returns (uint _dsprice);
    ^---------------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:43:5: Warning: No visibility specified. Defaulting to "public". 
    function useCoupon(string _coupon);
    ^---------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:44:5: Warning: No visibility specified. Defaulting to "public". 
    function setProofType(byte _proofType);
    ^-------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:45:5: Warning: No visibility specified. Defaulting to "public". 
    function setConfig(bytes32 _config);
    ^----------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function setCustomGasPrice(uint _gasPrice);
    ^-----------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:47:5: Warning: No visibility specified. Defaulting to "public". 
    function randomDS_getSessionPubKeyHash() returns(bytes32);
    ^--------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress() returns (address _addr);
    ^--------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:118:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1042:18: Warning: No visibility specified. Defaulting to "public". 
contract token { function transfer(address receiver, uint amount){ receiver; amount; } }
                 ^-------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1101:5: Warning: No visibility specified. Defaulting to "public". 
    function EtherFlip() {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1126:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1139:5: Warning: No visibility specified. Defaulting to "public". 
    function __callback(bytes32 _queryId, string _result, bytes _proof) oraclizeAction { 
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1187:5: Warning: No visibility specified. Defaulting to "public". 
    function updateMaxMinComparables(uint updatedMaxBet, uint updatedMinBet, uint updatedBaseComparable, uint updatedMDTComparable) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1194:5: Warning: No visibility specified. Defaulting to "public". 
    function updateOwner(address updatedOwner) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1198:5: Warning: No visibility specified. Defaulting to "public". 
    function updateFlipAndMDT(address updatedFlipToken, uint updatedFlipRewardAmount, address updatedMDTToken, uint updatedMDTRewardAmount) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1206:5: Warning: No visibility specified. Defaulting to "public". 
    function refundTransfer(address outboundAddress, uint amount) ownerAction {        
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1210:5: Warning: No visibility specified. Defaulting to "public". 
    function walletSend(address tokenAddress, uint amount, address outboundAddress) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1215:5: Warning: No visibility specified. Defaulting to "public". 
    function updateGameSpecifics(uint newGas, uint newOraclizeFee, uint newFee, uint newDivisor) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1222:5: Warning: No visibility specified. Defaulting to "public". 
    function setJackpotToken(address newJackpotToken, uint newJackpotAmount, uint newJackpotHit, address newSponsoredJackpotToken, uint newSponsoredJackpotAmount, uint newSJackpotMin, uint newSJackpotMax) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1233:5: Warning: No visibility specified. Defaulting to "public". 
    function setBonusToken(address newBonusToken, uint newBonusAmount, uint newBonusMin, uint newBonusMax, address newSponsoredBonusToken, uint newSponsoredBonusAmount, uint newSBonusMin, uint newSBonusMax) ownerAction {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:1042:18: Warning: Function state mutability can be restricted to pure
contract token { function transfer(address receiver, uint amount){ receiver; amount; } }
                 ^-------------------------------------------------------------------^
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:121:5: Warning: Function state mutability can be restricted to pure
    function __callback(bytes32 myid, string result, bytes proof) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:538:5: Warning: Function state mutability can be restricted to pure
    function parseAddr(string _a) internal returns (address){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:558:5: Warning: Function state mutability can be restricted to pure
    function strCompare(string _a, string _b) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:576:5: Warning: Function state mutability can be restricted to pure
    function indexOf(string _haystack, string _needle) internal returns (int) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:603:5: Warning: Function state mutability can be restricted to pure
    function strConcat(string _a, string _b, string _c, string _d, string _e) internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:638:5: Warning: Function state mutability can be restricted to pure
    function parseInt(string _a, uint _b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:656:5: Warning: Function state mutability can be restricted to pure
    function uint2str(uint i) internal returns (string){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:673:5: Warning: Function state mutability can be restricted to pure
    function stra2cbor(string[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:715:5: Warning: Function state mutability can be restricted to pure
    function ba2cbor(bytes[] arr) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:763:5: Warning: Function state mutability can be restricted to view
    function oraclize_getNetworkName() internal returns (string) {
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:877:5: Warning: Function state mutability can be restricted to pure
    function matchBytes32Prefix(bytes32 content, bytes prefix) internal returns (bool){
    ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:938:5: Warning: Function state mutability can be restricted to pure
    function copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset) internal returns (bytes) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in EtherFlip.__callback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1161-1211):
	External calls:
	- flipTokenReward.transfer(playerAddress[_queryId],flipRewardAmount * feeMultiple) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1182-1187)
	- millionDollarTokenReward.transfer(playerAddress[_queryId],mdtRewardAmount) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1188-1190)
	- jackpotToken.transfer(playerAddress[_queryId],jackpotAmount) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1194-1195)
	- sponsoredJackpotToken.transfer(playerAddress[_queryId],sponsoredJackpotAmount) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1198-1199)
	- bonusToken.transfer(playerAddress[_queryId],bonusAmount) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1201-1202)
	- sponsoredBonusToken.transfer(playerAddress[_queryId],sponsoredBonusAmount) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1206-1207)
	External calls sending eth:
	- playerAddress[_queryId].transfer((amount - oraclizeFee - eFee) * 2) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1178)
	State variables written after the call(s):
	- playerAddress (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1210)
	- playerAmount (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1210)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
usingOraclize.getCodeSize (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#547-551) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
token (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1081-1084) has incorrect ERC20 function interface(s):
	-transfer (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1081-1084)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Reentrancy in EtherFlip.fallback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1150-1160):
	External calls:
	- oraclize_setProof(proofType_Ledger) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1153-1154)
	- queryId = oraclize_newRandomDSQuery(delay,numberOfBytes,callbackGas) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1157-1158)
	External calls sending eth:
	- queryId = oraclize_newRandomDSQuery(delay,numberOfBytes,callbackGas) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1157-1158)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1157-1158)
	- oraclize_randomDS_args (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1157-1158)
	- playerAddress (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1158)
	- playerAmount (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1158-1159)
Reentrancy in usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#781-806):
	External calls:
	- sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash() (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#788-791)
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#802-804)
	External calls sending eth:
	- queryId = oraclize_query(_delay,random,args,_customGasLimit) (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#802-804)
	State variables written after the call(s):
	- oraclize_network_name (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#802-804)
	- oraclize_randomDS_args (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#804-806)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
usingOraclize.getCodeSize uses assembly (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#547-551)
	- /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#549-550
usingOraclize.oraclize_newRandomDSQuery uses assembly (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#781-806)
	- /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#792-801
usingOraclize.verifySig uses assembly (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#817-836)
	- /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#827-832
usingOraclize.copyBytes uses assembly (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#965-983)
	- /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#976-980
usingOraclize.safer_ecrecover uses assembly (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#990-1020)
	- /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1008-1018
usingOraclize.ecrecovery uses assembly (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1023-1079)
	- /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1034-1075
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
OraclizeI.cbAddress should be constant (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#35)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#783:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#804-806:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#833-836:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#835-836:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#910-912:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#933-938:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#968:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#880:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#887:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1173-1174:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1153:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1089:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1092:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
OraclizeI.query (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#35-36) should be declared external
OraclizeI.query_withGasLimit (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#36-37) should be declared external
OraclizeI.query2 (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#37-38) should be declared external
OraclizeI.query2_withGasLimit (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#38-39) should be declared external
OraclizeI.queryN (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#39-40) should be declared external
OraclizeI.queryN_withGasLimit (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#40-41) should be declared external
OraclizeI.getPrice (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#41-42) should be declared external
OraclizeI.getPrice (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#42-44) should be declared external
OraclizeI.useCoupon (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#44) should be declared external
OraclizeI.setProofType (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#45-46) should be declared external
OraclizeI.setConfig (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#46) should be declared external
OraclizeI.setCustomGasPrice (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#47) should be declared external
OraclizeI.randomDS_getSessionPubKeyHash (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#47-50) should be declared external
OraclizeAddrResolverI.getAddress (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#52-53) should be declared external
usingOraclize.__callback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#121-125) should be declared external
token.transfer (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1081-1084) should be declared external
EtherFlip.fallback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1150-1160) should be declared external
EtherFlip.updateMaxMinComparables (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1211-1219) should be declared external
EtherFlip.updateOwner (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1219-1222) should be declared external
EtherFlip.updateFlipAndMDT (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1222-1230) should be declared external
EtherFlip.refundTransfer (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1231-1233) should be declared external
EtherFlip.walletSend (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1233-1237) should be declared external
EtherFlip.updateGameSpecifics (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1237-1244) should be declared external
EtherFlip.setJackpotToken (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol) should be declared external
EtherFlip.setBonusToken (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol:
	- pragma solidity^0.4.11 (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#31): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'OraclizeI.query_withGasLimit' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#36-37) is not in mixedCase
Function 'OraclizeI.query2_withGasLimit' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#38-39) is not in mixedCase
Function 'OraclizeI.queryN_withGasLimit' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#40-41) is not in mixedCase
Function 'OraclizeI.randomDS_getSessionPubKeyHash' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#47-50) is not in mixedCase
Contract 'usingOraclize' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#53-1080) is not in CapWords
Function 'usingOraclize.oraclize_setNetwork' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#83-121) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#121-125) is not in mixedCase
Function 'usingOraclize.__callback' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#127-131) is not in mixedCase
Function 'usingOraclize.oraclize_useCoupon' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#131-132) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#133-136) is not in mixedCase
Function 'usingOraclize.oraclize_getPrice' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#136-140) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#140-145) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#145-150) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#150-155) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#155-160) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#160-165) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#165-170) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#170-175) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#175-181) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#181-187) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#187-192) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#192-199) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#199-206) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#206-211) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#211-215) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#215-221) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#221-227) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#228-233) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#233-239) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#239-246) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#246-252) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#253-259) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#259-266) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#266-274) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#274-282) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#283-290) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#290-298) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#298-307) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#307-315) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#316-324) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#324-333) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#333-343) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#343-349) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#349-355) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#355-361) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#361-367) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#367-375) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#375-379) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#379-384) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#384-390) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#391-396) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#396-402) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#402-408) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#408-415) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#415-421) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#421-428) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#428-435) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#435-443) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#443-451) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#451-459) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#459-467) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#467-476) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#476-484) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#484-493) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#493-502) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#502-513) is not in mixedCase
Function 'usingOraclize.oraclize_query' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#514-525) is not in mixedCase
Function 'usingOraclize.oraclize_cbAddress' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#525-526) is not in mixedCase
Function 'usingOraclize.oraclize_setProof' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#526-530) is not in mixedCase
Function 'usingOraclize.oraclize_setCustomGasPrice' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#531-538) is not in mixedCase
Function 'usingOraclize.oraclize_setConfig' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#538-542) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_getSessionPubKeyHash' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#543-547) is not in mixedCase
Parameter '_a' of usingOraclize.parseAddr (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#551) is not in mixedCase
Parameter '_a' of usingOraclize.strCompare (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#576) is not in mixedCase
Parameter '_b' of usingOraclize.strCompare (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#576) is not in mixedCase
Parameter '_haystack' of usingOraclize.indexOf (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#591) is not in mixedCase
Parameter '_needle' of usingOraclize.indexOf (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#591) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#614) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#614) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#614) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#614-615) is not in mixedCase
Parameter '_e' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#615) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#639) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#639) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#639-640) is not in mixedCase
Parameter '_d' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#640) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#643) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#643) is not in mixedCase
Parameter '_c' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#643) is not in mixedCase
Parameter '_a' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#647) is not in mixedCase
Parameter '_b' of usingOraclize.strConcat (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#648) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#651-652) is not in mixedCase
Parameter '_a' of usingOraclize.parseInt (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#657) is not in mixedCase
Parameter '_b' of usingOraclize.parseInt (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#657) is not in mixedCase
Function 'usingOraclize.oraclize_setNetworkName' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#777-778) is not in mixedCase
Parameter '_network_name' of usingOraclize.oraclize_setNetworkName (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#777) is not in mixedCase
Function 'usingOraclize.oraclize_getNetworkName' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#779-781) is not in mixedCase
Function 'usingOraclize.oraclize_newRandomDSQuery' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#781-806) is not in mixedCase
Parameter '_delay' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#782) is not in mixedCase
Parameter '_nbytes' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#782) is not in mixedCase
Parameter '_customGasLimit' of usingOraclize.oraclize_newRandomDSQuery (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#782) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_setCommitment' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#806-814) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__sessionKeyValidity' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#837-871) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__returnCode' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#887-898) is not in mixedCase
Parameter '_queryId' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#888) is not in mixedCase
Parameter '_result' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#888-890) is not in mixedCase
Parameter '_proof' of usingOraclize.oraclize_randomDS_proofVerify__returnCode (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#890-891) is not in mixedCase
Function 'usingOraclize.oraclize_randomDS_proofVerify__main' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#902-963) is not in mixedCase
Parameter 'context_name' of usingOraclize.oraclize_randomDS_proofVerify__main (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#904-905) is not in mixedCase
Function 'usingOraclize.safer_ecrecover' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#990-1020) is not in mixedCase
Constant 'usingOraclize.day' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#54-55) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.week' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#55-56) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.month' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#56-57) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_NONE' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#57-58) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_TLSNotary' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#58-59) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Android' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#59-60) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Ledger' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#60-61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofType_Native' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#61-62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.proofStorage_IPFS' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#62-63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_auto' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#63-64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_mainnet' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#64-65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_testnet' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#65-66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_morden' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#66-68) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'usingOraclize.networkID_consensys' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#68-71) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'usingOraclize.OAR' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#71-72) is not in mixedCase
Variable 'usingOraclize.oraclize_network_name' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#776-777) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_args' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#814-815) is not in mixedCase
Variable 'usingOraclize.oraclize_randomDS_sessionKeysHashVerified' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#815-817) is not in mixedCase
Modifier 'usingOraclize.oraclize_randomDS_proofVerify' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#871-887) is not in mixedCase
Contract 'token' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1081-1084) is not in CapWords
Event 'EtherFlip.newRandomValue' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1094-1095) is not in CapWords
Event 'EtherFlip.proofFailed' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1095-1097) is not in CapWords
Function 'EtherFlip.__callback' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1161-1211) is not in mixedCase
Parameter '_queryId' of EtherFlip.__callback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1161) is not in mixedCase
Parameter '_result' of EtherFlip.__callback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1161) is not in mixedCase
Parameter '_proof' of EtherFlip.__callback (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1161) is not in mixedCase
Function 'EtherFlip.EtherFlip' (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#1133-1150) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
usingOraclize.day (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#54-55) is never used in EtherFlip
usingOraclize.week (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#55-56) is never used in EtherFlip
usingOraclize.month (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#56-57) is never used in EtherFlip
usingOraclize.proofType_NONE (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#57-58) is never used in EtherFlip
usingOraclize.proofType_TLSNotary (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#58-59) is never used in EtherFlip
usingOraclize.proofType_Android (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#59-60) is never used in EtherFlip
usingOraclize.proofType_Native (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#61-62) is never used in EtherFlip
usingOraclize.proofStorage_IPFS (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#62-63) is never used in EtherFlip
usingOraclize.networkID_auto (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#63-64) is never used in EtherFlip
usingOraclize.networkID_mainnet (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#64-65) is never used in EtherFlip
usingOraclize.networkID_testnet (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#65-66) is never used in EtherFlip
usingOraclize.networkID_morden (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#66-68) is never used in EtherFlip
usingOraclize.networkID_consensys (/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol#68-71) is never used in EtherFlip
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/1/0xe5a04d98538231b0fab9aba60cd73ce4ff3039df.sol analyzed (5 contracts), 189 result(s) found