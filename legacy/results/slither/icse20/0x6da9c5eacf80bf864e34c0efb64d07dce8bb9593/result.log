INFO:Slither:Compilation warnings/errors on /unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:82:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:70:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:64:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:77:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:82:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:70:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:64:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:77:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:44:9: Warning: Unused local variable.
        bytes memory s = bytes(_s);
        ^------------^
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:35:2: Warning: Function state mutability can be restricted to pure
 function toBytes(uint256 _num) internal returns (bytes _ret) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:55:2: Warning: Function state mutability can be restricted to pure
 function safePercent(uint256 a,uint256 b) 
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
gameShare.withdraw (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#160-171) uses a dangerous strict equality:
	- require(bool,string)(player_[pid].addr == msg.sender,Error Action)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
_p in gameShare.getPlayId (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#208) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
safeApi.toBytes uses assembly (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#35-43)
	- /unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#37-43
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
gameShare.gameTicketWei_ should be constant (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#113-116)
gameShare.leve1Rewards_ should be constant (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#116)
gameShare.leve2Rewards_ should be constant (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#116)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol:
	- Version used: ['^0.4.25', 'v0.5.0']
	- /unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#19-20 declares pragma solidity^0.4.25
	- /unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#20-22 declares pragma experimentalv0.5.0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Contract 'safeApi' (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#23-95) is not in CapWords
Parameter '_s' of safeApi.subStr (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#43) is not in mixedCase
Contract 'gameShare' (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#95-249) is not in CapWords
Struct 'gameShare.player' (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#97-104) is not in CapWords
Parameter '_affCode' of gameShare.addGame (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#130) is not in mixedCase
Parameter '_affCode' of gameShare.getShareAff (/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol#228-229) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_contracts/0x6da9c5eacf80bf864e34c0efb64d07dce8bb9593.sol analyzed (2 contracts), 11 result(s) found