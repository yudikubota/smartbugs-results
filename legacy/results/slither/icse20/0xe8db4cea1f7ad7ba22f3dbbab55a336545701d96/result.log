INFO:Slither:Compilation warnings/errors on /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:44:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:83:17: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted) throw;
                ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:88:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (halted && msg.sender != owner) throw;
                                       ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:93:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!halted) throw;
                 ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:399:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:409:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:413:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:419:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:426:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:437:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:486:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:493:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:540:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!multisigWallet.send(weiAmount)) throw;
                                        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:557:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:578:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:595:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Don't change past
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:599:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw; // Prevent human mistakes
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:616:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:631:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:643:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(msg.value == 0) throw;
                       ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:655:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (weiValue == 0) throw;
                       ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:659:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.send(weiValue)) throw;
                                    ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:727:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(getState() != state) throw;
                            ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:784:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function AllocatedCrowdsaleMixin(address _beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:819:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(!token.transferFrom(beneficiary, receiver, tokenAmount)) throw;
                                                                ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:868:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:908:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if (ecrecover(hash, v, r, s) != signerAddress) throw;
                                                    ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:909:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
     if(customerId == 0) throw;  // UUIDv4 sanity check
                         ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:917:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:918:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(customerId == 0) throw;  // UUIDv4 sanity check
                        ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:926:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requireCustomerId) throw; // Crowdsale needs to track participants for thank you email
                          ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:927:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if(requiredSignedAddress) throw; // Crowdsale allows only server-side signed participants
                              ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:945:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (bytes1(sha3(customerId)) != checksum) throw;
                                              ^---^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:1001:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function AllocatedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) AllocatedCrowdsaleMixin(_beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:36:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.25;"
contract Ownable {
^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:445:5: Warning: Invoking events without "emit" prefix is deprecated.
    KycWhitelisted(_address, _state);
    ^------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:452:5: Warning: Invoking events without "emit" prefix is deprecated.
    ManagementWhitelisted(_address, _state);
    ^-------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:543:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);
    ^----------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:603:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);
    ^-------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:658:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);
    ^--------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:712:5: Warning: Invoking events without "emit" prefix is deprecated.
    Whitelisted(addr, status);
    ^-----------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:900:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);
    ^-------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:907:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:907:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);
                    ^----------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:945:16: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:945:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:945:16: Warning: The provided argument of type uint128 is not implicitly convertible to expected type bytes memory.
    if (bytes1(sha3(customerId)) != checksum) throw;
               ^--------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:974:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:986:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);
    ^------------------------------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:44:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:62:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newOwner) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:128:3: Warning: No visibility specified. Defaulting to "public". 
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:134:3: Warning: No visibility specified. Defaulting to "public". 
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:139:3: Warning: No visibility specified. Defaulting to "public". 
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:165:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:166:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:177:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:178:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:179:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:214:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {
                  ^---------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:223:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {
                             ^---------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:271:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();
  ^---------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:399:3: Warning: No visibility specified. Defaulting to "public". 
  function CrowdsaleBase(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:436:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:573:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:592:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:611:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:701:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:710:3: Warning: No visibility specified. Defaulting to "public". 
  function setEarlyParicipantWhitelist(address addr, bool status) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:751:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);
  ^--------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:784:3: Warning: No visibility specified. Defaulting to "public". 
  function AllocatedCrowdsaleMixin(address _beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:791:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:791:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                         ^------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:791:60: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                           ^-----------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:791:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken) {
                                                                                ^------------------^
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:868:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal) CrowdsaleBase(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:964:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:972:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:983:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:1001:3: Warning: No visibility specified. Defaulting to "public". 
  function AllocatedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary) Crowdsale(_token, _pricingStrategy, _multisigWallet, _start, _end, _minimumFundingGoal) AllocatedCrowdsaleMixin(_beneficiary) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:128:3: Warning: Function state mutability can be restricted to pure
  function times(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:134:3: Warning: Function state mutability can be restricted to pure
  function minus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:139:3: Warning: Function state mutability can be restricted to pure
  function plus(uint a, uint b) returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:206:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:214:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:223:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:259:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol:717:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in CrowdsaleBase.finalize (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#573-588):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#586)
	State variables written after the call(s):
	- finalized (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#586-588)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#489-569):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#499-506)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#511-513)
	- trancheVolume = pricingStrategy.getCurrentTrancheVolume(tokensSold) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#519-523)
	- maximumPurchase = token.totalSupply() / maximumPurchaseFraction (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#527-528)
	State variables written after the call(s):
	- tokensSold (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#543)
	- weiRaised (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#542-543)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#489-569):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#499-506)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#511-513)
	- trancheVolume = pricingStrategy.getCurrentTrancheVolume(tokensSold) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#519-523)
	- maximumPurchase = token.totalSupply() / maximumPurchaseFraction (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#527-528)
	- pricingStrategy.isPresalePurchase(receiver) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#545-551)
	State variables written after the call(s):
	- presaleWeiRaised (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#549-551)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#416-451):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#430-434)
	State variables written after the call(s):
	- endsAt (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#444)
	- minimumFundingGoal (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#450)
	- multisigWallet (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#434)
	- startsAt (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#443)
Reentrancy in CrowdsaleBase.investInternal (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#489-569):
	External calls:
	- getState() == State.PreFunding (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#499-506)
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#511-513)
	- trancheVolume = pricingStrategy.getCurrentTrancheVolume(tokensSold) (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#519-523)
	- maximumPurchase = token.totalSupply() / maximumPurchaseFraction (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#527-528)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#537-539)
	- investorCount (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#535)
	- tokenAmountOf (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#539-540)
Reentrancy in Crowdsale.preallocate (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#908-926):
	External calls:
	- tokenAmount = fullTokens * 10 ** token.decimals() (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#910-914)
	State variables written after the call(s):
	- investedAmountOf (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#917-918)
	- tokenAmountOf (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#918-923)
	- tokensSold (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#917)
	- weiRaised (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#916-917)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CrowdsaleBase.getState (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#700-727) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < startsAt (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#711-727)
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#714-727)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#300-302)
ERC20Basic.totalSupply should be constant (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#167)
FractionalERC20.decimals should be constant (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#196)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#88:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#437:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#442-443:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#443:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#448:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#456:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#501:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#506:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#561:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#582-583:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#607:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#621:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#623:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#640:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#654:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#665:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#679:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#686:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#749:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#856-857:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#935:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#935:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#944:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#946:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#957:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#959:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#982-983:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#983:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#63-73) should be declared external
SafeMathLib.times (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#134-139) should be declared external
SafeMathLib.minus (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#139-148) should be declared external
SafeMathLib.plus (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#148-150) should be declared external
ERC20Basic.balanceOf (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#167-173) should be declared external
ERC20Basic.transfer (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#173-174) should be declared external
ERC20.allowance (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#179-180) should be declared external
ERC20.transferFrom (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#180-185) should be declared external
ERC20.approve (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#185-187) should be declared external
PricingStrategy.isPricingStrategy (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#212-215) should be declared external
PricingStrategy.isSane (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#221-223) should be declared external
PricingStrategy.isPresalePurchase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#231-232) should be declared external
PricingStrategy.calculatePrice (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#243-246) should be declared external
PricingStrategy.getCurrentTrancheVolume (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#246-247) should be declared external
FinalizeAgent.isFinalizeAgent (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#266-270) should be declared external
FinalizeAgent.isSane (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#280-281) should be declared external
FinalizeAgent.finalizeCrowdsale (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#284-285) should be declared external
CrowdsaleBase.fallback (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#452-456) should be declared external
Crowdsale.fallback (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#1001) should be declared external
CrowdsaleBase.setKycWhitelist (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#458-465) should be declared external
CrowdsaleBase.setManagement (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#466-474) should be declared external
CrowdsaleBase.setTrancheMinTx (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#475-476) should be declared external
CrowdsaleBase.setMaximumPurchaseFraction (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#478-480) should be declared external
CrowdsaleBase.finalize (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#573-588) should be declared external
CrowdsaleBase.setFinalizeAgent (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#594-607) should be declared external
CrowdsaleBase.setEndsAt (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#616-624) should be declared external
CrowdsaleBase.setMultisig (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#650-655) should be declared external
CrowdsaleBase.loadRefund (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#663-666) should be declared external
CrowdsaleBase.refund (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#673-686) should be declared external
CrowdsaleBase.isFinalizerSane (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#691-693) should be declared external
CrowdsaleBase.isPricingSane (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#694-695) should be declared external
CrowdsaleBase.setOwnerTestValue (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#737-740) should be declared external
CrowdsaleBase.setEarlyParicipantWhitelist (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#741-745) should be declared external
CrowdsaleBase.isCrowdsale (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#745-746) should be declared external
Crowdsale.preallocate (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#908-926) should be declared external
Crowdsale.buyWithSignedAddress (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#969-974) should be declared external
Crowdsale.buyWithCustomerIdWithChecksum (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#978-984) should be declared external
Crowdsale.buyWithCustomerId (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#985-994) should be declared external
Crowdsale.setRequireCustomerId (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#1001-1005) should be declared external
Crowdsale.setRequireSignedAddress (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#45-50) is not in mixedCase
Function 'CrowdsaleBase.CrowdsaleBase' (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#416-451) is not in mixedCase
Parameter '_token' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#418-419) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#419-422) is not in mixedCase
Parameter '_multisigWallet' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#422-424) is not in mixedCase
Parameter '_start' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#424-425) is not in mixedCase
Parameter '_end' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#425) is not in mixedCase
Parameter '_minimumFundingGoal' of CrowdsaleBase.CrowdsaleBase (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#425-426) is not in mixedCase
Parameter '_address' of CrowdsaleBase.setKycWhitelist (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#459) is not in mixedCase
Parameter '_state' of CrowdsaleBase.setKycWhitelist (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#459-460) is not in mixedCase
Parameter '_address' of CrowdsaleBase.setManagement (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#468-470) is not in mixedCase
Parameter '_state' of CrowdsaleBase.setManagement (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#470) is not in mixedCase
Parameter '_minimum' of CrowdsaleBase.setTrancheMinTx (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#476) is not in mixedCase
Parameter '_maximum' of CrowdsaleBase.setMaximumPurchaseFraction (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#480) is not in mixedCase
Parameter '_pricingStrategy' of CrowdsaleBase.setPricingStrategy (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#630) is not in mixedCase
Variable 'CrowdsaleBase.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#300-302) is not in mixedCase
Function 'AllocatedCrowdsaleMixin.AllocatedCrowdsaleMixin' (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#810-816) is not in mixedCase
Parameter '_beneficiary' of AllocatedCrowdsaleMixin.AllocatedCrowdsaleMixin (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#814) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol#886-891) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol) is not in mixedCase
Function 'AllocatedCrowdsale.AllocatedCrowdsale' (/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/13/0xe8db4cea1f7ad7ba22f3dbbab55a336545701d96.sol analyzed (12 contracts), 99 result(s) found