INFO:Slither:Compilation warnings/errors on /unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:43:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:238:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(address(this), token, amount, user, nonce);
                   ^--------------------------------------------------^
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:241:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user);
                      ^-------------------------------------------------^
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:289:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(address(this), tradeAddresses[0], tradeValues[7], tradeAddresses[1], tradeValues[8], tradeValues[9], tradeValues[2], tradeAddresses[2]) ... 
     ^-----------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:290:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(address(this), tradeAddresses[1], tradeValues[3], tradeAddresses[0], tradeValues[4], tradeValues[5], tradeValues[6], tradeAddresses[3]) ... 
     ^-----------------------------------------------------------------------------------------------------------------------------------------------^
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:291:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", orderHash), v[0], rs[0], rs[1]) == tradeAddresses[2]);
                      ^------------------------------------------------------^
/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:292:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(ecrecover(keccak256("\x19Ethereum Signed Message:\n32", tradeHash), v[1], rs[2], rs[3]) == tradeAddresses[3]);
                      ^------------------------------------------------------^

INFO:Detectors:[92m
Reentrancy in DexBrokerage.adminWithdraw (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#229-267):
	External calls:
	- require(bool)(ERC20(token).transfer(user,amount)) (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#258-259)
	External calls sending eth:
	- user.transfer(amount) (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#250-251)
	State variables written after the call(s):
	- lastActiveTransaction (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#262-264)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#8-9) should be declared external
ERC20Basic.balanceOf (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#9-10) should be declared external
ERC20Basic.transfer (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#10-11) should be declared external
ERC20.allowance (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#19-20) should be declared external
ERC20.transferFrom (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#20-21) should be declared external
ERC20.approve (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#21-22) should be declared external
Ownable.transferOwnership (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#59-69) should be declared external
DexBrokerage.approveCurrencyTokenAddress (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#163-171) should be declared external
DexBrokerage.invalidateOrdersBefore (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#171-174) should be declared external
DexBrokerage.setMakerFee (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#174-186) should be declared external
DexBrokerage.setTakerFee (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#186-198) should be declared external
DexBrokerage.setAdmin (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#198-201) should be declared external
DexBrokerage.depositToken (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#201-204) should be declared external
DexBrokerage.deposit (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#211-216) should be declared external
DexBrokerage.withdraw (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#216-229) should be declared external
DexBrokerage.adminWithdraw (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#229-267) should be declared external
DexBrokerage.balanceOf (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#268-272) should be declared external
DexBrokerage.trade (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#284-364) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol:
	- pragma solidity^0.4.23 (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#44-48) is not in mixedCase
Parameter '_makerFee' of DexBrokerage. (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#157) is not in mixedCase
Parameter '_takerFee' of DexBrokerage. (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#157-158) is not in mixedCase
Parameter '_feeAccount' of DexBrokerage. (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#158-159) is not in mixedCase
Parameter '_inactivityReleasePeriod' of DexBrokerage. (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#159) is not in mixedCase
Parameter '_makerFee' of DexBrokerage.setMakerFee (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#175-177) is not in mixedCase
Parameter '_takerFee' of DexBrokerage.setTakerFee (/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol#187-188) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/unique_chucks/27/0x71829ed960594f5e764b9854c89a308c70500432.sol analyzed (5 contracts), 27 result(s) found