INFO:Slither:Compilation warnings/errors on /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:12:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.sender != owner) throw;
		                         ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:95:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (msg.value == 0) throw;  												// Check if balance is not 0 		
		                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:96:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (icoHasSucessfulyEnded || block.number > endBlock) throw;				// Throw if ico has already ended 		
		                                                      ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:99:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
				if (!presaleContributorAllowance[msg.sender]) throw;				// Check if this address is part of presale contributors 			
				                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:132:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number <= endBlock || totalEthRaised >= minEthToRaise) throw;	// Check that ico has failed :( 		
		                                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:133:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantContribution[msg.sender] == 0) throw;					// Check if user has even been at crowdsale 		
		                                              ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:134:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (hasClaimedEthWhenFail[msg.sender]) throw;							// Check if this account has already claimed its eth 		
		                                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:155:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;																				// Check if ico has ended 		
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:174:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;		// Check that ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:198:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (!icoHasSucessfulyEnded) throw;                 
		                            ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:201:71: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > strategicReserveSupply - usedStrategicReserveSupply) throw; 			
			                                                                   ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:206:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > cashilaTokenSupply - usedCashilaTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:210:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > iconomiTokenSupply - usedIconomiTokenSupply) throw; 			
			                                                           ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:215:65: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
			if (_amount > coreTeamTokenSupply - usedCoreTeamTokenSupply) throw; 			
			                                                             ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:219:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		else throw; 	
		     ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:235:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (totalEthRaised < minEthToRaise) throw;	// Check if minEth treshold is surpassed 		
		                                    ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		                       ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:246:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (block.number < endBlock || totalEthRaised >= minEthToRaise) throw;	// Check if ico has failed :( 		
		                                                                ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:247:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (participantIndex[lastEthReturnIndex] != 0x0) throw;					// Check if all the participants has been reinbursed 		
		                                                 ^---^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:43: Warning: This declaration shadows an existing declaration.
	function totalSupply() constant returns (uint256 totalSupply);
	                                         ^-----------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: The shadowed declaration is here:
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^

/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:103:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOStarted(block.number, icoStartedMessage);						// Raise event 			
				^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:114:5: Warning: Invoking events without "emit" prefix is deprecated.
				ICOMinTresholdReached(block.number, icoMinTresholdReachedMessage);	// Raise event 				
				^---------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:123:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyWithCapMessage); 			
			^----------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:125:5: Warning: Invoking events without "emit" prefix is deprecated.
[91m				ErrorSendingETH(msg.sender, toReturn);								// Raise event for manual return if transaction throws 			[0m
				^-----------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:138:4: Warning: Invoking events without "emit" prefix is deprecated.
[91m			ErrorSendingETH(msg.sender, ethContributed);						// Raise event if send failed and resolve manually 		[0m
			^-----------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:184:6: Warning: Invoking events without "emit" prefix is deprecated.
[91m					ErrorSendingETH(currentParticipantAddress, contribution);		// Raise event if send failed and resolve manually 				[0m
					^------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: "sha3" has been deprecated in favour of "keccak256"
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:199:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
		bytes32 hashedStr = sha3(_which);				
		                    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:200:20: Warning: "sha3" has been deprecated in favour of "keccak256"
		if (hashedStr == sha3("Reserve")){ 			
		                 ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:205:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Cashila")){ 			
		                      ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:209:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Iconomi")){ 			
		                      ^-------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:214:25: Warning: "sha3" has been deprecated in favour of "keccak256"
		else if (hashedStr == sha3("Core")){ 			
		                      ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:234:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (this.balance == 0) throw;				// Check if there is something on the contract 		
		    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:238:4: Warning: Invoking events without "emit" prefix is deprecated.
			ICOEndedSuccessfuly(block.number, totalEthRaised, icoEndedSuccessfulyMessage); 		
			^---------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:240:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(multisigAddress.send(this.balance)){}		// Send contracts whole balance to multisig address 	
		                        ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:245:7: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if (this.balance == 0) throw;											// Check if there is something on the contract 		
		    ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:248:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		if(multisigAddress.send(this.balance)){}								// Send remainder so it can be manually processed 	
		                        ^----------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:7:2: Warning: No visibility specified. Defaulting to "public". 
	function owned() {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:16:2: Warning: No visibility specified. Defaulting to "public". 
	function transferOwnership(address newOwner) onlyOwner {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:21:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:24:2: Warning: No visibility specified. Defaulting to "public". 
	function mintTokens(address _to, uint256 _amount, string _reason);
	^----------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:25:2: Warning: No visibility specified. Defaulting to "public". 
	function totalSupply() constant returns (uint256 totalSupply);
	^------------------------------------------------------------^
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:75:2: Warning: No visibility specified. Defaulting to "public". 
	function CofounditICO(uint256 _startBlock, uint256 _endBlock, address _multisigAddress) {
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:94:2: Warning: No visibility specified. Defaulting to "public". 
	function () payable { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:131:2: Warning: No visibility specified. Defaulting to "public". 
	function claimEthIfFailed(){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:147:2: Warning: No visibility specified. Defaulting to "public". 
	function addPresaleContributors(address[] _presaleContributors) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:154:2: Warning: No visibility specified. Defaulting to "public". 
	function batchIssueTokens(uint256 _numberOfIssuances) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:173:2: Warning: No visibility specified. Defaulting to "public". 
	function batchReturnEthIfFailed(uint256 _numberOfReturns) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:192:2: Warning: No visibility specified. Defaulting to "public". 
	function changeMultisigAddress(address _newAddress) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:197:2: Warning: No visibility specified. Defaulting to "public". 
	function claimReservedTokens(string _which, address _to, uint256 _amount, string _reason) onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:223:2: Warning: No visibility specified. Defaulting to "public". 
	function removePresaleContributor(address _presaleContributor) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:228:2: Warning: No visibility specified. Defaulting to "public". 
	function setTokenContract(address _cofounditContractAddress) onlyOwner { 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:233:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEth() onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:244:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawRemainingBalanceForManualRecovery() onlyOwner{ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:255:2: Warning: No visibility specified. Defaulting to "public". 
	function getCfiEstimation(address _querryAddress) constant returns (uint256 answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:259:2: Warning: No visibility specified. Defaulting to "public". 
	function getCofounditTokenAddress() constant returns(address _tokenAddress){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:263:2: Warning: No visibility specified. Defaulting to "public". 
	function icoInProgress() constant returns (bool answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:267:2: Warning: No visibility specified. Defaulting to "public". 
	function isAddressAllowedInPresale(address _querryAddress) constant returns (bool answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).
/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:271:2: Warning: No visibility specified. Defaulting to "public". 
	function participantContributionInEth(address _querryAddress) constant returns (uint256 answer){ 		
 ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
CofounditICO.withdrawEth (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#236-245) uses a dangerous strict equality:
	- this.balance == 0
CofounditICO.withdrawEth (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#236-245) uses a dangerous strict equality:
	- this.balance == 0
CofounditICO.withdrawRemainingBalanceForManualRecovery (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#246-259) uses a dangerous strict equality:
	- this.balance == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in CofounditICO.batchIssueTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#156-174):
	External calls:
	- cofounditTokenContract.mintTokens(currentParticipantAddress,tokensToBeIssued,Ico participation mint) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#163-166)
	State variables written after the call(s):
	- lastCfiIssuanceIndex (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#167)
Reentrancy in CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#199-225):
	External calls:
	- cofounditTokenContract.mintTokens(_to,_amount,_reason) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#206-207)
	State variables written after the call(s):
	- usedStrategicReserveSupply (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#207)
Reentrancy in CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#199-225):
	External calls:
	- cofounditTokenContract.mintTokens(_to,_amount,Reserved tokens for cashila) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#210-211)
	State variables written after the call(s):
	- usedCashilaTokenSupply (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#211)
Reentrancy in CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#199-225):
	External calls:
	- cofounditTokenContract.mintTokens(_to,_amount,Reserved tokens for iconomi) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#215-216)
	State variables written after the call(s):
	- usedIconomiTokenSupply (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#216)
Reentrancy in CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#199-225):
	External calls:
	- cofounditTokenContract.mintTokens(_to,_amount,Reserved tokens for cofoundit team) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#222-223)
	State variables written after the call(s):
	- usedCoreTeamTokenSupply (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#223-224)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ICofounditToken.totalSupply.totalSupply (local variable @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#27-28) shadows:
	- ICofounditToken.totalSupply (function @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#25-28)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
CofounditICO.batchIssueTokens has external calls inside a loop:
	- cofounditTokenContract.mintTokens(currentParticipantAddress,tokensToBeIssued,Ico participation mint) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#163-166)
CofounditICO.batchReturnEthIfFailed has external calls inside a loop:
	- ! currentParticipantAddress.send(contribution) (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#184-193)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
CofounditICO.icoEndedSuccessfulyMessage should be constant (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#66)
CofounditICO.icoEndedSuccessfulyWithCapMessage should be constant (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#66-69)
CofounditICO.icoFailedMessage should be constant (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#69-70)
CofounditICO.icoMinTresholdReachedMessage should be constant (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#65-66)
CofounditICO.icoStartedMessage should be constant (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#64-65)
CofounditICO.usedIcoSupply should be constant (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#50-51)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#13-16:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#96:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#101:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#133:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#135:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#158:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#178:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#202:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#202-203:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#203-224:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#206:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#208-224:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#210:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#212-224:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#215:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#217-224:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#222:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#224:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#236:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#238:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#247:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#248:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#255:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#16-21) should be declared external
tokenRecipient.receiveApproval (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#21-23) should be declared external
ICofounditToken.mintTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#24-25) should be declared external
ICofounditToken.totalSupply (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#25-28) should be declared external
CofounditICO.fallback (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#95-132) should be declared external
CofounditICO.claimEthIfFailed (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#132-147) should be declared external
CofounditICO.addPresaleContributors (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#148-155) should be declared external
CofounditICO.batchIssueTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#156-174) should be declared external
CofounditICO.batchReturnEthIfFailed (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#174-196) should be declared external
CofounditICO.changeMultisigAddress (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#197-198) should be declared external
CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#199-225) should be declared external
CofounditICO.removePresaleContributor (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#228-229) should be declared external
CofounditICO.setTokenContract (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#233-235) should be declared external
CofounditICO.withdrawEth (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#236-245) should be declared external
CofounditICO.withdrawRemainingBalanceForManualRecovery (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#246-259) should be declared external
CofounditICO.getCfiEstimation (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#259-267) should be declared external
CofounditICO.getCofounditTokenAddress (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#267-268) should be declared external
CofounditICO.icoInProgress (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#268-272) should be declared external
CofounditICO.isAddressAllowedInPresale (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#272-278) should be declared external
CofounditICO.participantContributionInEth (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#278-281) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol:
	- pragma solidity^0.4.11 (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#3-21) is not in CapWords
Contract 'tokenRecipient' (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#21-23) is not in CapWords
Function 'CofounditICO.CofounditICO' (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#75-93) is not in mixedCase
Parameter '_startBlock' of CofounditICO.CofounditICO (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#76) is not in mixedCase
Parameter '_endBlock' of CofounditICO.CofounditICO (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#76-77) is not in mixedCase
Parameter '_multisigAddress' of CofounditICO.CofounditICO (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#77-78) is not in mixedCase
Parameter '_presaleContributors' of CofounditICO.addPresaleContributors (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#149) is not in mixedCase
Parameter '_numberOfIssuances' of CofounditICO.batchIssueTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#156-157) is not in mixedCase
Parameter '_numberOfReturns' of CofounditICO.batchReturnEthIfFailed (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#175-176) is not in mixedCase
Parameter '_newAddress' of CofounditICO.changeMultisigAddress (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#197) is not in mixedCase
Parameter '_which' of CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#200) is not in mixedCase
Parameter '_to' of CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#201) is not in mixedCase
Parameter '_amount' of CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#201) is not in mixedCase
Parameter '_reason' of CofounditICO.claimReservedTokens (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#201) is not in mixedCase
Parameter '_presaleContributor' of CofounditICO.removePresaleContributor (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#228) is not in mixedCase
Parameter '_cofounditContractAddress' of CofounditICO.setTokenContract (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#234) is not in mixedCase
Parameter '_querryAddress' of CofounditICO.getCfiEstimation (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#260-261) is not in mixedCase
Parameter '_querryAddress' of CofounditICO.isAddressAllowedInPresale (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#272-276) is not in mixedCase
Parameter '_querryAddress' of CofounditICO.participantContributionInEth (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#279-281) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CofounditICO.usedIcoSupply (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#50-51) is never used in CofounditICO
CofounditICO.icoFailedMessage (/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol#69-70) is never used in CofounditICO
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/unique_chucks/3/0x55ae5792903b179915e10065e26610435832a3f7.sol analyzed (4 contracts), 77 result(s) found