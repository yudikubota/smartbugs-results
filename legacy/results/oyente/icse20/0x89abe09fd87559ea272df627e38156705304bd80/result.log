WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:SmartMining:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 79.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): True
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:231:17: Warning: Integer Overflow.
                members[memberIndex[i]].unpaid
Integer Overflow occurs if:
    crowdsaleOpen = 95779509802480722744478485512061607693151539203932160
    totalSupply = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    memberIndex.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    members[memberIndex[i]].balance = 0
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:293:100: Warning: Integer Overflow.
    function crowdsaleRemainingToken ()                     public view returns (uint256) { return members[address(this)].balance
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:135:13: Warning: Integer Overflow.
            members[_beneficiary].crowdsaleMinPurchase
Integer Overflow occurs if:
    _beneficiary = 1461501637330902918203684832716283019655932542975
    crowdsaleFinished = 0
    owner = 0
    _ethMinPurchase = 0
    members[_beneficiary].unpaid = 1
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:134:13: Warning: Integer Overflow.
        if( members[_beneficiary].unpaid
Integer Overflow occurs if:
    _beneficiary = 1461501637330902918203684832716283019655932542975
    crowdsaleFinished = 0
    owner = 0
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:290:100: Warning: Integer Overflow.
    function unpaidOf                (address _beneficiary) public view returns (uint256) { return members[_beneficiary].unpaid
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:139:13: Warning: Integer Overflow.
            members[_beneficiary].crowdsaleMinPurchase
Integer Overflow occurs if:
    members[_beneficiary].unpaid = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    _beneficiary = 1461501637330902918203684832716283019655932542975
    crowdsaleFinished = 0
    withdrawer = 0
    owner = 1461501637330902918203684832716283019655932542975
    _ethMinPurchase = 0
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:311:9: Warning: Integer Overflow.
        members[_beneficiary].unpaid
Integer Overflow occurs if:
    members[_beneficiary].unpaid = 4
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:291:100: Warning: Integer Overflow.
    function crowdsaleIsMemberOf     (address _beneficiary) public view returns (bool)    { return members[_beneficiary].unpaid
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:310:26: Warning: Integer Overflow.
        uint256 unpaid = members[_beneficiary].unpaid
Integer Overflow occurs if:
    members[_beneficiary].unpaid = 4
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:283:35: Warning: Integer Overflow.
            .mul( totalSupply.sub(members[memberIndex[0]].balance
Integer Overflow occurs if:
    crowdsaleOpen = 372682917519380244141939632342652170012262798458880
    memberIndex[0] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    members[msg.sender].crowdsaleMinPurchase = 0
    members[msg.sender].unpaid = 1
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:54:5: Warning: Integer Overflow.
    mapping (address => Member) public members
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:294:116: Warning: Integer Overflow.
    function crowdsalePercentOfTotalSupply ()               public view returns (uint256) { return totalSupply.sub(members[memberIndex[0]].balance
Integer Overflow occurs if:
    memberIndex[0] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:233:21: Warning: Integer Overflow.
                    members[memberIndex[i]].balance
Integer Overflow occurs if:
    crowdsaleOpen = 95779509802480722744478485512061607693151539203932160
    memberIndex.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:289:100: Warning: Integer Overflow.
    function balanceOf               (address _beneficiary) public view returns (uint256) { return members[_beneficiary].balance
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:138:13: Warning: Integer Overflow.
            members[_beneficiary].unpaid
Integer Overflow occurs if:
    members[_beneficiary].unpaid = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    _beneficiary = 1461501637330902918203684832716283019655932542975
    crowdsaleFinished = 0
    owner = 0
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:146:36: Warning: Integer Overflow.
        emit Approve(_beneficiary, members[_beneficiary].crowdsaleMinPurchase
Integer Overflow occurs if:
    _beneficiary = 1461501637330902918203684832716283019655932542975
    crowdsaleFinished = 0
    owner = 0
    _ethMinPurchase = 0
    members[_beneficiary].unpaid = 1
INFO:symExec:Flow1
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:322:22: Warning: Transaction-Ordering Dependency.
            require( _beneficiary.call.gas(230000).value(unpaid)()
Flow2
/unique_chucks/24/0x89abe09fd87559ea272df627e38156705304bd80.sol:322:22: Warning: Transaction-Ordering Dependency.
            require( _beneficiary.call.gas(230000).value(unpaid)()
INFO:symExec:	====== Analysis Completed ======