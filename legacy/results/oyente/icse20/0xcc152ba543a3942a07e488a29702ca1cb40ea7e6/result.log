WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:Agent:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:Ownable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.7%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:PEX:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 86.0%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:370:24: Warning: Integer Underflow.
        bytes32 hash = keccak256(abi.encodePacked(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user))
Integer Underflow occurs if:
    tokens[tokenBuy][sender] = 0
    amount = 0
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:355:24: Warning: Integer Underflow.
        bytes32 hash = keccak256(abi.encodePacked(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, msg.sender))
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:333:24: Warning: Integer Underflow.
        bytes32 hash = keccak256(abi.encodePacked(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user))
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:327:24: Warning: Integer Underflow.
        bytes32 hash = keccak256(abi.encodePacked(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, msg.sender))
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:382:24: Warning: Integer Underflow.
        bytes32 hash = keccak256(abi.encodePacked(this, tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, user))
INFO:symExec:/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:356:63: Warning: Integer Overflow.
        if (!(orders[msg.sender][hash] || ecrecover(keccak256(abi.encodePacked("\x19Ethereum Signed Message:\n32", hash)
Integer Overflow occurs if:
    orders[msg.sender][hash] = 0
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:361:5: Warning: Integer Overflow.
    function testTrade(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender) external view returns(bool) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    expires = 0
    orders[user][hash] = 255
    amount = 0
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:372:56: Warning: Integer Overflow.
            (orders[user][hash] || ecrecover(keccak256(abi.encodePacked("\x19Ethereum Signed Message:\n32", hash)
Integer Overflow occurs if:
    tokens[tokenBuy][sender] = 0
    orders[user][hash] = 0
    amount = 0
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:335:56: Warning: Integer Overflow.
            (orders[user][hash] || ecrecover(keccak256(abi.encodePacked("\x19Ethereum Signed Message:\n32", hash)
Integer Overflow occurs if:
    orders[user][hash] = 0
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:224:9: Warning: Integer Overflow.
        feeTypes[type_] = Fee(feeMake_,feeTake_)
Integer Overflow occurs if:
    Agents[msg.sender] = 255
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:194:5: Warning: Integer Overflow.
    mapping (uint256 => Fee) public feeTypes
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:192:5: Warning: Integer Overflow.
    mapping (address => whitelistToken) public whitelistTokens
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:329:14: Warning: Integer Overflow.
        emit Order(tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, msg.sender)
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:242:9: Warning: Integer Overflow.
        whitelistTokens[token].timestamp
Integer Overflow occurs if:
    Agents[msg.sender] = 255
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:346:44: Warning: Integer Overflow.
        uint feeTakeXfer = safeMul(amount, feeTypes[accountTypes[msg.sender]].feeTake
Integer Overflow occurs if:
    amountBuy = 0
    expires = 0
    orderFills[user][hash] = 0
    orders[user][hash] = 255
    amount = 0
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:232:17: Warning: Integer Overflow.
        return (feeTypes[type_].feeTake
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:358:14: Warning: Integer Overflow.
        emit Cancel(tokenBuy, amountBuy, tokenSell, amountSell, expires, nonce, msg.sender, v, r, s, hash)
Integer Overflow occurs if:
    orders[msg.sender][hash] = 255
/unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:381:5: Warning: Integer Overflow.
    function amountFilled(address tokenBuy, uint amountBuy, address tokenSell, uint amountSell, uint expires, uint nonce, address user) external view returns(uint) {
    ^
Spanning multiple lines.
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/7/0xcc152ba543a3942a07e488a29702ca1cb40ea7e6.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======