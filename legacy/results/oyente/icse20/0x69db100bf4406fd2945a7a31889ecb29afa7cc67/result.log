WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:BasicToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.6%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:50:9: Warning: Integer Overflow.
    c = a + b
Integer Overflow occurs if:
    balances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152
    _value = 44369063854674067291029404066660873444229566625561754964912869797988903417852
    balances[msg.sender] = 44369063854674067291029404066660873444229566625561754964912869797988903417852
    _to = 1461501637330902918203684832716283019655932542975
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:Colorbay:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 87.3%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:392:5: Warning: Integer Underflow.
    string public symbol = "CLOB"
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:391:5: Warning: Integer Underflow.
    string public name = "Colorbay Token"
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:50:9: Warning: Integer Overflow.
    c = a + b
Integer Overflow occurs if:
    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231
    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    _to = 1461501637330902918203684832716283019655932542975
    paused = 0
    frozenAccount[_who] = 0
    frozenAccount[msg.sender] = 0
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:FrozenableToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:Ownable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.5%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:Pausable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:PausableToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 96.1%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:50:9: Warning: Integer Overflow.
    c = a + b
Integer Overflow occurs if:
    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231
    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    _to = 1461501637330902918203684832716283019655932542975
    paused = 0
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:SafeERC20:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:StandardToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.9%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:50:9: Warning: Integer Overflow.
    c = a + b
Integer Overflow occurs if:
    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231
    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    _to = 1461501637330902918203684832716283019655932542975
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:TokenVesting:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 53.4%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:504:5: Warning: Integer Underflow.
    mapping (address => Plan) public plans
INFO:symExec:/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:589:30: Warning: Integer Overflow.
        uint256 totalToken = plans[_beneficiary].totalToken
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:585:20: Warning: Integer Overflow.
            return plans[_beneficiary].totalToken
Integer Overflow occurs if:
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].locktoTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
    plans[_beneficiary].releasedAmount = 0
    plans[_beneficiary].totalToken = 0
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:572:47: Warning: Integer Overflow.
        return vestedAmount(_beneficiary).sub(plans[_beneficiary].releasedAmount
Integer Overflow occurs if:
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:538:5: Warning: Integer Overflow.
    function addPlan(address _beneficiary, uint256 _startTime, uint256 _locktoTime, uint256 _releaseStages, uint256 _endTime, uint256 _totalToken, bool _revocable, string _remark) public onlyOwner checkPayPool(_totalToken) {
    ^
Spanning multiple lines.
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:592:42: Warning: Integer Overflow.
        uint256 passedTime = endTime.sub(plans[_beneficiary].locktoTime
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:590:33: Warning: Integer Overflow.
        uint256 releaseStages = plans[_beneficiary].releaseStages
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:504:5: Warning: Integer Overflow.
    mapping (address => Plan) public plans
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:582:20: Warning: Integer Overflow.
        } else if (plans[_beneficiary].isRevoked
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:591:75: Warning: Integer Overflow.
        uint256 endTime = block.timestamp > plans[_beneficiary].endTime ? plans[_beneficiary].endTime
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].endTime = 57896044618658097711783960008803088037776633985793131710545173264834381217791
    plans[_beneficiary].releasedAmount = 0
    plans[_beneficiary].totalToken = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:640:39: Warning: Integer Overflow.
        } else if (block.timestamp <= plans[_beneficiary].locktoTime
Integer Overflow occurs if:
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:584:69: Warning: Integer Overflow.
        } else if (block.timestamp > plans[_beneficiary].endTime && plans[_beneficiary].totalToken
Integer Overflow occurs if:
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].locktoTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:591:45: Warning: Integer Overflow.
        uint256 endTime = block.timestamp > plans[_beneficiary].endTime
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:583:20: Warning: Integer Overflow.
            return plans[_beneficiary].releasedAmount
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].isRevoked = 65280
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:580:32: Warning: Integer Overflow.
        if (block.timestamp <= plans[_beneficiary].locktoTime
Integer Overflow occurs if:
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:588:29: Warning: Integer Overflow.
        uint256 totalTime = plans[_beneficiary].endTime
Integer Overflow occurs if:
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].locktoTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:584:103: Warning: Integer Overflow.
        } else if (block.timestamp > plans[_beneficiary].endTime && plans[_beneficiary].totalToken == plans[_beneficiary].releasedAmount
Integer Overflow occurs if:
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].locktoTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:588:61: Warning: Integer Overflow.
        uint256 totalTime = plans[_beneficiary].endTime.sub(plans[_beneficiary].locktoTime
Integer Overflow occurs if:
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].locktoTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:584:38: Warning: Integer Overflow.
        } else if (block.timestamp > plans[_beneficiary].endTime
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    _beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:643:28: Warning: Integer Overflow.
            totalBalance = plans[_beneficiary].totalToken
Integer Overflow occurs if:
    plans[_beneficiary].endTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].locktoTime = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
    plans[_beneficiary].releasedAmount = 0
    plans[_beneficiary].totalToken = 0
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:638:12: Warning: Integer Overflow.
        if(plans[_beneficiary].isRevoked
Integer Overflow occurs if:
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
/unique_chucks/28/0x69db100bf4406fd2945a7a31889ecb29afa7cc67.sol:641:28: Warning: Integer Overflow.
            totalBalance = plans[_beneficiary].totalToken
Integer Overflow occurs if:
    plans[_beneficiary].locktoTime = 0
    plans[_beneficiary].isRevoked = 0
    plans[_beneficiary].beneficiary = 1461501637330902918203684832716283019655932542975
INFO:symExec:	====== Analysis Completed ======