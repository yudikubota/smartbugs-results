WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:Fibonzi:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 52.3%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:262:5: Warning: Integer Underflow.
    function getPlayersBalances() constant returns(uint[]){
    ^
Spanning multiple lines.
Integer Underflow occurs if:
    playersCount = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:270:5: Warning: Integer Underflow.
    function getPlayersFibokens() constant returns(uint[]){
    ^
Spanning multiple lines.
Integer Underflow occurs if:
    playersCount = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:238:5: Warning: Integer Underflow.
    function getPoolPrices() constant returns(uint[]){
    ^
Spanning multiple lines.
Integer Underflow occurs if:
    poolCount = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:246:5: Warning: Integer Underflow.
    function getPoolOwners() constant returns(address[]){
    ^
Spanning multiple lines.
Integer Underflow occurs if:
    poolCount = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:254:5: Warning: Integer Underflow.
    function getFibonziPlayers() constant returns(address[]){
    ^
Spanning multiple lines.
Integer Underflow occurs if:
    playersCount = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:230:5: Warning: Integer Underflow.
    function getPoolIds() constant returns(uint8[]){
    ^
Spanning multiple lines.
Integer Underflow occurs if:
    poolCount = 0
INFO:symExec:/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:270:5: Warning: Integer Overflow.
    function getPlayersFibokens() constant returns(uint[]){
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    playersCount = 374144419156711147060143317175368453031918731001856
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    playersFibokens[playersList[i]].length = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:265:34: Warning: Integer Overflow.
            playersBalances[i] = players[playersList[i]].balance
Integer Overflow occurs if:
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    playersCount = 95406826884961342500336545879718955523139276405473280
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:83:71: Warning: Integer Overflow.
        assert( ( pools[poolId].owner == owner && poolCount == 1) || (pools[poolId].owner
Integer Overflow occurs if:
    poolCount = 0
    pools[poolId].price = 0
    pools[poolId].owner = 1461501637330902918203684832716283019655932542975
    poolId = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:114:16: Warning: Integer Overflow.
        assert(players[msg.sender].balance
Integer Overflow occurs if:
    playersCount = 374144419156711147060143317175368453031918731001856
    playersList[i] = 0
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:230:5: Warning: Integer Overflow.
    function getPoolIds() constant returns(uint8[]){
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    poolCount = 372682917519380244141939632342652170012262798458880
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:139:13: Warning: Integer Overflow.
            players[msg.sender] = Player(msg.sender,0)
Integer Overflow occurs if:
    poolCount = 372682917519380244141939632342652170012262798458880
    pools[poolId].price = 0
    pools[poolId].owner = 1461501637330902918203684832716283019655932542975
    poolId = 255
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:90:24: Warning: Integer Overflow.
        if(msg.value > pools[poolId].price
Integer Overflow occurs if:
    poolCount = 746827336676091391202082949518020623044181529460736
    playersList[i] = 0
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    pools[poolId].price = 0
    pools[poolId].owner = 1461501637330902918203684832716283019655932542975
    poolId = 255
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:94:22: Warning: Integer Overflow.
        uint price = pools[poolId].price
Integer Overflow occurs if:
    pools[poolId].price = 0
    poolCount = 746827336676091391202082949518020623044181529460736
    playersList[i] = 0
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    pools[poolId].owner = 1461501637330902918203684832716283019655932542975
    poolId = 255
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:95:9: Warning: Integer Overflow.
        pools[poolId].owner
Integer Overflow occurs if:
    pools[poolId].price = 0
    poolCount = 746827336676091391202082949518020623044181529460736
    playersList[i] = 0
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    pools[poolId].owner = 1461501637330902918203684832716283019655932542975
    poolId = 255
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:82:29: Warning: Integer Overflow.
        assert(msg.value >= pools[poolId].price
Integer Overflow occurs if:
    pools[poolId].owner = 0
    poolCount = 0
    poolId = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:81:30: Warning: Integer Overflow.
        assert(msg.sender != pools[poolId].owner
Integer Overflow occurs if:
    poolCount = 0
    poolId = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:262:5: Warning: Integer Overflow.
    function getPlayersBalances() constant returns(uint[]){
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    playersCount = 374144419156711147060143317175368453031918731001856
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:83:19: Warning: Integer Overflow.
        assert( ( pools[poolId].owner
Integer Overflow occurs if:
    pools[poolId].price = 0
    pools[poolId].owner = 0
    poolCount = 0
    poolId = 0
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:254:5: Warning: Integer Overflow.
    function getFibonziPlayers() constant returns(address[]){
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    playersCount = 374144419156711147060143317175368453031918731001856
    playersList[i] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:249:31: Warning: Integer Overflow.
            poolOwners[i-1] = pools[i].owner
Integer Overflow occurs if:
    poolCount = 93536104789177786765035829293842113257979682750464
/unique_chucks/10/0xc352add7ad8cac8baa839d8c88e7e9d7df9a219b.sol:246:5: Warning: Integer Overflow.
    function getPoolOwners() constant returns(address[]){
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    poolCount = 372682917519380244141939632342652170012262798458880
INFO:symExec:	====== Analysis Completed ======