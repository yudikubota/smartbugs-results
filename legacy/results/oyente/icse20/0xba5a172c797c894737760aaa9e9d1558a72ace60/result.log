WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:NanoLoanEngine:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 42.3%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:635:48: Warning: Integer Underflow.
        require(loan.status == Status.lent && (loan.dueTime - loan.duesIn
Integer Underflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:346:9: Warning: Integer Underflow.
        return loans[index].metadata
Integer Underflow occurs if:
    index = 0
    return loans[index].metadata = 1
    loans[index] = 1
INFO:symExec:/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:831:25: Warning: Integer Overflow.
        if (timestamp > loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:847:31: Warning: Integer Overflow.
                    pending = loan.amount
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:475:81: Warning: Integer Overflow.
    function getInterestRate(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:475:81: Warning: Integer Overflow.
    function getInterestRate(uint index) public view returns (uint256) { return loans[index].interestRate
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:843:34: Warning: Integer Overflow.
            if (endNonPunitory > loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:916:5: Warning: Integer Overflow.
    function pay(uint index, uint256 _amount, address _from, bytes oracleData) public returns (bool) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    oracleData = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:472:85: Warning: Integer Overflow.
    function getPunitoryInterest(uint index) public view returns (uint256) { return loans[index].punitoryInterest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:516:34: Warning: Integer Overflow.
        return loan.approbations[loan.borrower
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:468:77: Warning: Integer Overflow.
    function getBorrower(uint index) public view returns (address) { return loans[index].borrower
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:478:75: Warning: Integer Overflow.
    function getDuesIn(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:953:5: Warning: Integer Overflow.
    function convertRate(Oracle oracle, bytes32 currency, bytes data, uint256 amount) public returns (uint256) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    data = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:833:43: Warning: Integer Overflow.
            uint256 newPunitoryInterest = loan.punitoryInterest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:469:77: Warning: Integer Overflow.
    function getCosigner(uint index) public view returns (address) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:483:76: Warning: Integer Overflow.
    function getApproved(uint index) public view returns (address) {return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:486:77: Warning: Integer Overflow.
    function getInterest(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:436:5: Warning: Integer Overflow.
    function createLoan(Oracle _oracleContract, address _borrower, bytes32 _currency, uint256 _amount, uint256 _interestRate,
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _metadata = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:486:77: Warning: Integer Overflow.
    function getInterest(uint index) public view returns (uint256) { return loans[index].interest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:846:33: Warning: Integer Overflow.
                if (loan.paid < loan.amount
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:467:74: Warning: Integer Overflow.
    function getOracle(uint index) public view returns (Oracle) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:532:9: Warning: Integer Overflow.
        loan.approbations
Integer Overflow occurs if:
    identifierToIndex[identifier] = 1
    loans[index] = 2
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:478:75: Warning: Integer Overflow.
    function getDuesIn(uint index) public view returns (uint256) { return loans[index].duesIn
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:756:9: Warning: Integer Overflow.
        loan.approvedTransfer
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:844:46: Warning: Integer Overflow.
                deltaTime = endNonPunitory - loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:1004:5: Warning: Integer Overflow.
    function withdrawalList(uint256[] memory loanIds, address to) public returns (uint256) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    loanIds = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:477:76: Warning: Integer Overflow.
    function getDueTime(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:471:75: Warning: Integer Overflow.
    function getAmount(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:483:76: Warning: Integer Overflow.
    function getApproved(uint index) public view returns (address) {return loans[index].approvedTransfer
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:846:21: Warning: Integer Overflow.
                if (loan.paid
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:473:86: Warning: Integer Overflow.
    function getInterestTimestamp(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:472:85: Warning: Integer Overflow.
    function getPunitoryInterest(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:482:82: Warning: Integer Overflow.
    function getLenderBalance(uint index) public view returns (uint256) { return loans[index].lenderBalance
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:854:32: Warning: Integer Overflow.
                newTimestamp = loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:481:74: Warning: Integer Overflow.
    function getStatus(uint index) public view returns (Status) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:501:5: Warning: Integer Overflow.
    function buildIdentifier(Oracle oracle, address borrower, address creator, bytes32 currency, uint256 amount, uint256 interestRate,
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    metadata = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:473:86: Warning: Integer Overflow.
    function getInterestTimestamp(uint index) public view returns (uint256) { return loans[index].interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:346:16: Warning: Integer Overflow.
        return loans[index].metadata
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:468:77: Warning: Integer Overflow.
    function getBorrower(uint index) public view returns (address) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:465:83: Warning: Integer Overflow.
    function ownerOf(uint256 index) public view returns (address owner) { owner = loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:476:89: Warning: Integer Overflow.
    function getInterestRatePunitory(uint index) public view returns (uint256) { return loans[index].interestRatePunitory
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:516:16: Warning: Integer Overflow.
        return loan.approbations
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:842:53: Warning: Integer Overflow.
            uint256 endNonPunitory = min(timestamp, loan.dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:858:45: Warning: Integer Overflow.
                uint256 startPunitory = max(loan.dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:471:75: Warning: Integer Overflow.
    function getAmount(uint index) public view returns (uint256) { return loans[index].amount
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:584:5: Warning: Integer Overflow.
    function lend(uint index, bytes oracleData, Cosigner cosigner, bytes cosignerData) public returns (bool) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    oracleData = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:515:29: Warning: Integer Overflow.
        Loan storage loan = loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:469:77: Warning: Integer Overflow.
    function getCosigner(uint index) public view returns (address) { return loans[index].cosigner
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:869:72: Warning: Integer Overflow.
            if (newInterest != loan.interest || newPunitoryInterest != loan.punitoryInterest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:474:73: Warning: Integer Overflow.
    function getPaid(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:852:80: Warning: Integer Overflow.
                (realDelta, calculatedInterest) = calculateInterest(deltaTime, loan.interestRate
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:482:82: Warning: Integer Overflow.
    function getLenderBalance(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:346:16: Warning: Integer Overflow.
        return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:657:31: Warning: Integer Overflow.
        require(msg.sender == loan.lender
Integer Overflow occurs if:
    identifierToIndex[identifier] = 1
    loans[index] = 2
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:477:76: Warning: Integer Overflow.
    function getDueTime(uint index) public view returns (uint256) { return loans[index].dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:696:29: Warning: Integer Overflow.
        Loan storage loan = loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457582882013222797311
    loans[index].lender = 0
    loans[index] = 115792089237316195423570985008687907853269984665640564039457582882013222797312
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:832:35: Warning: Integer Overflow.
            uint256 newInterest = loan.interest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:869:32: Warning: Integer Overflow.
            if (newInterest != loan.interest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:465:83: Warning: Integer Overflow.
    function ownerOf(uint256 index) public view returns (address owner) { owner = loans[index].lender
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:564:9: Warning: Integer Overflow.
        loan.approbations
Integer Overflow occurs if:
    identifierToIndex[identifier] = 2251799813685248
    loans[index] = 2251799813685249
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:857:29: Warning: Integer Overflow.
            if (timestamp > loan.dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:847:45: Warning: Integer Overflow.
                    pending = loan.amount - loan.paid
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:476:89: Warning: Integer Overflow.
    function getInterestRatePunitory(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:Ownable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.5%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:RpSafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/20/0xba5a172c797c894737760aaa9e9d1558a72ace60.sol:TokenLockable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 65.9%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======