WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:NameFilter:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:ProtectEarth:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 16.1%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:100:6: Warning: Integer Underflow.
{if((now-gameStart
Integer Underflow occurs if:
    gameStart = 1
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:206: Warning: Integer Underflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start
Integer Underflow occurs if:
    activated_ = 255
INFO:symExec:/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:184: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i]
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:168: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:303: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start)/rebatePeriod_;totalEna=totalEna.add(_one.mul((_ps[i].value).mul(_ps[i].fenzi)/_ps[i].fenmu
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:271: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start)/rebatePeriod_;totalEna=totalEna.add(_one.mul((_ps[i]
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:110:190: Warning: Integer Overflow.
else{require(plyr_[pId].level==2,"your must be a commander");require(value>=captionPrice,"your must paid enough money");require(plyr_[pId].recCount>=upCaptainRec_,"you need more soldiers");plyr_[pId].level
Integer Overflow occurs if:
    plyr_[pId].recCount = 20
    plyr_[pId].level = 2
    activated_ = 255
    leveType = 2
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:168: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i]
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:303: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start)/rebatePeriod_;totalEna=totalEna.add(_one.mul((_ps[i].value).mul(_ps[i].fenzi)/_ps[i]
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:211: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i]
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:184: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:109:310: Warning: Integer Overflow.
{uint256 value=msg.value;uint256 pId=pIDxAddr_[msg.sender];require(leveType==1||leveType==2,"leveType error");if(leveType==1){require(plyr_[pId].level==1,"your must be a soldier");require(value>=leaderPrice,"your must paid enough money");require(plyr_[pId].recCount>=upCommanderRec_,"you need more soldiers");plyr_[pId].level
Integer Overflow occurs if:
    plyr_[pId].recCount = 5
    plyr_[pId].level = 1
    activated_ = 255
    leveType = 1
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:289: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start)/rebatePeriod_;totalEna=totalEna.add(_one.mul((_ps[i].value).mul(_ps[i].fenzi
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:289: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start)/rebatePeriod_;totalEna=totalEna.add(_one.mul((_ps[i].value).mul(_ps[i]
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:81:211: Warning: Integer Overflow.
function calRebateUpdate(Performance[]storage _ps)private returns(uint){uint _now=now;uint totalEna;for(uint i=0;i<_ps.length;i++){if(_ps[i].end>_ps[i].start){if(_now>_ps[i].end)_now=_ps[i].end;uint _one=(_now-_ps[i].start
Integer Overflow occurs if:
    activated_ = 255
/unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:62:1002: Warning: Integer Overflow.
(address indexed playerAddress,uint256 indexed playerID,uint256 ethIn,uint256 keysBought,uint256 affiliateID,uint256 commanderID,uint256 captainID,uint256 airAmount,uint256 potAmount,uint256 timeStamp);uint256 constant private captionPrice=15 ether;uint256 constant private leaderPrice=5 ether;uint256 constant private price=1 ether;uint256 constant private unLockPrice=1 ether;uint constant private cap2capRate=2;uint constant private captainRate=5;uint constant private comm2commRate=5;uint constant private firstLevel=8;uint constant private secondLevel=5;uint constant private potRate=60;uint constant private airDropRate=1;uint256 public airDropPot_;uint16 public openWeek=0;uint256 public gameStart;bool public activated_=false;uint256 public totalEth_;uint256 public pot_;uint public constant rebatePeriod_=1 days;uint16 public rebateOneFenzi_=1;uint16 public rebateOneFenmu_=1000;uint16 public rebateTwoFenzi_=2;uint16 public rebateTwoFenmu_=1000;mapping(uint=>Performance[])public rebateOne_;mapping(uint=>Performance[])public rebateTwo_
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/7/0xd46d0505f73f26f4cc7c8df65e562ac3f28ffc10.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======