WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:NanoLoanEngine:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 47.6%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:600:48: Warning: Integer Underflow.
        require(loan.status == Status.lent && (loan.dueTime - loan.duesIn
Integer Underflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:375:9: Warning: Integer Underflow.
        return loans[index].metadata
Integer Underflow occurs if:
    index = 0
    return loans[index].metadata = 1
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:657:9: Warning: Integer Underflow.
        lendersBalance[msg.sender] -= 1
Integer Underflow occurs if:
    index = 0
    lendersBalance[msg.sender] = 0
    to = 1461501637330902918203684832716283019655932542975
    loans[index].lender = 0
    loans[index] = 1
INFO:symExec:/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:498:95: Warning: Integer Overflow.
    function getApprobation(uint index, address _address) public view returns (bool) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:459:5: Warning: Integer Overflow.
    function createLoan(Oracle _oracleContract, address _borrower, bytes32 _currency, uint256 _amount, uint256 _interestRate,
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _metadata = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:500:82: Warning: Integer Overflow.
    function getLenderBalance(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:795:32: Warning: Integer Overflow.
                newTimestamp = loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:653:9: Warning: Integer Overflow.
        loan.lender
Integer Overflow occurs if:
    index = 0
    to = 1461501637330902918203684832716283019655932542975
    loans[index].lender = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:493:81: Warning: Integer Overflow.
    function getInterestRate(uint index) public view returns (uint256) { return loans[index].interestRate
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:493:81: Warning: Integer Overflow.
    function getInterestRate(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:490:85: Warning: Integer Overflow.
    function getPunitoryInterest(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:514:29: Warning: Integer Overflow.
        Loan storage loan = loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:788:31: Warning: Integer Overflow.
                    pending = loan.amount
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:971:5: Warning: Integer Overflow.
    function withdrawalList(uint256[] memory loanIds, address to) public returns (uint256) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    loanIds = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:784:34: Warning: Integer Overflow.
            if (endNonPunitory > loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:515:34: Warning: Integer Overflow.
        return loan.approbations[loan.borrower
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:499:74: Warning: Integer Overflow.
    function getStatus(uint index) public view returns (Status) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:773:35: Warning: Integer Overflow.
            uint256 newInterest = loan.interest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:490:85: Warning: Integer Overflow.
    function getPunitoryInterest(uint index) public view returns (uint256) { return loans[index].punitoryInterest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:788:45: Warning: Integer Overflow.
                    pending = loan.amount - loan.paid
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:495:76: Warning: Integer Overflow.
    function getDueTime(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:495:76: Warning: Integer Overflow.
    function getDueTime(uint index) public view returns (uint256) { return loans[index].dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:500:82: Warning: Integer Overflow.
    function getLenderBalance(uint index) public view returns (uint256) { return loans[index].lenderBalance
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:486:77: Warning: Integer Overflow.
    function getBorrower(uint index) public view returns (address) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:810:32: Warning: Integer Overflow.
            if (newInterest != loan.interest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:486:77: Warning: Integer Overflow.
    function getBorrower(uint index) public view returns (address) { return loans[index].borrower
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:783:53: Warning: Integer Overflow.
            uint256 endNonPunitory = min(timestamp, loan.dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:491:86: Warning: Integer Overflow.
    function getInterestTimestamp(uint index) public view returns (uint256) { return loans[index].interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:501:76: Warning: Integer Overflow.
    function getApproved(uint index) public view returns (address) {return loans[index].approvedTransfer
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:487:77: Warning: Integer Overflow.
    function getCosigner(uint index) public view returns (address) { return loans[index].cosigner
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:491:86: Warning: Integer Overflow.
    function getInterestTimestamp(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:787:33: Warning: Integer Overflow.
                if (loan.paid < loan.amount
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:785:46: Warning: Integer Overflow.
                deltaTime = endNonPunitory - loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:492:73: Warning: Integer Overflow.
    function getPaid(uint index) public view returns (uint256) { return loans[index].paid
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:494:89: Warning: Integer Overflow.
    function getInterestRatePunitory(uint index) public view returns (uint256) { return loans[index].interestRatePunitory
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:793:80: Warning: Integer Overflow.
                (realDelta, calculatedInterest) = calculateInterest(deltaTime, loan.interestRate
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:772:25: Warning: Integer Overflow.
        if (timestamp > loan.interestTimestamp
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:483:83: Warning: Integer Overflow.
    function ownerOf(uint256 index) public view returns (address owner) { owner = loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:489:75: Warning: Integer Overflow.
    function getAmount(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:551:5: Warning: Integer Overflow.
    function lend(uint index, bytes oracleData, Cosigner cosigner, bytes cosignerData) public returns (bool) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    oracleData = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:798:29: Warning: Integer Overflow.
            if (timestamp > loan.dueTime
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:375:16: Warning: Integer Overflow.
        return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:787:21: Warning: Integer Overflow.
                if (loan.paid
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:709:9: Warning: Integer Overflow.
        loan.approvedTransfer
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:487:77: Warning: Integer Overflow.
    function getCosigner(uint index) public view returns (address) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:857:5: Warning: Integer Overflow.
    function pay(uint index, uint256 _amount, address _from, bytes oracleData) public returns (bool) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    oracleData = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:515:16: Warning: Integer Overflow.
        return loan.approbations
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:654:9: Warning: Integer Overflow.
        loan.approvedTransfer
Integer Overflow occurs if:
    index = 0
    to = 1461501637330902918203684832716283019655932542975
    loans[index].lender = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:622:31: Warning: Integer Overflow.
        require(msg.sender == loan.lender
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:489:75: Warning: Integer Overflow.
    function getAmount(uint index) public view returns (uint256) { return loans[index].amount
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:496:75: Warning: Integer Overflow.
    function getDuesIn(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:483:83: Warning: Integer Overflow.
    function ownerOf(uint256 index) public view returns (address owner) { owner = loans[index].lender
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:498:95: Warning: Integer Overflow.
    function getApprobation(uint index, address _address) public view returns (bool) { return loans[index].approbations
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:494:89: Warning: Integer Overflow.
    function getInterestRatePunitory(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:492:73: Warning: Integer Overflow.
    function getPaid(uint index) public view returns (uint256) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:501:76: Warning: Integer Overflow.
    function getApproved(uint index) public view returns (address) {return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:485:74: Warning: Integer Overflow.
    function getOracle(uint index) public view returns (Oracle) { return loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:739:28: Warning: Integer Overflow.
        Loan memory loan = loans[index]
Integer Overflow occurs if:
    index = 115792089237316195423570985008687907853269984665640564039457575000713874898943
    loans[index] = 115792089237316195423570985008687907853269984665640564039457575000713874898944
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:774:43: Warning: Integer Overflow.
            uint256 newPunitoryInterest = loan.punitoryInterest
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:496:75: Warning: Integer Overflow.
    function getDuesIn(uint index) public view returns (uint256) { return loans[index].duesIn
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
/unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:375:16: Warning: Integer Overflow.
        return loans[index].metadata
Integer Overflow occurs if:
    index = 0
    loans[index] = 1
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:Ownable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.5%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:RpSafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/42/0xba5a172874698491f0e83a447c55735eccd854e3.sol:TokenLockable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 65.9%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======