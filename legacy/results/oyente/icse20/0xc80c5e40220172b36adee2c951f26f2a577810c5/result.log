WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:BankeraToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 48.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:81:2: Warning: Integer Overflow.
	mapping (address => AddressBalanceInfoStructure) public accountBalances
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:260:10: Warning: Integer Overflow.
		return accountBalances[_address].roundBalanceMap
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:476:11: Warning: Integer Overflow.
			assert(rewardInfo.isConfigured
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 1048832
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:479:107: Warning: Integer Overflow.
				rewardAmountInWei = safeAdd(rewardAmountInWei, safeMul(accountBalanceInfo.roundBalanceMap[workRound], rewardInfo.rewardRate
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 1048832
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:479:60: Warning: Integer Overflow.
				rewardAmountInWei = safeAdd(rewardAmountInWei, safeMul(accountBalanceInfo.roundBalanceMap
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 1048832
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:478:7: Warning: Integer Overflow.
			if(accountBalanceInfo.wasModifiedInRoundMap
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 1048832
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:80:2: Warning: Integer Overflow.
	mapping (uint64 => Reward) public reward
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:401:2: Warning: Integer Overflow.
	function transfer(address _to, uint256 _value, bytes _data) public whenNotPaused notSelf(_to) returns (bool success){
	^
Spanning multiple lines.
Integer Overflow occurs if:
    _to = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:264:10: Warning: Integer Overflow.
		return accountBalances[_address].wasModifiedInRoundMap
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:482:22: Warning: Integer Overflow.
				for (uint256 i = accountBalanceInfo.mapKeys
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 1048832
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:134:11: Warning: Integer Overflow.
		assert(!rewardInfo.isConfigured
Integer Overflow occurs if:
    lastBlockNumberInRound = 3016539379450994256996371774053391383026327011459074
    _roundNumber = 0
    blocksPerRound = 57896044611918111044997830103277452713614385616380781075585971241010910461952
    rewardManager = 0
    paused = 0
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:483:35: Warning: Integer Overflow.
					uint64 modificationInRound = accountBalanceInfo.mapKeys[i-1]
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 4294967296
/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:483:35: Warning: Integer Overflow.
					uint64 modificationInRound = accountBalanceInfo.mapKeys
Integer Overflow occurs if:
    currentRound = 26959946667150639791744011812357824837229774757108006441791745163264
    _claimTillRound = 1048832
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.3%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/1/0xc80c5e40220172b36adee2c951f26f2a577810c5.sol:27:15: Warning: Integer Overflow.
		uint256 c = a + b
Integer Overflow occurs if:
    a = 1
    b = 115792089237316195423570985008687907853269984665640564039457584007913129639935
INFO:symExec:	====== Analysis Completed ======