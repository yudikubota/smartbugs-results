WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:Base:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.5%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:ERC20:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 90.4%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:118:82: Warning: Integer Overflow.
        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value
Integer Overflow occurs if:
    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231
    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807
    isStarted = 255
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:109:47: Warning: Integer Overflow.
        if (balances[msg.sender] >= _value && balances[_to] + _value
Integer Overflow occurs if:
    _value = 44369063854674067291029404066660873444229566625561754964912869797988903417852
    balances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152
    balances[msg.sender] = 44369063854674067291029404066660873444229566625561754964912869797988903417852
    isStarted = 255
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:Owned:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:SubscriptionBase:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:SubscriptionModuleImpl:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 41.5%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  True
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:9: Warning: Integer Underflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n, sub.initialXrate_d, sub.xrateProviderId, sub.chargePeriod, sub.startOn, sub.descriptor)
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:602:9: Warning: Integer Underflow.
        return _isOffer(subOrOffer)
        ^
Spanning multiple lines.
Integer Underflow occurs if:
    SUB_STATES[uint(_subscriptionState(subOrOffer))] = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:396:5: Warning: Integer Underflow.
    mapping (uint => Subscription) public subscriptions
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:798:30: Warning: Integer Underflow.
            if (_to.call.gas(msg.gas-gasReserve
Integer Underflow occurs if:
    bitlocks = 0
    suspendedUntil = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:399:5: Warning: Integer Underflow.
    mapping (uint => Deposit) public deposits
INFO:symExec:/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:963:42: Warning: Integer Overflow.
        assert (deposit.lockTime == 0 || deposit.createdOn
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:69: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:453:5: Warning: Integer Overflow.
    function disableServiceProvider(ServiceProvider addr, bytes moreInfo) public notSuspended only(owner) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    moreInfo = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:941:5: Warning: Integer Overflow.
    function createDeposit(uint _value, uint _lockTime, bytes _descriptor) public notSuspended returns (uint depositId) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _descriptor = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:708:9: Warning: Integer Overflow.
        offer.execCounter
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:758:13: Warning: Integer Overflow.
            offer.expireOn
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:148: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n, sub.initialXrate_d, sub.xrateProviderId, sub.chargePeriod, sub.startOn
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:446:5: Warning: Integer Overflow.
    function enableServiceProvider(ServiceProvider addr, bytes moreInfo) public notSuspended only(owner) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    moreInfo = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:549:82: Warning: Integer Overflow.
        return (sub.depositAmount, sub.expireOn, sub.execCounter, sub.paidUntil, sub.onHoldSince
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:641:26: Warning: Integer Overflow.
            return now < sub.expireOn
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:793:33: Warning: Integer Overflow.
        sub.expireOn = max(now, sub.paidUntil
Integer Overflow occurs if:
    bitlocks = 0
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:549:17: Warning: Integer Overflow.
        return (sub.depositAmount
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:399:5: Warning: Integer Overflow.
    mapping (uint => Deposit) public deposits
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:622:20: Warning: Integer Overflow.
        } else if (sub.onHoldSince
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:731:20: Warning: Integer Overflow.
        newSubId = ++subscriptionCounter
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 57896044618657994867750659928966319241061082498413720598737189905215105531903
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:792:19: Warning: Integer Overflow.
        var _to = sub.transferTo
Integer Overflow occurs if:
    bitlocks = 0
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:643:19: Warning: Integer Overflow.
                : sub.depositAmount
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:109: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n, sub.initialXrate_d, sub.xrateProviderId
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:396:5: Warning: Integer Overflow.
    mapping (uint => Subscription) public subscriptions
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:636:20: Warning: Integer Overflow.
        } else if (sub.startOn
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:638:20: Warning: Integer Overflow.
        } else if (sub.onHoldSince
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:793:9: Warning: Integer Overflow.
        sub.expireOn
Integer Overflow occurs if:
    bitlocks = 0
    suspendedUntil = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:728:17: Warning: Integer Overflow.
        assert (offer.onHoldSince
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 57896044618657994867750659928966319241061082498413720598737189905215105531903
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:625:20: Warning: Integer Overflow.
            return sub.execCounter
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:130: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n, sub.initialXrate_d, sub.xrateProviderId, sub.chargePeriod
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:730:11: Warning: Integer Overflow.
        --offer.execCounter
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 57896044618657994867750659928966319241061082498413720598737189905215105531903
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:727:43: Warning: Integer Overflow.
        assert (offer.expireOn == 0    || offer.expireOn
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 57896044618657994867750659928966319241061082498413720598737189905215105531903
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:549:67: Warning: Integer Overflow.
        return (sub.depositAmount, sub.expireOn, sub.execCounter, sub.paidUntil
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:836:13: Warning: Integer Overflow.
            offer.onHoldSince
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:460:26: Warning: Integer Overflow.
        suspendedUntil = now + suspendTimeSec
Integer Overflow occurs if:
    suspendTimeSec = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    owner = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:640:37: Warning: Integer Overflow.
        } else if (sub.paidUntil >= sub.expireOn
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:51: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:817:13: Warning: Integer Overflow.
            offer.onHoldSince
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:35: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:726:43: Warning: Integer Overflow.
        assert (offer.startOn == 0     || offer.startOn
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:963:63: Warning: Integer Overflow.
        assert (deposit.lockTime == 0 || deposit.createdOn +  deposit.lockTime
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:963:17: Warning: Integer Overflow.
        assert (deposit.lockTime
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:729:17: Warning: Integer Overflow.
        assert (offer.execCounter
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 57896044618657994867750659928966319241061082498413720598737189905215105531903
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:549:36: Warning: Integer Overflow.
        return (sub.depositAmount, sub.expireOn
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:507:5: Warning: Integer Overflow.
    function paymentFrom(uint _value, bytes _paymentData, address _from, ServiceProvider _to) public notSuspended reentrant returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _paymentData = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:726:17: Warning: Integer Overflow.
        assert (offer.startOn
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:620:20: Warning: Integer Overflow.
        } else if (sub.startOn
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:489:5: Warning: Integer Overflow.
    function paymentTo(uint _value, bytes _paymentData, ServiceProvider _to) public notSuspended reentrant returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _paymentData = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:707:17: Warning: Integer Overflow.
        assert (offer.transferTo
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:549:50: Warning: Integer Overflow.
        return (sub.depositAmount, sub.expireOn, sub.execCounter
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:89: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n, sub.initialXrate_d
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:668:5: Warning: Integer Overflow.
    function createSubscriptionOffer(uint _pricePerHour, uint16 _xrateProviderId, uint _chargePeriod, uint _expireOn, uint _offerLimit, uint _depositAmount, uint _startOn, bytes _descriptor)
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _descriptor = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:858:17: Warning: Integer Overflow.
                sub.onHoldSince
Integer Overflow occurs if:
    bitlocks = 0
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:535:161: Warning: Integer Overflow.
        return (sub.transferFrom, sub.transferTo, sub.pricePerHour, sub.initialXrate_n, sub.initialXrate_d, sub.xrateProviderId, sub.chargePeriod, sub.startOn, sub.descriptor
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:963:42: Warning: Integer Overflow.
        assert (deposit.lockTime == 0 || deposit.createdOn +  deposit.lockTime
Integer Overflow occurs if:
    suspendedUntil = 0
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:624:27: Warning: Integer Overflow.
        } else if (now <= sub.expireOn
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:640:20: Warning: Integer Overflow.
        } else if (sub.paidUntil
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:646:20: Warning: Integer Overflow.
        } else if (sub.paidUntil
/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:727:17: Warning: Integer Overflow.
        assert (offer.expireOn
Integer Overflow occurs if:
    _startOn = 0
    _expireOn = 1
    bitlocks = 0
    suspendedUntil = 57896044618657994867750659928966319241061082498413720598737189905215105531903
INFO:symExec:/unique_chucks/36/0xa53b9b044bb919db3e06a35d57a06d057f3e0424.sol:798:17: Warning: Callstack Depth Attack Vulnerability.
            if (_to.call.gas(msg.gas-gasReserve)(bytes4(sha3("onSubCanceled(uint256,address)")), subId, msg.sender)
INFO:symExec:	====== Analysis Completed ======