WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:BeerCoin:
INFO:symExec:	============ Results ===========
Exception symExec.TimeoutError: TimeoutError('Timer expired',) in <bound method FuncDeclRef.__del__ of bv> ignored
INFO:symExec:	  EVM Code Coverage: 			 81.3%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:209:9: Warning: Integer Underflow.
        accounts[creditor].beersOwing -= value
Integer Underflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    accounts[creditor].beersOwing = 47890485652059026823698344598447161988085872446144511
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:210:9: Warning: Integer Underflow.
        beersOwing -= value
Integer Underflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    beersOwing = 47890485652059026823698344598447161988085872446144511
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:208:9: Warning: Integer Underflow.
        accounts[debtor].beersOwed -= value
Integer Underflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    accounts[debtor].beersOwed = 47890485652059026823698344598447161988085872446144511
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:284:38: Warning: Integer Underflow.
            var otherkey = self.keys[self.keys.length - 1
Integer Underflow occurs if:
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:233:9: Warning: Integer Underflow.
        accounts[oldCreditor].beersOwing -= value
Integer Underflow occurs if:
    value = 2
    accounts[oldCreditor].beersOwing = 1
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
INFO:symExec:/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:118:12: Warning: Integer Overflow.
        if(accounts[from].allowances
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:233:9: Warning: Integer Overflow.
        accounts[oldCreditor].beersOwing
Integer Overflow occurs if:
    value = 0
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:209:9: Warning: Integer Overflow.
        accounts[creditor].beersOwing
Integer Overflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:283:12: Warning: Integer Overflow.
        if(entry.idx
Integer Overflow occurs if:
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:236:9: Warning: Integer Overflow.
        accounts[newCreditor].beersOwing
Integer Overflow occurs if:
    value = 0
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:248:16: Warning: Integer Overflow.
        return accounts[owner].allowances
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:242:9: Warning: Integer Overflow.
        accounts[msg.sender].allowances
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:135:20: Warning: Integer Overflow.
        if(value > accounts[to].maxCredit
Integer Overflow occurs if:
    accounts[to].exists = 255
    to = 0
    value = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:223:23: Warning: Integer Overflow.
        var owedNew = accounts[newCreditor].debtors
Integer Overflow occurs if:
    value = 0
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:90:16: Warning: Integer Overflow.
        return accounts[owner].debtors
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:110:16: Warning: Integer Overflow.
        return accounts[owner].beersOwed
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:82:9: Warning: Integer Overflow.
        accounts[msg.sender].maxCredit
Integer Overflow occurs if:
    credit = 0
    accounts[msg.sender].exists = 255
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:94:16: Warning: Integer Overflow.
        return accounts[owner].debtors.keys
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:299:16: Warning: Integer Overflow.
        return self.keys
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:208:9: Warning: Integer Overflow.
        accounts[debtor].beersOwed
Integer Overflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:284:28: Warning: Integer Overflow.
            var otherkey = self.keys
Integer Overflow occurs if:
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:199:20: Warning: Integer Overflow.
        var owed = accounts[creditor].debtors
Integer Overflow occurs if:
    value = 0
    accounts[to].maxCredit = 0
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:295:16: Warning: Integer Overflow.
        return self.keys
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:102:16: Warning: Integer Overflow.
        return accounts[owner].beersOwing
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:231:13: Warning: Integer Overflow.
            accounts[oldCreditor].debtors
Integer Overflow occurs if:
    value = 0
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:235:51: Warning: Integer Overflow.
        accounts[newCreditor].debtors.set(debtor, owedNew + value
Integer Overflow occurs if:
    value = 5846006549323611672814739330865132078623730171906
    accounts[newCreditor].maxCredit = 5846006549323611672814739330865132078623730171904
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:219:23: Warning: Integer Overflow.
        var owedOld = accounts[oldCreditor].debtors
Integer Overflow occurs if:
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:69:20: Warning: Integer Overflow.
            return accounts[owner].maxCredit
Integer Overflow occurs if:
    accounts[owner].exists = 255
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:131:13: Warning: Integer Overflow.
            accounts[to].maxCredit
Integer Overflow occurs if:
    accounts[to].exists = 0
    to = 0
    value = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:229:13: Warning: Integer Overflow.
            accounts[oldCreditor].debtors
Integer Overflow occurs if:
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:224:30: Warning: Integer Overflow.
        if(value + owedNew > accounts[newCreditor].maxCredit
Integer Overflow occurs if:
    value = 0
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:203:13: Warning: Integer Overflow.
            accounts[creditor].debtors
Integer Overflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    accounts[to].maxCredit = 0
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:153:12: Warning: Integer Overflow.
        if(accounts[from].allowances
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:205:13: Warning: Integer Overflow.
            accounts[creditor].debtors
Integer Overflow occurs if:
    value = 0
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:184:20: Warning: Integer Overflow.
        if(value > accounts[creditor].maxCredit
Integer Overflow occurs if:
    value = 43365466750922113786578351346988286718692906569682653589372017034032571567924
    accounts[to].maxCredit = 43365466750922113786578351346988286718692906569682653541999613781283277815530
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:267:25: Warning: Integer Overflow.
            entry.idx = self.keys
Integer Overflow occurs if:
    value = 0
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:235:9: Warning: Integer Overflow.
        accounts[newCreditor].debtors
Integer Overflow occurs if:
    value = 0
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:86:16: Warning: Integer Overflow.
        return accounts[owner].debtors
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:135:45: Warning: Integer Overflow.
        if(value > accounts[to].maxCredit + accounts[from].debtors
Integer Overflow occurs if:
    accounts[to].exists = 255
    to = 0
    value = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:224:12: Warning: Integer Overflow.
        if(value + owedNew
Integer Overflow occurs if:
    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:266:12: Warning: Integer Overflow.
        if(entry.idx
Integer Overflow occurs if:
    value = 0
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:284:38: Warning: Integer Overflow.
            var otherkey = self.keys[self.keys
Integer Overflow occurs if:
    accounts[newCreditor].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:166:13: Warning: Integer Overflow.
            accounts[to].maxCredit
Integer Overflow occurs if:
    accounts[to].exists = 0
    debtor = 1461501637330902918203684832716283019655932542975
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:106:16: Warning: Integer Overflow.
        return accounts[owner].debtors
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:135:20: Warning: Integer Overflow.
        if(value > accounts[to].maxCredit + accounts[from].debtors.get(to)
Integer Overflow occurs if:
    accounts[to].maxCredit = 1
    accounts[to].exists = 255
    to = 0
    value = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:119:13: Warning: Integer Overflow.
            accounts[from].allowances
Integer Overflow occurs if:
    value = 47890485652059026823698344598447161988085872446144512
    accounts[to].maxCredit = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    accounts[to].exists = 255
    to = 0
/unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:94:16: Warning: Integer Overflow.
        return accounts[owner].debtors
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/10/0x74c1e4b8cae59269ec1d85d3d4f324396048f4ac.sol:Itmap:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======