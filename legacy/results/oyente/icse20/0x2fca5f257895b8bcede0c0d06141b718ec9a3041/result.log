WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:TrexDexMain:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 53.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:120:5: Warning: Integer Overflow.
    function setTokenTransfers(address[] _tokenAddress, bool[] _depositEnabled, bool[] _withdrawEnabled, uint256[] _depositFee, uint256[] _withdrawFee) public isOwner {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _tokenAddress = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:324:16: Warning: Integer Overflow.
        return sha256(abi.encodePacked(this, _buyTokenAddress, _buyAmount, _sellTokenAddress, _sellAmount, _takeAddress, _baseTokenAddress, _expireBlock, _nonce))
Integer Overflow occurs if:
    deposits[_buyTokenAddress][_userAddress] = 0
    _amount = 0
    _takeAddress = 0
    tokenTrades[_buyTokenAddress][_sellTokenAddress] = 255
    _buyTokenAddress = 0
    _baseTokenAddress = 0
    _sellAmount = 0
    _buyAmount = 0
/unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:203:5: Warning: Integer Overflow.
    function tradeMulti(address[] _buyTokenAddress, uint256[] _buyAmount, address[] _sellTokenAddress, uint256[] _sellAmount, address[] _takeAddress, address[] _baseTokenAddress, uint256[] _expireBlock, uint256[] _nonce, address[] _makeAddress, uint256[] _amount, uint8[] _v, bytes32[] _r, bytes32[] _s) public {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _buyTokenAddress = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:328:68: Warning: Integer Overflow.
        return (orders[_makeAddress][_hash] || ecrecover(keccak256(abi.encodePacked("\x19Ethereum Signed Message:\n32", _hash)
Integer Overflow occurs if:
    deposits[_buyTokenAddress][_userAddress] = 0
    orders[_makeAddress][_hash] = 0
    _amount = 0
    _takeAddress = 0
    tokenTrades[_buyTokenAddress][_sellTokenAddress] = 255
    _buyTokenAddress = 0
    _baseTokenAddress = 0
    _sellAmount = 0
    _buyAmount = 0
/unique_chucks/9/0x2fca5f257895b8bcede0c0d06141b718ec9a3041.sol:133:5: Warning: Integer Overflow.
    function setTokenTrades(address[] _tokenAddress, address[] _baseTokenAddress, bool[] _tradeEnabled, uint256[] _makeFee, uint256[] _takeFee) public isOwner {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    _tokenAddress = 115792089237316195423570985008687907853269984665640564039457584007913129639935
INFO:symExec:	====== Analysis Completed ======