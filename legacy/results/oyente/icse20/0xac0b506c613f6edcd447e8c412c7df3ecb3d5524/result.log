WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:GameConfig:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 91.6%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:207:12: Warning: Integer Overflow.
    return cardInfo[cardId].baseCoinProduction
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:141:16: Warning: Integer Overflow.
        return cardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:276:20: Warning: Integer Overflow.
    defenseValue = battlecardInfo[cardId].defenseValue
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:130:5: Warning: Integer Overflow.
    upgradeInfo[_upgradecardId] = _upgradecard
Integer Overflow occurs if:
    allowed = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:292:15: Warning: Integer Overflow.
    ethCost = upgradeInfo[upgradecardId].ethCost
Integer Overflow occurs if:
    existing = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:176:16: Warning: Integer Overflow.
        return upgradeInfo[cardId].coinCost
Integer Overflow occurs if:
    existing = 0
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:146:98: Warning: Integer Overflow.
        existingCost = (cardInfo[cardId].baseCoinCost * existing) + (existing * (existing - 1) * cardInfo[cardId].coinCostIncreaseHalf
Integer Overflow occurs if:
    amount = 115791205813783806231406193359937536394012070923692126229978523204812483330046
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:158:16: Warning: Integer Overflow.
        return battlecardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    existing = 0
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:247:26: Warning: Integer Overflow.
    baseCoinProduction = cardInfo[cardId].baseCoinProduction
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:294:14: Warning: Integer Overflow.
    cardId = upgradeInfo[upgradecardId].cardId
Integer Overflow occurs if:
    existing = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:258:106: Warning: Integer Overflow.
    return (battlecardInfo[cardId].cardId, getCostForBattleCards(cardId, existing, amount), SafeMath.mul(battlecardInfo[cardId].ethCost
Integer Overflow occurs if:
    amount = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:258:146: Warning: Integer Overflow.
    return (battlecardInfo[cardId].cardId, getCostForBattleCards(cardId, existing, amount), SafeMath.mul(battlecardInfo[cardId].ethCost, amount),battlecardInfo[cardId].unitSellable
Integer Overflow occurs if:
    amount = 0
    battlecardInfo[cardId].ethCost = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:275:19: Warning: Integer Overflow.
    attackValue = battlecardInfo[cardId].attackValue
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:203:25: Warning: Integer Overflow.
    return SafeMath.mul(cardInfo[cardId].ethCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:215:12: Warning: Integer Overflow.
    return battlecardInfo[cardId].defenseValue
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:272:20: Warning: Integer Overflow.
    baseCoinCost = battlecardInfo[cardId].baseCoinCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:253:38: Warning: Integer Overflow.
    return (cardInfo[cardId].cardId, cardInfo[cardId].baseCoinProduction
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:293:20: Warning: Integer Overflow.
    upgradeClass = upgradeInfo[upgradecardId].upgradeClass
Integer Overflow occurs if:
    existing = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:245:28: Warning: Integer Overflow.
    coinCostIncreaseHalf = cardInfo[cardId].coinCostIncreaseHalf
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:246:15: Warning: Integer Overflow.
    ethCost = cardInfo[cardId].ethCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:244:20: Warning: Integer Overflow.
    baseCoinCost = cardInfo[cardId].baseCoinCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:295:20: Warning: Integer Overflow.
    upgradeValue = upgradeInfo[upgradecardId].upgradeValue
Integer Overflow occurs if:
    existing = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:160:66: Warning: Integer Overflow.
        return battlecardInfo[cardId].baseCoinCost + (existing * battlecardInfo[cardId].coinCostIncreaseHalf
Integer Overflow occurs if:
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:168:51: Warning: Integer Overflow.
      uint256 newCost = SafeMath.add(SafeMath.mul(battlecardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    amount = 115679011025170378826477653968640361068257025696240524426137801211030401974270
    existing = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:141:60: Warning: Integer Overflow.
        return cardInfo[cardId].baseCoinCost + (existing * cardInfo[cardId].coinCostIncreaseHalf
Integer Overflow occurs if:
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:211:12: Warning: Integer Overflow.
    return battlecardInfo[cardId].attackValue
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:146:25: Warning: Integer Overflow.
        existingCost = (cardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    amount = 115791205813783806231406193359937536394012070923692126229978523204812483330046
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:198:25: Warning: Integer Overflow.
    return SafeMath.mul(battlecardInfo[cardId].ethCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:189:12: Warning: Integer Overflow.
    return cardInfo[cardId].ethCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:336:17: Warning: Integer Overflow.
    uint256 c = a + b
Integer Overflow occurs if:
    currNumOfBattleCards = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:273:28: Warning: Integer Overflow.
    coinCostIncreaseHalf = battlecardInfo[cardId].coinCostIncreaseHalf
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:165:104: Warning: Integer Overflow.
        existingCost = (battlecardInfo[cardId].baseCoinCost * existing) + (existing * (existing - 1) * battlecardInfo[cardId].coinCostIncreaseHalf
Integer Overflow occurs if:
    amount = 115791205813783806231406193359937536394012070923692126229978523204812483330046
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:274:15: Warning: Integer Overflow.
    ethCost = battlecardInfo[cardId].ethCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:253:165: Warning: Integer Overflow.
    return (cardInfo[cardId].cardId, cardInfo[cardId].baseCoinProduction, getCostForCards(cardId, existing, amount), SafeMath.mul(cardInfo[cardId].ethCost, amount),cardInfo[cardId].unitSellable
Integer Overflow occurs if:
    amount = 0
    cardInfo[cardId].ethCost = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:100:5: Warning: Integer Overflow.
    battlecardInfo[_cardId] = _battlecard
Integer Overflow occurs if:
    allowed = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:149:51: Warning: Integer Overflow.
      uint256 newCost = SafeMath.add(SafeMath.mul(cardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    amount = 115679011025170378826477653968640361068257025696240524426137801211030401974270
    existing = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:279:20: Warning: Integer Overflow.
    unitSellable = battlecardInfo[cardId].unitSellable
Integer Overflow occurs if:
    battlecardInfo[cardId].ethCost = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:165:25: Warning: Integer Overflow.
        existingCost = (battlecardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    amount = 115791205813783806231406193359937536394012070923692126229978523204812483330046
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:277:28: Warning: Integer Overflow.
    coinStealingCapacity = battlecardInfo[cardId].coinStealingCapacity
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:253:131: Warning: Integer Overflow.
    return (cardInfo[cardId].cardId, cardInfo[cardId].baseCoinProduction, getCostForCards(cardId, existing, amount), SafeMath.mul(cardInfo[cardId].ethCost
Integer Overflow occurs if:
    amount = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:115:5: Warning: Integer Overflow.
    cardInfo[_cardId] = _card
Integer Overflow occurs if:
    allowed = 0
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:194:12: Warning: Integer Overflow.
    return battlecardInfo[cardId].ethCost
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:219:12: Warning: Integer Overflow.
    return battlecardInfo[cardId].coinStealingCapacity
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:139:16: Warning: Integer Overflow.
        return cardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    existing = 0
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:178:16: Warning: Integer Overflow.
        return upgradeInfo[cardId].coinCost
Integer Overflow occurs if:
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:160:16: Warning: Integer Overflow.
        return battlecardInfo[cardId].baseCoinCost
Integer Overflow occurs if:
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:178:59: Warning: Integer Overflow.
        return upgradeInfo[cardId].coinCost + (existing * upgradeInfo[cardId].increase
Integer Overflow occurs if:
    existing = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 1
/unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:249:20: Warning: Integer Overflow.
    unitSellable = cardInfo[cardId].unitSellable
Integer Overflow occurs if:
    cardInfo[cardId].ethCost = 0
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/42/0xac0b506c613f6edcd447e8c412c7df3ecb3d5524.sol:SafeMath:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 100.0%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======