WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
encoding/hex: invalid byte: U+005F '_'
INFO:root:contract /unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:BTTSLib:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 42.4%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:354:5: Warning: Integer Overflow.
    function approveAndCall(Data storage self, address spender, uint tokens, bytes data) public returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    data = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:409:5: Warning: Integer Overflow.
    function signedApprove(Data storage self, address tokenOwner, address spender, uint tokens, uint fee, uint nonce, bytes sig, address feeAccount) public returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:222:9: Warning: Integer Overflow.
        self.minter
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.mintable = 372682917519380244141939632342652170012262798458880
    self.owner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:248:13: Warning: Integer Overflow.
            self.minter
Integer Overflow occurs if:
    self.mintable = 374144419156711147060143162432863542359384368611327
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:441:5: Warning: Integer Overflow.
    function signedTransferFrom(Data storage self, address spender, address from, address to, uint tokens, uint fee, uint nonce, bytes sig, address feeAccount) public returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:206:9: Warning: Integer Overflow.
        self.newOwner
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.newOwner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:204:42: Warning: Integer Overflow.
        OwnershipTransferred(self.owner, self.newOwner
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.newOwner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:461:5: Warning: Integer Overflow.
    function signedApproveAndCallCheck(Data storage self, address tokenOwner, address spender, uint tokens, bytes data, uint fee, uint nonce, bytes sig, address feeAccount) public view returns (BTTSTokenInterface.CheckResult result) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    data = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:399:5: Warning: Integer Overflow.
    function signedApproveCheck(Data storage self, address tokenOwner, address spender, uint tokens, uint fee, uint nonce, bytes sig, address feeAccount) public view returns (BTTSTokenInterface.CheckResult result) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:368:5: Warning: Integer Overflow.
    function signedTransferCheck(Data storage self, address tokenOwner, address to, uint tokens, uint fee, uint nonce, bytes sig, address feeAccount) public view returns (BTTSTokenInterface.CheckResult result) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:255:9: Warning: Integer Overflow.
        self.transferable
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.transferable = 0
    self.owner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:341:9: Warning: Integer Overflow.
        self.allowed
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.accountLocked[msg.sender] = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:335:9: Warning: Integer Overflow.
        self.balances
Integer Overflow occurs if:
    tokens = 0
    self.balances[to] = 0
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.balances[msg.sender] = 0
    self.accountLocked[msg.sender] = 0
    self.transferable = 95406826884961342500336545879718955523139276405473280
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:426:5: Warning: Integer Overflow.
    function signedTransferFromCheck(Data storage self, address spender, address from, address to, uint tokens, uint fee, uint nonce, bytes sig, address feeAccount) public view returns (BTTSTokenInterface.CheckResult result) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:247:27: Warning: Integer Overflow.
            MinterUpdated(self.minter
Integer Overflow occurs if:
    self.mintable = 374144419156711147060143162432863542359384368611327
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:158:5: Warning: Integer Overflow.
    function init(Data storage self, address owner, string symbol, string name, uint8 decimals, uint initialSupply, bool mintable, bool transferable) public {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    symbol = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:381:5: Warning: Integer Overflow.
    function signedTransfer(Data storage self, address tokenOwner, address to, uint tokens, uint fee, uint nonce, bytes sig, address feeAccount) public returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:458:5: Warning: Integer Overflow.
    function signedApproveAndCallHash(Data storage /*self*/, address tokenOwner, address spender, uint tokens, bytes data, uint fee, uint nonce) public view returns (bytes32 hash) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    data = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:200:9: Warning: Integer Overflow.
        self.newOwner
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.owner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:245:9: Warning: Integer Overflow.
        self.mintable
Integer Overflow occurs if:
    self.mintable = 372682917519380244141939632342652170012262798458880
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:205:22: Warning: Integer Overflow.
        self.owner = self.newOwner
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.newOwner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:221:23: Warning: Integer Overflow.
        MinterUpdated(self.minter
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.mintable = 372682917519380244141939632342652170012262798458880
    self.owner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:277:5: Warning: Integer Overflow.
    function ecrecoverFromSig(bytes32 hash, bytes sig) public pure returns (address recoveredAddress) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    sig = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:239:9: Warning: Integer Overflow.
        self.accountLocked
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.accountLocked[tokenOwner] = 255
    self.owner = 0
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:246:13: Warning: Integer Overflow.
        if (self.minter
Integer Overflow occurs if:
    self.mintable = 372682917519380244141939632342652170012262798458880
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:471:5: Warning: Integer Overflow.
    function signedApproveAndCall(Data storage self, address tokenOwner, address spender, uint tokens, bytes data, uint fee, uint nonce, bytes sig, address feeAccount) public returns (bool success) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    data = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:212:9: Warning: Integer Overflow.
        self.newOwner
Integer Overflow occurs if:
    self = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    self.owner = 0
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/6/0x31854d7017082a678d9c03a27990477d7e6ae2e7.sol:BTTSToken:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM code coverage: 	 0/0
INFO:symExec:	  Callstack bug: 	 False
INFO:symExec:	  Money concurrency bug: False
INFO:symExec:	  Time dependency bug: 	 False
INFO:symExec:	  Reentrancy bug: 	 False
INFO:symExec:	====== Analysis Completed ======