WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:Agricoin:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 19.3%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 True
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:326:9: Warning: Integer Overflow.
        balances[user].lastRedemptionPayoutNumber
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 105312291840962937603123112818913375778464529820229359753800712460
    amountOfDividendsPayouts = 105312291669323437026090341258315731134376120527572540690121359872
    balances[user].lastRedemptionPayoutNumber = 0
    amountOfRedemptionPayouts = 0
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:320:23: Warning: Integer Overflow.
        for (uint j = balances[user].lastRedemptionPayoutNumber
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 105312291840962937603123112818913375778464529820229359753800712460
    amountOfDividendsPayouts = 105312291669323437026090341258315731134376120527572540690121359872
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:311:31: Warning: Integer Overflow.
            addedDividend += (balances[user].balance
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 1329227995784915872903807060280344576
    balances[user].lastDividensPayoutNumber = 57896044618658097711785492504343953926640309244803421683220407232197688295424
    amountOfDividendsPayouts = 5316911983139663491615228241123475456
    balances[user].lastRedemptionPayoutNumber = 0
    amountOfRedemptionPayouts = 0
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:325:9: Warning: Integer Overflow.
        balances[user].posibleRedemption
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 105312291840962937603123112818913375778464529820229359753800712460
    amountOfDividendsPayouts = 105312291669323437026090341258315731134376120527572540690121359872
    balances[user].lastRedemptionPayoutNumber = 0
    amountOfRedemptionPayouts = 0
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:314:9: Warning: Integer Overflow.
        balances[user].posibleDividends
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 105312291840962937603123112818913375778464529820229359753800712460
    amountOfDividendsPayouts = 105312291669323437026090341258315731134376120527572540690121359872
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:300:13: Warning: Integer Overflow.
        if (balances[user].lastDividensPayoutNumber
Integer Overflow occurs if:
    isActive = 255
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:309:23: Warning: Integer Overflow.
        for (uint i = balances[user].lastDividensPayoutNumber
Integer Overflow occurs if:
    isActive = 251
    amountOfDividendsPayouts = 0
    balances[user].lastDividensPayoutNumber = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:311:85: Warning: Integer Overflow.
            addedDividend += (balances[user].balance * dividendPayouts[i].amount) / dividendPayouts[i].momentTotalSupply
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 1329227995784915872903807060280344576
    balances[user].lastDividensPayoutNumber = 57896044618658097711785492504343953926640309244803421683220407232197688295424
    amountOfDividendsPayouts = 5316911983139663491615228241123475456
    balances[user].lastRedemptionPayoutNumber = 0
    amountOfRedemptionPayouts = 0
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:322:33: Warning: Integer Overflow.
            addedRedemption += (balances[user].balance
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 5846006549326270128806309162610939692744290861056
    balances[user].lastDividensPayoutNumber = 57896044618658097711785492504343953926634992332820282019728792003956564819968
    amountOfDividendsPayouts = 0
    amountOfRedemptionPayouts = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    balances[user].lastRedemptionPayoutNumber = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    balances[user].lastRedemptionPayoutNumber = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:322:89: Warning: Integer Overflow.
            addedRedemption += (balances[user].balance * redemptionPayouts[j].amount) / redemptionPayouts[j].momentTotalSupply
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 5846006549326270128806309162610939692744290861056
    balances[user].lastDividensPayoutNumber = 57896044618658097711785492504343953926634992332820282019728792003956564819968
    amountOfDividendsPayouts = 0
    amountOfRedemptionPayouts = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    balances[user].lastRedemptionPayoutNumber = 115792089237316195423570985008687907853269984665640564039457584007913129639934
    balances[user].lastRedemptionPayoutNumber = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:301:13: Warning: Integer Overflow.
            balances[user].lastRedemptionPayoutNumber
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 105312291840962937603123112818913375778464529820229359753800712460
    amountOfDividendsPayouts = 105312291669323437026090341258315731134376120527572540690121359872
    balances[user].lastRedemptionPayoutNumber = 0
    amountOfRedemptionPayouts = 0
    balances[user].lastDividensPayoutNumber = 105312291669323437026090341258315731134376120527572540690121359872
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:315:9: Warning: Integer Overflow.
        balances[user].lastDividensPayoutNumber
Integer Overflow occurs if:
    isActive = 128
    balances[user].lastDividensPayoutNumber = 105312291840962937603123112818913375778464529820229359753800712460
    amountOfDividendsPayouts = 105312291669323437026090341258315731134376120527572540690121359872
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:133:16: Warning: Integer Overflow.
        return balances[owner].posibleDividends
Integer Overflow occurs if:
    payoutPeriodEnd = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    payoutPeriodStart = 115792089237316195423570985008687907853269984665640564039457584007913129639935
INFO:symExec:/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:334:13: Warning: Timestamp Dependency.
        if (payoutPeriodStart >= now && now <= payoutPeriodEnd
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:334:9: Warning: Timestamp Dependency.
        if (payoutPeriodStart >= now && now <= payoutPeriodEnd)// Check payout period.
        ^
Spanning multiple lines.
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:Ico:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 49.4%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): True
INFO:symExec:	  Timestamp Dependency: 		 True
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:Flow1
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:498:13: Warning: Transaction-Ordering Dependency.
            msg.sender.transfer(amount + msg.value)
Flow2
/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:489:13: Warning: Transaction-Ordering Dependency.
            msg.sender.transfer(amount + msg.value)
INFO:symExec:/unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:635:9: Warning: Timestamp Dependency.
        require(now >= endPreIcoDate)
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /unique_chucks/28/0xf331f7887d31714dce936d9a9846e6afbe82e0a0.sol:Owned:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.4%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======