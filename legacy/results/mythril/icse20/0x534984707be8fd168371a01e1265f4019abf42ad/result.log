{"error": null, "issues": [{"address": 6932, "code": " * @t", "debug": "calldata_Wolf_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Wolf_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Wolf: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x534984707be8fd168371a01e1265f4019abf42ad.sol", "function": "mint(address,uint256)", "lineno": 60, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6945, "code": "nable\n * @dev ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x1\ncalldata_Wolf_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Wolf_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Wolf: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0x534984707be8fd168371a01e1265f4019abf42ad.sol", "function": "mint(address,uint256)", "lineno": 60, "title": "Exception state", "type": "Informational"}], "success": true}