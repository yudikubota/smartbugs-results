{"error": null, "issues": [{"address": 1755, "code": "\n\n/**", "debug": "storage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffa5e7e36757ff0\ncallvalue: 0xffb7d6d3dbd7db7\n10_EXP_storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize__Crowdsale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x1d5ad663c111d34e95b5d257c78b87d649c61caa.sol", "function": "fallback", "lineno": 79, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1768, "code": "tle Crowdsale\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xfffffffffffffffffffffffffffffffffffffffffffffffffb6a4bc229846635\ncallvalue: 0xf6183ce7f10f787\n10_EXP_storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize__Crowdsale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x1d5ad663c111d34e95b5d257c78b87d649c61caa.sol", "function": "fallback", "lineno": 82, "title": "Exception state", "type": "Informational"}, {"address": 2001, "code": "o cas", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x3af7eacc70000\ncalldata__Crowdsale_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata__Crowdsale_0: 0xec8ac4d800000000000000000000000000000000000000000000000000000000\ncalldatasize__Crowdsale: 0x4\n10_EXP_storage_2: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x1d5ad663c111d34e95b5d257c78b87d649c61caa.sol", "function": "buyTokens(address)", "lineno": 57, "title": "Exception state", "type": "Informational"}, {"address": 2300, "code": " {\n        if (weiRaised >= fundingGoal) {\n          ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0x1d5ad663c111d34e95b5d257c78b87d649c61caa.sol", "function": "fallback", "lineno": 310, "title": "Message call to external contract", "type": "Informational"}], "success": true}