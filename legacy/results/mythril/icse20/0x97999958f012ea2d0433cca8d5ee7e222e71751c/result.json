{
  "contract": "0x97999958f012ea2d0433cca8d5ee7e222e71751c",
  "tool": "mythril",
  "start": 1563563318.79909,
  "end": 1563563351.2773058,
  "duration": 32.47821593284607,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 678,
        "code": " public \n    {\n        for (uint i = 0; i < investorList.length; i++)\n        {\n            approvedInvestorListWithDate[investorList[i]] = 0;\n            delete(approvedInvestorListWithDate[investorList[i]]);\n        }\n    }\n\n    function setLockFund(address newInvestor, uint releaseTime) onlyOwne",
        "debug": "calldata_TosToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TosToken_0: 0x1a1dca0700000000000000000000000000000000000000000000000000000000\ncalldatasize_TosToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setLockFunds(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x97999958f012ea2d0433cca8d5ee7e222e71751c.sol",
        "function": "setLockFunds(address[],uint256)",
        "lineno": 366,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1554,
        "code": " \n    {\n        require(releaseTime > getTime());\n        approvedInvestorListWithDate[newInvestor] = releaseTime;\n    }\n\n\n    function removeLockFund(address investor) onlyOwner public \n    {\n        approvedInvestorListWithDate[investor] = 0;\n        delete(approvedInvestorListWithDate[i",
        "debug": "calldata_TosToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TosToken_0: 0x7e60a4bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_TosToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeLockFunds(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x97999958f012ea2d0433cca8d5ee7e222e71751c.sol",
        "function": "removeLockFunds(address[])",
        "lineno": 375,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7687,
        "code": "\n\n  function a",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TosToken_4: 0x1\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TosToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TosToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x97999958f012ea2d0433cca8d5ee7e222e71751c.sol",
        "function": "burn(uint256)",
        "lineno": 40,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}