{"error": null, "issues": [{"address": 1461, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x7da68f500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "stop()", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 1516, "code": "lic returns (bool", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\ncalldata_Token_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "approve(address,uint256)", "lineno": 73, "title": "Exception state", "type": "Informational"}, {"address": 1891, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x13af403500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "_function_0x13af4035", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 2193, "code": "lic returns (bool", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "transferFrom(address,address,uint256)", "lineno": 73, "title": "Exception state", "type": "Informational"}, {"address": 3125, "code": "lic returns (bool", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\ncalldata_Token_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "burn(uint256)", "lineno": 73, "title": "Exception state", "type": "Informational"}, {"address": 3214, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "burn(uint256)", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 3740, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xa0712d6800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "mint(uint256)", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 3843, "code": "lic returns (bool", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xff00\ncalldata_Token_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "transfer(address,uint256)", "lineno": 73, "title": "Exception state", "type": "Informational"}, {"address": 4440, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xb753a98c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "push(address,uint256)", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 4679, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xbe9a655500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "start()", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 4932, "code": "DO need double check the au", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xe724529c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "freezeAccount(address,bool)", "lineno": 52, "title": "Exception state", "type": "Informational"}, {"address": 5220, "code": "c>=a ", "debug": "calldata_Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xb753a98c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `push(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xe63aa7a19529a24884367196485270d26ff00687.sol", "function": "push(address,uint256)", "lineno": 27, "title": "Integer Overflow ", "type": "Warning"}], "success": true}