{"error": null, "issues": [{"address": 6731, "code": "t should not own Toke", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "_function_0x17ffc320", "lineno": 178, "title": "Message call to external contract", "type": "Warning"}, {"address": 6731, "code": "t should not own Toke", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 15600\n", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "_function_0x17ffc320", "lineno": 178, "title": "Multiple Calls", "type": "Information"}, {"address": 7109, "code": "racts/StandardDelegate.sol\n\nco", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "totalSupply()", "lineno": 719, "title": "Message call to external contract", "type": "Informational"}, {"address": 7109, "code": "racts/StandardDelegate.sol\n\nco", "debug": "", "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "totalSupply()", "lineno": 719, "title": "Transaction order dependence", "type": "Warning"}, {"address": 8397, "code": "openzeppelin-solidity/contracts/owner", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "reclaimContract(address)", "lineno": 61, "title": "Message call to external contract", "type": "Warning"}, {"address": 14433, "code": "   if (delegate == address(0)) {\n          ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "delegateAllowance(address,address)", "lineno": 711, "title": "Message call to external contract", "type": "Informational"}, {"address": 14433, "code": "   if (delegate == address(0)) {\n          ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function delegateAllowance(address,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "delegateAllowance(address,address)", "lineno": 711, "title": "Transaction order dependence", "type": "Warning"}, {"address": 15369, "code": "ress(0)) {\n            return super.increaseApproval", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "approve(address,uint256)", "lineno": 703, "title": "Message call to external contract", "type": "Informational"}, {"address": 15369, "code": "ress(0)) {\n            return super.increaseApproval", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "approve(address,uint256)", "lineno": 703, "title": "Transaction order dependence", "type": "Warning"}, {"address": 15600, "code": "t(token.transferFrom(from", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "_function_0x17ffc320", "lineno": 146, "title": "Message call to external contract", "type": "Warning"}, {"address": 16089, "code": "\n        if (delegate == address(0)) {\n            return ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "transferFrom(address,address,uint256)", "lineno": 686, "title": "Message call to external contract", "type": "Informational"}, {"address": 16089, "code": "\n        if (delegate == address(0)) {\n            return ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "transferFrom(address,address,uint256)", "lineno": 686, "title": "Transaction order dependence", "type": "Warning"}, {"address": 16407, "code": " view returns (uint256) {\n        return allowances.all", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "delegateApprove(address,uint256,address)", "lineno": 516, "title": "Message call to external contract", "type": "Informational"}, {"address": 18151, "code": "unt(account, oldValue);\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "transferFrom(address,address,uint256)", "lineno": 873, "title": "Message call to external contract", "type": "Informational"}, {"address": 18151, "code": "unt(account, oldValue);\n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "transferFrom(address,address,uint256)", "lineno": 873, "title": "Transaction order dependence", "type": "Warning"}, {"address": 22556, "code": "/\n    function increaseApproval(address ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/7/0x3dc0501c32bee0cc1e629d590302a4b909797474.sol", "function": "delegateAllowance(address,address)", "lineno": 529, "title": "Message call to external contract", "type": "Informational"}], "success": true}