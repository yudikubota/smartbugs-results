{"error": null, "issues": [{"address": 100, "code": "   //    ", "debug": "", "description": "Function fallback retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/37/0x59bf73063bb645f3df40d9b05a117be6344e1eda.sol", "function": "fallback", "lineno": 393, "title": "Use of tx.origin", "type": "Warning"}, {"address": 428, "code": "ghtSum = weightSum.", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/37/0x59bf73063bb645f3df40d9b05a117be6344e1eda.sol", "function": "_function_0xad7fadc5", "lineno": 339, "title": "Message call to external contract", "type": "Warning"}, {"address": 428, "code": "ghtSum = weightSum.", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2322\nCall at address: 675\n", "filename": "/unique_chucks/37/0x59bf73063bb645f3df40d9b05a117be6344e1eda.sol", "function": "_function_0xad7fadc5", "lineno": 339, "title": "Multiple Calls", "type": "Information"}, {"address": 675, "code": "int256 fitMint", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x59bf73063bb645f3df40d9b05a117be6344e1eda.sol", "function": "_function_0xad7fadc5", "lineno": 342, "title": "Message call to external contract", "type": "Informational"}, {"address": 675, "code": "int256 fitMint", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2322\n", "filename": "/unique_chucks/37/0x59bf73063bb645f3df40d9b05a117be6344e1eda.sol", "function": "_function_0xad7fadc5", "lineno": 342, "title": "Multiple Calls", "type": "Information"}, {"address": 2322, "code": "     require(token.transfer(msg.sender,", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x59bf73063bb645f3df40d9b05a117be6344e1eda.sol", "function": "_function_0xad7fadc5", "lineno": 370, "title": "Message call to external contract", "type": "Informational"}], "success": true}