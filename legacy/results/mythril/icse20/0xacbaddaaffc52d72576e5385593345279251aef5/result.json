{
  "contract": "0xacbaddaaffc52d72576e5385593345279251aef5",
  "tool": "mythril",
  "start": 1563614292.7280428,
  "end": 1563614965.3310304,
  "duration": 672.6029875278473,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 418,
        "code": ";\n\n/**\n\n  EN:\n  Mu",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\ncallvalue: 0x163c5f87fee0000\ngas: 0x3d090\nblock_number: 0x65723c\ncalldatasize_SmartEthRocket: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 707,
        "code": "x = currentReceiverIndex + i;  //get",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\ncallvalue: 0x163c5f000000000\nstorage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x3d090\nblock_number: 0x65723c\ncalldatasize_SmartEthRocket: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 200,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 731,
        "code": "x = currentReceiverIndex + i;  //get the index of the cur",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_7: 0x0\ncallvalue: 0x7bbfcfdc573a649\nstorage_1 +\n62514009886607029107290561805838585334079798074568712924583230797734656856472 +\n3*\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffc27d000c36620cd\nstorage_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ngas: 0x3d090\nblock_number: 0x65723c\ncalldatasize_SmartEthRocket: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 200,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 748,
        "code": "   Deposit storage dep = q",
        "debug": "storage_7: 0xfffffffffffffffffffffffffffffffffffffffffffffffff545c6d0081ede91\ncallvalue: 0x136dcc874f5efeb9\ngas: 0x3d090\nblock_number: 0x65723c\ncalldatasize_SmartEthRocket: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 202,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 887,
        "code": "ayout;\n            }\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2772\n",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 208,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1215,
        "code": "im\n                depositNu",
        "debug": "",
        "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.number\n- block.number\n",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 218,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1215,
        "code": "im\n                depositNu",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 218,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2317,
        "code": "he index o",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_7: 0x88020810000000\ncallvalue: 0x17bc5f877710000\nstorage_6: 0x1\nstorage_9: 0x1158e460913d00000\ngas: 0x3d090\nblock_number: 0x65723c\ncalldatasize_SmartEthRocket: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 236,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2479,
        "code": "2 ether;\n        } else if (to",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 250,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 2772,
        "code": "her) {\n            return",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "fallback",
        "lineno": 264,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 3142,
        "code": "   if (amountForSuppor",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SmartEthRocket_4: 0x0\nstorage_4: 0x0\ncalldata_SmartEthRocket_0: 0xddf0b00900000000000000000000000000000000000000000000000000000000\ncalldatasize_SmartEthRocket: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xacbaddaaffc52d72576e5385593345279251aef5.sol",
        "function": "_function_0xddf0b009",
        "lineno": 167,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}