{"error": null, "issues": [{"address": 301, "code": "ount;\n        \n        uint pri", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8dee3a000000000000db6f4d0251640001e76800000000000000000000000000\ncallvalue: 0xf211de00000000000053400f06f36000582048000000000000000000000001ff\nstorage_11: 0x0\ncalldata_token_0: 0x2400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 317, "code": "1;\n        if (startDa", "debug": "storage_2: 0x8dee3a000000000000db6f4d0251640001e76800000000000000000000000000\ncallvalue: 0xf211de00000000000053400f06f36000582048000000000000000000000001ff\nstorage_11: 0x0\ncalldata_token_0: 0x2400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 63, "title": "Integer Overflow ", "type": "Warning"}, {"address": 338, "code": " else if (startDat", "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84580\nstorage_11: 0x0\ncalldata_token_0: 0x400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 66, "title": "Integer Overflow ", "type": "Warning"}, {"address": 364, "code": "else if (startDate ", "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc300\ntimestamp: 0x8fd7f\nstorage_11: 0x0\ncalldata_token_0: 0x400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 390, "code": "\n        tokenRewar", "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd01\ntimestamp: 0x0\nstorage_11: 0x0\ncalldata_token_0: 0x400000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 70, "title": "Integer Overflow ", "type": "Warning"}, {"address": 487, "code": ", true);\n     ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6c57f\nstorage_11: 0x0\ncalldata_token_0: 0x1cb3aa000000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_7: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 72, "title": "Exception state", "type": "Informational"}, {"address": 626, "code": "t FundTransfer(msg.sender, amount, true);\n        \n    }\n\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "fallback", "lineno": 72, "title": "Message call to external contract", "type": "Informational"}, {"address": 2020, "code": "     } else {\n         ", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "safeWithdrawal()", "lineno": 106, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2020, "code": "     } else {\n         ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2418\nCall at address: 2418\n", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "safeWithdrawal()", "lineno": 106, "title": "Multiple Calls", "type": "Information"}, {"address": 2418, "code": "  } else {\n                //I", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "safeWithdrawal()", "lineno": 115, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2418, "code": "  } else {\n                //I", "debug": "", "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/26/0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536.sol", "function": "safeWithdrawal()", "lineno": 115, "title": "Transaction order dependence", "type": "Warning"}], "success": true}