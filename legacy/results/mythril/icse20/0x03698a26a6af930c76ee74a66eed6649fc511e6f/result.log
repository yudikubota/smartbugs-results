{"error": null, "issues": [{"address": 589, "code": "ontroller {\n        if (_token == 0x0) {\n            controller.trans", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "fallback", "lineno": 732, "title": "Message call to external contract", "type": "Informational"}, {"address": 589, "code": "ontroller {\n        if (_token == 0x0) {\n            controller.trans", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "fallback", "lineno": 732, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1611, "code": "ler(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount\n    ) onlyController returns (bool) {\n        uint curTotalSupply = getValueAt(totalSupplyHistory, getBlockNumber());\n        if (curTotalSupply + _amount < curTotalSupply) throw; // Check for overflow\n", "debug": "calldata_TokenController_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenController_0: 0x6638c08700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createCloneToken(string,uint8,string,uint256,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 582, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3969, "code": "kens\n    /// @return Amount of remaining tokens of _owner that _spen", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "approve(address,uint256)", "lineno": 454, "title": "Message call to external contract", "type": "Informational"}, {"address": 3969, "code": "kens\n    /// @return Amount of remaining tokens of _owner that _spen", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "approve(address,uint256)", "lineno": 454, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4165, "code": "lowance(address _owner, address _spende", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "approve(address,uint256)", "lineno": 457, "title": "State change after external call", "type": "Warning"}, {"address": 5436, "code": "unt of tokens at `_blockNumber`\n    function totalSupplyAt(uint _blockN", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "balanceOfAt(address,uint256)", "lineno": 529, "title": "Message call to external contract", "type": "Informational"}, {"address": 6214, "code": "er`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "createCloneToken(string,uint8,string,uint256,bool)", "lineno": 593, "title": "Message call to external contract", "type": "Informational"}, {"address": 6694, "code": "er = msg.sender;}\n\n  /// @no", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenController_0: 0x80b022e800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "changeBurner(address)", "lineno": 101, "title": "Exception state", "type": "Informational"}, {"address": 7582, "code": " /// @param _cloneDecimalUnits Number of decimals of the smallest", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/39/0x03698a26a6af930c76ee74a66eed6649fc511e6f.sol", "function": "totalSupply()", "lineno": 558, "title": "Message call to external contract", "type": "Informational"}], "success": true}