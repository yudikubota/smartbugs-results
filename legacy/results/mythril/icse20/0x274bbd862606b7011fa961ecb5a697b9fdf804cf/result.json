{
  "contract": "0x274bbd862606b7011fa961ecb5a697b9fdf804cf",
  "tool": "mythril",
  "start": 1563810836.9435225,
  "end": 1563811024.6209955,
  "duration": 187.6774730682373,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2959,
        "code": "ERC20(originalToken).transfer(msg.sender, ERC",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 259,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2959,
        "code": "ERC20(originalToken).transfer(msg.sender, ERC",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4022\nCall at address: 3816\nCall at address: 3529\nCall at address: 3323\n",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 259,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3323,
        "code": "nction withdrawDifferentToken(address _differ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 264,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3323,
        "code": "nction withdrawDifferentToken(address _differ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3529\n",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 264,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3529,
        "code": "\n        }\n        return true;\n    }\n\n    function withdrawDifferentToken(address _differentToken, bool _erc",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 259,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3816,
        "code": "lToken);\n        require(ERC20(_differentToke",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 265,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3816,
        "code": "lToken);\n        require(ERC20(_differentToke",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4022\n",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 265,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4022,
        "code": "        require(_differentToken != originalToken);\n        require(ERC20(_differentToken).balanceOf(addres",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 265,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4901,
        "code": " (bool success) {\n        require(ERC20(originalToke",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdraw(uint256,uint8,bytes32,bytes32,uint256)",
        "lineno": 254,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5127,
        "code": "ly_) > 0);\n        if (erc20old) {\n            ER",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "withdraw(uint256,uint8,bytes32,bytes32,uint256)",
        "lineno": 255,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5556,
        "code": "ansfer(_from, _to, _value);\n    }\n\n    function allowance(address _owner, ad",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffff00\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_4: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0x0\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 285,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5781,
        "code": " {\n          ",
        "debug": "timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0x0\ncalldata_WrapperLock_32 + 36: 0x100000000000000000000000\nstorage_4: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_4: 0xff00\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 289,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6690,
        "code": "er, address _wrapper, uint _validTill) public constant returns(bytes32) {\n        return keccak256(_sender, _wrapper, _validTill);\n   ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "isValidSignature(bytes32,uint8,bytes32,bytes32)",
        "lineno": 321,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 10110,
        "code": " on overflow.\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_4: 0x7ffffffe008000000000400000000004000001080000400600b048018000ff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0x7ffffffffffffffffffffffffffffff7fffffffffffffffbffffffffffff00ff\ncalldata_WrapperLock_32 + 36: 0x8000000000000000000000000000000000000000000000000000000000040001\ntimestamp: 0xfffffffffffffffffffffffffffffff7fffffffffffffffc0000000000030100\nstorage_4: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 10128,
        "code": "c ver",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0xdf181c2c322064ba041103fef5f777bb796ecdf5d5fdbedcdf6f5c81cebf00ff\ncalldata_WrapperLock_32 + 36: 0x54d80208307504ba75535fe005f787a27648898615e1b05a806e583170c07fdd\nstorage_4: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_4: 0xff00\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 95,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10141,
        "code": " StandardToken",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0xffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffff00ff\ncalldata_WrapperLock_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\nstorage_3: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_4: 0xff00\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x274bbd862606b7011fa961ecb5a697b9fdf804cf.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}