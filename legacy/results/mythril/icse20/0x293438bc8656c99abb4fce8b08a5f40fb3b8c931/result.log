{"error": null, "issues": [{"address": 4821, "code": "        totalVineCapacity[adr] = SafeM", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "setLandProductionMultiplier(address)", "lineno": 163, "title": "Message call to external contract", "type": "Informational"}, {"address": 4821, "code": "        totalVineCapacity[adr] = SafeM", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5333\nCall at address: 5075\n", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "setLandProductionMultiplier(address)", "lineno": 163, "title": "Multiple Calls", "type": "Information"}, {"address": 5075, "code": ",VINE_CAPACITY_PER_LAND);\n    }\n\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "setLandProductionMultiplier(address)", "lineno": 163, "title": "Message call to external contract", "type": "Informational"}, {"address": 5075, "code": ",VINE_CAPACITY_PER_LAND);\n    }\n\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5333\n", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "setLandProductionMultiplier(address)", "lineno": 163, "title": "Multiple Calls", "type": "Information"}, {"address": 5333, "code": "dProductionMultiplierCCUser(bytes32 ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "setLandProductionMultiplier(address)", "lineno": 166, "title": "Message call to external contract", "type": "Informational"}, {"address": 10295, "code": "cally throws when ", "debug": "The exception is triggered under the following conditions:\n\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x220000000000000000000000000000000000000000000000000000000000080\ncalldata_Vineyard_0: 0x3632803f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vineyard: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "calculateGrapeSell(uint256)", "lineno": 239, "title": "Exception state", "type": "Informational"}, {"address": 10320, "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x4000000000000000000000000000000000000000000000000000000000000000\ntimestamp: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Vineyard_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xff00\ncalldata_Vineyard_0: 0xe5c011e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vineyard: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x293438bc8656c99abb4fce8b08a5f40fb3b8c931.sol", "function": "harvest(address)", "lineno": 261, "title": "Exception state", "type": "Informational"}], "success": true}