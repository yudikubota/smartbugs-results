{"error": null, "issues": [{"address": 838, "code": "eShouldRest;\n    \n    require(canWithdraw", "debug": "storage_7290387335634266486249037663595860854047133815481999773725367799777733655939: 0x7e007f694b54f7f33beee8ce6fb0bac712d42e08c75c039921e6fd0fcef8b903\ntimestamp: 0x2000000000000000000000000005ed70c88\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_TokenSafe_0: 0xa69df4b500000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSafe: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `unlock()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xaf31604f0a88f7fcebc7d4cf4dd14653f4a6773c.sol", "function": "unlock()", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1084, "code": "ert();\n    }\n    \n    //success\n    balance = balance - canWithdrawAmoun", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/42/0xaf31604f0a88f7fcebc7d4cf4dd14653f4a6773c.sol", "function": "unlock()", "lineno": 106, "title": "Message call to external contract", "type": "Informational"}, {"address": 1161, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/42/0xaf31604f0a88f7fcebc7d4cf4dd14653f4a6773c.sol", "function": "unlock()", "lineno": 114, "title": "State change after external call", "type": "Warning"}], "success": true}