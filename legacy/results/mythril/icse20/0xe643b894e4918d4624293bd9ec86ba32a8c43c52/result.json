{
  "contract": "0xe643b894e4918d4624293bd9ec86ba32a8c43c52",
  "tool": "mythril",
  "start": 1563618630.0625694,
  "end": 1563618697.658296,
  "duration": 67.59572672843933,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 415,
        "code": "     requir",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/22/0xe643b894e4918d4624293bd9ec86ba32a8c43c52.sol",
        "function": "fallback",
        "lineno": 111,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 477,
        "code": "   MIRAv",
        "debug": "retval_415: 0x11eb851eb851eb851eb851eb851eb851eb851eb851eb851eb851eb851eb851ec\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Transaction_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Transaction: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/22/0xe643b894e4918d4624293bd9ec86ba32a8c43c52.sol",
        "function": "fallback",
        "lineno": 113,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 503,
        "code": "000).div(price);            ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/22/0xe643b894e4918d4624293bd9ec86ba32a8c43c52.sol",
        "function": "fallback",
        "lineno": 113,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 570,
        "code": "s);      // + bonus\n        MIRAv",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/22/0xe643b894e4918d4624293bd9ec86ba32a8c43c52.sol",
        "function": "fallback",
        "lineno": 114,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1720,
        "code": "// as",
        "debug": "The exception is triggered under the following conditions:\n\nretval_415: 0x8000000000000000000000000000000000000000000000000000000000000000\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Transaction_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_Transaction: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/22/0xe643b894e4918d4624293bd9ec86ba32a8c43c52.sol",
        "function": "fallback",
        "lineno": 13,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2225,
        "code": "return address(this);  }\n\n}\n\n\n\n// ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/22/0xe643b894e4918d4624293bd9ec86ba32a8c43c52.sol",
        "function": "getMIRABALANCE()",
        "lineno": 125,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}