{"error": null, "issues": [{"address": 412, "code": "sg.sender][i])", "debug": "storage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EthFund_0: 0xc00000000000000000000000000000000000000000000000000000000\ncalldatasize_EthFund: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 24, "title": "Integer Overflow ", "type": "Warning"}, {"address": 488, "code": "s[msg.sender]) / 5900;\n              ", "debug": "storage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x3d0f78000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nblock_number: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_EthFund_0: 0x0\ncalldatasize_EthFund: 0x4\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 25, "title": "Integer Underflow", "type": "Warning"}, {"address": 875, "code": "    }\n\n        if (msg.valu", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1004\n", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 35, "title": "Multiple Calls", "type": "Information"}, {"address": 1004, "code": "n);\n            marketing2.transfer(mark", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1109\n", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 39, "title": "Multiple Calls", "type": "Information"}, {"address": 1534, "code": " len == 0) {\n                balances[", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x8000000000000000000000000000000000000000000000000000000000000000\nblock_number: 0x0\nretval_1109: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1004: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_EthFund: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 50, "title": "Integer Underflow", "type": "Warning"}, {"address": 1932, "code": "  }\n        }\n\n        if (profit == 0 && ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncallvalue: 0x96f2d04d1ba37d6776ed1403380f343329d7790eb86b1c50df117b18e9761010\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa6e66f00db737d6776c402ea84c8c5b80ea77921fa73bbaed05a7b5eabf7d69a\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0xf63700003299416264bf8f80020255200a97aa0aca5521407aaae48000000000\nblock_number: 0x170c\nretval_1109: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1004: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_EthFund: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 56, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2907, "code": "ddress => uint[]) public paid;\n    map", "debug": "The exception is triggered under the following conditions:\n\ncalldata_EthFund_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_EthFund_4: 0x0\ncalldata_EthFund_0: 0x8c72661800000000000000000000000000000000000000000000000000000000\ncalldatasize_EthFund: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "_function_0x8c726618", "lineno": 10, "title": "Exception state", "type": "Informational"}, {"address": 2993, "code": "address => uint[]) public balances;\n    ma", "debug": "The exception is triggered under the following conditions:\n\ncalldata_EthFund_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_EthFund_4: 0x0\ncalldata_EthFund_0: 0xcbf1304d00000000000000000000000000000000000000000000000000000000\ncalldatasize_EthFund: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "_function_0xcbf1304d", "lineno": 9, "title": "Exception state", "type": "Informational"}, {"address": 3058, "code": "ntract EthFund {\n    uint constant FIVE = 20; // separate 5 %\n\n    address public marketing1;\n    address public marketing2;\n\n    mapping(address => uint[]) public balances;\n    mapping(address => uint[]) public paid;\n    mapping(address => uint) public depositedAt;\n    mapping(address => uint) public timestamps;\n    \n    constructor() public {\n        marketing1 = 0x256B9fb6Aa3bbEb383aAC308995428E920307193; // wallet for marketing1;\n        marketing2 = 0xdc756C7599aCbeB1F540e15431E51F3eCe58019d; // wallet for marketing2;\n    }\n\n    function() external payable {\n        uint len = balances[msg.sender].length;\n        uint profit = 0;\n        for (uint i = 0; i < len; i++) {\n            uint investment = balances[msg.sender][i];\n            if (investment != 0 && investment * 2 > paid[msg.sender][i]) { // 200 %\n                uint p = investment / 100 * (block.number - timestamps[msg.sender]) / 5900;\n                paid[msg.sender][i] += p;\n                profit += p;\n            } else {\n                delete balances[msg.sender][i];\n                delete paid[msg.sender][i];\n            }\n        }\n        if (profit > 0) {\n            msg.sender.transfer(profit);\n        }\n\n        if (msg.value > 0) {\n            uint marketingCommission = msg.value / FIVE;\n            marketing1.transfer(marketingCommission);\n            marketing2.transfer(marketingCommission);\n\n            address referrer = bytesToAddress(msg.data);\n            address investor = msg.sender;\n            if (referrer != address(0) && referrer != msg.sender) {\n                uint referralCommission = msg.value / FIVE;\n                referrer.transfer(referralCommission);\n                investor.transfer(referralCommission);\n            }\n\n            if (block.number - depositedAt[msg.sender] >= 5900 || len == 0) {\n                balances[msg.sender].push(msg.value);\n                paid[msg.sender].push(0);\n                depositedAt[msg.sender] = block.number;\n            } else {\n                balances[msg.sender][len - 1] += msg.value;\n            }\n        }\n\n        if (profit == 0 && msg.value == 0) {\n            delete balances[msg.sender];\n            delete paid[msg.sender];\n            delete timestamps[msg.sender];\n        } else {\n            timestamps[msg.sender] = block.number;\n        }\n    }\n\n    function bytesToAddress(bytes bs) internal pure returns (address addr) {\n        assembly {\n            addr := mload(add(bs, 0x14))\n        }\n    }\n}", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EthFund_0: 0x800000000000000000000000000000000000000000000000000000000\ncalldatasize_EthFund: 0x4\ncallvalue: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x6c0954c1885b5267f0d05be42a8c063bde2f9219.sol", "function": "fallback", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}