{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.24;\r\n^---------------------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:58:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Deposit(msg.sender, msg.value);\r\n        ^----------------------------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:65:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Withdrawal(msg.sender, wad);\r\n        ^-------------------------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:69:16: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        return this.balance;\r\n               ^----------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:74:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, guy, wad);\r\n        ^----------------------------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:96:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(src, dst, wad);\r\n        ^---------------------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:325:23: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return bytes4(keccak256(s));\r\n                      ^----------^\n/unique_chucks/38/0x521550e569bc80f1b4957c4f3fd3d677d9ca31f1.sol:325:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        return bytes4(keccak256(s));\r\n                      ^----------^\n", "issues": []}