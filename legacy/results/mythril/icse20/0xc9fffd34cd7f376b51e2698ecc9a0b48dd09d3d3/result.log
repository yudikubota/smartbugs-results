{"error": null, "issues": [{"address": 4383, "code": "   }\n\n    function increaseApproval(address spender,", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "approve(address,uint256)", "lineno": 583, "title": "Message call to external contract", "type": "Informational"}, {"address": 4383, "code": "   }\n\n    function increaseApproval(address spender,", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "approve(address,uint256)", "lineno": 583, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4706, "code": "**\n   * @dev Modifier", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "_function_0x17ffc320", "lineno": 148, "title": "Message call to external contract", "type": "Warning"}, {"address": 4706, "code": "**\n   * @dev Modifier", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 13968\n", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "_function_0x17ffc320", "lineno": 148, "title": "Multiple Calls", "type": "Information"}, {"address": 5085, "code": "         return delegate.deleg", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "totalSupply()", "lineno": 597, "title": "Message call to external contract", "type": "Informational"}, {"address": 5085, "code": "         return delegate.deleg", "debug": "", "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "totalSupply()", "lineno": 597, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6073, "code": "ho);\n        } else {\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "transferFrom(address,address,uint256)", "lineno": 555, "title": "Message call to external contract", "type": "Informational"}, {"address": 6073, "code": "ho);\n        } else {\n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6877\nCall at address: 6333\n", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "transferFrom(address,address,uint256)", "lineno": 555, "title": "Multiple Calls", "type": "Information"}, {"address": 6333, "code": "legate.delegateBalan", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "transferFrom(address,address,uint256)", "lineno": 557, "title": "Message call to external contract", "type": "Informational"}, {"address": 6333, "code": "legate.delegateBalan", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6877\n", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "transferFrom(address,address,uint256)", "lineno": 557, "title": "Multiple Calls", "type": "Information"}, {"address": 6877, "code": "ue, msg.sender);\n        }\n    }\n\n    function allowance(a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "transferFrom(address,address,uint256)", "lineno": 565, "title": "Message call to external contract", "type": "Informational"}, {"address": 7233, "code": "ithout compiler warning. If we\n  * le", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "reclaimContract(address)", "lineno": 211, "title": "Message call to external contract", "type": "Warning"}, {"address": 7739, "code": "ecks to disallow it without losing ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "mint(address,uint256)", "lineno": 518, "title": "Message call to external contract", "type": "Informational"}, {"address": 8425, "code": "\n    function mint(address _to, uin", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "burn(uint256)", "lineno": 506, "title": "Message call to external contract", "type": "Informational"}, {"address": 13968, "code": "n is ERC20, BasicToken {\n", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0xc9fffd34cd7f376b51e2698ecc9a0b48dd09d3d3.sol", "function": "_function_0x17ffc320", "lineno": 343, "title": "Message call to external contract", "type": "Warning"}], "success": true}