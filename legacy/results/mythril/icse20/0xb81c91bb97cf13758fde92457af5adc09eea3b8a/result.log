{"error": null, "issues": [{"address": 500, "code": "c users;     // We use", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IEFBR14Contract_4: 0x0\nstorage_1: 0x0\ncalldata_IEFBR14Contract_0: 0x365b98b200000000000000000000000000000000000000000000000000000000\ncalldatasize_IEFBR14Contract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xb81c91bb97cf13758fde92457af5adc09eea3b8a.sol", "function": "_function_0x365b98b2", "lineno": 16, "title": "Exception state", "type": "Informational"}, {"address": 806, "code": ";\n\n//    88 888888", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IEFBR14Contract_0: 0x5b48531400000000000000000000000000000000000000000000000000000000\ncalldatasize_IEFBR14Contract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `IEFBR14()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xb81c91bb97cf13758fde92457af5adc09eea3b8a.sol", "function": "IEFBR14()", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1050, "code": " sponsors;  // Yeah we sp", "debug": "The exception is triggered under the following conditions:\n\ncalldata_IEFBR14Contract_4: 0x0\nstorage_2: 0x0\ncalldata_IEFBR14Contract_0: 0x93066b4c00000000000000000000000000000000000000000000000000000000\ncalldatasize_IEFBR14Contract: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0xb81c91bb97cf13758fde92457af5adc09eea3b8a.sol", "function": "_function_0x93066b4c", "lineno": 17, "title": "Exception state", "type": "Informational"}, {"address": 1215, "code": ";\n\n//    88 888888", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_IEFBR14Contract_0: 0xa9e94aa200000000000000000000000000000000000000000000000000000000\ncalldatasize_IEFBR14Contract: 0x4\n", "description": "A possible integer overflow exists in the function `Sponsor()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0xb81c91bb97cf13758fde92457af5adc09eea3b8a.sol", "function": "Sponsor()", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}], "success": true}