{
  "contract": "0x20c77f3dc45bb8fe8b22b84e28466265265ce8ad",
  "tool": "mythril",
  "start": 1563229416.565889,
  "end": 1563236670.3152905,
  "duration": 7253.7494015693665,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2871,
        "code": "en for a specified address\n    * @param _to ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_StrongHoldNetwork: 0x4\ncalldata_StrongHoldNetwork_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x20c77f3dc45bb8fe8b22b84e28466265265ce8ad.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 103,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4085,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimTokens(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x20c77f3dc45bb8fe8b22b84e28466265265ce8ad.sol",
        "function": "claimTokens()",
        "lineno": 404,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5509,
        "code": "en for a specified address\n    * @param _to ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_StrongHoldNetwork: 0x4\ncalldata_StrongHoldNetwork_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x20c77f3dc45bb8fe8b22b84e28466265265ce8ad.sol",
        "function": "transfer(address,uint256)",
        "lineno": 103,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7362,
        "code": "     ",
        "debug": "calldata_StrongHoldNetwork_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StrongHoldNetwork_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_3: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StrongHoldNetwork_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_StrongHoldNetwork_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StrongHoldNetwork_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StrongHoldNetwork: 0x64\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x20c77f3dc45bb8fe8b22b84e28466265265ce8ad.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 37,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7375,
        "code": "   }\n\n    func",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StrongHoldNetwork_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StrongHoldNetwork_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_3: 0xff00\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StrongHoldNetwork_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_StrongHoldNetwork_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StrongHoldNetwork_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StrongHoldNetwork: 0x64\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x20c77f3dc45bb8fe8b22b84e28466265265ce8ad.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}