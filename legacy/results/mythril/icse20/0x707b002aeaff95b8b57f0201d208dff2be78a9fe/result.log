{"error": null, "issues": [{"address": 1097, "code": "returns (uint256) {\n        return _tokensByTx(Currency.EUR, _txId);\n    }\n\n    // End of external sales.\n    //-----------------", "debug": "calldata_XPresale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_XPresale_0: 0x317c0ae900000000000000000000000000000000000000000000000000000000\ncalldatasize_XPresale: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `tokensByZecTx(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x707b002aeaff95b8b57f0201d208dff2be78a9fe.sol", "function": "tokensByZecTx(string)", "lineno": 608, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5828, "debug": "", "description": "A possible transaction order independence vulnerability exists in function finalize(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x707b002aeaff95b8b57f0201d208dff2be78a9fe.sol", "function": "finalize()", "lineno": 656, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7904, "code": " >= a", "debug": "timestamp: 0x0\ncallvalue: 0xe618e7461294a2ae5efaf863faff886b1d17cd198421dfcf6d9604120d412907\nstorage_12: 0x4860c392b2349b4b5afafe7362eff76bdee7eebdd613dec44d5b5117320c76d7\nstorage_7: 0xe618e7461294a2ae5efaf863faff886b1d17cd198421dfcf6d9604120d412907\nstorage_11: 0x0\nstorage_10: 0x0\nstorage_1: 0x0\nstorage_18: 0xff00\ncalldatasize_XPresale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x707b002aeaff95b8b57f0201d208dff2be78a9fe.sol", "function": "fallback", "lineno": 25, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7917, "code": "return c;\n    ", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\ncallvalue: 0xa1611cda64dc97ccfbd9effffff6c9b37cec88c89e8fd6b1d5ed07db941765a3\nstorage_12: 0xbe3b4ecf4899e782fb5997fff786dab64dbc40809b58f69d15e983e29c68278b\nstorage_7: 0xa1611cda64dc97ccfbd9effffff6c9b37cec88c89e8fd6b1d5ed07db941765a3\nstorage_11: 0x0\nstorage_10: 0x0\nstorage_1: 0x0\nstorage_18: 0xff00\ncalldatasize_XPresale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x707b002aeaff95b8b57f0201d208dff2be78a9fe.sol", "function": "fallback", "lineno": 26, "title": "Exception state", "type": "Informational"}], "success": true}