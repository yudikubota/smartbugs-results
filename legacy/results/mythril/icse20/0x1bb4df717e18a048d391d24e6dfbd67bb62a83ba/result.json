{
  "contract": "0x1bb4df717e18a048d391d24e6dfbd67bb62a83ba",
  "tool": "mythril",
  "start": 1563556619.9163742,
  "end": 1563556664.1604714,
  "duration": 44.2440972328186,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2507,
        "code": "t\n    )\n    internal\n    {\n       ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/17/0x1bb4df717e18a048d391d24e6dfbd67bb62a83ba.sol",
        "function": "remainingTokens()",
        "lineno": 327,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3016,
        "code": " is a base con",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncallvalue: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\ntimestamp: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x0\ncalldatasize_TimedCrowdsale: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/17/0x1bb4df717e18a048d391d24e6dfbd67bb62a83ba.sol",
        "function": "fallback",
        "lineno": 94,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}