{"error": null, "issues": [{"address": 601, "code": "s => string) public ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0xfc00\nstorage_6: 0x1\ncalldata_RPS_0: 0x117a5b9000000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "_function_0x117a5b90", "lineno": 42, "title": "Exception state", "type": "Informational"}, {"address": 2685, "code": "s => string) public ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6: 0x0\ncalldata_RPS_0: 0x117a5b9000000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "_function_0x117a5b90", "lineno": 42, "title": "Exception state", "type": "Informational"}, {"address": 3109, "code": "     balances", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6: 0x0\nstorage_1: 0x0\ncalldata_RPS_0: 0x39236bef00000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "claimGame(uint256)", "lineno": 317, "title": "Exception state", "type": "Informational"}, {"address": 3167, "code": "      balances[owner2] += fee;", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0xfc00\nstorage_6: 0x1\nstorage_1: 0x0\ncalldata_RPS_0: 0x39236bef00000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "claimGame(uint256)", "lineno": 318, "title": "Exception state", "type": "Informational"}, {"address": 3650, "code": "      thisGame.player2.transfer((thisGame.val", "debug": "storage_6 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0x200\nstorage_2 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0_+\n111414077815863400510004064629973595961579173665589224203503662149373724986687_+\n7*calldata_RPS_4,\n_____256): 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_RPS_4: 0x0\ntimestamp: 0x1\nstorage_5 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6c580\ncaller: 0x0\nstorage_1 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0x0\nstorage_6: 0x1\nstorage_1: 0x0\ncalldata_RPS_0: 0x39236bef00000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `claimGame(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "claimGame(uint256)", "lineno": 326, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4168, "code": "    Donate(msg.sender, msg.value);\n        return tru", "debug": "", "description": "In the function `claimGame(uint256)` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "claimGame(uint256)", "lineno": 338, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 4168, "code": "    Donate(msg.sender, msg.value);\n        return tru", "debug": "", "description": "A possible transaction order independence vulnerability exists in function claimGame(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "claimGame(uint256)", "lineno": 338, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6245, "code": "st[thisGame.p", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6: 0x0\nstorage_1: 0x0\ncalldata_RPS_0: 0x98be22f700000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "forfeitGame(uint256)", "lineno": 299, "title": "Exception state", "type": "Informational"}, {"address": 6303, "code": ".value;\n        totalWon[thisG", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6 +\n111414077815863400510004064629973595961579173665589224203503662149373724986687 +\n7*calldata_RPS_4: 0xfc00\nstorage_6: 0x1\nstorage_1: 0x0\ncalldata_RPS_0: 0x98be22f700000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "forfeitGame(uint256)", "lineno": 299, "title": "Exception state", "type": "Informational"}, {"address": 7360, "code": "isGame.value,", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RPS_4: 0x0\nstorage_6: 0x0\nstorage_1: 0x0\ncalldata_RPS_0: 0x9e231e2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "abortGame(uint256)", "lineno": 223, "title": "Exception state", "type": "Informational"}, {"address": 11816, "code": ");\n        return true;\n    }\n   ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncallvalue: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_1: 0x0\ncalldata_RPS_0: 0x8047cb9300000000000000000000000000000000000000000000000000000000\ncalldatasize_RPS: 0x4\n", "description": "A possible integer overflow exists in the function `createGame(bytes32,uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/10/0x5df4bea3540899a33c76c4d25108f4fe2ca89044.sol", "function": "createGame(bytes32,uint256,address)", "lineno": 354, "title": "Integer Overflow ", "type": "Warning"}], "success": true}