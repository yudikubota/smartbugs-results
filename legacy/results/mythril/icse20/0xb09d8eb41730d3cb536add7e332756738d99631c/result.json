{
  "contract": "0xb09d8eb41730d3cb536add7e332756738d99631c",
  "tool": "mythril",
  "start": 1563620300.3078372,
  "end": 1563620716.7723827,
  "duration": 416.46454548835754,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 780,
        "code": "ength == unixTimes.length);\n\n        for(uint j = 0; j < targets.length; j++){\n            unlockUnixTime[targets[j]] = unixTimes[j];\n            LockedUp(targets[j], unixTimes[j]);\n        }\n    }\n\n    function transfer(address _to, uint _value, bytes _data, string _custom_fallback) public returns (bool success) {\n        require(\n          _val",
        "debug": "calldata_Xmalltoken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Xmalltoken_0: 0x64ddc60500000000000000000000000000000000000000000000000000000000\ncalldatasize_Xmalltoken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x64ddc605`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xb09d8eb41730d3cb536add7e332756738d99631c.sol",
        "function": "_function_0x64ddc605",
        "lineno": 146,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1707,
        "code": "j = 0; j < targets.length; j++) {\n            require(targets[j] != 0x0);\n            frozenAccount[targets[j]] = isFrozen;\n            FrozenFunds(targets[j], isFrozen);\n        }\n    }\n\n    function lockupAccounts(address[] targets, uint[] unixTimes) onlyOwner public {\n        require(targets.length > 0\n                && t",
        "debug": "calldata_Xmalltoken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Xmalltoken_0: 0xc341b9f600000000000000000000000000000000000000000000000000000000\ncalldatasize_Xmalltoken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `freezeAccounts(address[],bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xb09d8eb41730d3cb536add7e332756738d99631c.sol",
        "function": "freezeAccounts(address[],bool)",
        "lineno": 137,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2027,
        "code": "ime[msg.sender]);\n\n        uint256 totalAmount = 0;\n\n        for(uint j = 0; j < addresses.length; j++){\n            require(amounts[j] > 0\n                    && addresses[j] != 0x0\n                    && frozenAccount[addresses[j]] == false\n                    && now > unlockUnixTime[addresses[j]]);\n\n            amounts[j] = amounts[j].mul(1e8);\n            totalAmount = totalAmount.add(amounts[j]);\n        }\n        require(balanceOf[msg.sender] >= totalAmount);\n\n        for (j = 0; j < addresses.length; j++) {\n            balanceOf[addresses[j]] = balanceOf[addresses[j]].add(amounts[j]);\n            Transfer(msg.sender, addresses[j], amounts[j]);\n        }\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(totalAmount);\n        return true;\n    }\n\n    function collectTokens(address[] addresses, uint[] amounts) onlyOwner public returns (bool) {\n        require(addresses.length > 0 && addresses.length == amounts.length);\n        uint256 totalAmount = 0;\n\n        for (uint j = 0; j < addresses.length; j++) {\n            require(amounts[j",
        "debug": "calldata_Xmalltoken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Xmalltoken_0: 0xdd92459400000000000000000000000000000000000000000000000000000000\ncalldatasize_Xmalltoken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xdd924594`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xb09d8eb41730d3cb536add7e332756738d99631c.sol",
        "function": "_function_0xdd924594",
        "lineno": 274,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 11170,
        "code": "56 a, uint256 ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Xmalltoken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Xmalltoken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Xmalltoken_0: 0x9dc29fac00000000000000000000000000000000000000000000000000000000\ncalldatasize_Xmalltoken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xb09d8eb41730d3cb536add7e332756738d99631c.sol",
        "function": "burn(address,uint256)",
        "lineno": 72,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 11188,
        "code": "acts/",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Xmalltoken_32_+_4: 0xaa36f5bdfb58b1e70109b37d78026444125428d00555c1db67f030e95c7800f2\ncalldata_Xmalltoken_32 + 36: 0xcfb485210399fdc85ddc30416ff3c1e813fc00000740fe1a60302991686efc1b\ntimestamp: 0xf10e00027c1148711040cb40dfc010700fc628d80401e0fc08190079380b004f\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Xmalltoken_4: 0xdfe7a7dbcb51bf935006fa0ff1fc9deddbffc3dff76000000db3400c6c1e00bb\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xcfb485210399fdc85ddc30416ff3c1e813fc00000740fe1a60302991686efc1b\ncalldata_Xmalltoken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Xmalltoken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Xmalltoken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xb09d8eb41730d3cb536add7e332756738d99631c.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 11201,
        "code": "sol\n\ncontract ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Xmalltoken_32_+_4: 0x8000000000000000000000000000000000000000002000000000000000000000\ncalldata_Xmalltoken_32 + 36: 0x80000000000000000004200fffffffffffffffffffff7edbffffffffffff00fe\ntimestamp: 0x8000000000000000001000000000000000000000002000000000000000000001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Xmalltoken_4: 0x8000000000000000000fffffffffffffffffffffffffffffffffffffffff00fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x80000000000000000004200fffffffffffffffffffff7edbffffffffffff00fe\ncalldata_Xmalltoken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Xmalltoken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Xmalltoken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/24/0xb09d8eb41730d3cb536add7e332756738d99631c.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 79,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}