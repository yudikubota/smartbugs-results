{"error": null, "issues": [{"address": 1017, "code": ".length; i++) doAirdrop(_addresses[i], _amount);\n    }\n\n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \n        tokensPerEth = _tokensPerEth;\n        emit TokensP", "debug": "calldata_Test11_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Test11_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_Test11: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adminClaimAirdropMultiple(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 139, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3049, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 240, "title": "Message call to external contract", "type": "Warning"}, {"address": 3049, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3307\n", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 240, "title": "Multiple Calls", "type": "Information"}, {"address": 3307, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 240, "title": "Message call to external contract", "type": "Warning"}, {"address": 3394, "code": "e(_to != address(0));\n        requi", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_Test11: 0x60\ncalldata_Test11_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Exception state", "type": "Informational"}, {"address": 5383, "code": "e(_to != address(0));\n        requi", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_Test11: 0x4\ncalldata_Test11_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "transfer(address,uint256)", "lineno": 189, "title": "Exception state", "type": "Informational"}, {"address": 7041, "code": " >= a", "debug": "calldata_Test11_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Test11_cpy: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x6c6ce3ec1af83443408b26111b046df115107b55aeefbd725d1224fe82a14322\ncalldata_Test11_4 + calldata_Test11_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Test11_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_Test11: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adminClaimAirdropMultiple(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 25, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7054, "code": "return c;\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Test11_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Test11_cpy: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x2d42968498474811431071450bfa3595f48d75f93cb8125c2a24140100424688\ncalldata_Test11_4 + calldata_Test11_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Test11_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_Test11: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x1a5a007812e21e27735d8a4b557176fdee9109ca.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 26, "title": "Exception state", "type": "Informational"}], "success": true}