{
  "contract": "0xdbfe08e66c83e818e9411167e5bb99e496004f1e",
  "tool": "mythril",
  "start": 1563349874.560554,
  "end": 1563350043.0669837,
  "duration": 168.5064296722412,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2043,
        "code": "al\n\t\tonlyOwner\n\t{\n\t\t epoch[] storage epochs = lockEpoc",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_0: 0x1\ncalldatasize_SeekerCoin: 0x3\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdbfe08e66c83e818e9411167e5bb99e496004f1e.sol",
        "function": "fallback",
        "lineno": 144,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2335,
        "code": ";\n\n\t//the base",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_1 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0x1\nstorage_1 +\n2 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\n2 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0x1\nstorage_0 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0x1\ncalldata_SeekerCoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SeekerCoin_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SeekerCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdbfe08e66c83e818e9411167e5bb99e496004f1e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 109,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3891,
        "code": "ddress => uint256)) allowed;\n\tstruct epoch  {\n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_SeekerCoin_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0x0\ncalldata_SeekerCoin_0: 0x5b89a48a00000000000000000000000000000000000000000000000000000000\ncalldatasize_SeekerCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdbfe08e66c83e818e9411167e5bb99e496004f1e.sol",
        "function": "_function_0x5b89a48a",
        "lineno": 126,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4573,
        "code": ";\n\n/**\n * @title E",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_SeekerCoin_0: 0xa559568300000000000000000000000000000000000000000000000000000000\ncalldatasize_SeekerCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `lockBalance(address,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xdbfe08e66c83e818e9411167e5bb99e496004f1e.sol",
        "function": "lockBalance(address,uint256,uint256)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5897,
        "code": "s (uint256) {\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0x1\ntimestamp: 0x0\ncalldata_SeekerCoin_32 + 36: 0x2\nstorage_0 +\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SeekerCoin_4: 0x1\ncalldata_SeekerCoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SeekerCoin_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SeekerCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xdbfe08e66c83e818e9411167e5bb99e496004f1e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 101,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}