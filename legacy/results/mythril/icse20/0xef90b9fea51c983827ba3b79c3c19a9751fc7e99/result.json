{
  "contract": "0xef90b9fea51c983827ba3b79c3c19a9751fc7e99",
  "tool": "mythril",
  "start": 1563511827.1972718,
  "end": 1563512040.764992,
  "duration": 213.56772017478943,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2868,
        "code": "  \n  }  \n\n  // low le",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "resumeMint()",
        "lineno": 475,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3215,
        "code": "    // update state\n    weiRai",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 488,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3412,
        "code": "al returns (MintableTok",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "withdraw(uint256)",
        "lineno": 599,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4033,
        "code": "); \n\t\tRefund(_from,refundBa",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "refund()",
        "lineno": 567,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4033,
        "code": "); \n\t\tRefund(_from,refundBa",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4429\n",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "refund()",
        "lineno": 567,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4236,
        "code": "unction takeEth() external p",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "refund()",
        "lineno": 575,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4429,
        "code": "e {\n\t\tTakeEth(msg.send",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "refund()",
        "lineno": 575,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4429,
        "code": "e {\n\t\tTakeEth(msg.send",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4534\n",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "refund()",
        "lineno": 575,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5015,
        "code": "nt = msg.value;\n\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "endTransfer()",
        "lineno": 483,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8175,
        "code": "edRefund(address _f",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/9/0xef90b9fea51c983827ba3b79c3c19a9751fc7e99.sol",
        "function": "fallback",
        "lineno": 561,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}