{
  "contract": "0x361a67bb9fedfd1a1c9da6cbc38a22832b1f8349",
  "tool": "mythril",
  "start": 1563755837.798847,
  "end": 1563755942.3446407,
  "duration": 104.54579377174377,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 407,
        "code": "ichest(string newString) public payable {\n        require(msg.value > 0.002 ether);\n        require(msg.sender.balance > highestBalance);\n        require(bytes(newString).length < 500);\n        \n        highestBalance = msg.sender.balance;\n        pastValues.push(msg.sender.balance);\n        \n        richest = msg.sender;\n        participants.push(msg.sender);\n        \n        displayString = newString;\n        owner.transfer(msg.value);\n    }\n}",
        "debug": "calldata_BraggerContract_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_BraggerContract_0: 0x6f7705c200000000000000000000000000000000000000000000000000000000\ncalldatasize_BraggerContract: 0x4\n",
        "description": "A possible integer overflow exists in the function `becomeRichest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x361a67bb9fedfd1a1c9da6cbc38a22832b1f8349.sol",
        "function": "becomeRichest(string)",
        "lineno": 17,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 716,
        "code": "blic pastValues;\n\n    fu",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BraggerContract_4: 0x0\nstorage_5: 0x0\ncalldata_BraggerContract_0: 0xb30fc7b00000000000000000000000000000000000000000000000000000000\ncalldatasize_BraggerContract: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x361a67bb9fedfd1a1c9da6cbc38a22832b1f8349.sol",
        "function": "_function_0x0b30fc7b",
        "lineno": 10,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 751,
        "code": "] public participants;\n    ui",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BraggerContract_4: 0x0\nstorage_4: 0x0\ncalldata_BraggerContract_0: 0x35c1d34900000000000000000000000000000000000000000000000000000000\ncalldatasize_BraggerContract: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x361a67bb9fedfd1a1c9da6cbc38a22832b1f8349.sol",
        "function": "_function_0x35c1d349",
        "lineno": 9,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 939,
        "code": ";\n\ncontract Bragge",
        "debug": "callvalue: 0x8000000000000000000000000011000\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0x0\ncalldata_BraggerContract_4 + calldata_BraggerContract_4: 0x1f3\nbalance_at_1461501637330902918203684832716283019655932542975 & caller: 0x1\ncalldata_BraggerContract_0: 0x6f7705c200000000000000000000000000000000000000000000000000000000\ncalldatasize_BraggerContract: 0x4\n",
        "description": "A possible integer overflow exists in the function `becomeRichest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x361a67bb9fedfd1a1c9da6cbc38a22832b1f8349.sol",
        "function": "becomeRichest(string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1047,
        "code": ";\n\ncontract Bragge",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x8000000000000000000000000011000\nstorage_2: 0x0\ncalldata_BraggerContract_4 + calldata_BraggerContract_4: 0x1f3\nbalance_at_1461501637330902918203684832716283019655932542975 & caller: 0x1\ncalldata_BraggerContract_0: 0x6f7705c200000000000000000000000000000000000000000000000000000000\ncalldatasize_BraggerContract: 0x4\n",
        "description": "A possible integer overflow exists in the function `becomeRichest(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x361a67bb9fedfd1a1c9da6cbc38a22832b1f8349.sol",
        "function": "becomeRichest(string)",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}