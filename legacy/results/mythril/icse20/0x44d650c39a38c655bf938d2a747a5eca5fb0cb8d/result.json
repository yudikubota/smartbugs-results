{
  "contract": "0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d",
  "tool": "mythril",
  "start": 1563819312.4525318,
  "end": 1563819455.8623722,
  "duration": 143.4098403453827,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 754,
        "code": "*85)/100);\n            for(uint i=0; i<",
        "debug": "",
        "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.number\n- block.number\n",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "fallback",
        "lineno": 31,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 754,
        "code": "*85)/100);\n            for(uint i=0; i<",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1157\n",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "fallback",
        "lineno": 31,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 754,
        "code": "*85)/100);\n            for(uint i=0; i<",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "fallback",
        "lineno": 31,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1157,
        "code": "er(money*15/100);\n            delete last;\n        }\n   ",
        "debug": "",
        "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.number\n- block.number\n",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "fallback",
        "lineno": 41,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1157,
        "code": "er(money*15/100);\n            delete last;\n        }\n   ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "fallback",
        "lineno": 41,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1532,
        "code": ";\ncontract fastum{",
        "debug": "callvalue: 0x2000000000000000000000000000000000000\nstorage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_2: 0x2000000000000000000000000000000000000\ngas: 0x35b60\ncaller: 0x6376d6f253613445a1012bddcf77862064edc140\nblock_number: 0x1\ncalldata_fastum_0: 0x2500000000000000000000000000000000000000000000000000000000\ncalldatasize_fastum: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2815,
        "code": "   }\n    \n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_fastum_4: 0x0\nstorage_7: 0x0\ncalldata_fastum_0: 0x9f9fb96800000000000000000000000000000000000000000000000000000000\ncalldatasize_fastum: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "getDeposit(uint256)",
        "lineno": 61,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2953,
        "code": "\n    \n    function () ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_fastum_4: 0x0\nstorage_7: 0x0\ncalldata_fastum_0: 0xddf0b00900000000000000000000000000000000000000000000000000000000\ncalldatasize_fastum: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/31/0x44d650c39a38c655bf938d2a747a5eca5fb0cb8d.sol",
        "function": "_function_0xddf0b009",
        "lineno": 24,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}