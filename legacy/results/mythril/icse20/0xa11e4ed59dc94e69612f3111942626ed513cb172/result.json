{
  "contract": "0xa11e4ed59dc94e69612f3111942626ed513cb172",
  "tool": "mythril",
  "start": 1563616566.111166,
  "end": 1563616572.207309,
  "duration": 6.096143007278442,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 288,
        "code": "MOUNT);\n\n        // Increase pot f",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5\ncalldata_EtherLotto_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherLotto: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/20/0xa11e4ed59dc94e69612f3111942626ed513cb172.sol",
        "function": "play()",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 298,
        "code": "ompute some *alm",
        "debug": "storage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EtherLotto_0: 0x93e84cd900000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherLotto: 0x4\ncallvalue: 0xa\n",
        "description": "A possible integer overflow exists in the function `play()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/20/0xa11e4ed59dc94e69612f3111942626ed513cb172.sol",
        "function": "play()",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 436,
        "code": "// Send jackpot to winner",
        "debug": "",
        "description": "In the function `play()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/20/0xa11e4ed59dc94e69612f3111942626ed513cb172.sol",
        "function": "play()",
        "lineno": 43,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 436,
        "code": "// Send jackpot to winner",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 511\n",
        "filename": "/unique_chucks/20/0xa11e4ed59dc94e69612f3111942626ed513cb172.sol",
        "function": "play()",
        "lineno": 43,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 511,
        "code": "         // Restart jackpot.\n        ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function play(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/20/0xa11e4ed59dc94e69612f3111942626ed513cb172.sol",
        "function": "play()",
        "lineno": 46,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}