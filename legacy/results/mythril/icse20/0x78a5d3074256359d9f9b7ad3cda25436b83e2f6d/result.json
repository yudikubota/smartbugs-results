{
  "contract": "0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d",
  "tool": "mythril",
  "start": 1563498625.364953,
  "end": 1563498657.4262917,
  "duration": 32.061338663101196,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 625,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1362,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 625,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1449\nCall at address: 1134\nCall at address: 879\n",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1362,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 879,
        "code": "= 0x0) \n            retur",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1323,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 879,
        "code": "= 0x0) \n            retur",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1449\nCall at address: 1134\n",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1323,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1134,
        "code": " result){\n        return eventIn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1329,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1134,
        "code": " result){\n        return eventIn",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1449\n",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1329,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1449,
        "code": " constant returns (uint result){\n        re",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "buy(bytes32,uint256)",
        "lineno": 1337,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3008,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1362,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3008,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3724\nCall at address: 3386\nCall at address: 3183\n",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1362,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3183,
        "code": "dstListed[companyNameBytes]);\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1288,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3183,
        "code": "dstListed[companyNameBytes]);\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3724\nCall at address: 3386\n",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1288,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3386,
        "code": "int valueHKGOwned = hacker",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1294,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3386,
        "code": "int valueHKGOwned = hacker",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3724\n",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1294,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3565,
        "code": ";        \n        \n        // ensur",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1295,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3724,
        "code": "hackerGold.allowance(msg.sender, veAddress);\n",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "enlist(address)",
        "lineno": 1298,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4047,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "getEventStart()",
        "lineno": 1362,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4346,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x78a5d3074256359d9f9b7ad3cda25436b83e2f6d.sol",
        "function": "getEventEnd()",
        "lineno": 1362,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}