{
  "contract": "0xfdb308c42ce4ad1247e590107370e954d5eb95cc",
  "tool": "mythril",
  "start": 1563624268.9532511,
  "end": 1563624665.3880336,
  "duration": 396.4347825050354,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 735,
        "code": " += (msg.value - refund)",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x200\ntimestamp: 0x0\ncallvalue: 0xde3963007000000\nstorage_3: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\nstorage_4: 0x0\nstorage_0: 0x0\ncalldatasize_WowanderICOPrivateCrowdSale: 0x3\nstorage_7: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xfdb308c42ce4ad1247e590107370e954d5eb95cc.sol",
        "function": "fallback",
        "lineno": 303,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 811,
        "code": "sContractBalance -= amountS",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1316\n",
        "filename": "/unique_chucks/26/0xfdb308c42ce4ad1247e590107370e954d5eb95cc.sol",
        "function": "fallback",
        "lineno": 313,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1316,
        "code": " true;\n        }\n    }\n\t\n    function finalizeSale",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/26/0xfdb308c42ce4ad1247e590107370e954d5eb95cc.sol",
        "function": "fallback",
        "lineno": 321,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1508,
        "code": "false);\n       crowdsaleClosed = true;\n  ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/26/0xfdb308c42ce4ad1247e590107370e954d5eb95cc.sol",
        "function": "fallback",
        "lineno": 327,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}