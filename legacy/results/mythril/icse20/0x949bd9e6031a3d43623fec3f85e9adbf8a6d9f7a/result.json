{
  "contract": "0x949bd9e6031a3d43623fec3f85e9adbf8a6d9f7a",
  "tool": "mythril",
  "start": 1563470905.142111,
  "end": 1563470940.1049402,
  "duration": 34.96282911300659,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 744,
        "code": "ngth == _value.length);\n    require(frozens[msg.sender] == false);\n    uint8 i;\n    uint256 amount;\n    for (i = 0; i < _to.length; i++) {\n      assert(_to[i] != 0x0);\n      assert(_value[i] > 0);\n      amount = amount.add(_value[i]);\n    }\n    require(balances[msg.sender] >= amount);\n    balances[msg.sender] = balances[msg.sender].sub(amount);\n    for (i = 0; i < _to.length; i++) {\n      balances[_to[i]] = balances[_to[i]].add(_value[i]);\n      emit Transfer(msg.sender, _to[i], _value[i]);\n    }\n    return true;\n  }\n}\n\ncontract UCToken is BasicToken {\n\n  string public constant name = \"UnityChainToken\";\n  string public constant symbol = \"UCT\";\n  uint256 public constant decimals = 18;\n\n  constructor() public {\n  ",
        "debug": "calldata_UCToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UCToken_0: 0x35bce6e400000000000000000000000000000000000000000000000000000000\ncalldatasize_UCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferMulti(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x949bd9e6031a3d43623fec3f85e9adbf8a6d9f7a.sol",
        "function": "transferMulti(address[],uint256[])",
        "lineno": 184,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2980,
        "code": ".sub(amount);\n    for",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UCToken_4 + calldata_UCToken_4: 0xff\ncalldata_UCToken_cpy: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_1: 0x0\ncalldata_UCToken_0: 0x35bce6e400000000000000000000000000000000000000000000000000000000\ncalldatasize_UCToken: 0x4\nmem_128 + 32 + 32*calldata_UCToken_4 + calldata_UCToken_4: 0xff\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x949bd9e6031a3d43623fec3f85e9adbf8a6d9f7a.sol",
        "function": "transferMulti(address[],uint256[])",
        "lineno": 194,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3018,
        "code": "i < _to.length; i++) ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_UCToken_4 + calldata_UCToken_4: 0xff\ncalldata_UCToken_cpy: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_1: 0x0\ncalldata_UCToken_0: 0x35bce6e400000000000000000000000000000000000000000000000000000000\ncalldatasize_UCToken: 0x4\nmem_0 + 192 + 32*calldata_UCToken_4 + calldata_UCToken_4: 0x0\nmem_128 + 32 + 32*calldata_UCToken_4 + calldata_UCToken_4: 0xff\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x949bd9e6031a3d43623fec3f85e9adbf8a6d9f7a.sol",
        "function": "transferMulti(address[],uint256[])",
        "lineno": 195,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5992,
        "code": "\n    ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UCToken_4: 0xfffffffff7fffffffe80002fffffffffc0000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UCToken_32_+_4: 0x800000000000000000bfffa00a00000000000000000020000000000000000000\ncalldata_UCToken_32 + 36: 0xfffffffff7fffffffd00005fffffffff40000000000000000000000000000000\ncalldata_UCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffff7fffffffd00005fffffffff40000000000000000000000000000000\nstorage_1: 0x0\ncalldata_UCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x949bd9e6031a3d43623fec3f85e9adbf8a6d9f7a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 28,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6005,
        "code": "c;\n  }\n}\n\n/**\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UCToken_4: 0xbf08d11417222f10335d06000000000000000000000fcae0007183ef001f0035\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UCToken_32_+_4: 0xa8bffffffbffffffffd01fffffffffffffffffffffecc518ffdf3821ffd60243\ncalldata_UCToken_32 + 36: 0xaee00000000000000036ce000000000000000000001d996000c327de40637263\ncalldata_UCToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xaee00000000000000036ce000000000000000000001d996000c327de40637263\nstorage_1: 0x0\ncalldata_UCToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UCToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x949bd9e6031a3d43623fec3f85e9adbf8a6d9f7a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}