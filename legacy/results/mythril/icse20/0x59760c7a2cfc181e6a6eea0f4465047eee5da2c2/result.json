{
  "contract": "0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2",
  "tool": "mythril",
  "start": 1563590437.9490974,
  "end": 1563590494.4890902,
  "duration": 56.539992809295654,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 475,
        "code": "ransfer(_newOwner, _token.balanceOf(_token.owner()));\n        _token.transferOwnership(_newOwner);\n        return true;\n    }\n\n    /**\n     * @dev Refound tokens. For owner\n     */\n    function refundT",
        "debug": "calldata_XdacTokenCrowdsale_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_XdacTokenCrowdsale_0: 0x2bf0430400000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `whitelistAddresses(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "whitelistAddresses(address[])",
        "lineno": 490,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 994,
        "code": " getEthAmount(uint256 _tokenAmount) public view returns (uint256) {\n        return _getEthAmount(_token",
        "debug": "storage_7: 0x800000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_XdacTokenCrowdsale_0: 0xa39fac1200000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAddresses()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "getAddresses()",
        "lineno": 525,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1515,
        "code": ") {\n         ",
        "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\nstorage_3: 0x8000000000000000000000000000000000000000000000000000000000000000\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XdacTokenCrowdsale_0: 0x1d00000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "fallback",
        "lineno": 365,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2052,
        "code": "rs\n    */\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 510,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2052,
        "code": "rs\n    */\n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2644\nCall at address: 2429\nCall at address: 2237\n",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 510,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2237,
        "code": "s. For contributors\n    */\n    f",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 510,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2237,
        "code": "s. For contributors\n    */\n    f",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2644\nCall at address: 2429\n",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 510,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2429,
        "code": "**\n    * @dev Refound tokens. For contributors\n    */\n    fu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 509,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2429,
        "code": "**\n    * @dev Refound tokens. For contributors\n    */\n    fu",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2644\n",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 509,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2644,
        "code": "ndTokens() public {\n        _refund",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "transferTokenOwnership(address)",
        "lineno": 512,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3276,
        "code": "urn _getEthAmoun",
        "debug": "storage_7: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\nstorage_0: 0x0\ncaller: 0x0\ncalldata_XdacTokenCrowdsale_0: 0xa39fac1200000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAddresses()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "getAddresses()",
        "lineno": 526,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3278,
        "code": "urn _getEthAmoun",
        "debug": "storage_7: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\nstorage_0: 0x0\ncaller: 0x0\ncalldata_XdacTokenCrowdsale_0: 0xa39fac1200000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getAddresses()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "getAddresses()",
        "lineno": 526,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3836,
        "code": " node_modules/",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x6d0345226634833c4720c556181ea1490c10e001e312c8018f001e7852a89833\ncallvalue: 0xcad88fd76199c431a686d75fdf9f3a6defaee7b1fbd8ebbdedb35f7f968b41cc\nstorage_1: 0x6\nstorage_3: 0xcad88fd76199c431a686d75fdf9f3a6defaee7b1fbd8ebbdedb35f7f968b41cc\ncalldata_XdacTokenCrowdsale_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XdacTokenCrowdsale_0: 0xec8ac4d800000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "buyTokens(address)",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5002,
        "code": "        }\n    }\n\n    /**********",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function refundTokensForAddress(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "refundTokensForAddress(address)",
        "lineno": 472,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5121,
        "code": " else {\n            ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\nstorage_80084422859880547211683076133703299733277748156566366325829078699459944778998: 0x1\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_XdacTokenCrowdsale_0: 0x8fc7a25d00000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "getEthAmount(uint256)",
        "lineno": 419,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5495,
        "code": "urns (uint256",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_XdacTokenCrowdsale_0: 0xf7fb07b000000000000000000000000000000000000000000000000000000000\ncalldatasize_XdacTokenCrowdsale: 0x4\nstorage_1: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/23/0x59760c7a2cfc181e6a6eea0f4465047eee5da2c2.sol",
        "function": "getCurrentRate()",
        "lineno": 377,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}