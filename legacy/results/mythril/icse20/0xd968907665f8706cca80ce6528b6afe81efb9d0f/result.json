{
  "contract": "0xd968907665f8706cca80ce6528b6afe81efb9d0f",
  "tool": "mythril",
  "start": 1563293658.0393326,
  "end": 1563294073.7329457,
  "duration": 415.69361305236816,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 301,
        "code": "ender], tokens);",
        "debug": "timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x1000000000000000000000000000000000000000000000000000000000000000\nstorage_9: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_TOXBToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd968907665f8706cca80ce6528b6afe81efb9d0f.sol",
        "function": "fallback",
        "lineno": 177,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 313,
        "code": "ces[owner], toke",
        "debug": "timestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x5604189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc7\nstorage_9: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_TOXBToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd968907665f8706cca80ce6528b6afe81efb9d0f.sol",
        "function": "fallback",
        "lineno": 178,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 960,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xd968907665f8706cca80ce6528b6afe81efb9d0f.sol",
        "function": "fallback",
        "lineno": 182,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2135,
        "code": "           ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n            receiver.tokenFallback(msg.sender, _value, _data);\n        }\n        balances[msg.sender] = subSafe(balances[msg.sender], _value);\n        balances[_to] = addSafe(balances[_to], _value);\n        Transfer(msg.sender, _to, _value, _data);\n    }\n\n    function isContract(address _addr) private view returns (bool is_contract) {\n      uint length;\n      assembly {\n            //ret",
        "debug": "calldata_TOXBToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TOXBToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_TOXBToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd968907665f8706cca80ce6528b6afe81efb9d0f.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 131,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2586,
        "code": "a);\n ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TOXBToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TOXBToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_TOXBToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TOXBToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xd968907665f8706cca80ce6528b6afe81efb9d0f.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2599,
        "code": "urn c;\n   }\n}\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TOXBToken_4: 0x1\ncalldata_TOXBToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TOXBToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TOXBToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xd968907665f8706cca80ce6528b6afe81efb9d0f.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}