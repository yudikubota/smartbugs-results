{
  "contract": "0x002842529757eab873cce9c251087e1b993f9200",
  "tool": "mythril",
  "start": 1563256694.673225,
  "end": 1563256769.4564085,
  "duration": 74.78318357467651,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2337,
        "code": "     ",
        "debug": "timestamp: 0xffffffffffffffffffffff7ffbffffffbffffffffff7fefffdffffffffdfffff\ncallvalue: 0x800e2713e41f19024d108856c217acdc913ec2e0d3ea006390286a9f23d07fef\nstorage_5: 0xff00\nstorage_2: 0xffffffffffffffffffffff7ffbffffffbffffffffff7fefffdffffffffdfffff\nstorage_1: 0xffffffffffffffffffffff7ffbffffffbffffffffff7fefffdffffffffdfffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_StupidToken: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x002842529757eab873cce9c251087e1b993f9200.sol",
        "function": "fallback",
        "lineno": 10,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2391,
        "code": "urn c;\n    }\n}",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xaffffffffffffbfffffffffffffffffc00000000000000000000000000000300\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_5: 0xff00\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_StupidToken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x002842529757eab873cce9c251087e1b993f9200.sol",
        "function": "fallback",
        "lineno": 29,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}