{"error": null, "issues": [{"address": 1051, "code": "; i++) doAirdrop(_addresses[i], _amount);\n    }\n\n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \n        tokensPerEth = _tokensPerEth;\n        emit TokensPerEthUp", "debug": "calldata_TESTToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TESTToken_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adminClaimAirdropMultiple(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 146, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2946, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 250, "title": "Message call to external contract", "type": "Warning"}, {"address": 2946, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3204\n", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 250, "title": "Multiple Calls", "type": "Information"}, {"address": 3204, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 250, "title": "Message call to external contract", "type": "Warning"}, {"address": 3291, "code": " require(_to != address(0));\n      ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TESTToken: 0x60\ncalldata_TESTToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "transferFrom(address,address,uint256)", "lineno": 189, "title": "Exception state", "type": "Informational"}, {"address": 5723, "code": " require(_to != address(0));\n      ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TESTToken: 0x4\ncalldata_TESTToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "transfer(address,uint256)", "lineno": 189, "title": "Exception state", "type": "Informational"}, {"address": 7364, "code": "  return a - b", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TESTToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TESTToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "burn(uint256)", "lineno": 24, "title": "Exception state", "type": "Informational"}, {"address": 7381, "code": ");\n  ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TESTToken_cpy: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_TESTToken_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_5: 0x0\nstorage_4: 0x1\ncalldata_TESTToken_4 + calldata_TESTToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TESTToken_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `adminClaimAirdropMultiple(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7394, "code": "n c;\n    }\n}\n\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TESTToken_cpy: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_TESTToken_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_5: 0x0\nstorage_4: 0x1\ncalldata_TESTToken_4 + calldata_TESTToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TESTToken_0: 0x67220fd700000000000000000000000000000000000000000000000000000000\ncalldatasize_TESTToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x33125e6c9784d5ec23710fa78512b20ba1466860.sol", "function": "adminClaimAirdropMultiple(address[],uint256)", "lineno": 31, "title": "Exception state", "type": "Informational"}], "success": true}