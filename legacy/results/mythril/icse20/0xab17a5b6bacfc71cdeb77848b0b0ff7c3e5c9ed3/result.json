{
  "contract": "0xab17a5b6bacfc71cdeb77848b0b0ff7c3e5c9ed3",
  "tool": "mythril",
  "start": 1563571565.1535168,
  "end": 1563571693.2204134,
  "duration": 128.0668966770172,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3070,
        "code": "        balances[burner] = ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0xab17a5b6bacfc71cdeb77848b0b0ff7c3e5c9ed3.sol",
        "function": "_function_0x125bfb66",
        "lineno": 227,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8455,
        "code": "  return a - b",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenRecipient_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_6: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0xab17a5b6bacfc71cdeb77848b0b0ff7c3e5c9ed3.sol",
        "function": "burn(uint256)",
        "lineno": 24,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8473,
        "code": "a);\n ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_4: 0xdee7ffb3ffffff973fffe1dffff7ffffffffffb98fd4dffbfffeffebc94d001f\ncalldata_TokenRecipient_32 + 36: 0x3aceffbbea5fa69e3996812fffefffffffffffb740950296b3fefe61c1ea9201\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_32_+_4: 0xe19b4553614924d0a1a3892400000000000000211f0382320a81019e013c17f9\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x3aceffbbea5fa69e3996812fffefffffffffffb740950296b3fefe61c1ea9201\ncalldata_TokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncalldata_TokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0xab17a5b6bacfc71cdeb77848b0b0ff7c3e5c9ed3.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 29,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8486,
        "code": "rn c;\n    }\n}\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_4: 0xd2955cfe9ff8d51fdbbbe0fff13e1c800000003ef72811bccffc1f01e000001c\ncalldata_TokenRecipient_32 + 36: 0xb9620cdda62f6ac8a4b737b5ed3dda3d397100ee9a329fcecefbdd7d6dfbca1d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenRecipient_32_+_4: 0x9308aa0e6d202b0d53a0978a1161134509d1348803d3b81eca83a06149831a5d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb9620cdda62f6ac8a4b737b5ed3dda3d397100ee9a329fcecefbdd7d6dfbca1d\ncalldata_TokenRecipient_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncalldata_TokenRecipient_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0xab17a5b6bacfc71cdeb77848b0b0ff7c3e5c9ed3.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}