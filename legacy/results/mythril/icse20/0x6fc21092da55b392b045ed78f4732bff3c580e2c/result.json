{
  "contract": "0x6fc21092da55b392b045ed78f4732bff3c580e2c",
  "tool": "mythril",
  "start": 1563535966.849497,
  "end": 1563535997.7732415,
  "duration": 30.923744440078735,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 197,
        "debug": "storage_49447583277831049919367225834250252452388266381872102257329440518579731298015: 0xabbbb0cc8dd4b0201d2000000000000000100208080000000000846306084103\ncallvalue: 0xa8888ffc92536ddfe320000000000000001002080800000000008404021155f9\ncalldata_ReverseRegistrar_0: 0x500000000000000000000000000000000000000000000000000000000\ncalldatasize_ReverseRegistrar: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "fallback",
        "lineno": 255,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 882,
        "code": "assembly {\n            // The first word of a string is its length\n            length := mload(label)\n\n            // The first character position is the beginning of the second word\n            position := add(label, 1)\n        }\n\n        // Labels must be at least 4 characters and at most 20 characters\n        if (length < 4 || length > 20) { throw; }\n\n        // Only allow /^[a-z0-9-]*$/\n        for (uint256 i = 0; i < length; i++) {\n            uint8 c;\n            assembly { c := and(mload(position), 0xFF) }\n            //       'a'         'z'           '0'         '9'           '-'\n            if ((c < 0x61 || c > 0x7a) && (c < 0x30 || c > 0x39) && c != 0x2d) {\n                throw;\n            }\n            position++;\n        }\n\n        // Paid too little; participants may pay more (as a donation)\n        if (msg.value < _fee) { throw; }\n\n        // Compute the label and node hash\n        var labelHash = sha3(label);\n        var nodeHash = sha3(_nodeHash, labelHash);\n\n        // This is already owned in ENS\n        if (_ens.owner(nodeHash) != address(0)) { throw; }\n\n        // Make this registrar the owner (so we can set it up before giving it away)\n        _ens.setSubnodeOwner(_nodeHash, labelHash, this);\n\n        // Set up the default resolver and point to the sender\n        _ens.setResolver(nodeHash, _defaultResolver);\n        _defaultResolver.setAddr(nodeHash, msg.sender);\n\n        // Now give it to the sender\n        _ens.setOwner(nodeHash, msg.sender);\n\n        _totalPaid += msg.value;\n        _nameCount++;\n\n        _donations[nodeHash] += msg.value;\n\n        nameRegistered(nodeHash, msg.sender, msg.value);\n        donation(nodeHash, msg.value);\n    }\n\n    /**\n     *  donate(nodeHash)\n     *\n     *  Allow a registered name to donate more and get attribution. This may\n     *  be useful if special limited edition Firefly devices are awarded",
        "debug": "calldata_ReverseRegistrar_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ReverseRegistrar_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_ReverseRegistrar: 0x4\n",
        "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "register(string)",
        "lineno": 143,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1729,
        "code": "       Resolver(_en",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 93,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1729,
        "code": "       Resolver(_en",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2421\nCall at address: 2156\nCall at address: 1942\n",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 93,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1942,
        "code": "o the new admin\n        Resolver(_ens.resolver(_no",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 92,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1942,
        "code": "o the new admin\n        Resolver(_ens.resolver(_no",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2421\nCall at address: 2156\n",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 92,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2156,
        "code": "  *\n     *  This is usef",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 98,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2156,
        "code": "  *\n     *  This is usef",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2421\n",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 98,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2421,
        "code": "(fee)\n     *\n     *  This is useful if the price of ether sky",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "setAdmin(address)",
        "lineno": 97,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2651,
        "code": "returns (address ens, bytes32 nod",
        "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_ReverseRegistrar_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_ReverseRegistrar_0: 0xc37067fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_ReverseRegistrar: 0x4\n",
        "description": "A possible integer overflow exists in the function `donate(bytes32)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "donate(bytes32)",
        "lineno": 211,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3628,
        "code": " labelHash, this);\n\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "register(string)",
        "lineno": 176,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3628,
        "code": " labelHash, this);\n\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3943\n",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "register(string)",
        "lineno": 176,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3943,
        "code": " _defaultResolver.setAddr(nodeHash, msg.sender);",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0x6fc21092da55b392b045ed78f4732bff3c580e2c.sol",
        "function": "register(string)",
        "lineno": 180,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}