{
  "contract": "0x0a17e3788787eac51c23e0d04d14f4743737edef",
  "tool": "mythril",
  "start": 1563643337.7258778,
  "end": 1563643443.1378086,
  "duration": 105.41193079948425,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1614,
        "code": "orInfos;\n\n    PlayerInterface bsCoreContrac",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\ncalldata_TournamentInterface_4: 0x8000\ncalldata_TournamentInterface_0: 0x58c5a1e400000000000000000000000000000000000000000000000000000000\ncalldatasize_TournamentInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x0a17e3788787eac51c23e0d04d14f4743737edef.sol",
        "function": "_function_0x58c5a1e4",
        "lineno": 248,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4576,
        "code": "es;\n\n            // uint256 index =",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TournamentInterface_4: 0x8000\nstorage_12: 0x0\ncaller: 0x0\ncalldata_TournamentInterface_0: 0x3965e75d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TournamentInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x0a17e3788787eac51c23e0d04d14f4743737edef.sol",
        "function": "cancelEnter(address)",
        "lineno": 851,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4689,
        "code": "am[user];\n\n          ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TournamentInterface_4: 0x7fffffffffffffffffffffffffffff0100\nstorage_12: 0x0\ncaller: 0x0\ncalldata_TournamentInterface_0: 0x3965e75d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TournamentInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x0a17e3788787eac51c23e0d04d14f4743737edef.sol",
        "function": "cancelEnter(address)",
        "lineno": 856,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5878,
        "code": "     uint16 attack;\n      uint16 defense;\n      uint16 stam",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TournamentInterface_4: 0x5\ncalldata_TournamentInterface_0: 0x401df5bf00000000000000000000000000000000000000000000000000000000\ncalldatasize_TournamentInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x0a17e3788787eac51c23e0d04d14f4743737edef.sol",
        "function": "_function_0x401df5bf",
        "lineno": 219,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}