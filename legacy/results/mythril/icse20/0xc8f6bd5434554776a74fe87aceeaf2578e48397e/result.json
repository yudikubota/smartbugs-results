{
  "contract": "0xc8f6bd5434554776a74fe87aceeaf2578e48397e",
  "tool": "mythril",
  "start": 1563518383.08318,
  "end": 1563518429.4958591,
  "duration": 46.41267919540405,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 674,
        "code": "uyer[i]] = false;\n            address blacklistedbuyer = buyer[i];\n        }\n        emit Blacklist(blacklistedbuyer);\n    }\n\n    /**\n     * @dev low level token purchase ***DO NOT OVERRIDE***\n     * @param _beneficiary Address performing the token purchase\n     */\n    ",
        "debug": "calldata_WestrendWallet_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WestrendWallet_0: 0x8311139700000000000000000000000000000000000000000000000000000000\ncalldatasize_WestrendWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `blacklistAddr(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/9/0xc8f6bd5434554776a74fe87aceeaf2578e48397e.sol",
        "function": "blacklistAddr(address[])",
        "lineno": 143,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1036,
        "code": "listedAddr[buyer[i]] = true;\n            address whitelistedbuyer = buyer[i];\n        }\n        emit Whitelist(whitelistedbuyer);\n    }\n  \n    /** @dev black list an address **/\n    function blacklistAddr(address[] buyer) external onlyOwner {\n        for (uint i = 0; i < ",
        "debug": "calldata_WestrendWallet_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WestrendWallet_0: 0xb31d61b000000000000000000000000000000000000000000000000000000000\ncalldatasize_WestrendWallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `whitelistAddress(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/9/0xc8f6bd5434554776a74fe87aceeaf2578e48397e.sol",
        "function": "whitelistAddress(address[])",
        "lineno": 134,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3494,
        "code": " @title Ownabl",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xbf4980e25800890b045f44a1c94165be072a2aa673b1cc8fe285e418077ff943\ncallvalue: 0xbe9dfe9ed808e927eaf7749bfd7c06f8888aaa955d85e68d62efe6df46c0797b\nstorage_3: 0xbe9dfe9ed808e927eaf7749bfd7c06f8888aaa955d85e68d62efe6df46c0797a\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_WestrendWallet: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/9/0xc8f6bd5434554776a74fe87aceeaf2578e48397e.sol",
        "function": "fallback",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}