{"error": null, "issues": [{"address": 1023, "code": "(msg.sender, _from, _to, _amount, _data);\n        Transfer(_from, _to, _amount);\n        _checkDestination(_from, _to, _amount, _data);\n        return true;\n    }\n\n    // Internal Functions\n    function _checkDestination(address _from, address _to, uint256 _value, bytes _data) internal {\n        uint256 codeLength;\n ", "debug": "calldata_Token_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xab67aa5800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transferFrom(address,address,uint256,bytes)", "lineno": 153, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1194, "code": "value, data);\n        Transfer(msg.sender, to, value);\n        _checkDestination(msg.sender, to, value, data);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        bytes memory empty;\n        return transfe", "debug": "calldata_Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transfer(address,uint256,bytes)", "lineno": 140, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1728, "code": " true;\n    }\n\n    function transfer(address _to, uint256 _value)", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "approve(address,uint256)", "lineno": 131, "title": "Message call to external contract", "type": "Informational"}, {"address": 1728, "code": " true;\n    }\n\n    function transfer(address _to, uint256 _value)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "approve(address,uint256)", "lineno": 131, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2034, "code": "public constant returns (uint256) {\n    ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "totalSupply()", "lineno": 110, "title": "Message call to external contract", "type": "Informational"}, {"address": 2034, "code": "public constant returns (uint256) {\n    ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "totalSupply()", "lineno": 110, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2612, "code": "s (uint256) {\n        return ControllerInter", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "balanceOf(address)", "lineno": 106, "title": "Message call to external contract", "type": "Informational"}, {"address": 2612, "code": "s (uint256) {\n        return ControllerInter", "debug": "", "description": "A possible transaction order independence vulnerability exists in function balanceOf(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "balanceOf(address)", "lineno": 106, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3311, "code": " _to, _amount, _data);\n        return true;\n    }\n\n    // Internal Functions\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transferFrom(address,address,uint256,bytes)", "lineno": 155, "title": "Message call to external contract", "type": "Informational"}, {"address": 3311, "code": " _to, _amount, _data);\n        return true;\n    }\n\n    // Internal Functions\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4980\nCall at address: 4980\n", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transferFrom(address,address,uint256,bytes)", "lineno": 155, "title": "Multiple Calls", "type": "Information"}, {"address": 3311, "code": " _to, _amount, _data);\n        return true;\n    }\n\n    // Internal Functions\n  ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256,bytes). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transferFrom(address,address,uint256,bytes)", "lineno": 155, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3855, "code": "nder, to, value, data);\n        return true;\n    }\n\n    function", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transfer(address,uint256,bytes)", "lineno": 142, "title": "Message call to external contract", "type": "Informational"}, {"address": 3855, "code": "nder, to, value, data);\n        return true;\n    }\n\n    function", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4980\n", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transfer(address,uint256)", "lineno": 142, "title": "Multiple Calls", "type": "Information"}, {"address": 3855, "code": "nder, to, value, data);\n        return true;\n    }\n\n    function", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256,bytes). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transfer(address,uint256,bytes)", "lineno": 142, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4281, "code": " onlyOwner public returns (bool) {\n        bytes memor", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "allowance(address,address)", "lineno": 114, "title": "Message call to external contract", "type": "Informational"}, {"address": 4281, "code": " onlyOwner public returns (bool) {\n        bytes memor", "debug": "", "description": "A possible transaction order independence vulnerability exists in function allowance(address,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "allowance(address,address)", "lineno": 114, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4980, "code": "tring public constant name = \"Force\";\n    string publ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/8/0x794eb1f985f472c0b44c4041b4198478366f9940.sol", "function": "transferFrom(address,address,uint256,bytes)", "lineno": 179, "title": "Message call to external contract", "type": "Warning"}], "success": true}