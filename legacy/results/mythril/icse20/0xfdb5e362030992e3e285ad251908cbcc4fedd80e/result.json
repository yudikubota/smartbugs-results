{
  "contract": "0xfdb5e362030992e3e285ad251908cbcc4fedd80e",
  "tool": "mythril",
  "start": 1563652463.6549568,
  "end": 1563652946.9203546,
  "duration": 483.2653977870941,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2416,
        "code": "urn c",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TeamToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_TeamToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TeamToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_TeamToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TeamToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TeamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 45,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2429,
        "code": "/**\n * @title ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TeamToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_TeamToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TeamToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_TeamToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TeamToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TeamToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 49,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3047,
        "code": " // If opponent ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 346,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3047,
        "code": " // If opponent ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3595\nCall at address: 3469\n",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 346,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3047,
        "code": " // If opponent ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 346,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3469,
        "code": "  if (op.totalSupply() > 0) {",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3595\n",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 357,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3595,
        "code": " fee is 5%\n                ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 358,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3725,
        "code": "Amount = lostAmount.sub(fee",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 360,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3725,
        "code": "Amount = lostAmount.sub(fee",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 360,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3917,
        "code": "se {\n           ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 364,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3917,
        "code": "se {\n           ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 364,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4640,
        "code": " {\n            price = addr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 382,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4640,
        "code": " {\n            price = addr",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 382,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4792,
        "code": "nction endGameInternal() pr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 392,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4792,
        "code": "nction endGameInternal() pr",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 392,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 9403,
        "code": "       require(gameOppone",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 406,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 9445,
        "code": "ss(0) && gam",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 406,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 9473,
        "code": "= msg.send",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/29/0xfdb5e362030992e3e285ad251908cbcc4fedd80e.sol",
        "function": "fallback",
        "lineno": 406,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}