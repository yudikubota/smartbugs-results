{
  "contract": "0x460db39fb2ba2d5e77241e76b28562baa0d1ae1d",
  "tool": "mythril",
  "start": 1563671377.2139804,
  "end": 1563671541.4273822,
  "duration": 164.2134017944336,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4505,
        "debug": "calldata_WillyCoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WillyCoin_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WillyCoin_0: 0x79cc679000000000000000000000000000000000000000000000000000000000\ncalldatasize_WillyCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burnFrom(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/33/0x460db39fb2ba2d5e77241e76b28562baa0d1ae1d.sol",
        "function": "burnFrom(address,uint256)",
        "lineno": 247,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 6438,
        "code": "   return a - ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_WillyCoin_32 + 4: 0x1\ncalldata_WillyCoin_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WillyCoin_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WillyCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x460db39fb2ba2d5e77241e76b28562baa0d1ae1d.sol",
        "function": "transfer(address,uint256)",
        "lineno": 19,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6456,
        "code": " a);\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WillyCoin_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WillyCoin_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_WillyCoin_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_WillyCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xd73dd623`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/33/0x460db39fb2ba2d5e77241e76b28562baa0d1ae1d.sol",
        "function": "_function_0xd73dd623",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6469,
        "code": "urn c;\n  }\n}\n\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WillyCoin_4: 0x1\ncalldata_WillyCoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WillyCoin_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_WillyCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/33/0x460db39fb2ba2d5e77241e76b28562baa0d1ae1d.sol",
        "function": "_function_0xd73dd623",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}