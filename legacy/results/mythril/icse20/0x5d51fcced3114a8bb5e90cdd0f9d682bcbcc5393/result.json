{
  "contract": "0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393",
  "tool": "mythril",
  "start": 1563470043.2676601,
  "end": 1563470248.9620697,
  "duration": 205.69440960884094,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 3046,
        "code": "(_newOwner) onlyOwner {\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SmartToken_0: 0x3a67a0f600000000000000000000000000000000000000000000000000000000\ncalldatasize_SmartToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393.sol",
        "function": "disableTransfers()",
        "lineno": 112,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3296,
        "code": "(_newOwner) onlyOwner {\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SmartToken_0: 0x4bb278f300000000000000000000000000000000000000000000000000000000\ncalldatasize_SmartToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393.sol",
        "function": "finalize()",
        "lineno": 112,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7046,
        "code": "       return ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_10: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_9,_256): 0x1\nstorage_9: 0xff00\nstorage_7: 0x0\ncaller: 0x0\ncalldata_SmartToken_0: 0x4bb278f300000000000000000000000000000000000000000000000000000000\ncalldatasize_SmartToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393.sol",
        "function": "finalize()",
        "lineno": 19,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7142,
        "code": "c >= ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SmartToken_4: 0xf3d71d660cff11fbd3303f4abfdbbe9317b3e0af48020092f0c5e3b733d2fff0\ncalldata_SmartToken_32 + 36: 0xe86938cd473f93f55b30667433ce7ac826aefff6ba013e0db1294942d1a99435\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SmartToken_32_+_4: 0x8e73fddb14fe53ff4c1a74c5b38fdbcd78cc8000ba003c6a498ed50a9a7117b1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xe86938cd473f93f55b30667433ce7ac826aefff6ba013e0db1294942d1a99435\nstorage_14: 0xff00\nstorage_9: 0xff00\ncalldata_SmartToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SmartToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SmartToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/1/0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7155,
        "code": " return c;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SmartToken_4: 0x8671dcb40fdee8040400000389c1095c530880e0184c197484b8b07eef728dbe\ncalldata_SmartToken_32 + 36: 0x8060008027eee8800400000340480185000000602c00007911201171e73c7d95\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SmartToken_32_+_4: 0x8c36ff26404e72d3f6f63e491f83f60006b9fb1ec2d657fddcaa8c61005c412d\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8060008027eee8800400000340480185000000602c00007911201171e73c7d95\nstorage_14: 0xff00\nstorage_9: 0xff00\ncalldata_SmartToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_SmartToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SmartToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/1/0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}