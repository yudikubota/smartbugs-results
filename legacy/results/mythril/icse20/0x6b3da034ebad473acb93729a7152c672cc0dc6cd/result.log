{"error": null, "issues": [{"address": 432, "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9bfaf87c7e4532e1797fbff1414e781970a00000000000000000000000000000\ncallvalue: 0x640517b56bb1b6ca790100b1004f04e7002000000000000000000000000000ff\ncalldata_HodlDAO_0: 0xdd00000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "fallback", "lineno": 266, "title": "Integer Overflow ", "type": "Warning"}, {"address": 448, "debug": "storage_4: 0x9bfaf87c7e4532e1797fbff1414e781970a00000000000000000000000000000\ncallvalue: 0x640517b56bb1b6ca790100b1004f04e7002000000000000000000000000000ff\ncalldata_HodlDAO_0: 0xdd00000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "fallback", "lineno": 266, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1952, "code": "ol success) {\n        allowance[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n    //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n    //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n    //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\n        return true;\n    }\n\n    /**\n     * ERC20 A contract attempts to get the coins\n     * @notice send `_value` token to `_to` from `_from` on th", "debug": "calldata_HodlDAO_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_HodlDAO_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 114, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4260, "code": "\n        uint256 amount ", "debug": "storage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7e00\ncalldata_HodlDAO_0: 0x8dd7e44b00000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawalComplete()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "withdrawalComplete()", "lineno": 169, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6228, "code": "ata)) { throw; }\n        return true;\n    }\n\n    /**\n     * ERC20 A contract attempts to get the coins\n     * @notice send `", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 121, "title": "Message call to external contract", "type": "Warning"}, {"address": 6287, "code": "   uint256 feeR", "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_HodlDAO_0: 0xd2d7231f00000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "calculateReward(uint256)", "lineno": 202, "title": "Exception state", "type": "Informational"}, {"address": 6889, "code": "er.send(amount + ext", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_HodlDAO_0: 0x72a2d90c00000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\ncallvalue: 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer underflow exists in the function `quickWithdraw()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "quickWithdraw()", "lineno": 250, "title": "Integer Underflow", "type": "Warning"}, {"address": 6920, "code": " function when sendin", "debug": "storage_4: 0x67ff15e2881405828388804009808255a00000000000002000000000f0000400\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6bff85f9d099fff1800000000000000000000000000000000000000000000000\ncalldata_HodlDAO_0: 0x72a2d90c00000000000000000000000000000000000000000000000000000000\ncalldatasize_HodlDAO: 0x4\ncallvalue: 0x11479a8e5ed0f5c03d70a3d70a3d70a3d70a3d70a3d70a3d70a3d70a3d70a3d\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer underflow exists in the function `quickWithdraw()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/26/0x6b3da034ebad473acb93729a7152c672cc0dc6cd.sol", "function": "quickWithdraw()", "lineno": 255, "title": "Integer Underflow", "type": "Warning"}], "success": true}