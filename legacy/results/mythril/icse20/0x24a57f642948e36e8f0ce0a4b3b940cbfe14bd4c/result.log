{"error": null, "issues": [{"address": 1786, "code": " priceChange;\n    // number of change => [pr", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ICO_32 + 4: 0x3\ncalldata_ICO_0: 0xd5cda7000000000000000000000000000000000000000000000000000000000\ncalldatasize_ICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "_function_0x0d5cda70", "lineno": 33, "title": "Exception state", "type": "Informational"}, {"address": 2579, "code": " // event:\n            TokensTransf", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferTokensToContractOwner(uint256)", "lineno": 202, "title": "Message call to external contract", "type": "Informational"}, {"address": 2579, "code": " // event:\n            TokensTransf", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2845\n", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferTokensToContractOwner(uint256)", "lineno": 202, "title": "Multiple Calls", "type": "Information"}, {"address": 2579, "code": " // event:\n            TokensTransf", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferTokensToContractOwner(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferTokensToContractOwner(uint256)", "lineno": 202, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2845, "code": "ner() returns (bool) {\n        return transf", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferTokensToContractOwner(uint256)", "lineno": 208, "title": "Message call to external contract", "type": "Informational"}, {"address": 2845, "code": "ner() returns (bool) {\n        return transf", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferTokensToContractOwner(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferTokensToContractOwner(uint256)", "lineno": 208, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3649, "code": "s;\n    // number of change => [priceIn", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ICO_32 + 4: 0x4\ncalldata_ICO_0: 0x3e083f7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ICO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "_function_0x3e083f7d", "lineno": 38, "title": "Exception state", "type": "Informational"}, {"address": 3878, "code": "mp];\n        PriceChanged(", "debug": "storage_7: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ICO_0: 0x40c48c8d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNewPriceInFinney(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "setNewPriceInFinney(uint256)", "lineno": 126, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4116, "code": "hrow;\n        }\n        // ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_ICO_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ICO_0: 0x7975ce2800000000000000000000000000000000000000000000000000000000\ncalldatasize_ICO: 0x4\nstorage_3: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "buyTokens(uint256,uint256)", "lineno": 163, "title": "Exception state", "type": "Informational"}, {"address": 4321, "code": "20TokensContract.transfer(msg.sende", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "buyTokens(uint256,uint256)", "lineno": 171, "title": "Message call to external contract", "type": "Informational"}, {"address": 4321, "code": "20TokensContract.transfer(msg.sende", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4571\n", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "buyTokens(uint256,uint256)", "lineno": 171, "title": "Multiple Calls", "type": "Information"}, {"address": 4321, "code": "20TokensContract.transfer(msg.sende", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyTokens(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "buyTokens(uint256,uint256)", "lineno": 171, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4571, "code": "            // check if tx changed ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "buyTokens(uint256,uint256)", "lineno": 172, "title": "Message call to external contract", "type": "Informational"}, {"address": 4571, "code": "            // check if tx changed ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyTokens(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "buyTokens(uint256,uint256)", "lineno": 172, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5620, "code": "nsferTokensTo(msg.sender, _quantity", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferAllTokensToOwner()", "lineno": 215, "title": "Message call to external contract", "type": "Informational"}, {"address": 5620, "code": "nsferTokensTo(msg.sender, _quantity", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferAllTokensToOwner(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "transferAllTokensToOwner()", "lineno": 215, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6917, "code": "    event Result(address transactionIn", "debug": "calldata_ICO_4: 0x5420f860cbaa38a1a0b3b190441c5a362d821016921e61f0365c77d2d7e1804c\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_4: 0x0\ncaller: 0x0\ncalldata_ICO_0: 0x40c48c8d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ICO: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setNewPriceInFinney(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/34/0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c.sol", "function": "setNewPriceInFinney(uint256)", "lineno": 82, "title": "Integer Overflow ", "type": "Warning"}], "success": true}