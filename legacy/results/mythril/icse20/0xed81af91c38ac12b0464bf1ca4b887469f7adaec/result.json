{
  "contract": "0xed81af91c38ac12b0464bf1ca4b887469f7adaec",
  "tool": "mythril",
  "start": 1563547257.7869475,
  "end": 1563547337.0174942,
  "duration": 79.23054671287537,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1023,
        "code": "mount, _data);\n        Transfer(_from, _to, _amount);\n        _checkDestination(_from, _to, _amount, _data);\n        return true;\n    }\n\n    // Internal Functions\n    function _checkDestination(address _from, address _to, uint256 _value, bytes _data) internal {\n        uint256 codeLength;\n        assembly {\n         ",
        "debug": "calldata_Token_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xab67aa5800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transferFrom(address,address,uint256,bytes)",
        "lineno": 180,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1194,
        "code": "fer(msg.sender, to, value);\n        _checkDestination(msg.sender, to, value, data);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        bytes memory empty;\n        return transferFrom(_from, _to, _value, e",
        "debug": "calldata_Token_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 168,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1728,
        "code": "transfer(address _to, uint256 _value) public returns (bool) {\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "approve(address,uint256)",
        "lineno": 161,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1728,
        "code": "transfer(address _to, uint256 _value) public returns (bool) {\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "approve(address,uint256)",
        "lineno": 161,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2034,
        "code": "nt256) {\n        return ControllerInterf",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "totalSupply()",
        "lineno": 137,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2034,
        "code": "nt256) {\n        return ControllerInterf",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "totalSupply()",
        "lineno": 137,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2612,
        "code": "n ControllerInterface(owner).totalSupply();\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "balanceOf(address)",
        "lineno": 134,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2612,
        "code": "n ControllerInterface(owner).totalSupply();\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function balanceOf(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "balanceOf(address)",
        "lineno": 134,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3311,
        "code": "    return true;\n    }\n\n    // Internal Functions\n    function _checkDestinatio",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transferFrom(address,address,uint256,bytes)",
        "lineno": 183,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3311,
        "code": "    return true;\n    }\n\n    // Internal Functions\n    function _checkDestinatio",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4980\nCall at address: 4980\n",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transferFrom(address,address,uint256,bytes)",
        "lineno": 183,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3311,
        "code": "    return true;\n    }\n\n    // Internal Functions\n    function _checkDestinatio",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256,bytes). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transferFrom(address,address,uint256,bytes)",
        "lineno": 183,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3855,
        "code": "     return true;\n    }\n\n    function transferFrom(address _from",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 170,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3855,
        "code": "     return true;\n    }\n\n    function transferFrom(address _from",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4980\n",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transfer(address,uint256)",
        "lineno": 170,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3855,
        "code": "     return true;\n    }\n\n    function transferFrom(address _from",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transfer(address,uint256,bytes). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 170,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4281,
        "code": "bool) {\n        bytes memory empty;\n        _checkDest",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "allowance(address,address)",
        "lineno": 141,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4281,
        "code": "bool) {\n        bytes memory empty;\n        _checkDest",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function allowance(address,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "allowance(address,address)",
        "lineno": 141,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4980,
        "code": "es32 => address) addresses;\n        mapping(bytes32 =",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/14/0xed81af91c38ac12b0464bf1ca4b887469f7adaec.sol",
        "function": "transferFrom(address,address,uint256,bytes)",
        "lineno": 204,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}