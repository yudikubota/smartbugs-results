{
  "contract": "0x6bb6cdacabca8ccde8e015dee0def578e1af9574",
  "tool": "mythril",
  "start": 1563558228.4308763,
  "end": 1563558590.9380388,
  "duration": 362.50716257095337,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1215,
        "code": "_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        if (!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) {throw;}\n        return true;\n    }\n}",
        "debug": "calldata_WednesdayCoin_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WednesdayCoin_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_WednesdayCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x6bb6cdacabca8ccde8e015dee0def578e1af9574.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 131,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2125,
        "code": "          allowed[_from",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WednesdayCoin_32_+_4: 0x800000000000000000008eb2e34648ee0801030820000000000000000000a000\ncalldata_WednesdayCoin_32 + 36: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WednesdayCoin_4: 0x800000000000000003ffd0badcb9b7000000002781000000000000000006bfff\ncalldata_WednesdayCoin_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WednesdayCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/11/0x6bb6cdacabca8ccde8e015dee0def578e1af9574.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 69,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3927,
        "code": "       return true;\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/11/0x6bb6cdacabca8ccde8e015dee0def578e1af9574.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 138,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}