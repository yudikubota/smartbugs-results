{
  "contract": "0x59e0520c300657a8218e6c21a2a48682f9942b66",
  "tool": "mythril",
  "start": 1563577029.3515785,
  "end": 1563577234.2236788,
  "duration": 204.87210035324097,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 977,
        "code": "ype == 0){\n            ERC20StandardToken erc20Token = new ERC20StandardToken(from, _name, _symbol, _decimals, _totalSupply, _mintable);\n            userAddresses.push(erc20Token);\n            userDeployedContracts[from] = userAddresses;\n            deployedContracts[numContracts] = erc20Token;\n            numContracts++;\n            emit LogERC20TokenCreated(erc20Token);\n\t        return erc20Token;\n        }else{\n            ERC223StandardToken erc223Token = new ERC223StandardToken(from, _name, _symbol, _decimals, _totalSupply, _mintable);\n            userAddresses.push(erc223Token);\n            userDeployedContracts[from] = userAddresses;\n            deployedContracts[numContracts] = erc223Token;\n            numContracts++;\n            emit LogERC223TokenCreated(erc223Token);\n\t        return erc223Token;\n        }\n        \n     }\n    \n}",
        "debug": "calldata_TokenMaker_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenMaker_0: 0x9817d81f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMaker: 0x4\n",
        "description": "A possible integer overflow exists in the function `create(string,string,uint256,uint256,bool,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "create(string,string,uint256,uint256,bool,uint256)",
        "lineno": 442,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1545,
        "code": "    if(!vip){\n\t\t    require(sendValue >= txFee);\n        }\n        \n        address[] userAddresses = userDeployedContracts[from];\n\n ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenMaker_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_TokenMaker_0: 0xc00be1a000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMaker: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getUserCreatedTokens(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "getUserCreatedTokens(address)",
        "lineno": 436,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1636,
        "code": "turns (bool) {\n        return _addr == owner || vipList[_addr];\n    }\n\n\n    function setReceiverAddress(address _addr) onlyOwner public {\n        require(_addr != addre",
        "debug": "calldata_TokenMaker_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenMaker_0: 0xc8813ffd00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMaker: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addToVIPList(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "addToVIPList(address[])",
        "lineno": 400,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2389,
        "code": ");\n          erc223.transfer(_receiverAddres",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function _function_0x313ce567. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 373,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2584,
        "code": "IPFee);\n      address",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 380,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2584,
        "code": "IPFee);\n      address",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2811\n",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 380,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2811,
        "code": "ress = getReceiverAddress();\n      requir",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 381,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3038,
        "code": "st(address[] _vipList)",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 387,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3038,
        "code": "st(address[] _vipList)",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3265\n",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 387,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3265,
        "code": "blic {\n        for (uint i =0;i<_vipList.length;i",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x313ce567",
        "lineno": 387,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3362,
        "code": "\n      if(_type == 0){\n          ERC20 erc20 = ERC20(_toke",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenMaker_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_TokenMaker_4: 0x0\ncalldata_TokenMaker_0: 0x349a9d3f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMaker: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "_function_0x349a9d3f",
        "lineno": 366,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5707,
        "code": "_vipList[i]] = false;\n        }\n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function registerVIP(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "registerVIP()",
        "lineno": 396,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5953,
        "code": "rAddresses = userDeployedContracts[f",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenMaker_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_TokenMaker_0: 0xc00be1a000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMaker: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getUserCreatedTokens(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "getUserCreatedTokens(address)",
        "lineno": 440,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5955,
        "code": "rAddresses = userDeployedContracts[f",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenMaker_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_TokenMaker_0: 0xc00be1a000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenMaker: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getUserCreatedTokens(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/15/0x59e0520c300657a8218e6c21a2a48682f9942b66.sol",
        "function": "getUserCreatedTokens(address)",
        "lineno": 440,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}