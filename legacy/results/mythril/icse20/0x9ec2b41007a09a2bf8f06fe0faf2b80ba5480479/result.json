{
  "contract": "0x9ec2b41007a09a2bf8f06fe0faf2b80ba5480479",
  "tool": "mythril",
  "start": 1563510980.5904205,
  "end": 1563511177.466818,
  "duration": 196.8763976097107,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 303,
        "code": "er(string pubKey) public{\n        require(bytes(pubKey).length <= 64 && bytes(pubKey).length >= 50 );\n        uint holding = tokenAddress.balanceOf(msg.sender);\n        _ethToPubKey[msg.sender] = pubKey;\n        emit AccountRegister(msg.sender, pubKey, holding);\n    }\n\n    function keys(",
        "debug": "calldata_TokenRequestStub_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenRequestStub_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRequestStub: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x9ec2b41007a09a2bf8f06fe0faf2b80ba5480479.sol",
        "function": "register(string)",
        "lineno": 16,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 823,
        "code": "nceOf(msg.sender);\n        _ethToP",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x9ec2b41007a09a2bf8f06fe0faf2b80ba5480479.sol",
        "function": "register(string)",
        "lineno": 18,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1224,
        "code": "ct TokenReclaim{\n    TokenRequestStub tokenAddress;\n    mapping (address=>string) internal _ethToPubKey;\n    event AccountRegister (address ethAccount, string pubKey, uint holding);\n\n    constructor() public{\n        tokenAddress = TokenRequestStub(0x3833ddA0AEB6947b98cE454d89366cBA8Cc55528);\n    }\n\n    function register(string pubKey) public{\n        require(bytes(pubKey).length <= 64 && bytes(pubKey).length >= 50 );\n        uint holding = tokenAddress.balanceOf(msg.sender);\n        _ethToPubKey[msg.sender] = pubKey;\n        emit AccountRegister(msg.sender, pubKey, holding);\n    }\n\n    function keys(address addr) constant public returns (string){\n        return _ethToPubKey[addr];\n    }\n}",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xeaab54ef67c903fc83145d301eb97fefffffffffffffffffffffffffffffffc5\ncalldata_TokenRequestStub_4 + calldata_TokenRequestStub_4: 0x40\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe0f8932319fd7effdf3ae1bcf7f7dfd6f863c84350c5e564fa805e011020b7c\nreturndatasize: 0x20\nretval_823: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRequestStub_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRequestStub: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x9ec2b41007a09a2bf8f06fe0faf2b80ba5480479.sol",
        "function": "register(string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1258,
        "code": "ct TokenReclaim{\n    TokenRequestStub tokenAddress;\n    mapping (address=>string) internal _ethToPubKey;\n    event AccountRegister (address ethAccount, string pubKey, uint holding);\n\n    constructor() public{\n        tokenAddress = TokenRequestStub(0x3833ddA0AEB6947b98cE454d89366cBA8Cc55528);\n    }\n\n    function register(string pubKey) public{\n        require(bytes(pubKey).length <= 64 && bytes(pubKey).length >= 50 );\n        uint holding = tokenAddress.balanceOf(msg.sender);\n        _ethToPubKey[msg.sender] = pubKey;\n        emit AccountRegister(msg.sender, pubKey, holding);\n    }\n\n    function keys(address addr) constant public returns (string){\n        return _ethToPubKey[addr];\n    }\n}",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x9ec2b41007a09a2bf8f06fe0faf2b80ba5480479.sol",
        "function": "register(string)",
        "lineno": 7,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1289,
        "code": "ct TokenReclaim{\n    TokenRequestStub tokenAddress;\n    mapping (address=>string) internal _ethToPubKey;\n    event AccountRegister (address ethAccount, string pubKey, uint holding);\n\n    constructor() public{\n        tokenAddress = TokenRequestStub(0x3833ddA0AEB6947b98cE454d89366cBA8Cc55528);\n    }\n\n    function register(string pubKey) public{\n        require(bytes(pubKey).length <= 64 && bytes(pubKey).length >= 50 );\n        uint holding = tokenAddress.balanceOf(msg.sender);\n        _ethToPubKey[msg.sender] = pubKey;\n        emit AccountRegister(msg.sender, pubKey, holding);\n    }\n\n    function keys(address addr) constant public returns (string){\n        return _ethToPubKey[addr];\n    }\n}",
        "debug": "calldata_TokenRequestStub_4 + calldata_TokenRequestStub_4: 0x32\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_823: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenRequestStub_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenRequestStub: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x9ec2b41007a09a2bf8f06fe0faf2b80ba5480479.sol",
        "function": "register(string)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}