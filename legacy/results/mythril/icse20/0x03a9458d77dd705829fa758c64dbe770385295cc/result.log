{"error": null, "issues": [{"address": 467, "code": "_policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "calldata_PolicyRegistry_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 473, "code": "_policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "calldata_PolicyRegistry_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1523, "code": "t PolicyRegistry {\n    /* Events */\n\n    /** @dev Emitted when a policy is updated.\n     *  @param _subcourtID The ID of the policy's subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\n\n    /* Storage */\n\n    address public governor;\n    mapping(uint => string) public policies;\n\n    /* Modifiers */\n\n    /** @dev Requires that the sender is the governor. */\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the `PolicyRegistry` contract.\n     *  @param _governor The governor's address.\n     */\n    constructor(address _governor) public {governor = _governor;}\n\n    /* External */\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\n\n    /** @dev Sets the policy for the specified subcourt.\n     *  @param _subcourtID The ID of the specified subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "keccac_keccac_calldata_PolicyRegistry_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_calldata_PolicyRegistry_4: 0x2\ncaller: 0x0\nstorage_0: 0x0\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1552, "code": "t PolicyRegistry {\n    /* Events */\n\n    /** @dev Emitted when a policy is updated.\n     *  @param _subcourtID The ID of the policy's subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\n\n    /* Storage */\n\n    address public governor;\n    mapping(uint => string) public policies;\n\n    /* Modifiers */\n\n    /** @dev Requires that the sender is the governor. */\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the `PolicyRegistry` contract.\n     *  @param _governor The governor's address.\n     */\n    constructor(address _governor) public {governor = _governor;}\n\n    /* External */\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\n\n    /** @dev Sets the policy for the specified subcourt.\n     *  @param _subcourtID The ID of the specified subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "calldata_PolicyRegistry_4 + calldata_PolicyRegistry_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_keccac_calldata_PolicyRegistry_4: 0x20\ncaller: 0x0\nstorage_0: 0x0\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1566, "code": "t PolicyRegistry {\n    /* Events */\n\n    /** @dev Emitted when a policy is updated.\n     *  @param _subcourtID The ID of the policy's subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\n\n    /* Storage */\n\n    address public governor;\n    mapping(uint => string) public policies;\n\n    /* Modifiers */\n\n    /** @dev Requires that the sender is the governor. */\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the `PolicyRegistry` contract.\n     *  @param _governor The governor's address.\n     */\n    constructor(address _governor) public {governor = _governor;}\n\n    /* External */\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\n\n    /** @dev Sets the policy for the specified subcourt.\n     *  @param _subcourtID The ID of the specified subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "calldata_PolicyRegistry_4 + calldata_PolicyRegistry_32 + 4: 0xc450000000000000000000000000000000000000000000000000000000000006\nstorage_keccac_calldata_PolicyRegistry_4: 0x20\ncalldata_PolicyRegistry_32 + 4: 0xc6bfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8\ncaller: 0x0\nstorage_0: 0x0\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1583, "code": "t PolicyRegistry {\n    /* Events */\n\n    /** @dev Emitted when a policy is updated.\n     *  @param _subcourtID The ID of the policy's subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\n\n    /* Storage */\n\n    address public governor;\n    mapping(uint => string) public policies;\n\n    /* Modifiers */\n\n    /** @dev Requires that the sender is the governor. */\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the `PolicyRegistry` contract.\n     *  @param _governor The governor's address.\n     */\n    constructor(address _governor) public {governor = _governor;}\n\n    /* External */\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\n\n    /** @dev Sets the policy for the specified subcourt.\n     *  @param _subcourtID The ID of the specified subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "calldata_PolicyRegistry_4 + calldata_PolicyRegistry_32 + 4: 0x35\nstorage_keccac_calldata_PolicyRegistry_4: 0x20\ncalldata_PolicyRegistry_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1\ncaller: 0x0\nstorage_0: 0x0\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1588, "code": "t PolicyRegistry {\n    /* Events */\n\n    /** @dev Emitted when a policy is updated.\n     *  @param _subcourtID The ID of the policy's subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\n\n    /* Storage */\n\n    address public governor;\n    mapping(uint => string) public policies;\n\n    /* Modifiers */\n\n    /** @dev Requires that the sender is the governor. */\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the `PolicyRegistry` contract.\n     *  @param _governor The governor's address.\n     */\n    constructor(address _governor) public {governor = _governor;}\n\n    /* External */\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\n\n    /** @dev Sets the policy for the specified subcourt.\n     *  @param _subcourtID The ID of the specified subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}", "debug": "calldata_PolicyRegistry_4 + calldata_PolicyRegistry_32 + 4: 0x7fdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9\nkeccac_keccac_calldata_PolicyRegistry_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_calldata_PolicyRegistry_4: 0x20\ncalldata_PolicyRegistry_32 + 4: 0x3f1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5\ncaller: 0x0\nstorage_0: 0x0\ncalldata_PolicyRegistry_0: 0xf00adf5e00000000000000000000000000000000000000000000000000000000\ncalldatasize_PolicyRegistry: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setPolicy(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x03a9458d77dd705829fa758c64dbe770385295cc.sol", "function": "setPolicy(uint256,string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}], "success": true}