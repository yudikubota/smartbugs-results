{
  "contract": "0xdcafac0a993f9875bf28d740519e13219eb586c0",
  "tool": "mythril",
  "start": 1563665919.8214107,
  "end": 1563666170.0834334,
  "duration": 250.26202273368835,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 362,
        "code": "   amountRaised = 0;\n       ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/35/0xdcafac0a993f9875bf28d740519e13219eb586c0.sol",
        "function": "fallback",
        "lineno": 96,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 597,
        "code": "           \n            bala",
        "debug": "callvalue: 0xb2ca30ad957af0006ba4e7c6e4a78ea2c02504a9cf8823ed01162c7304015831\nblock_number: 0x0\nstorage_8: 0x1\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ETHERMINI: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xdcafac0a993f9875bf28d740519e13219eb586c0.sol",
        "function": "fallback",
        "lineno": 103,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 605,
        "code": "           \n            balanceOf[ms",
        "debug": "The exception is triggered under the following conditions:\n\nblock_number: 0x0\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x1\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldatasize_ETHERMINI: 0x3\nstorage_5: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xdcafac0a993f9875bf28d740519e13219eb586c0.sol",
        "function": "fallback",
        "lineno": 103,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4062,
        "code": "he sender\n        balanceOf[_from",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ETHERMINI_32_+_4: 0x8ecd2502510e6b90fed8122af8b9d53a82ffcb383034f2dd693876b2f7ad7b4b\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ETHERMINI_4: 0xa34d3d4342afa13970d088c8c001c13e683decbf7fb6eaea41a0e448e639f048\ncalldata_ETHERMINI_32 + 36: 0x211e8500045868936021715fb01dd95aa886815191414081c047c180e88073d5\ncalldata_ETHERMINI_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x211e8500045868936021715fb01dd95aa886815191414081c047c180e88073d5\ncalldata_ETHERMINI_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ETHERMINI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xdcafac0a993f9875bf28d740519e13219eb586c0.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 63,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4449,
        "code": "   /* Send coins */\n    function ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ETHERMINI_32_+_4: 0x20000000d065989040180a13810e7ef3043c0a37bfc4d2f3fc00f13cffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ETHERMINI_4: 0xffffffff04006281ac06f1a3f609d5bbbbbeb5beeaeaecbaacbabaae807fffff\ncalldata_ETHERMINI_32 + 36: 0x7fffffffffdc38001100003ffffffffffffffffffffff0000000000080200000\ncalldata_ETHERMINI_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7fffffffffdc38001100003ffffffffffffffffffffff0000000000080200000\ncalldata_ETHERMINI_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ETHERMINI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xdcafac0a993f9875bf28d740519e13219eb586c0.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 72,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}