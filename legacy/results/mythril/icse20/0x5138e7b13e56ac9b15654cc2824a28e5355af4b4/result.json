{
  "contract": "0x5138e7b13e56ac9b15654cc2824a28e5355af4b4",
  "tool": "mythril",
  "start": 1563495646.731747,
  "end": 1563496464.7600434,
  "duration": 818.0282964706421,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2112,
        "code": "eBet(uint num, ad",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherDice_4: 0x0\nstorage_6: 0x0\ncalldata_EtherDice_0: 0x22af00fa00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherDice: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0x5138e7b13e56ac9b15654cc2824a28e5355af4b4.sol",
        "function": "_function_0x22af00fa",
        "lineno": 37,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2677,
        "code": "draw(uint _",
        "debug": "calldata_EtherDice_4: 0xc413b0dd75d72929529254aa49267896930b98004c01b7578009baefdbf37c9a\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0xc413b0dd75d72929529254aa49267896930b98004c01b7578009baefdbf37c9a\nstorage_3: 0x0\ncaller: 0xd25bd6c44d6cf3c0358ab30ed5e89f2090409a79\ncalldata_EtherDice_0: 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherDice: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `withdraw(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0x5138e7b13e56ac9b15654cc2824a28e5355af4b4.sol",
        "function": "withdraw(uint256)",
        "lineno": 118,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2854,
        "code": "dOwner(uint _amount) in",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2854\nCall at address: 2854\n",
        "filename": "/unique_chucks/6/0x5138e7b13e56ac9b15654cc2824a28e5355af4b4.sol",
        "function": "withdraw(uint256)",
        "lineno": 112,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2854,
        "code": "dOwner(uint _amount) in",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/6/0x5138e7b13e56ac9b15654cc2824a28e5355af4b4.sol",
        "function": "withdraw(uint256)",
        "lineno": 112,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      }
    ],
    "success": true
  }
}