{"error": null, "issues": [{"address": 4847, "code": "eta {\n\n    uint constant MIN_SUBSCRIPTION_DAI_CENTS = 100;\n\n    event Register(address indexed receiver);\n\n    struct SubscriptionTemplate {\n        bytes32     slug;\n        string      name;\n        string      description;\n        string      url;\n        uint        daiCents;        // 32 bytes\n        address     receiver;        // 20 bytes\n        uint32      interval;        //  4 bytes\n    }\n\n    mapping (address => SubscriptionTemplate) public subscriptions;\n    mapping (bytes32 => SubscriptionTemplate) public subscriptionsBySlug;\n\n\n    function registerSubscription(\n        bytes32 slug, \n        string calldata name, \n        string calldata description, \n        string calldata url,\n        uint daiCents, \n        uint32 interval) external \n    {\n        require(daiCents >= MIN_SUBSCRIPTION_DAI_CENTS, \"Subsciption amount too low\");\n        require(interval >= 86400, \"Interval must be at least 1 day\");\n        require(interval <= 31557600, \"Interval must be at most 1 year\");\n        require(subscriptionsBySlug[slug].daiCents == 0 || subscriptionsBySlug[slug].receiver == msg.sender, \"Slug is already reserved\");\n\n        subscriptions[msg.sender] = SubscriptionTemplate(slug, name, description, url, daiCents, msg.sender, interval);\n        subscriptionsBySlug[slug] = subscriptions[msg.sender];\n\n        emit Register(msg.sender);\n    }\n\n    function unregisterSubscription() external {\n        require(subscriptions[msg.sender].daiCents > 0, \"No subcription found for address\");\n        delete subscriptionsBySlug[subscriptions[msg.sender].slug];\n        delete subscriptions[msg.sender];\n    }\n\n}", "debug": "storage_keccac_storage_0_+\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n3: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n1: 0xe0200000000000000000000000107fefffcdffffffffffffffffffffffffffc5\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller_+\n1: 0xfc817fbfffbffeddffff905800002236a10150980ba284900580000000000002\nstorage_keccac_storage_0_+\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n2: 0x0\nstorage_keccac_storage_0_+\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n1: 0x0\nstorage_4 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SubscryptoMeta_0: 0x1c944b9f00000000000000000000000000000000000000000000000000000000\ncalldatasize_SubscryptoMeta: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `unregisterSubscription()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xa6d525313dde96182e6847ae388ba9817ffb136a.sol", "function": "unregisterSubscription()", "lineno": 21, "title": "Integer Overflow ", "type": "Warning"}], "success": true}