{
  "contract": "0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe",
  "tool": "mythril",
  "start": 1563507445.4788904,
  "end": 1563507506.0872855,
  "duration": 60.60839509963989,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2789,
        "code": "deploy\n    BlackBoxInterfa",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "isGamePaused()",
        "lineno": 198,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3076,
        "code": "function getCreateUnicornPrice() public view returns (uint) {\n        return ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "getHybridizationPrice(uint256)",
        "lineno": 379,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3339,
        "code": "true,\n            listIndex: hybridizatio",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 260,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3339,
        "code": "true,\n            listIndex: hybridizatio",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3554\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 260,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3554,
        "code": "  });\n        hybridizationList[hybr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 262,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3731,
        "code": "nicornId, _price);\n    }\n\n\n    function acceptHybridization(uint _firstUnicornId, uint _secondUnicornId) whenNotPaused public payable {\n        require(unicornTo",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 265,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3741,
        "code": "nicornId, _price);\n    }\n\n\n    function acceptHybridization(uint _firstUnicornId, uint _secondUnicornId) whenNotPaused public payable {\n        require(unicornTo",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 265,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3772,
        "code": "nicornId, _price);\n    }\n\n\n    function acceptHybridization(uint _firstUnicornId, uint _secondUnicornId) whenNotPaused public payable {\n        require(unicornTo",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 265,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3794,
        "code": "nicornId));\n        req",
        "debug": "storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 + keccac_calldata_UnicornTokenInterface_4: 0x0\nretval_3554: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_3339: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UnicornTokenInterface_0: 0x2394a79700000000000000000000000000000000000000000000000000000000\ncalldatasize_UnicornTokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `makeHybridization(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 270,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3798,
        "code": "nicornId));\n        req",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 270,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3815,
        "code": "g.sender, _secondUnicornId));\n        require(_secondUn",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "makeHybridization(uint256,uint256)",
        "lineno": 270,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 4100,
        "code": "nicornToken.minusTourFreezingTime(_u",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 363,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4100,
        "code": "nicornToken.minusTourFreezingTime(_u",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4777\nCall at address: 4609\nCall at address: 4343\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 363,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4343,
        "code": "nManagement.subTourFreezingPrice()));\n        unicornToken.minusTourFreezingTime(_un",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 362,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4343,
        "code": "nManagement.subTourFreezingPrice()));\n        unicornToken.minusTourFreezingTime(_un",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4777\nCall at address: 4609\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 362,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4609,
        "code": "}\n\n    function getHybridizationPri",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 364,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4609,
        "code": "}\n\n    function getHybridizationPri",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4777\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 364,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4777,
        "code": "cornManagement.subTourFreezingTime());\n    }\n\n    function getHybridizationPric",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusFreezingTime(uint256)",
        "lineno": 363,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5001,
        "code": "Hybridization(uint _unicornId) internal ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "_function_0x2cf42a6c",
        "lineno": 301,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5265,
        "code": "ceOf(this) > 0) {\n            candyPowerToken",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "getCreateUnicornPrice()",
        "lineno": 389,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5497,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "getOfferPrice(uint256)",
        "lineno": 489,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5702,
        "code": "nityAddress());\n        _;\n    }\n\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createPresaleUnicorns(uint256,address)",
        "lineno": 145,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5702,
        "code": "nityAddress());\n        _;\n    }\n\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5951\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createPresaleUnicorns(uint256,address)",
        "lineno": 145,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5951,
        "code": "  modifier onlyBreeding() ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createPresaleUnicorns(uint256,address)",
        "lineno": 170,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6919,
        "code": "eInCandy() public view returns (uint) {\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusTourFreezingTime(uint256)",
        "lineno": 370,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6919,
        "code": "eInCandy() public view returns (uint) {\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7428\nCall at address: 7162\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusTourFreezingTime(uint256)",
        "lineno": 370,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7162,
        "code": ".price);\n    }\n\n    function getEtherFeeForPriceInCandy() public view returns (uint) {\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusTourFreezingTime(uint256)",
        "lineno": 367,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7162,
        "code": ".price);\n    }\n\n    function getEtherFeeForPriceInCandy() public view returns (uint) {\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7428\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusTourFreezingTime(uint256)",
        "lineno": 367,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 7428,
        "code": "unction getCreateUnicornPriceInCandy() ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "minusTourFreezingTime(uint256)",
        "lineno": 374,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7756,
        "code": "er));\n        _;\n    }\n\n    modifier",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "setGen0Step(uint256)",
        "lineno": 150,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7875,
        "code": ", uint _price) p",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "setGen0Step(uint256)",
        "lineno": 432,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 8074,
        "code": "Management() {\n        req",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createUnicornForCandy()",
        "lineno": 165,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8074,
        "code": "Management() {\n        req",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 8278\n",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createUnicornForCandy()",
        "lineno": 165,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8278,
        "code": "saleCount.add(_count) <= gen0Pr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createUnicornForCandy()",
        "lineno": 324,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8925,
        "code": "      uint price = offers[_unicornId].pri",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "sellUnicorn(uint256,uint256)",
        "lineno": 450,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 9407,
        "code": "rnBreeding is UnicornAccessControl {\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "deleteOffer(uint256)",
        "lineno": 195,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 20247,
        "code": "      emit Hybridizatio",
        "debug": "storage_12: 0x0\nstorage_2 + keccac_calldata_UnicornTokenInterface_4: 0xff00\nreturndatasize: 0x20\nretval_5001: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UnicornTokenInterface_0: 0x2cf42a6c00000000000000000000000000000000000000000000000000000000\ncalldatasize_UnicornTokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `_function_0x2cf42a6c`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "_function_0x2cf42a6c",
        "lineno": 307,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 20507,
        "code": "turn c;\n    }\n",
        "debug": "The exception is triggered under the following conditions:\n\nretval_5702: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_9: 0x1\ncalldata_UnicornTokenInterface_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_5951: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UnicornTokenInterface_0: 0x3ae50ce700000000000000000000000000000000000000000000000000000000\ncalldatasize_UnicornTokenInterface: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x4fdb91dbce6cee2e08cf85d26eaa3e9bca0c12fe.sol",
        "function": "createPresaleUnicorns(uint256,address)",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}