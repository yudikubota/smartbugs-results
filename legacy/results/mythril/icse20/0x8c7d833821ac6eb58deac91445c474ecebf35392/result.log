{"error": null, "issues": [{"address": 3147, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 289, "title": "Message call to external contract", "type": "Warning"}, {"address": 3147, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3405\n", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 289, "title": "Multiple Calls", "type": "Information"}, {"address": 3405, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "withdrawAltcoinTokens(address)", "lineno": 289, "title": "Message call to external contract", "type": "Warning"}, {"address": 3492, "code": "(_amount <= balances[msg.sender]);\n", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_Token3DAX: 0x60\ncalldata_Token3DAX_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "transferFrom(address,address,uint256)", "lineno": 227, "title": "Exception state", "type": "Informational"}, {"address": 6193, "code": "(_amount <= balances[msg.sender]);\n", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_Token3DAX: 0x4\ncalldata_Token3DAX_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "transfer(address,uint256)", "lineno": 227, "title": "Exception state", "type": "Informational"}, {"address": 8009, "code": "   }\n\n    /*\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token3DAX_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token3DAX_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token3DAX: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "burn(uint256)", "lineno": 42, "title": "Exception state", "type": "Informational"}, {"address": 8026, "code": ";\n   ", "debug": "calldata_Token3DAX_32 + 36: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\ncalldatasize_Token3DAX: 0x64\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token3DAX_32_+_4: 0xa8511371907d295662825497115ba082b6a492f6b7f433cff7fbddd4ebff6ff5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token3DAX_4: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\ncalldata_Token3DAX_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token3DAX_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "transferFrom(address,address,uint256)", "lineno": 50, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8039, "code": "act AltcoinTok", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token3DAX_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_Token3DAX_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_5: 0x0\nstorage_4: 0x1\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token3DAX_0: 0x8144650a00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token3DAX: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0x8c7d833821ac6eb58deac91445c474ecebf35392.sol", "function": "transferTokenTo(address,uint256)", "lineno": 54, "title": "Exception state", "type": "Informational"}], "success": true}