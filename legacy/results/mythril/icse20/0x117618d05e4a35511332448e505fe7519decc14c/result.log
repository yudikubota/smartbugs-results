{"error": null, "issues": [{"address": 1022, "code": "returns  (uint) {\n        return rounds[_round].winnersFunds[_winner];\n    }\n    \n    function getRoundFunds(uint _round) public view re", "debug": "calldatasize_iRNG: 0x8000000000000000000000000000000000000000000000000000000000000020\nstorage_8 + keccac_calldata_iRNG_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_iRNG_0: 0x713d89a00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundWinningTickets(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundWinningTickets(uint256)", "lineno": 363, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1892, "code": " memory) {\n        return rounds[_round].participants;\n    }\n    \n    function getWinningFunds(uint _round, address _winner) ", "debug": "calldatasize_iRNG: 0x8000000000000000000000000000000000000000000000000000000000000020\nstorage_9 + keccac_calldata_iRNG_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_iRNG_0: 0x2e88147100000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundWinners(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundWinners(uint256)", "lineno": 359, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2269, "code": " {\n        return rounds[_round].roundFunds;\n    }\n    \n    function getParticipantFunds(uint _round, address _participant) public view", "debug": "calldatasize_iRNG: 0x8000000000000000000000000000000000000000000000000000000000000020\nstorage_4 + keccac_calldata_iRNG_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_iRNG_0: 0x37305df500000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundParticipants(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundParticipants(uint256)", "lineno": 367, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3616, "code": "rt);\n    event RoundStateChanged(uint", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_iRNG: 0xa0\nstorage_0 + keccac_calldata_iRNG_4: 0x600\ncalldata_iRNG_0: 0x8c65c81f00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "_function_0x8c65c81f", "lineno": 147, "title": "Exception state", "type": "Informational"}, {"address": 5070, "code": "on getRoundFunds(uint _round) public", "debug": "calldatasize_iRNG: 0x400000000000000000000000\nstorage_8 + keccac_calldata_iRNG_4: 0x8421084210842108421084210842108421084210842108421084210842108420\ncalldata_iRNG_0: 0x713d89a00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundWinningTickets(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundWinningTickets(uint256)", "lineno": 367, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5072, "code": "on getRoundFunds(uint _round) public", "debug": "calldatasize_iRNG: 0x8000000000000000000000000000000000000000000000000000000000000020\nstorage_8 + keccac_calldata_iRNG_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iRNG_0: 0x713d89a00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundWinningTickets(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundWinningTickets(uint256)", "lineno": 367, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7333, "code": "gFunds(uint _round, address _", "debug": "calldatasize_iRNG: 0x400000000000000000000000\nstorage_9 + keccac_calldata_iRNG_4: 0x8421084210842108421084210842108421084210842108421084210842108420\ncalldata_iRNG_0: 0x2e88147100000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundWinners(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundWinners(uint256)", "lineno": 363, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7335, "code": "gFunds(uint _round, address _", "debug": "calldatasize_iRNG: 0x8000000000000000000000000000000000000000000000000000000000000020\nstorage_9 + keccac_calldata_iRNG_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iRNG_0: 0x2e88147100000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundWinners(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundWinners(uint256)", "lineno": 363, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7541, "code": "constant public ORGANISER_PERCENT = 20;\n    uint constant public ROUND_FUND_PERC", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_iRNG: 0xa0\ncalldata_iRNG_4: 0x0\nstorage_2: 0x0\ncalldata_iRNG_0: 0x317a474800000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "_function_0x317a4748", "lineno": 132, "title": "Exception state", "type": "Informational"}, {"address": 7633, "code": " _round, address _participant) pub", "debug": "calldatasize_iRNG: 0x400000000000000000000000\nstorage_4 + keccac_calldata_iRNG_4: 0x8421084210842108421084210842108421084210842108421084210842108420\ncalldata_iRNG_0: 0x37305df500000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundParticipants(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundParticipants(uint256)", "lineno": 371, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7635, "code": " _round, address _participant) pub", "debug": "calldatasize_iRNG: 0x8000000000000000000000000000000000000000000000000000000000000020\nstorage_4 + keccac_calldata_iRNG_4: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iRNG_0: 0x37305df500000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getRoundParticipants(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRoundParticipants(uint256)", "lineno": 371, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8921, "code": ";\n    }\n    \n    function findWinTickets", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRandomNumber(uint256,uint256)", "lineno": 266, "title": "Message call to external contract", "type": "Informational"}, {"address": 8921, "code": ";\n    }\n    \n    function findWinTickets", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getRandomNumber(uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "getRandomNumber(uint256,uint256)", "lineno": 266, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9007, "code": "state;\n    }\n    \n    function setOrganiser(ad", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_iRNG: 0xa0\nstorage_0 + keccac_calldata_iRNG_4: 0x600\ncalldata_iRNG_0: 0x7954d67b00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "checkRoundState(uint256)", "lineno": 312, "title": "Exception state", "type": "Informational"}, {"address": 9627, "code": "\ncontract Ownable ", "debug": "calldatasize_iRNG: 0x400000000000000000000000000000000000000000000000000000000000\nstorage_8 + keccac_calldata_iRNG_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 + keccac_calldata_iRNG_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x0\ncaller: 0x0\ncalldata_iRNG_0: 0x873f24e100000000000000000000000000000000000000000000000000000000\n", "description": "A possible integer overflow exists in the function `processRound(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "processRound(uint256,uint256)", "lineno": 2, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9749, "code": "      return true;\n    }\n\n    fu", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_iRNG: 0x4000000000000000000000000000000000000000000000000000000000000040\nstorage_3 + keccac_calldata_iRNG_4: 0x1\nstorage_1 + keccac_calldata_iRNG_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x0\ncaller: 0x0\ncalldata_iRNG_0: 0x873f24e100000000000000000000000000000000000000000000000000000000\nstorage_8 + keccac_calldata_iRNG_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "processRound(uint256,uint256)", "lineno": 583, "title": "Exception state", "type": "Informational"}, {"address": 12985, "code": "(1),\n            rounds[_round].w", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "startLottery(uint256)", "lineno": 568, "title": "Message call to external contract", "type": "Informational"}, {"address": 12985, "code": "(1),\n            rounds[_round].w", "debug": "", "description": "A possible transaction order independence vulnerability exists in function startLottery(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "startLottery(uint256)", "lineno": 568, "title": "Transaction order dependence", "type": "Warning"}, {"address": 15226, "code": " setChecker(address _checker) public onlyOwner {\n        require(_checker != a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "processLottery()", "lineno": 555, "title": "Message call to external contract", "type": "Informational"}, {"address": 15226, "code": " setChecker(address _checker) public onlyOwner {\n        require(_checker != a", "debug": "", "description": "A possible transaction order independence vulnerability exists in function processLottery(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "processLottery()", "lineno": 555, "title": "Transaction order dependence", "type": "Warning"}, {"address": 16451, "code": "\ncontract Ownable ", "debug": "calldatasize_iRNG: 0x200\nstorage_4 + keccac_storage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_iRNG_0: 0x378c060500000000000000000000000000000000000000000000000000000000\n", "description": "A possible integer overflow exists in the function `buyTickets(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "buyTickets(address)", "lineno": 2, "title": "Integer Overflow ", "type": "Warning"}, {"address": 17620, "code": " func", "debug": "storage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_12: 0x0\ncaller: 0x0\ncalldata_iRNG_0: 0xfbd48e1500000000000000000000000000000000000000000000000000000000\ncalldatasize_iRNG: 0x4\n", "description": "A possible integer overflow exists in the function `processLottery()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "processLottery()", "lineno": 84, "title": "Integer Overflow ", "type": "Warning"}, {"address": 18116, "code": "NER_SHARE).div(100);\n\n            _parti", "debug": "", "description": "A possible transaction order independence vulnerability exists in function sendGain(address,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "sendGain(address,uint256,uint256)", "lineno": 623, "title": "Transaction order dependence", "type": "Warning"}, {"address": 18252, "code": "cipant, fundsToWinner, _fromRound, _t", "debug": "The exception is triggered under the following conditions:\n\nstorage_0 + keccac_calldata_iRNG_32_+_4: 0x8000\ncalldatasize_iRNG: 0x80\ncalldata_iRNG_32 + 36: 0x0\nreturndatasize: 0x20\nretval_18116: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_iRNG_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_iRNG_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_iRNG_0: 0x57a9d59600000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x117618d05e4a35511332448e505fe7519decc14c.sol", "function": "sendGain(address,uint256,uint256)", "lineno": 628, "title": "Exception state", "type": "Informational"}], "success": true}