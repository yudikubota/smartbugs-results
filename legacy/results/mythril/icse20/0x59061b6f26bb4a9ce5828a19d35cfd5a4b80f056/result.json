{
  "contract": "0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056",
  "tool": "mythril",
  "start": 1563504332.4454086,
  "end": 1563504522.8117807,
  "duration": 190.36637210845947,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2798,
        "code": "    return ledger.balanceOf(_addr);\n    }\n}\n\ncont",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "approve(address,uint256)",
        "lineno": 246,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2798,
        "code": "    return ledger.balanceOf(_addr);\n    }\n}\n\ncont",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function approve(address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "approve(address,uint256)",
        "lineno": 246,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3491,
        "code": "unt)) { return false",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "totalSupply()",
        "lineno": 219,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3491,
        "code": "unt)) { return false",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function totalSupply(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "totalSupply()",
        "lineno": 219,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4127,
        "code": "        return ledger.allowance(_from, _to); \n    }\n\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 234,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4127,
        "code": "        return ledger.allowance(_from, _to); \n    }\n\n    ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function transferFrom(address,address,uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 234,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4744,
        "code": "Checkins) returns(bool) {\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "burn(uint256)",
        "lineno": 198,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4744,
        "code": "Checkins) returns(bool) {\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5017\n",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "burn(uint256)",
        "lineno": 198,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4744,
        "code": "Checkins) returns(bool) {\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function burn(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "burn(uint256)",
        "lineno": 198,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5017,
        "code": "       if (int(ledger.balanceOf(msg.sender)) > n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "burn(uint256)",
        "lineno": 200,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5017,
        "code": "       if (int(ledger.balanceOf(msg.sender)) > n",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function burn(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "burn(uint256)",
        "lineno": 200,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5860,
        "code": "ng (address => uint256)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "balanceOf(address)",
        "lineno": 257,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5860,
        "code": "ng (address => uint256)",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function balanceOf(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "balanceOf(address)",
        "lineno": 257,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6117,
        "code": "  * Burning -- We allow any user to bur",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "claimUnrented()",
        "lineno": 184,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6117,
        "code": "  * Burning -- We allow any user to bur",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6461\n",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "claimUnrented()",
        "lineno": 184,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 6117,
        "code": "  * Burning -- We allow any user to bur",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimUnrented(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "claimUnrented()",
        "lineno": 184,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6461,
        "code": " uint balance = ledger.balanceOf(msg.sender);\n        if",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "claimUnrented()",
        "lineno": 189,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6461,
        "code": " uint balance = ledger.balanceOf(msg.sender);\n        if",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimUnrented(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "claimUnrented()",
        "lineno": 189,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 6714,
        "code": "n claimUnrented() {  \n      ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "rentOut(uint256)",
        "lineno": 177,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6714,
        "code": "n claimUnrented() {  \n      ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function rentOut(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "rentOut(uint256)",
        "lineno": 177,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 10673,
        "code": "Dilution(address, uint);\n\n  ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 132,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10673,
        "code": "Dilution(address, uint);\n\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10948\n",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 132,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 10673,
        "code": "Dilution(address, uint);\n\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function completeCrowdsale(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 132,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 10740,
        "code": "lute(address _destAddr, u",
        "debug": "retval_10673: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_6: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nstorage_0: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_Token_0: 0x3cbf41d200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `completeCrowdsale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 134,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10746,
        "code": "lute(address _destAddr, u",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 134,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 10948,
        "code": " onlyOwner {\n        if (amount ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 134,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10948,
        "code": " onlyOwner {\n        if (amount ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function completeCrowdsale(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 134,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 10994,
        "code": "\n    function ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/7/0x59061b6f26bb4a9ce5828a19d35cfd5a4b80f056.sol",
        "function": "completeCrowdsale()",
        "lineno": 25,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}