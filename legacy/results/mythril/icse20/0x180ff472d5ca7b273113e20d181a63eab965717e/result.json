{
  "contract": "0x180ff472d5ca7b273113e20d181a63eab965717e",
  "tool": "mythril",
  "start": 1563255419.2500248,
  "end": 1563255438.5036328,
  "duration": 19.253607988357544,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1782,
        "code": " {\n        return (coreContract",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0x180ff472d5ca7b273113e20d181a63eab965717e.sol",
        "function": "setup(address,address)",
        "lineno": 409,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1913,
        "code": "tieId) == _claimant);\n    }\n\n   ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0x180ff472d5ca7b273113e20d181a63eab965717e.sol",
        "function": "setup(address,address)",
        "lineno": 410,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1978,
        "code": "rows the NFT, assigning ownership ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0x180ff472d5ca7b273113e20d181a63eab965717e.sol",
        "function": "setup(address,address)",
        "lineno": 413,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3809,
        "code": "thor https://BlockChainArchitect.io\ncontract PawShop ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x180ff472d5ca7b273113e20d181a63eab965717e.sol",
        "function": "withdraw()",
        "lineno": 466,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}