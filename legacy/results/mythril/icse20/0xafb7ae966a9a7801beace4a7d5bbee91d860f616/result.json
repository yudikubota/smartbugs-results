{
  "contract": "0xafb7ae966a9a7801beace4a7d5bbee91d860f616",
  "tool": "mythril",
  "start": 1563622135.953038,
  "end": 1563622281.0809948,
  "duration": 145.12795686721802,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 805,
        "code": "onlyOwner public {\n\t    Detail = _detail;\n\t}\n\t\n\tfunction tokenPrice(uint256 _price) onlyOw",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xfe7c226500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenDetail(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "tokenDetail(string)",
        "lineno": 45,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1264,
        "code": "r,WeiRatio,msg.value,tokens);\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "fallback",
        "lineno": 81,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1336,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "fallback",
        "lineno": 83,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1810,
        "code": "ithdrawToken() onlyOwner public  {\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawEther(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "withdrawEther()",
        "lineno": 68,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2533,
        "code": "her() onlyOwner public  {\n    ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2533,
        "code": "her() onlyOwner public  {\n    ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1264\n",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2533,
        "code": "her() onlyOwner public  {\n    ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3083,
        "code": "dress _buyer) private {\n\t\trequire(_bu",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "withdrawToken()",
        "lineno": 72,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3083,
        "code": "dress _buyer) private {\n\t\trequire(_bu",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawToken(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "withdrawToken()",
        "lineno": 72,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3586,
        "code": "kableToken private token;\n\tstring public Detail;\n\tuint256 public SellAmount = 0;\n\tuint256 public WeiRatio = 0;\n\n\tevent TokenAddressChange(address token);\n\tevent Buy(address sender,uint256 rate,uint256 value,uint256 amount);\n\n    function () payable public {\n        buyTokens(msg.sender);\n    }\n    \n\tfunction tokenDetail(string memory _detail) onlyOwner public {\n\t    Detail = _detail;\n\t}\n\t\n\tfunction tokenPrice(uint256 _price) onlyOwner public {\n\t    WeiRatio = _price;\n\t}\n\n\tfunction tokenAddress(address _token) onlyOwner public {\n\t    require(_token != address(0), \"Token address cannot be null-address\");\n\t    token = LockableToken(_token);\n\t    emit TokenAddressChange(_token);\n\t}\n\n\tfunction tokenBalance() public view returns (uint256) {\n\t    return token.balanceOf(address(this));\n\t}\n\n    function withdrawEther() onlyOwner public  {\n    \trequire(address(this).balance > 0, \"Not have Ether for withdraw\");\n        owner.transfer(address(this).balance);\n    }\n    \n    function withdrawToken() onlyOwner public  {\n    \ttoken.transfer(owner, tokenBalance());\n    }\n\n\tfunction buyTokens(address _buyer) private {\n\t\trequire(_buyer != 0x0);\n\t\trequire(msg.value > 0);\n\n\t\tuint256 tokens = msg.value * WeiRatio;\n\t\trequire(tokenBalance() >= tokens, \"Not enough tokens for sale\");\n\t\ttoken.transfer(_buyer, tokens);\n\t\tSellAmount += tokens;\n\n\t\temit Buy(msg.sender,WeiRatio,msg.value,tokens);\n\t}\n}",
        "debug": "calldata_Token_4 + calldata_Token_4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xfe7c226500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenDetail(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "tokenDetail(string)",
        "lineno": 33,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3600,
        "code": "kableToken private token;\n\tstring public Detail;\n\tuint256 public SellAmount = 0;\n\tuint256 public WeiRatio = 0;\n\n\tevent TokenAddressChange(address token);\n\tevent Buy(address sender,uint256 rate,uint256 value,uint256 amount);\n\n    function () payable public {\n        buyTokens(msg.sender);\n    }\n    \n\tfunction tokenDetail(string memory _detail) onlyOwner public {\n\t    Detail = _detail;\n\t}\n\t\n\tfunction tokenPrice(uint256 _price) onlyOwner public {\n\t    WeiRatio = _price;\n\t}\n\n\tfunction tokenAddress(address _token) onlyOwner public {\n\t    require(_token != address(0), \"Token address cannot be null-address\");\n\t    token = LockableToken(_token);\n\t    emit TokenAddressChange(_token);\n\t}\n\n\tfunction tokenBalance() public view returns (uint256) {\n\t    return token.balanceOf(address(this));\n\t}\n\n    function withdrawEther() onlyOwner public  {\n    \trequire(address(this).balance > 0, \"Not have Ether for withdraw\");\n        owner.transfer(address(this).balance);\n    }\n    \n    function withdrawToken() onlyOwner public  {\n    \ttoken.transfer(owner, tokenBalance());\n    }\n\n\tfunction buyTokens(address _buyer) private {\n\t\trequire(_buyer != 0x0);\n\t\trequire(msg.value > 0);\n\n\t\tuint256 tokens = msg.value * WeiRatio;\n\t\trequire(tokenBalance() >= tokens, \"Not enough tokens for sale\");\n\t\ttoken.transfer(_buyer, tokens);\n\t\tSellAmount += tokens;\n\n\t\temit Buy(msg.sender,WeiRatio,msg.value,tokens);\n\t}\n}",
        "debug": "calldata_Token_4 + calldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xfe7c226500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenDetail(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/24/0xafb7ae966a9a7801beace4a7d5bbee91d860f616.sol",
        "function": "tokenDetail(string)",
        "lineno": 33,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}