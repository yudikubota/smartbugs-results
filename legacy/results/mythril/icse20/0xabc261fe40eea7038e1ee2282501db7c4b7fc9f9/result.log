{"error": null, "issues": [{"address": 215, "code": "resses, uint256[] _amount) public onlyOwner {\n    \n    uint256 addressCount = _addresses.length;\n    uint256 amountCount = _amount.length;\n    require(addressCount == amountCount);\n    \n    for (uint256 i = 0; i < addressCount; i++) {\n        uint256 _tokensAmount = _amount[i] * 10 ** uint256(18);\n        tokenReward.transfer(_addresses[i], _tokensAmount);\n    }\n  }\n\n    /**\n     * Withdraw an \"amount\" of availabl", "debug": "calldata_token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_token_0: 0x659de63b00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `distributeToken(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0xabc261fe40eea7038e1ee2282501db7c4b7fc9f9.sol", "function": "distributeToken(address[],uint256[])", "lineno": 40, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1147, "code": "nt);\n    }\n  }\n\n    /**\n     * Withdraw an \"amount", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xabc261fe40eea7038e1ee2282501db7c4b7fc9f9.sol", "function": "distributeToken(address[],uint256[])", "lineno": 48, "title": "Message call to external contract", "type": "Informational"}, {"address": 1147, "code": "nt);\n    }\n  }\n\n    /**\n     * Withdraw an \"amount", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1147\n", "filename": "/unique_contracts/0xabc261fe40eea7038e1ee2282501db7c4b7fc9f9.sol", "function": "distributeToken(address[],uint256[])", "lineno": 48, "title": "Multiple Calls", "type": "Information"}, {"address": 1147, "code": "nt);\n    }\n  }\n\n    /**\n     * Withdraw an \"amount", "debug": "", "description": "A possible transaction order independence vulnerability exists in function distributeToken(address[],uint256[]). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0xabc261fe40eea7038e1ee2282501db7c4b7fc9f9.sol", "function": "distributeToken(address[],uint256[])", "lineno": 48, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1566, "code": "    /**\n     * Set a token contract address\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xabc261fe40eea7038e1ee2282501db7c4b7fc9f9.sol", "function": "withdrawToken(address,uint256)", "lineno": 62, "title": "Message call to external contract", "type": "Informational"}, {"address": 1566, "code": "    /**\n     * Set a token contract address\n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawToken(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_contracts/0xabc261fe40eea7038e1ee2282501db7c4b7fc9f9.sol", "function": "withdrawToken(address,uint256)", "lineno": 62, "title": "Transaction order dependence", "type": "Warning"}], "success": true}