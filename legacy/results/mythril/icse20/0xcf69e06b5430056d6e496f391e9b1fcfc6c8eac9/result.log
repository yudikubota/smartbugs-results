{"error": null, "issues": [{"address": 1239, "code": "= tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n            return true;\n        }\n    }\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    func", "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/35/0xcf69e06b5430056d6e496f391e9b1fcfc6c8eac9.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 166, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3962, "code": "value` tokens from the system irreversibly\n     *\n     * @param _value", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/35/0xcf69e06b5430056d6e496f391e9b1fcfc6c8eac9.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 176, "title": "Message call to external contract", "type": "Warning"}], "success": true}