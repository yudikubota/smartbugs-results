{
  "contract": "0x58d94584f2c091449cdc4e3e40453101ec30dfe3",
  "tool": "mythril",
  "start": 1563698046.834562,
  "end": 1563698628.8059378,
  "duration": 581.9713757038116,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 360,
        "code": ";\n\n/**\n\n  EN:\n  Mu",
        "debug": "storage_3: 0xc00000000\ncallvalue: 0xf01dd9c3b20001\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ngas: 0x3d090\ncalldata_BestMultiplierV4_0: 0x400000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplierV4: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 1,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 572,
        "code": "0) {\n                    d",
        "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff3ff3fffffe\ncallvalue: 0xf3ffff27ffffc00\ngas: 0x3d090\ncalldata_BestMultiplierV4_0: 0x300000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplierV4: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 196,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 710,
        "code": "     delete queue[idx",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2003\nCall at address: 1710\nCall at address: 2003\nCall at address: 2003\nCall at address: 1710\nCall at address: 2003\nCall at address: 1710\nCall at address: 2003\nCall at address: 1710\n",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 203,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1548,
        "code": "estor\n    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x11188060803d00000\ncallvalue: 0x3b87fa7ff00000\nstorage_0: 0x0\nstorage_2: 0x1\nretval_710: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x8ac7230489e7ffff\ngas: 0x3d090\ncalldatasize_BestMultiplierV4: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 219,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1574,
        "code": " returns (uint) {\n      ",
        "debug": "storage_3: 0xce8c06986100000\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n3*storage_2: 0xea1631414611fb1fb1fb1fb1fb1fb200000000000000000060000000000a96cf\ncallvalue: 0x366959b85400000\nstorage_0: 0x0\nstorage_2: 0x0\nretval_710: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x8ac7230489e7ffff\ngas: 0x3d090\ncalldatasize_BestMultiplierV4: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 223,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1710,
        "code": "alInvested <= 100 ether) {\n   ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 234,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 2003,
        "code": "        } else if (totalI",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "fallback",
        "lineno": 249,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 2323,
        "code": "}\n\n            // Pay ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_BestMultiplierV4_4: 0x0\nstorage_0: 0x0\ncalldata_BestMultiplierV4_0: 0xddf0b00900000000000000000000000000000000000000000000000000000000\ncalldatasize_BestMultiplierV4: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/37/0x58d94584f2c091449cdc4e3e40453101ec30dfe3.sol",
        "function": "_function_0xddf0b009",
        "lineno": 164,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}