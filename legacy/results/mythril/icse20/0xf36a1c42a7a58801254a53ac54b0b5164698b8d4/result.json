{
  "contract": "0xf36a1c42a7a58801254a53ac54b0b5164698b8d4",
  "tool": "mythril",
  "start": 1563624963.4942772,
  "end": 1563625191.3243113,
  "duration": 227.83003401756287,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 477,
        "code": "appId The id of the app\n   * @param _address The address of the wallet\n   * @param _uid The user-id\n   */\n  function getUpgradability(",
        "debug": "calldata_StoreManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StoreManager_0: 0x1343ed0500000000000000000000000000000000000000000000000000000000\ncalldatasize_StoreManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `isStoreSet(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "isStoreSet(string)",
        "lineno": 515,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 769,
        "code": " modifier onlyClaimer() {\n    require(msg.sender == claimer || (newClaimer != address(0) && msg.sender == newClaimer));\n    _;\n  }\n\n\n  modifier onlyCustomerService() {\n    require(msg.sender == owner || customerService[msg.sender] == true);\n    _;\n  }\n\n\n  modifier whenStoreSet(\n    uint _appId\n  ) {\n    require(appNicknames32[_appId] != 0x0);\n    _;\n  }\n\n\n\n  // internal gett",
        "debug": "calldata_StoreManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StoreManager_0: 0x340e47f800000000000000000000000000000000000000000000000000000000\ncalldatasize_StoreManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `activateStore(string,bool)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "activateStore(string,bool)",
        "lineno": 405,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1086,
        "code": "_address);\n    require(_store.getAppNickname() == _appNickname32);\n    uint _appId = _store.getAppId();\n    require(appNicknames32[_appId] == 0x0);\n    appNicknames32[_appId] = _appNickname32;\n    appNicknames[_appId] = _appNickname;\n    __appIds[_appNickname] = _appId;\n\n    __stores[_appId] = Store(\n      _store,\n      _address,\n      true\n    );\n    totalStores++;\n    StoreSet(_appNickname, _address);\n    StoreActive(_appNickname, _address, true);\n  }\n\n\n  /**\n   * @dev Sets the claimer which will verify the ownership and call to set a tweedentity\n   * @param _address Address of the claimer\n   */\n  function setClaimer(\n    address _address\n  )\n  public\n  onlyOwner\n  {\n    require(_address != address(0));\n    claimer = _address;\n    ClaimerSet(_ad",
        "debug": "calldata_StoreManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StoreManager_0: 0x543a9ce400000000000000000000000000000000000000000000000000000000\ncalldatasize_StoreManager: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `setAStore(string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "setAStore(string,address)",
        "lineno": 284,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3628,
        "code": "inimumTime;\n    MinimumTimeBef",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "unsetIdentity(uint256,address)",
        "lineno": 652,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3628,
        "code": "inimumTime;\n    MinimumTimeBef",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function unsetIdentity(uint256,address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "unsetIdentity(uint256,address)",
        "lineno": 652,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5158,
        "code": "_store,\n      _address,",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "setAStore(string,address)",
        "lineno": 293,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5158,
        "code": "_store,\n      _address,",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5333\n",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "setAStore(string,address)",
        "lineno": 293,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 5333,
        "code": "  StoreSet(_appNi",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "setAStore(string,address)",
        "lineno": 298,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6679,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "unsetMyIdentity(uint256)",
        "lineno": 656,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6679,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function unsetMyIdentity(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/26/0xf36a1c42a7a58801254a53ac54b0b5164698b8d4.sol",
        "function": "unsetMyIdentity(uint256)",
        "lineno": 656,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}