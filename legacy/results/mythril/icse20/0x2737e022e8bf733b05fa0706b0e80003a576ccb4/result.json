{
  "contract": "0x2737e022e8bf733b05fa0706b0e80003a576ccb4",
  "tool": "mythril",
  "start": 1563509533.5467694,
  "end": 1563509851.859173,
  "duration": 318.31240367889404,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 454,
        "code": " is updated by an admin. */\n    event To",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenValueRelayer_4: 0x0\nstorage_0: 0x0\ncalldata_TokenValueRelayer_0: 0x5e383d2100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "_function_0x5e383d21",
        "lineno": 208,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 853,
        "code": "ddress) {\n        /* Setup access to our other c",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 218,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 930,
        "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 236,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 991,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 236,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1016,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 236,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1032,
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_0: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 236,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1055,
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 236,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1240,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1324,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "storage_0: 0x413eb400000002088020000002000010576c118a884fd9a3152000004b020000\nstorage_1 +\n18569430475105882587588266137607568536673111973893317399460219858819262702947 +\n3*storage_0: 0x7403a9bcd8faddf5d1e685cff3ba22e265c519effac9cb3ec6759905c67efc51\nkeccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n3*storage_0: 0xff8007b08649eba518062bad4024f63b0581e1673f0b574bf7ba80dfcf20ca00\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1353,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_0: 0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1358,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1367,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0xd2deea42652e1b544009a3557fffffffffffffffffffffffffffffffffffffff\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0x54901320010adb77e589f67c9ffffffbfffffffffffffffffffffffffffffff1\nstorage_0: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1384,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0x21\nstorage_0: 0x114497efa43949652cbf00000000000000000000000000000000000000000000\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1389,
        "code": "        uint256 timestamp;\n    }\n\n    /* An array defining all the token values in history. */\n    TokenValueRepresentation[] public values;\n    \n    /* Defines the admin contract we interface with for credentails. */\n    AuthenticationManager authenticationManager;\n\n    /* Fired when the token value is updated by an admin. */\n    event TokenValue(uint256 value, string currency, uint256 timestamp);\n\n    /* This modifier allows a method to only be called by current admins */\n    modifier adminOnly {\n        if (!authenticationManager.isCurrentAdmin(msg.sender)) throw;\n        _;\n    }\n\n    /* Create our contract and specify the location of other addresses. */\n    function TokenValueRelayer(address _authenticationManagerAddress) {\n        /* Setup access to our other contracts and validate their versions */\n        authenticationManager = AuthenticationManager(_authenticationManagerAddress);\n    }\n\n    /* Returns how many token values are present in the history. */\n    function tokenValueCount() constant returns (uint256 _count) {\n        _count = values.length;\n    }\n\n    /* Defines the current value of the token. */\n    function tokenValuePublish(uint256 _value, string _currency, uint256 _timestamp) adminOnly {\n        values.length++;\n        values[values.length - 1] = TokenValueRepresentation(_value, _currency,_timestamp);\n\n        /* Audit this */\n        TokenValue(_value, _currency, _timestamp);\n    }\n}",
        "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0xdff87fffffffffffffffffffdffffffc00000003fffffffc000037c7fbf30212\nmem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)) +\n32: 0x1fffffffffffffffffffffffffffffffffffe00000001ffffffefdff7fff0\nstorage_0: 0x847001050db40000007fffffffffffffffffffffffffffffffffffffffffe800\nkeccac_1_+\n18569430475105882587588266137607568536673111973893317399460219858819262702947_+\n3*storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenValueRelayer_4 + calldata_TokenValueRelayer_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_853: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenValueRelayer_0: 0xed8f02d000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenValueRelayer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `tokenValuePublish(uint256,string,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x2737e022e8bf733b05fa0706b0e80003a576ccb4.sol",
        "function": "tokenValuePublish(uint256,string,uint256)",
        "lineno": 199,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}