{"error": null, "issues": [{"address": 335, "code": " sendFunds(address _recipient, Acc _fr", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 629, "title": "Message call to external contract", "type": "Informational"}, {"address": 335, "code": " sendFunds(address _recipient, Acc _fr", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1274\nCall at address: 1019\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 629, "title": "Multiple Calls", "type": "Information"}, {"address": 335, "code": " sendFunds(address _recipient, Acc _fr", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 629, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1019, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 660, "title": "Message call to external contract", "type": "Informational"}, {"address": 1019, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1274\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 660, "title": "Multiple Calls", "type": "Information"}, {"address": 1019, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 660, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1097, "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x0\nretval_1019: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_335: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x29377d6000000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 660, "title": "Exception state", "type": "Informational"}, {"address": 1171, "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_4: 0x80\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x1\nreturndatasize: 0x20\nretval_1019: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb5675ee400000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0xb5675ee4", "lineno": 660, "title": "Exception state", "type": "Informational"}, {"address": 1274, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 660, "title": "Message call to external contract", "type": "Informational"}, {"address": 1274, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1468\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0xb5675ee4", "lineno": 660, "title": "Multiple Calls", "type": "Information"}, {"address": 1274, "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "fallback", "lineno": 660, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1368, "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_32 + 4: 0x6\ncalldata_FlightDelayLedgerInterface_4: 0x0\nretval_1274: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x1\nreturndatasize: 0x20\nretval_1019: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0xb5675ee400000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0xb5675ee4", "lineno": 660, "title": "Exception state", "type": "Informational"}, {"address": 1468, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0xb5675ee4", "lineno": 660, "title": "Message call to external contract", "type": "Informational"}, {"address": 1468, "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xb5675ee4. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0xb5675ee4", "lineno": 660, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1698, "code": " _from, _amount);\n            _success", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x29377d61", "lineno": 641, "title": "Message call to external contract", "type": "Informational"}, {"address": 1698, "code": " _from, _amount);\n            _success", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1468\nCall at address: 1274\nCall at address: 1019\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x29377d61", "lineno": 641, "title": "Multiple Calls", "type": "Information"}, {"address": 1698, "code": " _from, _amount);\n            _success", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x29377d61. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x29377d61", "lineno": 641, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1810, "code": "ccess = tr", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_4: 0x80\nreturndatasize: 0x20\nretval_1698: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x29377d6100000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x29377d61", "lineno": 644, "title": "Exception state", "type": "Informational"}, {"address": 2265, "code": " < _amount) {\n            return false", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "withdraw(uint256)", "lineno": 632, "title": "Message call to external contract", "type": "Informational"}, {"address": 2265, "code": " < _amount) {\n            return false", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1468\nCall at address: 1274\nCall at address: 1019\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "withdraw(uint256)", "lineno": 632, "title": "Multiple Calls", "type": "Information"}, {"address": 2265, "code": " < _amount) {\n            return false", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "withdraw(uint256)", "lineno": 632, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2703, "code": "ublic {\n        require(FD_AC.checkPer", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x50bed043", "lineno": 650, "title": "Message call to external contract", "type": "Informational"}, {"address": 2703, "code": "ublic {\n        require(FD_AC.checkPer", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1274\nCall at address: 1019\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x50bed043", "lineno": 650, "title": "Multiple Calls", "type": "Information"}, {"address": 2703, "code": "ublic {\n        require(FD_AC.checkPer", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x50bed043. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x50bed043", "lineno": 650, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2855, "code": "one in FD_DB", "debug": "The exception is triggered under the following conditions:\n\ncalldata_FlightDelayLedgerInterface_32 + 4: 0x80\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncalldata_FlightDelayLedgerInterface_32 + 36: 0x0\nreturndatasize: 0x20\nretval_2703: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FlightDelayLedgerInterface_0: 0x50bed04300000000000000000000000000000000000000000000000000000000\ncalldatasize_FlightDelayLedgerInterface: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "_function_0x50bed043", "lineno": 656, "title": "Exception state", "type": "Informational"}, {"address": 3347, "code": "\n        FD_AC.setPermissionById(103, \"FD.Payout\");\n        FD_A", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "setContracts()", "lineno": 593, "title": "State change after external call", "type": "Warning"}, {"address": 3540, "code": "onById(103, \"FD.Ledger\");\n        FD_AC.setP", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "setContracts()", "lineno": 595, "title": "Message call to external contract", "type": "Informational"}, {"address": 6740, "code": " uint public MAX_DEPAR", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "setContracts()", "lineno": 447, "title": "Message call to external contract", "type": "Informational"}, {"address": 6740, "code": " uint public MAX_DEPAR", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3540\nCall at address: 6740\n", "filename": "/unique_chucks/32/0xb9255262a3b7a9e9d8372ed87a0979c3324e7820.sol", "function": "setContracts()", "lineno": 447, "title": "Multiple Calls", "type": "Information"}], "success": true}