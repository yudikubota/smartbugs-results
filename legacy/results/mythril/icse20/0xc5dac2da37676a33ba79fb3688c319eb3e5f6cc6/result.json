{
  "contract": "0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6",
  "tool": "mythril",
  "start": 1563266887.9343562,
  "end": 1563266893.8663917,
  "duration": 5.932035446166992,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.19;\r\n^---------------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:13:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Owned() public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:56:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Ownership(uint256 _fee) public {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:68:29: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 licenseId = keccak256(license.text);\r\n                            ^---------------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:68:29: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        bytes32 licenseId = keccak256(license.text);\r\n                            ^---------------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:99:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Engraved(msg.sender, _hash);\r\n        ^-------------------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:123:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Engraved(msg.sender, _hash);\r\n        ^-------------------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:128:28: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 textHash = keccak256(_text);\r\n                           ^--------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:128:28: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        bytes32 textHash = keccak256(_text);\r\n                           ^--------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:145:16: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        return keccak256(_input);\r\n               ^---------------^\n/unique_contracts/0xc5dac2da37676a33ba79fb3688c319eb3e5f6cc6.sol:145:16: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        return keccak256(_input);\r\n               ^---------------^\n",
    "issues": []
  }
}