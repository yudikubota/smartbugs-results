{"error": null, "issues": [{"address": 200, "code": "payable {\n    require(msg.value >= priceInWei);\n    require(bytes(newMessage).length <= maxLength);\n\n    uint256 newPrice = priceInWei * 2;\n    MessageSet(newMessage, priceInWei, newPrice, msg.sender);\n    priceInWei = newPrice;\n    message = newMessage;\n  }\n\n  function withdraw(address destination, uint25", "debug": "calldata_SingleMessage_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SingleMessage_0: 0x4ed3885e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SingleMessage: 0x4\n", "description": "A possible integer overflow exists in the function `set(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x15d3122103c5c17ed791fd5a3dba847ecfd6037e.sol", "function": "set(string)", "lineno": 42, "title": "Integer Overflow ", "type": "Warning"}, {"address": 206, "code": "payable {\n    require(msg.value >= priceInWei);\n    require(bytes(newMessage).length <= maxLength);\n\n    uint256 newPrice = priceInWei * 2;\n    MessageSet(newMessage, priceInWei, newPrice, msg.sender);\n    priceInWei = newPrice;\n    message = newMessage;\n  }\n\n  function withdraw(address destination, uint25", "debug": "calldata_SingleMessage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc\ncalldata_SingleMessage_0: 0x4ed3885e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SingleMessage: 0x4\n", "description": "A possible integer overflow exists in the function `set(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x15d3122103c5c17ed791fd5a3dba847ecfd6037e.sol", "function": "set(string)", "lineno": 42, "title": "Integer Overflow ", "type": "Warning"}, {"address": 693, "code": "iceInWei, newP", "debug": "storage_2: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncalldata_SingleMessage_4 + calldata_SingleMessage_4: 0x0\ncallvalue: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_SingleMessage_0: 0x4ed3885e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SingleMessage: 0x4\n", "description": "A possible integer overflow exists in the function `set(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x15d3122103c5c17ed791fd5a3dba847ecfd6037e.sol", "function": "set(string)", "lineno": 47, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1750, "code": "nable {\n  string public message;\n  uint256 public priceInWei;\n  uint256 public maxLength;\n\n  event MessageSet(string message, uint256 priceInWei, uint256 newPriceInWei, address payer);\n\n  function SingleMessage(string initialMessage, uint256 initialPriceInWei, uint256 maxLengthArg) public {\n    message = initialMessage;\n    priceInWei = initialPriceInWei;\n    maxLength = maxLengthArg;\n  }\n\n  function set(string newMessage) external payable {\n    require(msg.value >= priceInWei);\n    require(bytes(newMessage).length <= maxLength);\n\n    uint256 newPrice = priceInWei * 2;\n    MessageSet(newMessage, priceInWei, newPrice, msg.sender);\n    priceInWei = newPrice;\n    message = newMessage;\n  }\n\n  function withdraw(address destination, uint256 amountInWei) external onlyOwner {\n    require(this.balance >= amountInWei);\n    require(destination != address(0));\n    destination.transfer(amountInWei);\n  }\n}", "debug": "calldata_SingleMessage_4 + calldata_SingleMessage_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\nstorage_3: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\ncalldata_SingleMessage_0: 0x4ed3885e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SingleMessage: 0x4\n", "description": "A possible integer overflow exists in the function `set(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x15d3122103c5c17ed791fd5a3dba847ecfd6037e.sol", "function": "set(string)", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1764, "code": "nable {\n  string public message;\n  uint256 public priceInWei;\n  uint256 public maxLength;\n\n  event MessageSet(string message, uint256 priceInWei, uint256 newPriceInWei, address payer);\n\n  function SingleMessage(string initialMessage, uint256 initialPriceInWei, uint256 maxLengthArg) public {\n    message = initialMessage;\n    priceInWei = initialPriceInWei;\n    maxLength = maxLengthArg;\n  }\n\n  function set(string newMessage) external payable {\n    require(msg.value >= priceInWei);\n    require(bytes(newMessage).length <= maxLength);\n\n    uint256 newPrice = priceInWei * 2;\n    MessageSet(newMessage, priceInWei, newPrice, msg.sender);\n    priceInWei = newPrice;\n    message = newMessage;\n  }\n\n  function withdraw(address destination, uint256 amountInWei) external onlyOwner {\n    require(this.balance >= amountInWei);\n    require(destination != address(0));\n    destination.transfer(amountInWei);\n  }\n}", "debug": "calldata_SingleMessage_4: 0xa005d513239f8eaf55e8f810000749fffffffffffff2c0000040008071dd795e\ncalldata_SingleMessage_4 + calldata_SingleMessage_4: 0xc3acdd55249d8ee005eed28f519f79fffffffffffffeffffffbfff7f8e228680\ncallvalue: 0x0\nstorage_3: 0xc3acdd55249d8ee005eed28f519f79fffffffffffffeffffffbfff7f8e228680\nstorage_2: 0x0\ncalldata_SingleMessage_0: 0x4ed3885e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SingleMessage: 0x4\n", "description": "A possible integer overflow exists in the function `set(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x15d3122103c5c17ed791fd5a3dba847ecfd6037e.sol", "function": "set(string)", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1781, "code": "nable {\n  string public message;\n  uint256 public priceInWei;\n  uint256 public maxLength;\n\n  event MessageSet(string message, uint256 priceInWei, uint256 newPriceInWei, address payer);\n\n  function SingleMessage(string initialMessage, uint256 initialPriceInWei, uint256 maxLengthArg) public {\n    message = initialMessage;\n    priceInWei = initialPriceInWei;\n    maxLength = maxLengthArg;\n  }\n\n  function set(string newMessage) external payable {\n    require(msg.value >= priceInWei);\n    require(bytes(newMessage).length <= maxLength);\n\n    uint256 newPrice = priceInWei * 2;\n    MessageSet(newMessage, priceInWei, newPrice, msg.sender);\n    priceInWei = newPrice;\n    message = newMessage;\n  }\n\n  function withdraw(address destination, uint256 amountInWei) external onlyOwner {\n    require(this.balance >= amountInWei);\n    require(destination != address(0));\n    destination.transfer(amountInWei);\n  }\n}", "debug": "calldata_SingleMessage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9d\ncalldata_SingleMessage_4 + calldata_SingleMessage_4: 0x2d\ncallvalue: 0x0\nstorage_3: 0x2d\nstorage_2: 0x0\ncalldata_SingleMessage_0: 0x4ed3885e00000000000000000000000000000000000000000000000000000000\ncalldatasize_SingleMessage: 0x4\n", "description": "A possible integer overflow exists in the function `set(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x15d3122103c5c17ed791fd5a3dba847ecfd6037e.sol", "function": "set(string)", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}], "success": true}