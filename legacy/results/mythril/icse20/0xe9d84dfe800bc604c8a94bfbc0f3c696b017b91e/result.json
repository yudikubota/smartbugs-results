{
  "contract": "0xe9d84dfe800bc604c8a94bfbc0f3c696b017b91e",
  "tool": "mythril",
  "start": 1563637019.5377629,
  "end": 1563637050.6370344,
  "duration": 31.099271535873413,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1338,
        "code": " require(value <= totalSupply_);\n      require(air_dropped[addresses[i]] == false);\n      air_dropped[addresses[i]] = true;\n      transfer(addresses[i], value);\n      totalAirDropped = totalAirDropped.add(value);\n    }\n  }\n\n  function () external payable{\n      airdrop_auto(msg.sender);\n  }\n\n  function airdrop_auto(address investor_address) public payable returns (bool success){\n    require(inve",
        "debug": "calldata_VoidToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VoidToken_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_VoidToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xe9d84dfe800bc604c8a94bfbc0f3c696b017b91e.sol",
        "function": "airdrop(address[],uint256)",
        "lineno": 171,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1450,
        "code": "\n    {\n      require(value <= totalSupply_);\n      transfer(addresses[i], value);\n    }\n  }\n\n  function airdrop(address[] addresses, uint256 value) onlyOwner public{\n    require(addresses.length < 255);\n    for(uint i = 0; i < addresses.length; i++)\n    {",
        "debug": "calldata_VoidToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_VoidToken_0: 0xde1c78fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_VoidToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `batch_send(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xe9d84dfe800bc604c8a94bfbc0f3c696b017b91e.sol",
        "function": "batch_send(address[],uint256)",
        "lineno": 160,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4846,
        "code": " c;\n ",
        "debug": "storage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_VoidToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_2: 0x0\ncaller: 0x0\ncalldata_VoidToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_VoidToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/25/0xe9d84dfe800bc604c8a94bfbc0f3c696b017b91e.sol",
        "function": "mint(address,uint256)",
        "lineno": 40,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4859,
        "code": "ntract Ownable",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x0\nstorage_1: 0x1\ncalldata_VoidToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_VoidToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_VoidToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0xe9d84dfe800bc604c8a94bfbc0f3c696b017b91e.sol",
        "function": "mint(address,uint256)",
        "lineno": 43,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4882,
        "code": "- b;\n  }\n\n  /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffd8\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_4,_256): 0x3e7\nstorage_1: 0x3e8\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VoidToken_4: 0x0\ncalldata_VoidToken_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_VoidToken_0: 0x1fd6846c00000000000000000000000000000000000000000000000000000000\ncalldatasize_VoidToken: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/25/0xe9d84dfe800bc604c8a94bfbc0f3c696b017b91e.sol",
        "function": "airdrop_auto(address)",
        "lineno": 31,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}