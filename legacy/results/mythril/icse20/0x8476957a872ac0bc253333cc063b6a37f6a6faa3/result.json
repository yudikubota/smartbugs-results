{
  "contract": "0x8476957a872ac0bc253333cc063b6a37f6a6faa3",
  "tool": "mythril",
  "start": 1563650995.013808,
  "end": 1563651118.4617176,
  "duration": 123.44790959358215,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 240,
        "code": "ontract has already bought tokens.\n    if (bought_tokens) return;\n\n    require(hash_pwd == sha3(password));\n    // need 3/5th of the votes if we want to buy the tokens\n    require (votes >= 3);\n    // Throw if the contract balance is less than the minimum required amount\n    require(this.balance >= min_required_amount);\n    // Disallow buying in if the developer hasn't set the sale address yet.\n    require(sale != 0x0);\n    \n    // Record that the contract has bought the tokens.\n    bought_tokens = true;\n    \n    // Record the amount of ETH sent as the contract's current value.\n    contract_eth_value = this.balance;\n\n    // Transfer all the funds to the crowdsale address.\n    sale.transfer(contract_eth_value);\n  }\n\n  function change_sale_address(address _sale, string password) {\n    require(!bought_tokens);\n    requ",
        "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xadc6700000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "fallback",
        "lineno": 86,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 377,
        "code": "sh_pwd == sha3(password));\n    votes = 0;\n    sale = _sale;\n  }\n\n  function vote_proposed_address(string password) {\n    require(!bought_tokens);\n    require(hash_pwd == sha3",
        "debug": "calldata_ERC20_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0x2026a0a700000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `change_sale_address(address,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "change_sale_address(address,string)",
        "lineno": 109,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 956,
        "code": "ord));\n    // The voter musn't have voted before\n    require(!voters[msg.sender]);\n    voters[msg.sender] = true;\n    votes += 1;\n  }\n\n  // A helper function for the default function, allowing contracts to interact.\n  function default_helper() payable {",
        "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xea11859000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `vote_proposed_address(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "vote_proposed_address(string)",
        "lineno": 116,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1191,
        "code": " payable {\n    // Delegate to the",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xaaf9ae55d07e86bd3da92649b408257b7befafba703f89367bfce5debeda67c9\ncallvalue: 0x603045871a360038b9df15fb27d6a76263cf283bfabb8926c35b1511389ac759\nstorage_4: 0x0\ncalldata_ERC20_0: 0x2600000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "fallback",
        "lineno": 130,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1626,
        "code": "{\n    require(!bought_tokens);\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "fallback",
        "lineno": 107,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2185,
        "code": "he presale wallet and records the ET",
        "debug": "SOLVER OUTPUT:\nstorage_4: 0x0\ncalldata_ERC20_0: 0x81702c3400000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `refund_me()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 4. This storage slot can be written to by calling the function `fallback`.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "refund_me()",
        "lineno": 84,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 2591,
        "code": "lper() pay",
        "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_4 + calldata_ERC20_4: 0x20\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nstorage_4: 0x0\ncalldata_ERC20_0: 0xea11859000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nKECCAC_mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 + calldata_ERC20_4 + calldata_ERC20_4))): 0x0\nstorage_3: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `vote_proposed_address(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "vote_proposed_address(string)",
        "lineno": 124,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2794,
        "code": "low token withdrawals if there",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "perform_withdraw(address)",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2944,
        "code": "t_eth_value;\n      \n    // Update the value of tokens currently held",
        "debug": "The exception is triggered under the following conditions:\n\nreturndatasize: 0x20\nretval_2794: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_ERC20_0: 0xfcfdbc2300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "perform_withdraw(address)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3019,
        "code": "date the user's balance prior to sending t",
        "debug": "storage_5: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x2\nreturndatasize: 0x20\nretval_2794: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\ncalldata_ERC20_0: 0xfcfdbc2300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `perform_withdraw(address)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "perform_withdraw(address)",
        "lineno": 63,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3025,
        "code": "date the user's balance prior to sending t",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "perform_withdraw(address)",
        "lineno": 63,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3093,
        "code": "ilure to prevent loss of",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/30/0x8476957a872ac0bc253333cc063b6a37f6a6faa3.sol",
        "function": "perform_withdraw(address)",
        "lineno": 66,
        "title": "State change after external call",
        "type": "Warning"
      }
    ],
    "success": true
  }
}