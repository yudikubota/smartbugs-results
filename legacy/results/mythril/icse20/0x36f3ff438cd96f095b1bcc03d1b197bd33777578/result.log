{"error": null, "issues": [{"address": 5922, "code": "n.transferFrom(", "debug": "timestamp: 0x0\nstorage_7: 0x98bf0d987520000d8008184480261e92000189e7ed1182e07ee3ef17082a1600\ncallvalue: 0x28fb85bf4cf7fe3fb53bdd56d99ede9967f009256e4c18ee6200000000000000\nstorage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x28fb85bf4cf7fe3fb53bdd56d99ede9967f009256e4c18ee6200000000000000\nstorage_9: 0xc1ba9357c217fe4d3543f59b59c4fd2b67f1930d5b5d9bcee0e3ef17082a1600\nstorage_4: 0x0\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldatasize_Sale: 0x3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/3/0x36f3ff438cd96f095b1bcc03d1b197bd33777578.sol", "function": "fallback", "lineno": 374, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6086, "code": "tokenAmount);\n    }\n\n   // return true if the transaction ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/3/0x36f3ff438cd96f095b1bcc03d1b197bd33777578.sol", "function": "fallback", "lineno": 375, "title": "Message call to external contract", "type": "Informational"}, {"address": 6086, "code": "tokenAmount);\n    }\n\n   // return true if the transaction ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/3/0x36f3ff438cd96f095b1bcc03d1b197bd33777578.sol", "function": "fallback", "lineno": 375, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6292, "code": "s\n    function validPurchase(uint weiAmount) internal view returns (bool) {\n", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/3/0x36f3ff438cd96f095b1bcc03d1b197bd33777578.sol", "function": "fallback", "lineno": 378, "title": "State change after external call", "type": "Warning"}, {"address": 6809, "code": "racts", "debug": "storage_7: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_3: 0x1\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldatasize_Sale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/3/0x36f3ff438cd96f095b1bcc03d1b197bd33777578.sol", "function": "fallback", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6822, "code": "gStrategy.sol\n", "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_7: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\nstorage_3: 0x1\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldatasize_Sale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/3/0x36f3ff438cd96f095b1bcc03d1b197bd33777578.sol", "function": "fallback", "lineno": 68, "title": "Exception state", "type": "Informational"}], "success": true}