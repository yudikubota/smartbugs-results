{"error": null, "issues": [{"address": 2176, "code": " <= ambassadorQuota_ )){\n            requi", "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x1\nstorage_11: 0xff00\ncalldatasize_XToken: 0x3\n", "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/13/0x4dac7251498f5855d15a6ea221d767940243cc21.sol", "function": "fallback", "lineno": 44, "title": "Integer Underflow", "type": "Warning"}, {"address": 8464, "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7f3cd9d000000000000000000000000000000000000000000032beff02cffdac\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x80c3263000000000000000000000000000000000000000000bc7f090d4d4a694\ncallvalue: 0x80c32630000000000000000000000000000000000000000001638c8000000000\nstorage_11: 0xff00\ncalldatasize_XToken: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0x4dac7251498f5855d15a6ea221d767940243cc21.sol", "function": "fallback", "lineno": 746, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8477, "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xdfffd0ff8400000000000000000000000000000000000000001d5fef581e8ee3\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x20002f007c000000000000000000000000000000000000001cf69147fbd420af\ncallvalue: 0x20002f007c0000000000000000000000000000000000000000cce8cf00000000\nstorage_11: 0xff00\ncalldatasize_XToken: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/13/0x4dac7251498f5855d15a6ea221d767940243cc21.sol", "function": "fallback", "lineno": 746, "title": "Exception state", "type": "Informational"}, {"address": 8713, "code": "int y) {\n        ui", "debug": "storage_8: 0xfffffffffffffffffffffffffffffffffffffffffffffffff90fb0802c080000\ncalldata_XToken_0: 0x4b75033400000000000000000000000000000000000000000000000000000000\ncalldatasize_XToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `sellPrice()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/13/0x4dac7251498f5855d15a6ea221d767940243cc21.sol", "function": "sellPrice()", "lineno": 692, "title": "Integer Overflow ", "type": "Warning"}], "success": true}