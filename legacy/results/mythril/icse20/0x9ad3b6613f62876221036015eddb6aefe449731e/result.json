{
  "contract": "0x9ad3b6613f62876221036015eddb6aefe449731e",
  "tool": "mythril",
  "start": 1563803857.5719247,
  "end": 1563804048.5231643,
  "duration": 190.95123958587646,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2759,
        "code": "ire(ERC20(originalToken).transfer(msg.sender,",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 255,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2759,
        "code": "ire(ERC20(originalToken).transfer(msg.sender,",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3822\nCall at address: 3616\nCall at address: 3329\nCall at address: 3123\n",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 255,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3123,
        "code": "  function withdrawDifferentToken(address _di",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 260,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3123,
        "code": "  function withdrawDifferentToken(address _di",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3329\n",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 260,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3329,
        "code": ")));\n        }\n        return true;\n    }\n\n    function withdrawDifferentToken(address _differentToken, bool ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 255,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3616,
        "code": "ginalToken);\n        require(ERC20(_different",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 261,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3616,
        "code": "ginalToken);\n        require(ERC20(_different",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3822\n",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 261,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3822,
        "code": ") {\n        require(_differentToken != originalToken);\n        require(ERC20(_differentToken).balanceOf(ad",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "withdrawBalanceDifference()",
        "lineno": 260,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4033,
        "code": ") {\n        if (_spender == TRANSFER",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 282,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4885,
        "code": " _sender, address _wrapper, uint _validTill) public constant returns(bytes32) {\n        return keccak256(_sender, _wrapper, _validTill",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "isValidSignature(bytes32,uint8,bytes32,bytes32)",
        "lineno": 315,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 9211,
        "code": " on overflow.\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0x1b4449a8718881496371294150cf13b83e605100043070c307e473d06b350c4b\ncalldata_WrapperLock_32 + 36: 0xd44896a57581f566eb2dfdbddb6fab1f7f61029177bf7cb247c25ed6688768c3\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_4: 0xd44896a57581f566eb2dfdbddb6fab1f7f61029177bf7cb247c25ed6688768c2\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 84,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9229,
        "code": "c ver",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WrapperLock_32 + 36: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 95,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9242,
        "code": " StandardToken",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WrapperLock_32_+_4: 0x1\ncalldata_WrapperLock_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WrapperLock_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WrapperLock: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0x9ad3b6613f62876221036015eddb6aefe449731e.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}