{
  "contract": "0xcc97f0979d63c195ea08d341850e9bcf3db44a8d",
  "tool": "mythril",
  "start": 1563744835.5145729,
  "end": 1563744857.1602514,
  "duration": 21.645678520202637,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 591,
        "code": "ns (bool success) {\n\n        uint i;\n\n        for (i=0;i<lucky.length;i++){\n            //if(!tokenLedger.transfer(lucky[i],value)){revert();}\n            tokenLedger.transfer(lucky[i],value);\n        }\n\n        return true;\n    }\n\n    function applyToken(address token) onlyOwner whenPaused public returns (bool success) {\n        t",
        "debug": "calldata_tokenInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenInterface_0: 0xa985e6c600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `withdrawAirDrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "withdrawAirDrop(address[],uint256)",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 979,
        "code": ");\n        _;\n    }\n\n    /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenInterface_0: 0x1612ec4f00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "applyToken(address)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1220,
        "code": " tokenLedger.totalSupp",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "tokenDecimals()",
        "lineno": 116,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1220,
        "code": " tokenLedger.totalSupp",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function tokenDecimals(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "tokenDecimals()",
        "lineno": 116,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1368,
        "code": ");\n        _;\n    }\n\n    /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenInterface_0: 0x3f4ba83a00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "unpause()",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1556,
        "code": ");\n        _;\n    }\n\n    /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenInterface_0: 0x41c0e1b500000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "kill()",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2197,
        "code": ");\n        _;\n    }\n\n    /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenInterface_0: 0x8456cb5900000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "pause()",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2425,
        "code": ");\n        _;\n    }\n\n    /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenInterface_0: 0xa985e6c600000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "withdrawAirDrop(address[],uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2691,
        "code": "n(address token) onlyOwner whenPause",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "withdrawAirDrop(address[],uint256)",
        "lineno": 106,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2691,
        "code": "n(address token) onlyOwner whenPause",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawAirDrop(address[],uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "withdrawAirDrop(address[],uint256)",
        "lineno": 106,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2897,
        "code": ");\n        _;\n    }\n\n    /*",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_tokenInterface_0: 0xf2fde38b00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenInterface: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "transferOwnership(address)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3197,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "tokenTotalSupply()",
        "lineno": 123,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3197,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function tokenTotalSupply(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/41/0xcc97f0979d63c195ea08d341850e9bcf3db44a8d.sol",
        "function": "tokenTotalSupply()",
        "lineno": 123,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}