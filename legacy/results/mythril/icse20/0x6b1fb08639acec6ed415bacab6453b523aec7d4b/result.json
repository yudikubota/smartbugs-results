{
  "contract": "0x6b1fb08639acec6ed415bacab6453b523aec7d4b",
  "tool": "mythril",
  "start": 1563258907.4497035,
  "end": 1563258987.1024232,
  "duration": 79.65271973609924,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 367,
        "code": "r(msg.value - fee);\n        }\n    }\n\n    /// @dev Re",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "fallback",
        "lineno": 80,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 367,
        "code": "r(msg.value - fee);\n        }\n    }\n\n    /// @dev Re",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "fallback",
        "lineno": 80,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1042,
        "code": "turn owners;\n    }\n    /// @dev Allows to transfer MTC tokens. Can only be executed by an owner.\n    /// @par",
        "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Token_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "getOwners()",
        "lineno": 91,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1206,
        "code": "gth == _value.length);\n        for (uint i = 0; i < _to.length; i++) {\n            _to[i].transfer(_value[i]);\n        }\n    }\n    /// @dev Allows to change the fee value. Transaction has to be sent by an owner.\n    /// @param _fee New value for the ",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xad5b896e00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `refundMany(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "refundMany(address[],uint256[])",
        "lineno": 121,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1612,
        "code": "owners;\n    mapping(add",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4: 0x0\nstorage_3: 0x0\ncalldata_Token_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "_function_0x025e7c27",
        "lineno": 18,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2038,
        "code": "n owner.\n    ",
        "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Token_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "getOwners()",
        "lineno": 93,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2040,
        "code": "n owner.\n    ",
        "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Token_0: 0xa0e67e2b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `getOwners()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "getOwners()",
        "lineno": 93,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2425,
        "code": "ract. Transaction has to be",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "transfer(address,uint256)",
        "lineno": 101,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2933,
        "code": "ion has to be sent by an o",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x6b1fb08639acec6ed415bacab6453b523aec7d4b.sol",
        "function": "withdrawal()",
        "lineno": 107,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}