{
  "contract": "0xc8a1daa58baa1bfdc85bd947960119a33d0351bc",
  "tool": "mythril",
  "start": 1563827406.7633479,
  "end": 1563827626.9805326,
  "duration": 220.2171847820282,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1279,
        "code": "      receiver.tokenFallback(msg.sender, _value, _data);\n    }\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value, _data);\n    }\n    \n  function isContract(address _addr) private returns (bool is_contract) {\n      uint length;\n      assembly {\n            length := extcodesize(_addr)\n      }\n      return (length>0);\n    }\n\n\n}",
        "debug": "calldata_StandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc8a1daa58baa1bfdc85bd947960119a33d0351bc.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 198,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4764,
        "code": "der, _to, _value, _data);\n    }\n    \n  function i",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/30/0xc8a1daa58baa1bfdc85bd947960119a33d0351bc.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 202,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 6278,
        "code": "t256 a, uint25",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\nextcodesize: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xc8a1daa58baa1bfdc85bd947960119a33d0351bc.sol",
        "function": "transfer(address,uint256,bytes)",
        "lineno": 62,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6296,
        "code": "contr",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xc8a1daa58baa1bfdc85bd947960119a33d0351bc.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 71,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6309,
        "code": "able {\n  addre",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xc8a1daa58baa1bfdc85bd947960119a33d0351bc.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 71,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}