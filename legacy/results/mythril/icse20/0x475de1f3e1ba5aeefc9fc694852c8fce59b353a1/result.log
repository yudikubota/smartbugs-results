{"error": null, "issues": [{"address": 218, "code": "ing nickname, string content) public {\n        uint startGasLeft = gasleft();\n        ES.NewShare(nickname, false, content); \n        uint endGasLeft = gasleft();\n        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n    }\n\n    //TODO: SenderRecord(", "debug": "calldata_EtherShareDonation_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_EtherShareDonation_0: 0xe1c2425700000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `FreeShare(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "FreeShare(string,string)", "lineno": 23, "title": "Integer Overflow ", "type": "Warning"}, {"address": 642, "code": ";\n\ninterface Ether", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 765, "code": "onation(msg.sender, nickname, msg.value));\t//record the dona", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 20, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1170, "code": "lse, content); \n        uint endGasLe", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "FreeShare(string,string)", "lineno": 25, "title": "Message call to external contract", "type": "Informational"}, {"address": 1170, "code": "lse, content); \n        uint endGasLe", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1250\n", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "FreeShare(string,string)", "lineno": 25, "title": "Multiple Calls", "type": "Information"}, {"address": 1250, "code": "ce*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewS", "debug": "SOLVER OUTPUT:\ncalldata_EtherShareDonation_4 + calldata_EtherShareDonation_4: 0x88\nretval_1170: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EtherShareDonation_0: 0xe1c2425700000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)): 0x0\ncallvalue: 0x0\n", "description": "In the function `FreeShare(string,string)` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "FreeShare(string,string)", "lineno": 27, "title": "Ether send", "type": "Warning"}, {"address": 1250, "code": "ce*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewS", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "FreeShare(string,string)", "lineno": 27, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1276, "code": "blic donations;\n\n    function ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherShareDonation_4: 0x0\nstorage_1: 0x0\ncalldata_EtherShareDonation_0: 0xf8626af800000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "_function_0xf8626af8", "lineno": 17, "title": "Exception state", "type": "Informational"}, {"address": 1542, "code": "t EtherShareDonation {\n\n    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\n    \n    struct oneDonation {\n        address donator;\n        string nickname;\n        uint amount;\n    }\n    oneDonation[] public donations;\n\n    function Donate(string nickname) payable public {\n        donations.push(oneDonation(msg.sender, nickname, msg.value));\t//record the donation\n    }\n\n    function FreeShare(string nickname, string content) public {\n        uint startGasLeft = gasleft();\n        ES.NewShare(nickname, false, content); \n        uint endGasLeft = gasleft();\n        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n    }\n\n    //TODO: SenderRecord(), FreeReply(), FreeUpdate()\n}", "debug": "storage_1 +\n80084422859880547211683076133703299733277748156566366325829078699459944778998 +\n3*storage_1: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nkeccac_1_+\n80084422859880547211683076133703299733277748156566366325829078699459944778998_+\n3*storage_1: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1571, "code": "t EtherShareDonation {\n\n    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\n    \n    struct oneDonation {\n        address donator;\n        string nickname;\n        uint amount;\n    }\n    oneDonation[] public donations;\n\n    function Donate(string nickname) payable public {\n        donations.push(oneDonation(msg.sender, nickname, msg.value));\t//record the donation\n    }\n\n    function FreeShare(string nickname, string content) public {\n        uint startGasLeft = gasleft();\n        ES.NewShare(nickname, false, content); \n        uint endGasLeft = gasleft();\n        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n    }\n\n    //TODO: SenderRecord(), FreeReply(), FreeUpdate()\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1585, "code": "t EtherShareDonation {\n\n    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\n    \n    struct oneDonation {\n        address donator;\n        string nickname;\n        uint amount;\n    }\n    oneDonation[] public donations;\n\n    function Donate(string nickname) payable public {\n        donations.push(oneDonation(msg.sender, nickname, msg.value));\t//record the donation\n    }\n\n    function FreeShare(string nickname, string content) public {\n        uint startGasLeft = gasleft();\n        ES.NewShare(nickname, false, content); \n        uint endGasLeft = gasleft();\n        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n    }\n\n    //TODO: SenderRecord(), FreeReply(), FreeUpdate()\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0xe9ed542651000003d76906f7c018193fbfffffffffffffffffffffffffffffcb\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0xc48c04261444f7ce9c1a66f6c355debe3fffffffffffffffffffffffffffffed\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1602, "code": "t EtherShareDonation {\n\n    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\n    \n    struct oneDonation {\n        address donator;\n        string nickname;\n        uint amount;\n    }\n    oneDonation[] public donations;\n\n    function Donate(string nickname) payable public {\n        donations.push(oneDonation(msg.sender, nickname, msg.value));\t//record the donation\n    }\n\n    function FreeShare(string nickname, string content) public {\n        uint startGasLeft = gasleft();\n        ES.NewShare(nickname, false, content); \n        uint endGasLeft = gasleft();\n        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n    }\n\n    //TODO: SenderRecord(), FreeReply(), FreeUpdate()\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0x25\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1607, "code": "t EtherShareDonation {\n\n    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\n    \n    struct oneDonation {\n        address donator;\n        string nickname;\n        uint amount;\n    }\n    oneDonation[] public donations;\n\n    function Donate(string nickname) payable public {\n        donations.push(oneDonation(msg.sender, nickname, msg.value));\t//record the donation\n    }\n\n    function FreeShare(string nickname, string content) public {\n        uint startGasLeft = gasleft();\n        ES.NewShare(nickname, false, content); \n        uint endGasLeft = gasleft();\n        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n    }\n\n    //TODO: SenderRecord(), FreeReply(), FreeUpdate()\n}", "debug": "mem_mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0x2021fda91bfffffffffffffffffffffffffffffffffffffffff8\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_EtherShareDonation_4 + calldata_EtherShareDonation_4)) +\n32: 0x9ffbffffffffd99db48e28ffffffffffffffffffffffffffffffffffffffffe8\nkeccac_1_+\n80084422859880547211683076133703299733277748156566366325829078699459944778998_+\n3*storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_EtherShareDonation_0: 0x2af37ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherShareDonation: 0x4\n", "description": "A possible integer overflow exists in the function `Donate(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/31/0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1.sol", "function": "Donate(string)", "lineno": 8, "title": "Integer Overflow ", "type": "Warning"}], "success": true}