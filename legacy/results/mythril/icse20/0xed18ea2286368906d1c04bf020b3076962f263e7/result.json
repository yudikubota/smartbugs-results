{
  "contract": "0xed18ea2286368906d1c04bf020b3076962f263e7",
  "tool": "mythril",
  "start": 1563708087.3707228,
  "end": 1563708123.9508417,
  "duration": 36.580118894577026,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 136,
        "code": "n multisend(address _tokenAddr, address[] _to, uint256[] _value)\n    returns (bool _success) {\n        assert(_to.length == _value.length);\n        assert(_to.length <= 150);\n        // loop through to addresses and send value\n        for (uint8 i = 0; i < _to.length; i++) {\n                assert((Token(_tokenAddr).transfer(_to[i], _value[i])) == true);\n            }\n            return true;\n        }\n}",
        "debug": "calldata_Token_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0xad8733ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multisend(address,address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/40/0xed18ea2286368906d1c04bf020b3076962f263e7.sol",
        "function": "multisend(address,address[],uint256[])",
        "lineno": 8,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 310,
        "code": "o.length == _value.length);\n       ",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 4: 0x0\ncalldata_Token_4 + calldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xad8733ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xed18ea2286368906d1c04bf020b3076962f263e7.sol",
        "function": "multisend(address,address[],uint256[])",
        "lineno": 10,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 324,
        "code": ".length <= 150);\n        ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4 + calldata_Token_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_Token_0: 0xad8733ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xed18ea2286368906d1c04bf020b3076962f263e7.sol",
        "function": "multisend(address,address[],uint256[])",
        "lineno": 11,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 564,
        "code": "ddr).transfer(_to[i], _value[i])) == true);\n ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/40/0xed18ea2286368906d1c04bf020b3076962f263e7.sol",
        "function": "multisend(address,address[],uint256[])",
        "lineno": 14,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 564,
        "code": "ddr).transfer(_to[i], _value[i])) == true);\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 564\n",
        "filename": "/unique_chucks/40/0xed18ea2286368906d1c04bf020b3076962f263e7.sol",
        "function": "multisend(address,address[],uint256[])",
        "lineno": 14,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 630,
        "code": "(_tokenAddr).transfer(_to[i], _value[i])) == true);\n           ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4 + calldata_Token_32 + 4: 0x10\nreturndatasize: 0x20\nretval_564: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0xad8733ca00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nmem_160 +\n32*calldata_Token_4 + calldata_Token_32 + 4 +\n32 +\n32*calldata_Token_4 + calldata_Token_32 + 36: 0x0\nmem_128 + 32 + 32*calldata_Token_4 + calldata_Token_32 + 4: 0x10\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/40/0xed18ea2286368906d1c04bf020b3076962f263e7.sol",
        "function": "multisend(address,address[],uint256[])",
        "lineno": 14,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}