{
  "contract": "0xabccaadd77078a67622dfd5f74066ce4581c0a99",
  "tool": "mythril",
  "start": 1563476023.949338,
  "end": 1563476065.703466,
  "duration": 41.754127979278564,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 701,
        "code": "256 i = 0; i < _receivers.length; i++) {\n      require(_receivers[i] != address(0));\n      require(block.timestamp > lockups[_receivers[i]]);\n      require(_amounts[i] > 0);\n      _total = _total.add(_amounts[i]);\n    }\n\n    require(_total <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_total);\n\n    for (i = 0; i < _receivers.length; i++) {\n      balances[_receivers[i]] = balances[_receivers[i]].add(_amounts[i]);\n      emit Transfer(msg.sender, _receivers[i], _amounts[i]);\n    }\n\n    return true;\n  }\n}",
        "debug": "calldata_mameCoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_mameCoin_0: 0x2929abe600000000000000000000000000000000000000000000000000000000\ncalldatasize_mameCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distribute(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xabccaadd77078a67622dfd5f74066ce4581c0a99.sol",
        "function": "distribute(address[],uint256[])",
        "lineno": 307,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1680,
        "code": "++) {\n      require(_receivers[i] != address(0));\n      require(block.timestamp > lockups[_receivers[i]]);\n      _total = _total.add(_amount);\n    }\n\n    require(_total <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_total);\n\n    for (i = 0; i < _receivers.length; i++) {\n      balances[_receivers[i]] = balances[_receivers[i]].add(_amount);\n      emit Transfer(msg.sender, _receivers[i], _amount);\n    }\n\n    return true;\n  }\n\n  /**\n   * @dev distribute tokens for a specified addresses\n   * @param _receivers The addresses to transfer to.\n   * @param _amounts The amounts to be transferred.\n   */\n  function distribute(address[] _receivers, uint256[] _amounts) public returns (bool) {\n    require(block.timestamp > ",
        "debug": "calldata_mameCoin_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_mameCoin_0: 0xc204642c00000000000000000000000000000000000000000000000000000000\ncalldatasize_mameCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `airdrop(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xabccaadd77078a67622dfd5f74066ce4581c0a99.sol",
        "function": "airdrop(address[],uint256)",
        "lineno": 276,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8268,
        "code": "  /**\n   * @de",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_mameCoin_32 + 4: 0x2\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_mameCoin_4: 0xfffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffe\nstorage_4: 0x1\ntimestamp: 0xfffffffffffffffffffffffffffffffffffff7ffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_mameCoin_0: 0x9dc29fac00000000000000000000000000000000000000000000000000000000\ncalldatasize_mameCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0xabccaadd77078a67622dfd5f74066ce4581c0a99.sol",
        "function": "burn(address,uint256)",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8285,
        "code": "\n/**\n",
        "debug": "storage_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_mameCoin_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_mameCoin_4: 0x0\ntimestamp: 0x1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_mameCoin_0: 0x410085df00000000000000000000000000000000000000000000000000000000\ncalldatasize_mameCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `refund(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0xabccaadd77078a67622dfd5f74066ce4581c0a99.sol",
        "function": "refund(address,uint256)",
        "lineno": 53,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8298,
        "code": "le ERC20\n * @d",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_mameCoin_4: 0x0\nstorage_4: 0x1\ncalldata_mameCoin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_0: 0x0\ncaller: 0x0\ncalldata_mameCoin_0: 0x410085df00000000000000000000000000000000000000000000000000000000\ncalldatasize_mameCoin: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0xabccaadd77078a67622dfd5f74066ce4581c0a99.sol",
        "function": "refund(address,uint256)",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}