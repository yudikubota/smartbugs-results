{"error": null, "issues": [{"address": 496, "debug": "storage_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MumsTheWord_0: 0x81064e2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCreditorAmounts()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "getCreditorAmounts()", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 810, "code": "}\n\n    function getCreditorAmounts() returns (uint[]) {\n        return creditorAmounts;\n    }\n}", "debug": "storage_3: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_MumsTheWord_0: 0xd3edcb5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCreditorAddresses()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "getCreditorAddresses()", "lineno": 95, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1019, "code": "T_HOURS > now) {\n            // R", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc180\ncalldata_MumsTheWord_0: 0x0\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 27, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1073, "code": "\n            // Sends jackp", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1339\nCall at address: 1211\n", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 29, "title": "Multiple Calls", "type": "Information"}, {"address": 1118, "code": "esses.length - 1].transfer(jackpot);\n          ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nretval_1073: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 31, "title": "Exception state", "type": "Informational"}, {"address": 1211, "code": "esses.length - 1].transfer(jackpot);\n            owner.transfer(t", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 31, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1211, "code": "esses.length - 1].transfer(jackpot);\n            owner.transfer(t", "debug": "SOLVER OUTPUT:\nstorage_3: 0xfffffffffffffffffff800000000000000000000000000000000000000000000\nretval_1073: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 87903029871075914254377627908054574944891091886930582284385770809450030037083.\nThere is a check on storage index 87903029871075914254377627908054574944891091886930582284385770809450030037083. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 3. This storage slot can be written to by calling the function `fallback`.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 31, "title": "Ether send", "type": "Warning"}, {"address": 1211, "code": "esses.length - 1].transfer(jackpot);\n            owner.transfer(t", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1339\n", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 31, "title": "Multiple Calls", "type": "Information"}, {"address": 1211, "code": "esses.length - 1].transfer(jackpot);\n            owner.transfer(t", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 31, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1339, "code": "           // Reset contract", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 33, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1640, "code": ";\n\ncontract MumsTh", "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2386f26fc10000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x800000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1740, "code": " fee\n       ", "debug": "callvalue: 0xcc0060153ba826886b508265b0f600000000000000000000000fffffffffd584\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x5cb5100000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 50, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1757, "code": ";\n\ncontract MumsTh", "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2386f26fc10000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x800000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1888, "code": "   // 5% are going to the jack", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2222\nCall at address: 2222\n", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 53, "title": "Multiple Calls", "type": "Information"}, {"address": 1936, "code": " // 90% of", "debug": "callvalue: 0xa03810d1f0201a500a3c00da81385fc536a0340d4f1e00c38f1e641482002802\nstorage_2: 0x56bc75e2d630fffff\nretval_1888: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x5cb5100000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 58, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1990, "code": "ditorAddresses[lastCreditorPaye", "debug": "storage_2: 0x56bc75e2d63100000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x56bc75e2d630fffff\nretval_1888: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2386f26fc10000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0xe97dcb6200000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer underflow exists in the function `enter()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "enter()", "lineno": 60, "title": "Integer Underflow", "type": "Warning"}, {"address": 2027, "code": "ance - jackpot) {\n                   ", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_2: 0x56bc75e2d63100000\nretval_1888: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2386f26fc10000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 59, "title": "Exception state", "type": "Informational"}, {"address": 2083, "code": "ounts[lastCreditorPayedOut]);\n         ", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x2000000\nstorage_3: 0x3ffff\nstorage_2: 0x56bc75e2d63100000\nstorage_62514009886607029107290561805838585334079798074568712924583230797734656856475 +\nConcat(0, Extract(39, 8, storage_0)): 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x56bc75e2d63100000\nstorage_0: 0x100000000\nretval_1888: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x2386f26fc10000\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldata_MumsTheWord_0: 0xe97dcb6200000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "enter()", "lineno": 60, "title": "Exception state", "type": "Informational"}, {"address": 2222, "code": "ounts[lastCreditorPayedOut]);\n                    lastCreditorPayedOut += 1;\n          ", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 60, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 2222, "code": "ounts[lastCreditorPayedOut]);\n                    lastCreditorPayedOut += 1;\n          ", "debug": "SOLVER OUTPUT:\nstorage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x3ffffffff\nstorage_2: 0x56bc75e2d630fffff\ncallvalue: 0x2386f26fc10000\nstorage_62514009886607029107290561805838585334079798074568712924583230797734656856475 +\nConcat(0, Extract(39, 8, storage_0)): 0x0\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x56bc924ecb5733fff\nstorage_0: 0x7ffffffe00\nretval_1888: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldatasize_MumsTheWord: 0x3\n", "description": "In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 87903029871075914254377627908054574944891091886930582284385770809450030037083.\nThere is a check on storage index 87903029871075914254377627908054574944891091886930582284385770809450030037083. This storage slot can be written to by calling the function `fallback`.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 2. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 62514009886607029107290561805838585334079798074568712924583230797734656856475. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `fallback`.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 60, "title": "Ether send", "type": "Warning"}, {"address": 2222, "code": "ounts[lastCreditorPayedOut]);\n                    lastCreditorPayedOut += 1;\n          ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 60, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2488, "code": "increase the jackp", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0xffffffff00\ncalldata_MumsTheWord_0: 0x6831c16900000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "totalPayedOut()", "lineno": 88, "title": "Exception state", "type": "Informational"}, {"address": 2571, "debug": "storage_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MumsTheWord_0: 0x81064e2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCreditorAmounts()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "getCreditorAmounts()", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2573, "debug": "storage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MumsTheWord_0: 0x81064e2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCreditorAmounts()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "getCreditorAmounts()", "lineno": 100, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2662, "code": "      return credito", "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_MumsTheWord_0: 0xa2624afe00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\n", "description": "A possible integer overflow exists in the function `raiseJackpot()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "raiseJackpot()", "lineno": 94, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2685, "code": "[] public creditorAddresses;\n    u", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MumsTheWord_4: 0x0\nstorage_3: 0x0\ncalldata_MumsTheWord_0: 0xce43b0c000000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "_function_0xce43b0c0", "lineno": 8, "title": "Exception state", "type": "Informational"}, {"address": 2777, "code": " return creditorAmounts;", "debug": "storage_3: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_MumsTheWord_0: 0xd3edcb5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCreditorAddresses()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "getCreditorAddresses()", "lineno": 98, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2779, "code": " return creditorAmounts;", "debug": "storage_3: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_MumsTheWord_0: 0xd3edcb5b00000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getCreditorAddresses()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "getCreditorAddresses()", "lineno": 98, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2889, "code": "ublic creditorAmounts;\n    ad", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MumsTheWord_4: 0x0\nstorage_4: 0x0\ncalldata_MumsTheWord_0: 0xf42d1d3000000000000000000000000000000000000000000000000000000000\ncalldatasize_MumsTheWord: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "_function_0xf42d1d30", "lineno": 9, "title": "Exception state", "type": "Informational"}, {"address": 3018, "code": "ntract MumsTheWord {\n\n    uint32 public lastCreditorPayedOut;\n    uint public lastTimeOfNewCredit;\n    uint public jackpot;\n    address[] public creditorAddresses;\n    uint[] public creditorAmounts;\n    address public owner;\n\tuint8 public round;\n\t\n\t// eight hours\n    uint constant EIGHT_HOURS = 28800;\n\tuint constant MIN_AMOUNT = 10 ** 16;\n\n    function MumsTheWord() {\n        // owner of the contract will provide the initial jackpot!\n        jackpot = msg.value;\n        owner = msg.sender;\n        lastTimeOfNewCredit = now;\n    }\n\n    function enter() payable returns (bool) {\n        uint amount = msg.value;\n        // check if 8h have passed\n        if (lastTimeOfNewCredit + EIGHT_HOURS > now) {\n            // Return money to sender\n            msg.sender.transfer(amount);\n            // Sends jackpot to the last player\n            creditorAddresses[creditorAddresses.length - 1].transfer(jackpot);\n            owner.transfer(this.balance);\n            // Reset contract state\n            lastCreditorPayedOut = 0;\n            lastTimeOfNewCredit = now;\n            jackpot = 0;\n            creditorAddresses = new address[](0);\n            creditorAmounts = new uint[](0);\n            round += 1;\n            return false;\n        } else {\n            // the system needs to collect at least 1% of the profit from a crash to stay alive\n            if (amount >= MIN_AMOUNT) {\n                // the System has received fresh money, it will survive at least 8h more\n                lastTimeOfNewCredit = now;\n                // register the new creditor and his amount with 10% interest rate\n                creditorAddresses.push(msg.sender);\n                creditorAmounts.push(amount * 110 / 100);\n\t\t\t\t\n                // 5% fee\n                owner.transfer(amount * 5/100);\n\t\t\t\t\n                // 5% are going to the jackpot (will increase the value for the last person standing)\n                if (jackpot < 100 ether) {\n                    jackpot += amount * 5/100;\n                }\n\t\t\t\t\n                // 90% of the money will be used to pay out old creditors\n                if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - jackpot) {\n                    creditorAddresses[lastCreditorPayedOut].transfer(creditorAmounts[lastCreditorPayedOut]);\n                    lastCreditorPayedOut += 1;\n                }\n                return true;\n            } else {\n                msg.sender.transfer(amount);\n                return false;\n            }\n        }\n    }\n\n    // fallback function\n    function() payable {\n        enter();\n    }\n\n    function totalDebt() returns (uint debt) {\n        for(uint i=lastCreditorPayedOut; i<creditorAmounts.length; i++){\n            debt += creditorAmounts[i];\n        }\n    }\n\n    function totalPayedOut() returns (uint payout) {\n        for(uint i=0; i<lastCreditorPayedOut; i++){\n            payout += creditorAmounts[i];\n        }\n    }\n\n    // better don't do it (unless you want to increase the jackpot)\n    function raiseJackpot() payable {\n        jackpot += msg.value;\n    }\n\n    function getCreditorAddresses() returns (address[]) {\n        return creditorAddresses;\n    }\n\n    function getCreditorAmounts() returns (uint[]) {\n        return creditorAmounts;\n    }\n}", "debug": "storage_3: 0xfffcffffe1e7e1ffffe7ffffffeffff7f7fce7e7efff7ed7d0ed74ddd04003de\nretval_1339: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1211: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1073: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldatasize_MumsTheWord: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3156, "code": "ntract MumsTheWord {\n\n    uint32 public lastCreditorPayedOut;\n    uint public lastTimeOfNewCredit;\n    uint public jackpot;\n    address[] public creditorAddresses;\n    uint[] public creditorAmounts;\n    address public owner;\n\tuint8 public round;\n\t\n\t// eight hours\n    uint constant EIGHT_HOURS = 28800;\n\tuint constant MIN_AMOUNT = 10 ** 16;\n\n    function MumsTheWord() {\n        // owner of the contract will provide the initial jackpot!\n        jackpot = msg.value;\n        owner = msg.sender;\n        lastTimeOfNewCredit = now;\n    }\n\n    function enter() payable returns (bool) {\n        uint amount = msg.value;\n        // check if 8h have passed\n        if (lastTimeOfNewCredit + EIGHT_HOURS > now) {\n            // Return money to sender\n            msg.sender.transfer(amount);\n            // Sends jackpot to the last player\n            creditorAddresses[creditorAddresses.length - 1].transfer(jackpot);\n            owner.transfer(this.balance);\n            // Reset contract state\n            lastCreditorPayedOut = 0;\n            lastTimeOfNewCredit = now;\n            jackpot = 0;\n            creditorAddresses = new address[](0);\n            creditorAmounts = new uint[](0);\n            round += 1;\n            return false;\n        } else {\n            // the system needs to collect at least 1% of the profit from a crash to stay alive\n            if (amount >= MIN_AMOUNT) {\n                // the System has received fresh money, it will survive at least 8h more\n                lastTimeOfNewCredit = now;\n                // register the new creditor and his amount with 10% interest rate\n                creditorAddresses.push(msg.sender);\n                creditorAmounts.push(amount * 110 / 100);\n\t\t\t\t\n                // 5% fee\n                owner.transfer(amount * 5/100);\n\t\t\t\t\n                // 5% are going to the jackpot (will increase the value for the last person standing)\n                if (jackpot < 100 ether) {\n                    jackpot += amount * 5/100;\n                }\n\t\t\t\t\n                // 90% of the money will be used to pay out old creditors\n                if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - jackpot) {\n                    creditorAddresses[lastCreditorPayedOut].transfer(creditorAmounts[lastCreditorPayedOut]);\n                    lastCreditorPayedOut += 1;\n                }\n                return true;\n            } else {\n                msg.sender.transfer(amount);\n                return false;\n            }\n        }\n    }\n\n    // fallback function\n    function() payable {\n        enter();\n    }\n\n    function totalDebt() returns (uint debt) {\n        for(uint i=lastCreditorPayedOut; i<creditorAmounts.length; i++){\n            debt += creditorAmounts[i];\n        }\n    }\n\n    function totalPayedOut() returns (uint payout) {\n        for(uint i=0; i<lastCreditorPayedOut; i++){\n            payout += creditorAmounts[i];\n        }\n    }\n\n    // better don't do it (unless you want to increase the jackpot)\n    function raiseJackpot() payable {\n        jackpot += msg.value;\n    }\n\n    function getCreditorAddresses() returns (address[]) {\n        return creditorAddresses;\n    }\n\n    function getCreditorAmounts() returns (uint[]) {\n        return creditorAmounts;\n    }\n}", "debug": "storage_3: 0x1\nstorage_4: 0xb9e52933205003f0e34cf965d8187be6bf3d0003110380184010000010830e02\nretval_1339: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1211: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_1073: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f7f\ncalldatasize_MumsTheWord: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xbdb8b73aea0c43118ce8834c91d50ae8bbd5ed32.sol", "function": "fallback", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}