{
  "contract": "0xd9dbd7818611436d88a0a90d5cbd24d6603a2358",
  "tool": "mythril",
  "start": 1563524607.285753,
  "end": 1563524733.1468673,
  "duration": 125.86111426353455,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 657,
        "code": "quire(addresses.length == amounts.length);\n        \n        for (uint8 i = 0; i < addresses.length; i++) {\n            distr(addresses[i], amounts[i]);\n        }\n    }\n\n    function lockedOf(address _owner) constant public returns (uint256) {\n        return locknum[_owner];\n    }\n\n    function balanceOf(ad",
        "debug": "calldata_TrineChain_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TrineChain_0: 0x2929abe600000000000000000000000000000000000000000000000000000000\ncalldatasize_TrineChain: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distribute(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0xd9dbd7818611436d88a0a90d5cbd24d6603a2358.sol",
        "function": "distribute(address[],uint256[])",
        "lineno": 136,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1100,
        "code": "(addresses.length <= 255);\n        require(addresses.length == amounts.length);\n        \n        for (uint8 i = 0; i < addresses.length; i++) {\n            lock(addresses[i], amounts[i]);\n        }\n    }\n\n    function distr(address _to, uint256 _amount) private returns (bool) {\n        require(owner !",
        "debug": "calldata_TrineChain_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TrineChain_0: 0xa55deccb00000000000000000000000000000000000000000000000000000000\ncalldatasize_TrineChain: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `locked(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/10/0xd9dbd7818611436d88a0a90d5cbd24d6603a2358.sol",
        "function": "locked(address[],uint256[])",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2092,
        "code": "n TrineChain() public {\n        bal",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TrineChain: 0x60\ncalldata_TrineChain_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xd9dbd7818611436d88a0a90d5cbd24d6603a2358.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 72,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3891,
        "code": "n TrineChain() public {\n        bal",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_TrineChain: 0x4\ncalldata_TrineChain_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xd9dbd7818611436d88a0a90d5cbd24d6603a2358.sol",
        "function": "transfer(address,uint256)",
        "lineno": 72,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}