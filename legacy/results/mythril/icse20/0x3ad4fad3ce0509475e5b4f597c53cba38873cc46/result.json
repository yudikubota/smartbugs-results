{
  "contract": "0x3ad4fad3ce0509475e5b4f597c53cba38873cc46",
  "tool": "mythril",
  "start": 1563722675.5140762,
  "end": 1563722693.2805827,
  "duration": 17.76650643348694,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1783,
        "code": "g.sender, this, amount))\n        {\n            tokenBalance[",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "depoToken(address,uint256)",
        "lineno": 38,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2412,
        "code": "        {\n            tokenBalance[tokenAddr][msg.",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "wdToken(address,uint256)",
        "lineno": 54,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3248,
        "code": "r][msg.sender] = safeSub(tokenBalance[token",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "sendTokenTo(address,address,uint256)",
        "lineno": 77,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3575,
        "code": "nder], amount);\n    }\n}",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "sendTokenTo(address,address,uint256)",
        "lineno": 77,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3651,
        "code": "ue;\n    }\n    \n    function depoTok",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_ERC20Token_0: 0xf0c2cf2f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x4\n",
        "description": "A possible integer overflow exists in the function `depoEther()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "depoEther()",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3673,
        "code": "turn _x - _y;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nreturndatasize: 0x20\nretval_2412: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20Token_32 + 4: 0x1\ncalldata_ERC20Token_0: 0x5d9d791000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "wdToken(address,uint256)",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3691,
        "code": "t(z >= ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_ERC20Token_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nreturndatasize: 0x20\nretval_1783: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20Token_0: 0x53c099e000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `depoToken(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "depoToken(address,uint256)",
        "lineno": 24,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3704,
        "code": "  return z;\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_ERC20Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_1783: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20Token_0: 0x53c099e000000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/38/0x3ad4fad3ce0509475e5b4f597c53cba38873cc46.sol",
        "function": "depoToken(address,uint256)",
        "lineno": 25,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}