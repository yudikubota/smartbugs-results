{"error": null, "issues": [{"address": 444, "code": " sale\n  function getTreesOnSale() public constant returns(uint256[]) {\n      return treesOnSale;\n  }\n\n  // To extract the ether in an emergency\n  function emergencyExtract() public onlyOw", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Trees_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Trees_0: 0xa425a3300000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreeIds(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreeIds(address)", "lineno": 220, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1378, "code": " }\n}", "debug": "storage_6: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_Trees_0: 0x7f64727b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreesOnSale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreesOnSale()", "lineno": 228, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1508, "code": ");\n    for(uint256 i = 0; i < _treeIds.length; i++) {\n        // Important to multiply by 100 to\n        uint256 yourPercentage = treeDetails[_treeIds[i]].treePower * 1 ether / totalTreePower;\n        uint256 amountYouGet = yourPercentage * amountInTreasuryToDistribute / 1 ether;\n        results[i] = amountYouGet;\n    }\n    return results;\n  }\n\n  // To get all the tree IDs of one user\n  function getTreeIds(address _account) public constant returns(uint256[]) {\n    if(_account != address(0)) return ownerTreesIds[_account];\n    else return ownerTreesId", "debug": "calldata_Trees_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Trees_0: 0x859f63dc00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `checkRewards(uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "checkRewards(uint256[])", "lineno": 204, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2542, "code": "To extract the ether in an eme", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Trees_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Trees_0: 0xa425a3300000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreeIds(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreeIds(address)", "lineno": 225, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2544, "code": "To extract the ether in an eme", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Trees_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Trees_0: 0xa425a3300000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreeIds(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreeIds(address)", "lineno": 225, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2691, "code": "ction emergencyExtract() public ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Trees_4: 0x0\ncalldata_Trees_0: 0xa425a3300000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreeIds(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreeIds(address)", "lineno": 226, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2693, "code": "ction emergencyExtract() public ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Trees_4: 0x0\ncalldata_Trees_0: 0xa425a3300000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreeIds(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreeIds(address)", "lineno": 226, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3603, "code": ";\n\ncontract Admin ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_32_+_4: 0x2\ncallvalue: 0x0\nstorage_4 + keccac_calldata_Trees_4: 0x0\nstorage_7 + keccac_calldata_Trees_4: 0xff00\nstorage_1 + keccac_calldata_Trees_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Trees_0: 0x2ab28ce400000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\nstorage_6: 0x0\ncalldata_Trees_4: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_32_+_4 +\n1: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_32_+_4 +\n0: 0x0\n", "description": "A possible integer overflow exists in the function `buyTree(uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "buyTree(uint256,address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4092, "code": "lTreeSell(uint256 _treeId) public {\n    requ", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_32_+_4: 0x1\nstorage_5 + keccac_calldata_Trees_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0x0\nretval_3953: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4 + keccac_calldata_Trees_4: 0x0\nstorage_7 + keccac_calldata_Trees_4: 0xff00\nstorage_1 + keccac_calldata_Trees_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Trees_0: 0x2ab28ce400000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\nstorage_6: 0x0\ncalldata_Trees_4: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_32_+_4 +\n0: 0x0\n", "description": "A possible integer overflow exists in the function `buyTree(uint256,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "buyTree(uint256,address)", "lineno": 129, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4934, "code": "erTreesIds;\n  // Tree id and the days the tree has", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Trees_32 + 4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\ncalldata_Trees_4: 0x0\ncalldata_Trees_0: 0x63aa289b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "_function_0x63aa289b", "lineno": 41, "title": "Exception state", "type": "Informational"}, {"address": 5322, "code": ";\n\ncontract Admin ", "debug": "storage_6: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Trees_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7 + keccac_calldata_Trees_4: 0x0\nstorage_1 + keccac_calldata_Trees_4: 0x0\ncaller: 0x0\ncalldata_Trees_0: 0x79f3b48100000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `putTreeOnSale(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "putTreeOnSale(uint256,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5448, "code": " uint256 public lastTr", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Trees_4: 0x0\nstorage_5: 0x0\ncalldata_Trees_0: 0x7a50802200000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "_function_0x7a508022", "lineno": 60, "title": "Exception state", "type": "Informational"}, {"address": 5513, "debug": "storage_6: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_Trees_0: 0x7f64727b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreesOnSale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreesOnSale()", "lineno": 229, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5515, "debug": "storage_6: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_Trees_0: 0x7f64727b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getTreesOnSale()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "getTreesOnSale()", "lineno": 229, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5744, "code": "ults;\n  }\n\n  // To get all the tree IDs of one user\n  functio", "debug": "The exception is triggered under the following conditions:\n\nstorage_12: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8 + keccac_calldata_Trees_4: 0x0\nstorage_1 + keccac_calldata_Trees_4: 0x0\ncaller: 0x0\ncalldata_Trees_0: 0x56196d8700000000000000000000000000000000000000000000000000000000\ncalldatasize_Trees: 0x4\nstorage_11: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/27/0xfffce2dc587badbd10b4fe17f0f5f293458f6793.sol", "function": "pickReward(uint256)", "lineno": 211, "title": "Exception state", "type": "Informational"}], "success": true}