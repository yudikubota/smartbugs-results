{"error": null, "issues": [{"address": 640, "code": "2 <0.6.0;\ncontract", "debug": "storage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1 + keccac_calldata_KingOfTheHillCards_4: 0x0\ncalldata_KingOfTheHillCards_0: 0x771602f700000000000000000000000000000000000000000000000000000000\ncalldatasize_KingOfTheHillCards: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `add(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xd8cd3272d823136ae6874686bc92a51813367d7a.sol", "function": "add(uint256,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 978, "code": "public cardsLUT;//Look Up", "debug": "The exception is triggered under the following conditions:\n\ncalldata_KingOfTheHillCards_4: 0x0\nstorage_1: 0x0\ncalldata_KingOfTheHillCards_0: 0xf987820900000000000000000000000000000000000000000000000000000000\ncalldatasize_KingOfTheHillCards: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/41/0xd8cd3272d823136ae6874686bc92a51813367d7a.sol", "function": "_function_0xf9878209", "lineno": 11, "title": "Exception state", "type": "Informational"}], "success": true}