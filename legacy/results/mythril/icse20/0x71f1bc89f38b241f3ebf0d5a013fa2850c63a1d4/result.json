{
  "contract": "0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4",
  "tool": "mythril",
  "start": 1563471570.9917803,
  "end": 1563471748.2613635,
  "duration": 177.26958322525024,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2690,
        "code": "3 tokens to prevent a",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "_function_0x17ffc320",
        "lineno": 203,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2690,
        "code": "3 tokens to prevent a",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6234\n",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "_function_0x17ffc320",
        "lineno": 203,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3173,
        "code": "oken received in a contract by transf",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "reclaimContract(address)",
        "lineno": 183,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 5014,
        "code": "hing Ownable) end up bei",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function reclaimEther(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "reclaimEther()",
        "lineno": 165,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5026,
        "code": "s (anything Ownable) end up bein",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0x0\ncalldata_ZDRToken_0: 0x9f727c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_ZDRToken: 0x4\nretval_5014: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "reclaimEther()",
        "lineno": 165,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6234,
        "code": "ken, address from, addres",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "_function_0x17ffc320",
        "lineno": 73,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 7268,
        "code": "* @ti",
        "debug": "storage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_ZDRToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_ZDRToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZDRToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "mint(address,uint256)",
        "lineno": 63,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7281,
        "code": "eERC20\n * @dev",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_0: 0x1\ncalldata_ZDRToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_ZDRToken_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZDRToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/3/0x71f1bc89f38b241f3ebf0d5a013fa2850c63a1d4.sol",
        "function": "mint(address,uint256)",
        "lineno": 63,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}