{
  "contract": "0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc",
  "tool": "mythril",
  "start": 1563674650.1668198,
  "end": 1563674748.644561,
  "duration": 98.47774124145508,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1179,
        "code": "kens.length; i++) {\n            /* Set token. */\n            address token = _tokens[i];\n            \n            /* Retrieve balance. */\n ",
        "debug": "calldata_ZeroCache_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZeroCache_0: 0x2e558d6900000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCache: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `migrate(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "migrate(address[])",
        "lineno": 983,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1798,
        "code": "         back to their ORIGINAL owners AT ANY TIME.\n     *         FOR COMPLIANCE PURPOSES ONLY\n     */\n    function _deposit(\n        address _token,\n        address _from, \n        uint _tokens,\n        bytes _data\n    ) private returns (bool success)",
        "debug": "calldata_ZeroCache_32 + 68: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZeroCache_0: 0x8f4ffcb100000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCache: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `receiveApproval(address,uint256,address,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 573,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2060,
        "code": "ntract addresses are limitless).\n     * \n     *          For this reason, we SKIP ALL transfers to contract\n     *          addresses. You can monitor the `Skipped` event.\n     */\n    function _multiTransfer(\n   ",
        "debug": "calldata_ZeroCache_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZeroCache_0: 0xcd72250d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCache: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xcd72250d`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "_function_0xcd72250d",
        "lineno": 821,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3860,
        "code": "\n            bytes memory data;\n    \n            /* Broadcast event. */\n            emit Deposit(\n                wethAddress",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "wrap(address)",
        "lineno": 438,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5202,
        "code": "tracts:\n     *     - Mainnet : 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\n     *     - Ropsten : 0xc",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "setSuccessor(address)",
        "lineno": 336,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5336,
        "code": " additional interfaces her",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "setSuccessor(address)",
        "lineno": 1175,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 6548,
        "code": "tracts:\n     *     - Mainnet : 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\n     *     - Ropsten : 0xc",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "unwrap(address,uint256)",
        "lineno": 336,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 6548,
        "code": "tracts:\n     *     - Mainnet : 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\n     *     - Ropsten : 0xc",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10318\n",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "unwrap(address,uint256)",
        "lineno": 336,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 8170,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "transferAnyERC20Token(address,uint256)",
        "lineno": 1362,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 10318,
        "code": "name);\n    }\n\n\n    /*******",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "wrap()",
        "lineno": 1254,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10318,
        "code": "name);\n    }\n\n\n    /*******",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3860\n",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "wrap(address)",
        "lineno": 1254,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 10389,
        "code": "n sub",
        "debug": "calldata_ZeroCache_32 + 36: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ZeroCache_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_ZeroCache_0: 0xbeabacc800000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCache: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "transfer(address,address,uint256)",
        "lineno": 53,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 10637,
        "code": "draw(uint256)\", balance));\n",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "migrate(address[])",
        "lineno": 1004,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 10637,
        "code": "draw(uint256)\", balance));\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 10318\n",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "migrate(address[])",
        "lineno": 1004,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 14231,
        "code": "so the token owner). */\n            receiver = _from;\n        }\n\n        /* Incr",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 599,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 14592,
        "code": "his function is reserved for exclusive use by\n     *       Zer0net Administration ON",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "receiveApproval(address,uint256,address,bytes)",
        "lineno": 630,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 15897,
        "code": "is only a",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_ZeroCache_4 + calldata_ZeroCache_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeroCache_0: 0xcd72250d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCache: 0x4\nmem_128 + 32 + 32*calldata_ZeroCache_4 + calldata_ZeroCache_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "_function_0xcd72250d",
        "lineno": 865,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 15923,
        "code": "ed staekho",
        "debug": "The exception is triggered under the following conditions:\n\nmem_128 + 32 + 32*calldata_ZeroCache_4 + calldata_ZeroCache_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeroCache_4 + calldata_ZeroCache_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeroCache_0: 0xcd72250d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeroCache: 0x4\nmem_160 +\n32*calldata_ZeroCache_4 + calldata_ZeroCache_4 +\n32 +\n32*calldata_ZeroCache_4 + calldata_ZeroCache_32 + 4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/35/0xec3cab3640d37cfa70d57f4813d698ba1e4b05cc.sol",
        "function": "_function_0xcd72250d",
        "lineno": 866,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}