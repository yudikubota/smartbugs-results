{"error": null, "issues": [{"address": 1395, "code": "ll(data); }\n}\n\nc", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `proxy(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0x81c798ea668b6d7e07ea198014265e0c1d64b5a8.sol", "function": "execute()", "lineno": 9, "title": "Message call to external contract", "type": "Warning"}, {"address": 1395, "code": "ll(data); }\n}\n\nc", "debug": "", "description": "A possible transaction order independence vulnerability exists in function execute(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/28/0x81c798ea668b6d7e07ea198014265e0c1d64b5a8.sol", "function": "execute()", "lineno": 9, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1395, "code": "ll(data); }\n}\n\nc", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/28/0x81c798ea668b6d7e07ea198014265e0c1d64b5a8.sol", "function": "execute()", "lineno": 9, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1528, "code": "value;\n            Deposited(msg.", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6bd36578124225b595519030344080b5881256948e01f07fa05f61cf76befe74\ncallvalue: 0xdaab5b6002b36a258d2019207974ff31b33658c2effdbf7e1d5f794086f0ed70\norigin: 0x0\ncaller: 0x0\ncalldata_Vault_0: 0xed21248c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Vault: 0x4\n", "description": "A possible integer overflow exists in the function `Deposit()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x81c798ea668b6d7e07ea198014265e0c1d64b5a8.sol", "function": "Deposit()", "lineno": 29, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1594, "code": "     Owne", "debug": "", "description": "Function Deposit() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/28/0x81c798ea668b6d7e07ea198014265e0c1d64b5a8.sol", "function": "Deposit()", "lineno": 22, "title": "Use of tx.origin", "type": "Warning"}, {"address": 1826, "code": "ult is TokenProxy {\n    mapping (address => uint) public Deposits;\n    address public Owner;\n\n    function () public payable { data = msg.data; }\n    event Deposited(uint amount);\n    event Withdrawn(uint amount);\n    \n    function Deposit() payable {\n        if (msg.sender == tx.origin) {\n            Owner = msg.sender;\n            deposit();\n        }\n    }\n    \n    function deposit() payable {\n        if (msg.value >= 1 ether) {\n            Deposits[msg.sender] += msg.value;\n            Deposited(msg.value);\n        }\n    }\n    \n    function withdraw(uint amount) payable onlyOwner {\n        if (amount>0 && Deposits[msg.sender]>=amount) {\n            msg.sender.transfer(amount);\n            Withdrawn(amount);\n        }\n    }\n}", "debug": "calldatasize_Vault: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_Vault_0: 0xe00000000000000000000000000000000000000000000000000000000\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x81c798ea668b6d7e07ea198014265e0c1d64b5a8.sol", "function": "fallback", "lineno": 12, "title": "Integer Overflow ", "type": "Warning"}], "success": true}