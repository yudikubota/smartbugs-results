{"error": null, "issues": [{"address": 303, "code": " register(string key) public {\n        assert(bytes(key).length <= 64);\n        keys[msg.sender] = key;\n        emit LogRegister(msg.sender, key);\n    }\n}", "debug": "calldata_RecoverEosKey_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_RecoverEosKey_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_RecoverEosKey: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x71f2ea939984349838578fbd20fd25e649c1d6a3.sol", "function": "register(string)", "lineno": 9, "title": "Integer Overflow ", "type": "Warning"}, {"address": 563, "code": "tes(key).length <= 64);\n       ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_RecoverEosKey_4 + calldata_RecoverEosKey_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_RecoverEosKey_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_RecoverEosKey: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x71f2ea939984349838578fbd20fd25e649c1d6a3.sol", "function": "register(string)", "lineno": 10, "title": "Exception state", "type": "Informational"}, {"address": 897, "code": "ntract RecoverEosKey {\n    \n    mapping (address => string) public keys;\n    \n    event LogRegister (address user, string key);\n    \n    function register(string key) public {\n        assert(bytes(key).length <= 64);\n        keys[msg.sender] = key;\n        emit LogRegister(msg.sender, key);\n    }\n}", "debug": "calldata_RecoverEosKey_4 + calldata_RecoverEosKey_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xe8c38000000000000000000000000000000000000000000000000000000000c9\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfdd271edcc8a3b9a1ef47dee3ded6ffffff7fffffffffffffffffffffffffffe\ncalldata_RecoverEosKey_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_RecoverEosKey: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x71f2ea939984349838578fbd20fd25e649c1d6a3.sol", "function": "register(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 962, "code": "ntract RecoverEosKey {\n    \n    mapping (address => string) public keys;\n    \n    event LogRegister (address user, string key);\n    \n    function register(string key) public {\n        assert(bytes(key).length <= 64);\n        keys[msg.sender] = key;\n        emit LogRegister(msg.sender, key);\n    }\n}", "debug": "calldata_RecoverEosKey_4 + calldata_RecoverEosKey_4: 0x20\nkeccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_RecoverEosKey_0: 0xf2c298be00000000000000000000000000000000000000000000000000000000\ncalldatasize_RecoverEosKey: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `register(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x71f2ea939984349838578fbd20fd25e649c1d6a3.sol", "function": "register(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}