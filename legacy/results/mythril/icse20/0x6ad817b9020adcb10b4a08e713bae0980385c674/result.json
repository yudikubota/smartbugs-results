{
  "contract": "0x6ad817b9020adcb10b4a08e713bae0980385c674",
  "tool": "mythril",
  "start": 1563590648.3679233,
  "end": 1563591306.9135373,
  "duration": 658.5456140041351,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1842,
        "debug": "calldata_TokenERC20_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenERC20_0: 0x44708f7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `change_time_stamp_status(uint256,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_time_stamp_status(uint256,uint256,string)",
        "lineno": 272,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2213,
        "debug": "calldata_TokenERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenERC20_0: 0x70c7e23000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `change_status(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_status(string)",
        "lineno": 272,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3627,
        "code": "d);\n  event change_Time_Sta",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenERC20_0: 0xf822b7800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "admin_transfer(address,uint256)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4382,
        "code": "d);\n  event change_Time_Sta",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenERC20_0: 0x253c8bd400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_owner(address)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4676,
        "code": "d);\n  event change_Time_Sta",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenERC20_0: 0x44708f7d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_time_stamp_status(uint256,uint256,string)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5074,
        "code": "d);\n  event change_Time_Sta",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenERC20_0: 0x6c237c1c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "admin_token_burn(uint256)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5251,
        "code": "en_time = _stop_token_time;\n\n  ",
        "debug": "storage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\ncalldata_TokenERC20_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_6: 0x0\ncalldata_TokenERC20_0: 0x6c237c1c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `admin_token_burn(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "admin_token_burn(uint256)",
        "lineno": 234,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5469,
        "code": "d);\n  event change_Time_Sta",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenERC20_0: 0x70c7e23000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_status(string)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5784,
        "code": "d);\n  event change_Time_Sta",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\nstorage_6: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_TokenERC20_0: 0x7f81f0b900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "setTransferLock(uint256)",
        "lineno": 58,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8686,
        "code": "\uc8fc\uae30 \uc704\ud55c\uac83) ex :  private ,  public , test , demo\n  string public status;\n  //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc2dc\uc791\uc2dc\uac04) // http://www.4webhelp.net/us/timestamp.php \uc5d0\uc11c \ud655\uc778\uac00\ub2a5\n  uint256 public start_token_time;\n  //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc885\ub8cc\uc2dc\uac04)\n  uint256 public stop_token_time;\n  ///////GMB \ud1a0\ud070\uc740 3\uc790\ub07c\ub9ac \ud1a0\ud070 \uc774\ub3d9\uc744 \ubbf8\uc9c0\uc6d0 \ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucd94\uac00\ud568!!\n  uint256 public transferLock;\n\n  //owner\uc778\uc9c0 \uac80\uc0ac\ud558\ub294 \ubd80\ubd84\n  modifier isOwner\n  {\n    assert(owner == msg.sender);\n    _;\n  }\n\n  //\uc678\ubd80\uc5d0\uc11c \ud638\ucd9c\ud560\uc218 \uc788\uac8c \ud558\ub294\uac83(MIST UI\ub85c \ud655\uc778\uac00\ub2a5)\n  mapping (address => uint256) public balanceOf;\n\n  //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \uc704\ud55c\uac83\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event token_Burn(address indexed from, uint256 value);\n  event token_Add(address indexed from, uint256 value);\n  event Deposit(address _sender, uint amount ,string status);\n  event change_Owner(string newOwner);\n  event change_Status(string newStatus);\n  event change_Name(string newName);\n  event change_Symbol(string newSymbol);\n  event change_TokenReward(uint256 newTokenReward);\n  event change_Time_Stamp(uint256 change_start_time_stamp,uint256 change_stop_time_stamp);\n\n  //\ud1a0\ud070 \ucd08\uae30\ud654 \ud568\uc218\n  function TokenERC20() public\n  {\n    //\ud1a0\ud070 \uc774\ub984 \ucd08\uae30\ud654\n    name = \"GMB\";\n    //\ud1a0\ud070 \uc2ec\ubcfc(\ub2e8\uc704) \ucd08\uae30\ud654\n    symbol = \"MAS\";\n    //\uc18c\uc218\uc810 \uc790\ub9ac \ucd08\uae30\ud654\n    decimals = 18;\n    //wei \ub2e8\uc704\ub97c \ud3b8\ud558\uac8c \ud558\uae30 \uc704\ud55c \ubcc0\uc218\n    _decimals = 10 ** uint256(decimals);\n    //ETH , \ud1a0\ud070 \ud658\uc0b0\ube44\uc728\n    tokenReward = 0;\n    //\ud1a0\ud070 \ubc1c\ud589 \uac2f\uc218 \ucd08\uae30\ud654\n    totalSupply =  _decimals * 10000000000; //1\ubc31\uc5b5\uac1c\n    //\ud1a0\ud070 \uc0c1\ud0dc \ucd08\uae30\ud654\n    status = \"Private\";\n    //\ud0c0\uc784\uc2a4\ud0ec\ud504 \ucd08\uae30\ud654 (\uc2dc\uc791\uc2dc\uac04) 2018.1.1 00:00:00 (Gmt+9)\n    start_token_time = 1514732400;\n    //\ud0c0\uc784\uc2a4\ud0ec\ud504 \ucd08\uae30\ud654 (\uc885\ub8cc\uc2dc\uac04)  2018.12.31 23:59:59 (Gmt+9)\n    stop_token_time = 1546268399;\n    //\ud1a0\ud070 \uad00\ub9ac\uc790 \uc9c0\uac11 \uc8fc\uc18c \ucd08\uae30\ud654\n    owner = msg.sender;\n    //\ubc1c\ud589\ub41c \ud1a0\ud070\uac2f\uc218\ub97c \ud1a0\ud070\uc0dd\uc131\uc9c0\uac11\uc5d0 \uc785\ub825\n    balanceOf[msg.sender] = totalSupply;\n    ///////GMB \ud1a0\ud070\uc740 \uc81c3\uc790\ub07c\ub9ac \ud1a0\ud070 \uc774\ub3d9\uc744 \ubbf8\uc9c0\uc6d0 \ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucd94\uac00\ud568!!\n    transferLock = 1; //0\uc77c\ub54c\ub9cc transfer \uac00\ub2a5\n  }\n  //*\uc774\ub354 \ubc1b\uc73c\uba74 \ud1a0\ud070 \uc804\uc1a1*//\n  function() payable public\n  {\n    //\ud658\uc0b0\uac12 \ubcc0\uc218\n    uint256 cal;\n    //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc2dc\uc791\uc2dc\uac04)\n    require(start_token_time < block.timestamp);\n    //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc885\ub8cc\uc2dc\uac04)\n    require(stop_token_time > block.timestamp);\n    //ETH\ubcf4\ub0b8\uc0ac\ub78c,ETH\ucf54\uc778\uc218 \uc774\ubca4\ud2b8\uc5d0 \uae30\ub85d\n    emit Deposit(msg.sender, msg.value, status);\n    //\ud1a0\ud070=\uc774\ub354*2\n    cal = (msg.value)*tokenReward;\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[owner] >= cal);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require(balanceOf[msg.sender] + cal >= balanceOf[msg.sender]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[owner] -= cal;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[msg.sender] += cal;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(owner, msg.sender, cal);\n  }\n  //*\ud1a0\ud070 \uc804\uc1a1*// ex : 1\ud1a0\ud070 \ucd94\uac00\uc2dc 1 000 000 000 000 000 000(Mist UI \uad00\ub9ac\uc790 \ud398\uc774\uc9c0\uc5d0\uc11c\ub3c4 \ub3d9\uc77c, Mist UI \uc77c\ubc18 \uc0ac\uc6a9\uc790 \ubcf4\ub0b4\uae30\uc5d0\uc11c\ub294 1)\n  function transfer(address _to, uint256 _value) public\n  {\n    ///////GMB \ud1a0\ud070\uc740 \uc81c3\uc790\ub07c\ub9ac \ud1a0\ud070 \uc774\ub3d9\uc744 \ubbf8\uc9c0\uc6d0 \ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucd94\uac00\ud568!!\n    require(transferLock == 0); //0\uc77c\ub54c\ub9cc transfer \uac00\ub2a5\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[msg.sender] >= _value);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require((balanceOf[_to] + _value) >= balanceOf[_to]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[msg.sender] -= _value;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[_to] += _value;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(msg.sender, _to, _value);\n  }\n  //*\ud1a0\ud070 \uc804\uc1a1 geth\uc5d0\uc11c \ud3b8\ud558\uac8c \ubcf4\ub0b4\uae30\uc704\ud574 __decimals\uc744 \ubd99\uc5ec\uc90c*// ex : 1\ud1a0\ud070 \uc804\uc1a1\uc2dc 1\n  function admin_transfer(address _to, uint256 _value) public isOwner\n  {\n    //tokenValue = _value;\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[msg.sender] >= _value*_decimals);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require(balanceOf[_to] + (_value *_decimals)>= balanceOf[_to]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[msg.sender] -= _value*_decimals;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[_to] += _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(msg.sender, _to, _value*_decimals);\n  }\n  //*\uc9c0\uac11\uc5d0\uc11c \uc9c0\uac11\uc73c\ub85c \ud1a0\ud070 \uc774\ub3d9* \ud68c\uc218\uc6a9// ex : 1\ud1a0\ud070 \ud68c\uc218\uc2dc 1\n  function admin_from_To_transfer(address _from, address _to, uint256 _value) public isOwner\n  {\n    //tokenValue = _value;\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[_from] >= _value*_decimals);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require(balanceOf[_to] + (_value *_decimals)>= balanceOf[_to]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[_from] -= _value*_decimals;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[_to] += _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(_from, _to, _value*_decimals);\n  }\n  //*\ucd1d \ubc1c\ud589 \ud1a0\ud070 \uc18c\uac01*// ex : 1\ud1a0\ud070 \uc18c\uac01\uc2dc 1\n  function admin_token_burn(uint256 _value) public isOwner returns (bool success)\n  {\n    //\ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\ubcf4\ub2e4 \uc18c\uac01\ud558\ub824\ub294 \ud1a0\ud070\uc218\uac00 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[msg.sender] >= _value*_decimals);\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[msg.sender] -= _value*_decimals;\n    //\ucd1d \ubc1c\ud589 \ud1a0\ud070\uc5d0\uc11c \ucc28\uac10\n    totalSupply -= _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit token_Burn(msg.sender, _value*_decimals);\n    return true;\n  }\n  //*\ucd1d \ubc1c\ud589 \ud1a0\ud070 \ucd94\uac00*// ex : 1\ud1a0\ud070 \ucd94\uac00\uc2dc 1\n  function admin_token_add(uint256 _value) public  isOwner returns (bool success)\n  {\n    require(balanceOf[msg.sender] >= _value*_decimals);\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub354\ud568\n    balanceOf[msg.sender] += _value*_decimals;\n    //\ucd1d \ubc1c\ud589 \ud1a0\ud070\uc5d0\uc11c \ub354\ud568\n    totalSupply += _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit token_Add(msg.sender, _value*_decimals);\n    return true;\n  }\n  //*\uc774\ub984 \ubcc0\uacbd*//  ***\ud1a0\ud070\uc73c\ub85c \ub4f1\ub85d\ub41c \ud6c4\uc5d0\ub294 \uc774\ub354\uc2a4\uce94\uc5d0\uc11c \ubc18\uc601\uc774 \uc548\ub428(\ucee8\ud2b8\ub799\ud2b8 \ub4f1\ub85d \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uad1c\ucc2e\uc74c)***\n  function change_name(string _tokenName) public isOwner returns (bool success)\n  {\n    //name \ubcc0\uacbd\ud574\uc900\ub2e4\n    name = _tokenName;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Name(name);\n    return true;\n  }\n  //*\uc2ec\ubcfc \ubcc0\uacbd*//  ***\ud1a0\ud070\uc73c\ub85c \ub4f1\ub85d\ub41c \ud6c4\uc5d0\ub294 \uc774\ub354\uc2a4\uce94\uc5d0\uc11c \ubc18\uc601\uc774 \uc548\ub428(\ucee8\ud2b8\ub799\ud2b8 \ub4f1\ub85d \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uad1c\ucc2e\uc74c)***\n  function change_symbol(string _symbol) public isOwner returns (bool success)\n  {\n    //symbol \ubcc0\uacbd\ud574\uc900\ub2e4\n    symbol = _symbol;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Symbol(symbol);\n    return true;\n  }\n  //*status\ubcc0\uacbd*//\n  function change_status(string _status) public isOwner returns (bool success)\n  {\n    //status \ubcc0\uacbd\ud574\uc900\ub2e4\n    status = _status;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Status(status);\n    return true;\n  }\n  //*\ubc30\uc728 \ubcc0\uacbd*//\n  function change_tokenReward(uint256 _tokenReward) public isOwner returns (bool success)\n  {\n    //tokenReward \ubcc0\uacbd\ud574\uc900\ub2e4\n    tokenReward = _tokenReward;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_TokenReward(tokenReward);\n    return true;\n  }\n  //*ETH\ucd9c\uae08*//\n  function ETH_withdraw(uint256 amount) public isOwner returns(bool)\n  {\n    //\uc18c\uc218\uc810\uae4c\uc9c0 \ucd9c\uae08\ud574\uc57c\ub418\uae30 \ub54c\ubb38\uc5d0 wei\ub2e8\uc704\ub85c \ucd9c\uae08 //1ETH \ucd9c\uae08\uc2dc 1 000 000 000 000 000 000 \uc785\ub825 \ud574\uc57c\ub428\n    owner.transfer(amount);\n    //\ucd9c\uae08\ud558\ub294\uac74 \uc77c\ubc18 \uc0ac\uc6a9\uc790\uac00 \uc54c\uc544\uc57c\ub420 \ud544\uc694\uac00 \uc5c6\uae30\ub54c\ubb38\uc5d0 emit \uc774\ubca4\ud2b8\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc74c\n    return true;\n  }\n  //*time_stamp\ubcc0\uacbd*//\n  function change_time_stamp(uint256 _start_token_time,uint256 _stop_token_time) public isOwner returns (bool success)\n  {\n    //start_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    start_token_time = _start_token_time;\n    //stop_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    stop_token_time = _stop_token_time;\n\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Time_Stamp(start_token_time,stop_token_time);\n    return true;\n  }\n  //*owner\ubcc0\uacbd*//\n  function change_owner(address to_owner) public isOwner returns (bool success)\n  {\n    //owner\ub97c \ubcc0\uacbd\ud574\uc900\ub2e4\n    owner = to_owner;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Owner(\"Owner_change\");\n    return true;\n  }\n  //*transferLock\ubcc0\uacbd*// 0\uc77c\ub54c\ub9cc lock \ud480\ub9bc\n  function setTransferLock(uint256 transferLock_status) public isOwner returns (bool success)\n  {\n    //transferLock \ubcc0\uacbd\ud574\uc900\ub2e4\n    transferLock = transferLock_status;\n    //transferLock\uc740 \uc77c\ubc18 \uc0ac\uc6a9\uc790\uac00 \uc54c\uc544\uc57c\ub420 \ud544\uc694\uac00 \uc5c6\uae30\ub54c\ubb38\uc5d0 emit \uc774\ubca4\ud2b8\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc74c\n    return true;\n  }\n  //*time_stamp\ubcc0\uacbd,status \ubcc0\uacbd*//\n  function change_time_stamp_status(uint256 _start_token_time,uint256 _stop_token_time,string _status) public isOwner returns (bool success)\n  {\n    //start_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    start_token_time = _start_token_time;\n    //stop_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    stop_token_time = _stop_token_time;\n    //status \ubcc0\uacbd\ud574\uc900\ub2e4\n    status = _status;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Time_Stamp(start_token_time,stop_token_time);\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Status(status);\n    return true;\n  }\n}",
        "debug": "calldata_TokenERC20_4 + calldata_TokenERC20_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncaller: 0x0\nstorage_6: 0x0\ncalldata_TokenERC20_0: 0x70c7e23000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `change_status(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_status(string)",
        "lineno": 30,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8700,
        "code": "\uc8fc\uae30 \uc704\ud55c\uac83) ex :  private ,  public , test , demo\n  string public status;\n  //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc2dc\uc791\uc2dc\uac04) // http://www.4webhelp.net/us/timestamp.php \uc5d0\uc11c \ud655\uc778\uac00\ub2a5\n  uint256 public start_token_time;\n  //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc885\ub8cc\uc2dc\uac04)\n  uint256 public stop_token_time;\n  ///////GMB \ud1a0\ud070\uc740 3\uc790\ub07c\ub9ac \ud1a0\ud070 \uc774\ub3d9\uc744 \ubbf8\uc9c0\uc6d0 \ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucd94\uac00\ud568!!\n  uint256 public transferLock;\n\n  //owner\uc778\uc9c0 \uac80\uc0ac\ud558\ub294 \ubd80\ubd84\n  modifier isOwner\n  {\n    assert(owner == msg.sender);\n    _;\n  }\n\n  //\uc678\ubd80\uc5d0\uc11c \ud638\ucd9c\ud560\uc218 \uc788\uac8c \ud558\ub294\uac83(MIST UI\ub85c \ud655\uc778\uac00\ub2a5)\n  mapping (address => uint256) public balanceOf;\n\n  //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \uc704\ud55c\uac83\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event token_Burn(address indexed from, uint256 value);\n  event token_Add(address indexed from, uint256 value);\n  event Deposit(address _sender, uint amount ,string status);\n  event change_Owner(string newOwner);\n  event change_Status(string newStatus);\n  event change_Name(string newName);\n  event change_Symbol(string newSymbol);\n  event change_TokenReward(uint256 newTokenReward);\n  event change_Time_Stamp(uint256 change_start_time_stamp,uint256 change_stop_time_stamp);\n\n  //\ud1a0\ud070 \ucd08\uae30\ud654 \ud568\uc218\n  function TokenERC20() public\n  {\n    //\ud1a0\ud070 \uc774\ub984 \ucd08\uae30\ud654\n    name = \"GMB\";\n    //\ud1a0\ud070 \uc2ec\ubcfc(\ub2e8\uc704) \ucd08\uae30\ud654\n    symbol = \"MAS\";\n    //\uc18c\uc218\uc810 \uc790\ub9ac \ucd08\uae30\ud654\n    decimals = 18;\n    //wei \ub2e8\uc704\ub97c \ud3b8\ud558\uac8c \ud558\uae30 \uc704\ud55c \ubcc0\uc218\n    _decimals = 10 ** uint256(decimals);\n    //ETH , \ud1a0\ud070 \ud658\uc0b0\ube44\uc728\n    tokenReward = 0;\n    //\ud1a0\ud070 \ubc1c\ud589 \uac2f\uc218 \ucd08\uae30\ud654\n    totalSupply =  _decimals * 10000000000; //1\ubc31\uc5b5\uac1c\n    //\ud1a0\ud070 \uc0c1\ud0dc \ucd08\uae30\ud654\n    status = \"Private\";\n    //\ud0c0\uc784\uc2a4\ud0ec\ud504 \ucd08\uae30\ud654 (\uc2dc\uc791\uc2dc\uac04) 2018.1.1 00:00:00 (Gmt+9)\n    start_token_time = 1514732400;\n    //\ud0c0\uc784\uc2a4\ud0ec\ud504 \ucd08\uae30\ud654 (\uc885\ub8cc\uc2dc\uac04)  2018.12.31 23:59:59 (Gmt+9)\n    stop_token_time = 1546268399;\n    //\ud1a0\ud070 \uad00\ub9ac\uc790 \uc9c0\uac11 \uc8fc\uc18c \ucd08\uae30\ud654\n    owner = msg.sender;\n    //\ubc1c\ud589\ub41c \ud1a0\ud070\uac2f\uc218\ub97c \ud1a0\ud070\uc0dd\uc131\uc9c0\uac11\uc5d0 \uc785\ub825\n    balanceOf[msg.sender] = totalSupply;\n    ///////GMB \ud1a0\ud070\uc740 \uc81c3\uc790\ub07c\ub9ac \ud1a0\ud070 \uc774\ub3d9\uc744 \ubbf8\uc9c0\uc6d0 \ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucd94\uac00\ud568!!\n    transferLock = 1; //0\uc77c\ub54c\ub9cc transfer \uac00\ub2a5\n  }\n  //*\uc774\ub354 \ubc1b\uc73c\uba74 \ud1a0\ud070 \uc804\uc1a1*//\n  function() payable public\n  {\n    //\ud658\uc0b0\uac12 \ubcc0\uc218\n    uint256 cal;\n    //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc2dc\uc791\uc2dc\uac04)\n    require(start_token_time < block.timestamp);\n    //\uc774\ub354 \uc785\uae08 \uc81c\ud55c \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc885\ub8cc\uc2dc\uac04)\n    require(stop_token_time > block.timestamp);\n    //ETH\ubcf4\ub0b8\uc0ac\ub78c,ETH\ucf54\uc778\uc218 \uc774\ubca4\ud2b8\uc5d0 \uae30\ub85d\n    emit Deposit(msg.sender, msg.value, status);\n    //\ud1a0\ud070=\uc774\ub354*2\n    cal = (msg.value)*tokenReward;\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[owner] >= cal);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require(balanceOf[msg.sender] + cal >= balanceOf[msg.sender]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[owner] -= cal;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[msg.sender] += cal;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(owner, msg.sender, cal);\n  }\n  //*\ud1a0\ud070 \uc804\uc1a1*// ex : 1\ud1a0\ud070 \ucd94\uac00\uc2dc 1 000 000 000 000 000 000(Mist UI \uad00\ub9ac\uc790 \ud398\uc774\uc9c0\uc5d0\uc11c\ub3c4 \ub3d9\uc77c, Mist UI \uc77c\ubc18 \uc0ac\uc6a9\uc790 \ubcf4\ub0b4\uae30\uc5d0\uc11c\ub294 1)\n  function transfer(address _to, uint256 _value) public\n  {\n    ///////GMB \ud1a0\ud070\uc740 \uc81c3\uc790\ub07c\ub9ac \ud1a0\ud070 \uc774\ub3d9\uc744 \ubbf8\uc9c0\uc6d0 \ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucd94\uac00\ud568!!\n    require(transferLock == 0); //0\uc77c\ub54c\ub9cc transfer \uac00\ub2a5\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[msg.sender] >= _value);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require((balanceOf[_to] + _value) >= balanceOf[_to]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[msg.sender] -= _value;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[_to] += _value;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(msg.sender, _to, _value);\n  }\n  //*\ud1a0\ud070 \uc804\uc1a1 geth\uc5d0\uc11c \ud3b8\ud558\uac8c \ubcf4\ub0b4\uae30\uc704\ud574 __decimals\uc744 \ubd99\uc5ec\uc90c*// ex : 1\ud1a0\ud070 \uc804\uc1a1\uc2dc 1\n  function admin_transfer(address _to, uint256 _value) public isOwner\n  {\n    //tokenValue = _value;\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[msg.sender] >= _value*_decimals);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require(balanceOf[_to] + (_value *_decimals)>= balanceOf[_to]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[msg.sender] -= _value*_decimals;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[_to] += _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(msg.sender, _to, _value*_decimals);\n  }\n  //*\uc9c0\uac11\uc5d0\uc11c \uc9c0\uac11\uc73c\ub85c \ud1a0\ud070 \uc774\ub3d9* \ud68c\uc218\uc6a9// ex : 1\ud1a0\ud070 \ud68c\uc218\uc2dc 1\n  function admin_from_To_transfer(address _from, address _to, uint256 _value) public isOwner\n  {\n    //tokenValue = _value;\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\uac00 \ubcf4\ub0b4\ub824\ub294 \ud1a0\ud070\ubcf4\ub2e4 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[_from] >= _value*_decimals);\n    //\uc624\ubc84\ud50c\ub85c\uc5b4 \uac80\uc0ac\n    require(balanceOf[_to] + (_value *_decimals)>= balanceOf[_to]);\n    //\ud1a0\ud070\uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[_from] -= _value*_decimals;\n    //\ubc1b\ub294 \uc0ac\ub78c\uc9c0\uac11\uc5d0 \ud1a0\ud070 \uc800\uc7a5\n    balanceOf[_to] += _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit Transfer(_from, _to, _value*_decimals);\n  }\n  //*\ucd1d \ubc1c\ud589 \ud1a0\ud070 \uc18c\uac01*// ex : 1\ud1a0\ud070 \uc18c\uac01\uc2dc 1\n  function admin_token_burn(uint256 _value) public isOwner returns (bool success)\n  {\n    //\ub0a8\uc544\uc788\ub294 \ud1a0\ud070\uc218\ubcf4\ub2e4 \uc18c\uac01\ud558\ub824\ub294 \ud1a0\ud070\uc218\uac00 \ub9ce\uc740\uc9c0 \uac80\uc0ac\n    require(balanceOf[msg.sender] >= _value*_decimals);\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ucc28\uac10\n    balanceOf[msg.sender] -= _value*_decimals;\n    //\ucd1d \ubc1c\ud589 \ud1a0\ud070\uc5d0\uc11c \ucc28\uac10\n    totalSupply -= _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit token_Burn(msg.sender, _value*_decimals);\n    return true;\n  }\n  //*\ucd1d \ubc1c\ud589 \ud1a0\ud070 \ucd94\uac00*// ex : 1\ud1a0\ud070 \ucd94\uac00\uc2dc 1\n  function admin_token_add(uint256 _value) public  isOwner returns (bool success)\n  {\n    require(balanceOf[msg.sender] >= _value*_decimals);\n    //\ud1a0\ud070 \uc9c0\uac11\uc5d0\uc11c \ub354\ud568\n    balanceOf[msg.sender] += _value*_decimals;\n    //\ucd1d \ubc1c\ud589 \ud1a0\ud070\uc5d0\uc11c \ub354\ud568\n    totalSupply += _value*_decimals;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit token_Add(msg.sender, _value*_decimals);\n    return true;\n  }\n  //*\uc774\ub984 \ubcc0\uacbd*//  ***\ud1a0\ud070\uc73c\ub85c \ub4f1\ub85d\ub41c \ud6c4\uc5d0\ub294 \uc774\ub354\uc2a4\uce94\uc5d0\uc11c \ubc18\uc601\uc774 \uc548\ub428(\ucee8\ud2b8\ub799\ud2b8 \ub4f1\ub85d \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uad1c\ucc2e\uc74c)***\n  function change_name(string _tokenName) public isOwner returns (bool success)\n  {\n    //name \ubcc0\uacbd\ud574\uc900\ub2e4\n    name = _tokenName;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Name(name);\n    return true;\n  }\n  //*\uc2ec\ubcfc \ubcc0\uacbd*//  ***\ud1a0\ud070\uc73c\ub85c \ub4f1\ub85d\ub41c \ud6c4\uc5d0\ub294 \uc774\ub354\uc2a4\uce94\uc5d0\uc11c \ubc18\uc601\uc774 \uc548\ub428(\ucee8\ud2b8\ub799\ud2b8 \ub4f1\ub85d \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uad1c\ucc2e\uc74c)***\n  function change_symbol(string _symbol) public isOwner returns (bool success)\n  {\n    //symbol \ubcc0\uacbd\ud574\uc900\ub2e4\n    symbol = _symbol;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Symbol(symbol);\n    return true;\n  }\n  //*status\ubcc0\uacbd*//\n  function change_status(string _status) public isOwner returns (bool success)\n  {\n    //status \ubcc0\uacbd\ud574\uc900\ub2e4\n    status = _status;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Status(status);\n    return true;\n  }\n  //*\ubc30\uc728 \ubcc0\uacbd*//\n  function change_tokenReward(uint256 _tokenReward) public isOwner returns (bool success)\n  {\n    //tokenReward \ubcc0\uacbd\ud574\uc900\ub2e4\n    tokenReward = _tokenReward;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_TokenReward(tokenReward);\n    return true;\n  }\n  //*ETH\ucd9c\uae08*//\n  function ETH_withdraw(uint256 amount) public isOwner returns(bool)\n  {\n    //\uc18c\uc218\uc810\uae4c\uc9c0 \ucd9c\uae08\ud574\uc57c\ub418\uae30 \ub54c\ubb38\uc5d0 wei\ub2e8\uc704\ub85c \ucd9c\uae08 //1ETH \ucd9c\uae08\uc2dc 1 000 000 000 000 000 000 \uc785\ub825 \ud574\uc57c\ub428\n    owner.transfer(amount);\n    //\ucd9c\uae08\ud558\ub294\uac74 \uc77c\ubc18 \uc0ac\uc6a9\uc790\uac00 \uc54c\uc544\uc57c\ub420 \ud544\uc694\uac00 \uc5c6\uae30\ub54c\ubb38\uc5d0 emit \uc774\ubca4\ud2b8\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc74c\n    return true;\n  }\n  //*time_stamp\ubcc0\uacbd*//\n  function change_time_stamp(uint256 _start_token_time,uint256 _stop_token_time) public isOwner returns (bool success)\n  {\n    //start_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    start_token_time = _start_token_time;\n    //stop_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    stop_token_time = _stop_token_time;\n\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Time_Stamp(start_token_time,stop_token_time);\n    return true;\n  }\n  //*owner\ubcc0\uacbd*//\n  function change_owner(address to_owner) public isOwner returns (bool success)\n  {\n    //owner\ub97c \ubcc0\uacbd\ud574\uc900\ub2e4\n    owner = to_owner;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Owner(\"Owner_change\");\n    return true;\n  }\n  //*transferLock\ubcc0\uacbd*// 0\uc77c\ub54c\ub9cc lock \ud480\ub9bc\n  function setTransferLock(uint256 transferLock_status) public isOwner returns (bool success)\n  {\n    //transferLock \ubcc0\uacbd\ud574\uc900\ub2e4\n    transferLock = transferLock_status;\n    //transferLock\uc740 \uc77c\ubc18 \uc0ac\uc6a9\uc790\uac00 \uc54c\uc544\uc57c\ub420 \ud544\uc694\uac00 \uc5c6\uae30\ub54c\ubb38\uc5d0 emit \uc774\ubca4\ud2b8\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc74c\n    return true;\n  }\n  //*time_stamp\ubcc0\uacbd,status \ubcc0\uacbd*//\n  function change_time_stamp_status(uint256 _start_token_time,uint256 _stop_token_time,string _status) public isOwner returns (bool success)\n  {\n    //start_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    start_token_time = _start_token_time;\n    //stop_token_time\uc744 \ubcc0\uacbd\ud574\uc900\ub2e4\n    stop_token_time = _stop_token_time;\n    //status \ubcc0\uacbd\ud574\uc900\ub2e4\n    status = _status;\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Time_Stamp(start_token_time,stop_token_time);\n    //\uc774\ubca4\ud2b8 \uae30\ub85d\uc744 \ub0a8\uae40\n    emit change_Status(status);\n    return true;\n  }\n}",
        "debug": "calldata_TokenERC20_4 + calldata_TokenERC20_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncaller: 0x0\nstorage_6: 0x0\ncalldata_TokenERC20_0: 0x70c7e23000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenERC20: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `change_status(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x6ad817b9020adcb10b4a08e713bae0980385c674.sol",
        "function": "change_status(string)",
        "lineno": 30,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}