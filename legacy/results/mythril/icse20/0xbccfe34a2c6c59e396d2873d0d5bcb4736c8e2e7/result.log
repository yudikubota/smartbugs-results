{"error": null, "issues": [{"address": 1217, "code": "er);\n    }\n\n  ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "setOwner(address)", "lineno": 41, "title": "State change after external call", "type": "Warning"}, {"address": 1537, "code": "     return false;\n    }\n\n    function onTransfer(a", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "changeController(address,address)", "lineno": 147, "title": "Message call to external contract", "type": "Warning"}, {"address": 1858, "code": "tion onApprove(address _owner, address _spende", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "onTransfer(address,address,uint256)", "lineno": 163, "title": "Message call to external contract", "type": "Informational"}, {"address": 1858, "code": "tion onApprove(address _owner, address _spende", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1858\n", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "onTransfer(address,address,uint256)", "lineno": 163, "title": "Multiple Calls", "type": "Information"}, {"address": 2022, "code": " software: you can", "debug": "storage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_TokenTransferGuard_0: 0x6913a63c00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTransferGuard: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addGuard(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "addGuard(address)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2430, "code": "  function SwapController(address[", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenTransferGuard_4: 0x0\nstorage_2: 0x0\ncalldata_TokenTransferGuard_0: 0xc74fc07700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenTransferGuard: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "_function_0xc74fc077", "lineno": 134, "title": "Exception state", "type": "Informational"}, {"address": 3067, "code": "tandard API\n// https://github.com", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "_function_0x7a9e5e4b", "lineno": 70, "title": "Message call to external contract", "type": "Informational"}, {"address": 3067, "code": "tandard API\n// https://github.com", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1537\n", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "changeController(address,address)", "lineno": 70, "title": "Multiple Calls", "type": "Information"}, {"address": 3067, "code": "tandard API\n// https://github.com", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0x7a9e5e4b. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/28/0xbccfe34a2c6c59e396d2873d0d5bcb4736c8e2e7.sol", "function": "_function_0x7a9e5e4b", "lineno": 70, "title": "Transaction order dependence", "type": "Warning"}], "success": true}