{"error": null, "issues": [{"address": 4883, "code": "\n\n// The below two", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SaleClockAuction_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_0 + keccac_calldata_SaleClockAuction_32_+_4: 0x0\ncalldata_SaleClockAuction_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approve(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "approve(address,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5694, "code": " _spender) view returns (uint) {\n        return allowed[_own", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0_+_keccac_calldata_SaleClockAuction_32_+_36,\n_____256): 0x0\ncalldata_SaleClockAuction_4: 0x0\nstorage_0 + keccac_calldata_SaleClockAuction_32_+_36: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SaleClockAuction_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncalldata_SaleClockAuction_32 + 36: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transferFrom(address,address,uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "transferFrom(address,address,uint256)", "lineno": 391, "title": "Integer Underflow", "type": "Warning"}, {"address": 5773, "code": "h;\n    }\n    \n    function suppor", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SaleClockAuction_32_+_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SaleClockAuction_4: 0x0\nstorage_0 + keccac_calldata_SaleClockAuction_32_+_36: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SaleClockAuction_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncalldata_SaleClockAuction_32 + 36: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "transferFrom(address,address,uint256)", "lineno": 392, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5849, "code": "\n\n// The below two", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_SaleClockAuction_32_+_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_SaleClockAuction_4: 0x0\nstorage_0 + keccac_calldata_SaleClockAuction_32_+_36: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_SaleClockAuction_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncalldata_SaleClockAuction_32 + 36: 0x0\nstorage_keccac_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller +\n0: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "transferFrom(address,address,uint256)", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6592, "code": "    }\n    \n    function featu", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 6699\n", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "withdraw()", "lineno": 142, "title": "Multiple Calls", "type": "Information"}, {"address": 6592, "code": "    }\n    \n    function featu", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "withdraw()", "lineno": 142, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6699, "code": "int spriteId) payable {\n        // Do no", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "withdraw()", "lineno": 144, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6754, "code": " \n    uint public totalFeatur", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SaleClockAuction_4: 0x0\nstorage_11: 0x0\ncalldata_SaleClockAuction_0: 0x4085121000000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "_function_0x40851210", "lineno": 82, "title": "Exception state", "type": "Informational"}, {"address": 7229, "code": "r the first time\n                allPurchasedSprites.push(sp", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_0_+_keccac_calldata_SaleClockAuction_4,_256): 0x0\nretval_7077: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 + keccac_calldata_SaleClockAuction_4: 0xff00\ncalldata_SaleClockAuction_0: 0x51c54c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\nstorage_3 + keccac_calldata_SaleClockAuction_4: 0x0\nstorage_6: 0x0\nstorage_7: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `_function_0x51c54c68`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "_function_0x51c54c68", "lineno": 201, "title": "Integer Underflow", "type": "Warning"}, {"address": 7275, "code": "\n\n// The below two", "debug": "storage_12: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_7077: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2 + keccac_calldata_SaleClockAuction_4: 0xff00\ncalldata_SaleClockAuction_0: 0x51c54c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\nstorage_4 + keccac_calldata_SaleClockAuction_4: 0x0\nstorage_3 + keccac_calldata_SaleClockAuction_4: 0x0\nstorage_6: 0x0\nstorage_7: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x51c54c68`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "_function_0x51c54c68", "lineno": 1, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7692, "code": "        \n            _ownerCut = ((priceIfAny / 1000) * ownerCut) *", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "_function_0x51c54c68", "lineno": 218, "title": "Message call to external contract", "type": "Informational"}, {"address": 8882, "code": "public totalBuys;\n    \n    struct", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SaleClockAuction_4: 0x0\nstorage_12: 0x0\ncalldata_SaleClockAuction_0: 0x53eeb43000000000000000000000000000000000000000000000000000000000\ncalldatasize_SaleClockAuction: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0x4d7edd5f94515b0f35b38f6fb2ea975a20823465.sol", "function": "_function_0x53eeb430", "lineno": 84, "title": "Exception state", "type": "Informational"}], "success": true}