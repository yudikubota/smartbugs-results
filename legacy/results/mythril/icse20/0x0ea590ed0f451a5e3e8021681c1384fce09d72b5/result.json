{
  "contract": "0x0ea590ed0f451a5e3e8021681c1384fce09d72b5",
  "tool": "mythril",
  "start": 1563783481.3361008,
  "end": 1563783865.528308,
  "duration": 384.1922070980072,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2503,
        "code": "n totalSupply() ",
        "debug": "calldata_Token_4: 0xf77124b52a24e057d8a070024000e4e0e29fe1280e6ec1bac4ce6c09cd081036\nstorage_4: 0x0\ncaller: 0x0\ncalldata_Token_0: 0xa263c7ba00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `changeBuyPrice(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/48/0x0ea590ed0f451a5e3e8021681c1384fce09d72b5.sol",
        "function": "changeBuyPrice(uint256)",
        "lineno": 57,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2661,
        "code": "// as",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_0: 0x6fdde1300000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_3: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/48/0x0ea590ed0f451a5e3e8021681c1384fce09d72b5.sol",
        "function": "fallback",
        "lineno": 13,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}