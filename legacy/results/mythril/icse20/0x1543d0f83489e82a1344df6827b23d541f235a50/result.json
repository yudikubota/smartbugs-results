{
  "contract": "0x1543d0f83489e82a1344df6827b23d541f235a50",
  "tool": "mythril",
  "start": 1563504135.9053974,
  "end": 1563504178.0147462,
  "duration": 42.1093487739563,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1155,
        "code": "ove(_spender, _value)) {\n      spender.receiveApproval(msg.sender, _value, this, _extraData);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @notice Destroy tokens\n   * @dev Remove `_value` tokens from the system irreversibly\n   * @param _value The amount of money will be burned\n   * @return True if ",
        "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x1543d0f83489e82a1344df6827b23d541f235a50.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 169,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3387,
        "code": "` tokens from the system irreversibly\n   * @param _value The ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/8/0x1543d0f83489e82a1344df6827b23d541f235a50.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 178,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3578,
        "code": "turn a - b;\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_tokenRecipient_32 + 4: 0x1\nstorage_1: 0xff00\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/8/0x1543d0f83489e82a1344df6827b23d541f235a50.sol",
        "function": "transfer(address,uint256)",
        "lineno": 24,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4027,
        "code": "    r",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_tokenRecipient_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_1: 0xff00\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/8/0x1543d0f83489e82a1344df6827b23d541f235a50.sol",
        "function": "transfer(address,uint256)",
        "lineno": 30,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4040,
        "code": ";\n  }\n}\n\n\n/**\n",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_tokenRecipient_4: 0xbd5dfeabad0efffffffffeffffffffffd599ffefbfe6f24271e80e64322c0700\ncalldata_tokenRecipient_32 + 4: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6218000d800000000000000000000000039800002005500633e06f771baff7fc\nstorage_1: 0xff00\ncalldata_tokenRecipient_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/8/0x1543d0f83489e82a1344df6827b23d541f235a50.sol",
        "function": "transfer(address,uint256)",
        "lineno": 30,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}