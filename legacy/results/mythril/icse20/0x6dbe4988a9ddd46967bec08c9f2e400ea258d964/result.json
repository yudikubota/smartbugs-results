{
  "contract": "0x6dbe4988a9ddd46967bec08c9f2e400ea258d964",
  "tool": "mythril",
  "start": 1563561058.0166512,
  "end": 1563561062.2286112,
  "duration": 4.211960077285767,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.10;\r\n^---------------------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:45:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:49:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function BiddingRing(address _dutchAuction, uint _maxPrice)\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:53:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:57:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:73:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:95:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:104:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:116:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw;\r\n            ^---^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:134:9: Warning: This declaration shadows an existing declaration.\n        uint refund = totalBalance * contribution / totalContributions;\r\n        ^---------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:86:5: The shadowed declaration is here:\n    function refund()\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:67:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            RefundReceived(msg.value);\r\n            ^-----------------------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:83:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        BidSubmission(msg.sender, msg.value);\r\n        ^----------------------------------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:93:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        RefundSubmission(msg.sender, contribution);\r\n        ^----------------------------------------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:107:32: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        dutchAuction.bid.value(this.balance)(0);\r\n                               ^----------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:119:24: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        totalBalance = this.balance;\r\n                       ^----------^\n/unique_chucks/15/0x6dbe4988a9ddd46967bec08c9f2e400ea258d964.sol:136:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n            msg.sender.send(refund);\r\n            ^---------------------^\n",
    "issues": []
  }
}