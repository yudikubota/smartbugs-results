{"error": null, "issues": [{"address": 125, "code": "etHash(uint256 time_stamp, string ipfs_hash) public {\n        require(msg.sender == owner);\n        hashes[time_stamp] = ipfs_hash;\n    }\n\n    functio", "debug": "calldata_IPFSStore_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_IPFSStore_0: 0x2fbaba2600000000000000000000000000000000000000000000000000000000\ncalldatasize_IPFSStore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setHash(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xa0470c083099fd02fd76f9cb6285e826c13ca9cb.sol", "function": "setHash(uint256,string)", "lineno": 11, "title": "Integer Overflow ", "type": "Warning"}, {"address": 716, "code": "ntract IPFSStore {\n    mapping (uint256 => string) hashes;\n    address owner;\n\n    function IPFSStore() public {\n        owner = msg.sender;\n    }\n\n    function setHash(uint256 time_stamp, string ipfs_hash) public {\n        require(msg.sender == owner);\n        hashes[time_stamp] = ipfs_hash;\n    }\n\n    function getHash(uint256 time_stamp) constant public returns (string) {\n        return hashes[time_stamp];\n    }\n}", "debug": "keccac_keccac_calldata_IPFSStore_4: 0xff13e6a7459ae5a4c49c419171c3f89100a371508000000000129200000219e2\nstorage_keccac_calldata_IPFSStore_4: 0xbac1c3147749165dd7d1977fffffffffffffffffffffffffffffffffffffffc5\nstorage_1: 0x0\ncaller: 0x0\ncalldata_IPFSStore_0: 0x2fbaba2600000000000000000000000000000000000000000000000000000000\ncalldatasize_IPFSStore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setHash(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xa0470c083099fd02fd76f9cb6285e826c13ca9cb.sol", "function": "setHash(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 745, "code": "ntract IPFSStore {\n    mapping (uint256 => string) hashes;\n    address owner;\n\n    function IPFSStore() public {\n        owner = msg.sender;\n    }\n\n    function setHash(uint256 time_stamp, string ipfs_hash) public {\n        require(msg.sender == owner);\n        hashes[time_stamp] = ipfs_hash;\n    }\n\n    function getHash(uint256 time_stamp) constant public returns (string) {\n        return hashes[time_stamp];\n    }\n}", "debug": "calldata_IPFSStore_4 + calldata_IPFSStore_32 + 4: 0x8000000000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_IPFSStore_0: 0x2fbaba2600000000000000000000000000000000000000000000000000000000\ncalldatasize_IPFSStore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setHash(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xa0470c083099fd02fd76f9cb6285e826c13ca9cb.sol", "function": "setHash(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 759, "code": "ntract IPFSStore {\n    mapping (uint256 => string) hashes;\n    address owner;\n\n    function IPFSStore() public {\n        owner = msg.sender;\n    }\n\n    function setHash(uint256 time_stamp, string ipfs_hash) public {\n        require(msg.sender == owner);\n        hashes[time_stamp] = ipfs_hash;\n    }\n\n    function getHash(uint256 time_stamp) constant public returns (string) {\n        return hashes[time_stamp];\n    }\n}", "debug": "calldata_IPFSStore_4 + calldata_IPFSStore_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_IPFSStore_0: 0x2fbaba2600000000000000000000000000000000000000000000000000000000\ncalldatasize_IPFSStore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setHash(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xa0470c083099fd02fd76f9cb6285e826c13ca9cb.sol", "function": "setHash(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 781, "code": "ntract IPFSStore {\n    mapping (uint256 => string) hashes;\n    address owner;\n\n    function IPFSStore() public {\n        owner = msg.sender;\n    }\n\n    function setHash(uint256 time_stamp, string ipfs_hash) public {\n        require(msg.sender == owner);\n        hashes[time_stamp] = ipfs_hash;\n    }\n\n    function getHash(uint256 time_stamp) constant public returns (string) {\n        return hashes[time_stamp];\n    }\n}", "debug": "calldata_IPFSStore_4 + calldata_IPFSStore_32 + 4: 0x4000f04100100000000000000000000000000000d6401413fffffffffffffe0\nkeccac_keccac_calldata_IPFSStore_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_IPFSStore_0: 0x2fbaba2600000000000000000000000000000000000000000000000000000000\ncalldatasize_IPFSStore: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setHash(uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xa0470c083099fd02fd76f9cb6285e826c13ca9cb.sol", "function": "setHash(uint256,string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}