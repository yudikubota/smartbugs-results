{"error": null, "issues": [{"address": 157, "code": "tring _message) public payable {\n    require(msg.value == fee);\n    message = _message;\n    OnUpdateMessage();\n  }\n  \n  function setFee(uin", "debug": "calldata_TheDapp_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TheDapp_0: 0x368b877200000000000000000000000000000000000000000000000000000000\ncalldatasize_TheDapp: 0x4\n", "description": "A possible integer overflow exists in the function `setMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x593b851932dafdf8573ed7891518b1ba5b0d5838.sol", "function": "setMessage(string)", "lineno": 22, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1165, "code": "teFee();\n  }\n\n ", "debug": "calldata_TheDapp_4: 0x5420f860cbaa38a1a0b3b190441c5a362d821016921e61f0365c77d2d7e1804c\nstorage_1: 0x0\ncaller: 0x0\ncalldata_TheDapp_0: 0x69fe0e2d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TheDapp: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setFee(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x593b851932dafdf8573ed7891518b1ba5b0d5838.sol", "function": "setFee(uint256)", "lineno": 30, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1488, "code": "ntract TheDapp {\n\n  string public message;\n  address public owner;\n  uint256 public fee;\n\n  event OnUpdateMessage();\n  event OnUpdateFee();\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function TheDapp(uint256 _fee) public {\n    owner = msg.sender;\n    fee = (_fee * 1 finney);\n  }\n\n  function setMessage(string _message) public payable {\n    require(msg.value == fee);\n    message = _message;\n    OnUpdateMessage();\n  }\n  \n  function setFee(uint256 _fee) public onlyOwner {\n    fee = (_fee * 1 finney);\n    OnUpdateFee();\n  }\n\n  function withdraw(address addr) public onlyOwner {\n    addr.transfer(this.balance);\n  }\n\n  function kill() public onlyOwner {\n    selfdestruct(owner);\n  }\n}", "debug": "calldata_TheDapp_4 + calldata_TheDapp_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_TheDapp_0: 0x368b877200000000000000000000000000000000000000000000000000000000\ncalldatasize_TheDapp: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x593b851932dafdf8573ed7891518b1ba5b0d5838.sol", "function": "setMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1502, "code": "ntract TheDapp {\n\n  string public message;\n  address public owner;\n  uint256 public fee;\n\n  event OnUpdateMessage();\n  event OnUpdateFee();\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function TheDapp(uint256 _fee) public {\n    owner = msg.sender;\n    fee = (_fee * 1 finney);\n  }\n\n  function setMessage(string _message) public payable {\n    require(msg.value == fee);\n    message = _message;\n    OnUpdateMessage();\n  }\n  \n  function setFee(uint256 _fee) public onlyOwner {\n    fee = (_fee * 1 finney);\n    OnUpdateFee();\n  }\n\n  function withdraw(address addr) public onlyOwner {\n    addr.transfer(this.balance);\n  }\n\n  function kill() public onlyOwner {\n    selfdestruct(owner);\n  }\n}", "debug": "calldata_TheDapp_4 + calldata_TheDapp_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_TheDapp_0: 0x368b877200000000000000000000000000000000000000000000000000000000\ncalldatasize_TheDapp: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x593b851932dafdf8573ed7891518b1ba5b0d5838.sol", "function": "setMessage(string)", "lineno": 3, "title": "Integer Overflow ", "type": "Warning"}], "success": true}