{"error": null, "issues": [{"address": 603, "code": "e address of the new implementation to be set.\n    * @param _data represents the msg.data to bet sent in the low level call. This parameter may in", "debug": "calldata_UpgradeabilityProxy_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UpgradeabilityProxy_0: 0x5a8b1a9f00000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeabilityProxy: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `upgradeTo(string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x240f9f86b1465bf1b8eb29bc88cbf65573dfdd97.sol", "function": "upgradeTo(string,address)", "lineno": 486, "title": "Integer Overflow ", "type": "Warning"}, {"address": 938, "code": "every call to the current implementation set.\n * Besides, it allows to upgrade the SecurityTokenRegistry's behaviour towards further implementations, and provides basic\n * authorization control functionalities\n */\n/*solium-disable-next-line no-empty-blocks*/\ncontract SecurityTokenRegistryProxy is EternalStorage, OwnedUpgradeabilityProxy {\n\n}", "debug": "calldata_UpgradeabilityProxy_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UpgradeabilityProxy_0: 0x958a41dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UpgradeabilityProxy: 0x4\n", "description": "A possible integer overflow exists in the function `upgradeToAndCall(string,address,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x240f9f86b1465bf1b8eb29bc88cbf65573dfdd97.sol", "function": "upgradeToAndCall(string,address,bytes)", "lineno": 500, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3403, "code": "(0, returndatasize) }\n        }\n    }\n\n    function () p", "debug": "", "description": "This contract forwards its call data via DELEGATECALL in its fallback function. This means that any function in the called contract can be executed. Note that the callee contract will have access to the storage of the calling contract.\n DELEGATECALL target: Concat(0, Extract(167, 8, storage_12))", "filename": "/unique_contracts/0x240f9f86b1465bf1b8eb29bc88cbf65573dfdd97.sol", "function": "fallback", "lineno": 307, "title": "Call data forwarded with delegatecall()", "type": "Informational"}, {"address": 3403, "code": "(0, returndatasize) }\n        }\n    }\n\n    function () p", "debug": "", "description": "Be aware that the called contract gets unrestricted access to this contract's state.", "filename": "/unique_contracts/0x240f9f86b1465bf1b8eb29bc88cbf65573dfdd97.sol", "function": "fallback", "lineno": 307, "title": "DELEGATECALL to a user-supplied address", "type": "Informational"}], "success": true}