{
  "contract": "0x5019477d7000d19941d356168a340833cc4129dd",
  "tool": "mythril",
  "start": 1563608937.0233262,
  "end": 1563608942.0985234,
  "duration": 5.075197219848633,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.19;\r\n^---------------------^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:76:35: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (!purchasingAllowed) { throw; }\r\n                                  ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:99:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:104:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:120:46: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(msg.data.length < (2 * 32) + 4) { throw; }\r\n                                             ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:137:46: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if(msg.data.length < (3 * 32) + 4) { throw; }\r\n                                             ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:176:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:189:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:194:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:199:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:204:36: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (msg.sender != owner) { throw; }\r\n                                   ^---^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:60:35: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xF8b7b391B7B7330D07a931a332a6620ca1A9F7f2'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals\n    address constant public ARI = 0xf8b7b391b7b7330d07a931a332a6620ca1a9f7f2;\r\n                                  ^----------------------------------------^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:86:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        TokenPurchase(msg.sender, beneficiary, msg.value, ARIAmounts);\r\n        ^-----------------------------------------------------------^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:131:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(msg.sender, _to, _value);\r\n            ^-------------------------------^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:153:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            Transfer(_from, _to, _value);\r\n            ^--------------------------^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:163:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _value);\r\n        ^------------------------------------^\n/unique_chucks/22/0x5019477d7000d19941d356168a340833cc4129dd.sol:209:32: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        uint256 etherBalance = this.balance;\r\n                               ^----------^\n",
    "issues": []
  }
}