{"error": null, "issues": [{"address": 261, "code": "          comaddr", "debug": "storage_2: 0xfb0fa708671f8b0cd9356fefba05f3fda1da44ff3dc1d4068b87abcf645bd6f1\ncallvalue: 0xf0cfd7c9775feaccdd3d6fefbd69ebbdb38cb0fdb5f9cae568b73bf066d22501\ncalldata_WorldByEth_0: 0x30300000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldByEth: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xb619e84adddd3e336c5dda1e1b40719c846d9030.sol", "function": "fallback", "lineno": 135, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1849, "code": "  /**\n     * @dev filt", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withcom(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/8/0xb619e84adddd3e336c5dda1e1b40719c846d9030.sol", "function": "withcom()", "lineno": 143, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2028, "code": "layers;\n\n    struct Ctry {", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WorldByEth_4: 0x0\nstorage_11: 0x0\ncalldata_WorldByEth_0: 0x4f66e22c00000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldByEth: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0xb619e84adddd3e336c5dda1e1b40719c846d9030.sol", "function": "_function_0x4f66e22c", "lineno": 21, "title": "Exception state", "type": "Informational"}, {"address": 2341, "code": "d, bytes32 mem)\n   ", "debug": "storage_11: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_WorldByEth_0: 0xdddd3de800000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldByEth: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getvalid()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xb619e84adddd3e336c5dda1e1b40719c846d9030.sol", "function": "getvalid()", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2343, "code": "d, bytes32 mem)\n   ", "debug": "storage_11: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_WorldByEth_0: 0xdddd3de800000000000000000000000000000000000000000000000000000000\ncalldatasize_WorldByEth: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getvalid()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0xb619e84adddd3e336c5dda1e1b40719c846d9030.sol", "function": "getvalid()", "lineno": 61, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2397, "code": "6 _codeLe", "debug": "", "description": "Function buy(uint256,bytes32) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/8/0xb619e84adddd3e336c5dda1e1b40719c846d9030.sol", "function": "buy(uint256,bytes32)", "lineno": 38, "title": "Use of tx.origin", "type": "Warning"}], "success": true}