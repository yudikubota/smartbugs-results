{"error": null, "issues": [{"address": 2873, "code": "return targetToken != addre", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/14/0x17d67ac402b014af1894c63379976b46930b1337.sol", "function": "canExchangeNum()", "lineno": 378, "title": "Message call to external contract", "type": "Informational"}, {"address": 2873, "code": "return targetToken != addre", "debug": "", "description": "A possible transaction order independence vulnerability exists in function canExchangeNum(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/14/0x17d67ac402b014af1894c63379976b46930b1337.sol", "function": "canExchangeNum()", "lineno": 378, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3660, "code": "  function updateTargetToken(", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/14/0x17d67ac402b014af1894c63379976b46930b1337.sol", "function": "balanceOfTarget(address)", "lineno": 372, "title": "Message call to external contract", "type": "Informational"}, {"address": 3660, "code": "  function updateTargetToken(", "debug": "", "description": "A possible transaction order independence vulnerability exists in function balanceOfTarget(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/14/0x17d67ac402b014af1894c63379976b46930b1337.sol", "function": "balanceOfTarget(address)", "lineno": 372, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6690, "code": ";\n   ", "debug": "calldata_TokenImpl_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_0: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenImpl_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x17d67ac402b014af1894c63379976b46930b1337.sol", "function": "mint(address,uint256)", "lineno": 31, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6703, "code": " c;\n    }\n}\n\n/", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_0: 0x1\ncalldata_TokenImpl_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_TokenImpl_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenImpl: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/14/0x17d67ac402b014af1894c63379976b46930b1337.sol", "function": "mint(address,uint256)", "lineno": 32, "title": "Exception state", "type": "Informational"}], "success": true}