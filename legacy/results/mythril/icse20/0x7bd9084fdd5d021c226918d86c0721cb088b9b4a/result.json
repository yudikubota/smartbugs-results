{
  "contract": "0x7bd9084fdd5d021c226918d86c0721cb088b9b4a",
  "tool": "mythril",
  "start": 1563511264.2067945,
  "end": 1563511291.3041759,
  "duration": 27.097381353378296,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 147,
        "code": "_token, address[] addresses, uint amount) public {\n    ERC20 token = ERC20(_token);\n    for(uint i = 0; i < addresses.length; i++) {\n      require(token.transferFrom(msg.sender, addresses[i], amount));\n    }\n  }\n  function multiSendEth(address",
        "debug": "calldata_MultiSend_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiSend_0: 0x5b2a0e9600000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multiSend(address,address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/7/0x7bd9084fdd5d021c226918d86c0721cb088b9b4a.sol",
        "function": "multiSend(address,address[],uint256)",
        "lineno": 28,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 246,
        "code": "ddresses) public payable {\n    for(uint i = 0; i < addresses.length; i++) {\n      addresses[i].transfer(msg.value / addresses.length);\n    }\n    msg.sender.transfer(this.balance);\n  }\n}",
        "debug": "calldata_MultiSend_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiSend_0: 0xaafafbf300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\n",
        "description": "A possible integer overflow exists in the function `multiSendEth(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/7/0x7bd9084fdd5d021c226918d86c0721cb088b9b4a.sol",
        "function": "multiSendEth(address[])",
        "lineno": 34,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 575,
        "code": " addresses[i], amount));\n    }\n  }\n  function multiS",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/7/0x7bd9084fdd5d021c226918d86c0721cb088b9b4a.sol",
        "function": "multiSend(address,address[],uint256)",
        "lineno": 31,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 575,
        "code": " addresses[i], amount));\n    }\n  }\n  function multiS",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 575\nCall at address: 575\n",
        "filename": "/unique_chucks/7/0x7bd9084fdd5d021c226918d86c0721cb088b9b4a.sol",
        "function": "multiSend(address,address[],uint256)",
        "lineno": 31,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 760,
        "code": "ddresses.length);\n    }\n    msg.sender.transfer(thi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 867\nCall at address: 867\nCall at address: 867\n",
        "filename": "/unique_chucks/7/0x7bd9084fdd5d021c226918d86c0721cb088b9b4a.sol",
        "function": "multiSendEth(address[])",
        "lineno": 36,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 867,
        "code": "}\n}",
        "debug": "SOLVER OUTPUT:\ncalldata_MultiSend_4 + calldata_MultiSend_4: 0x3\nretval_760: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiSend_0: 0xaafafbf300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiSend: 0x4\n",
        "description": "In the function `multiSendEth(address[])` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/unique_chucks/7/0x7bd9084fdd5d021c226918d86c0721cb088b9b4a.sol",
        "function": "multiSendEth(address[])",
        "lineno": 39,
        "title": "Ether send",
        "type": "Warning"
      }
    ],
    "success": true
  }
}