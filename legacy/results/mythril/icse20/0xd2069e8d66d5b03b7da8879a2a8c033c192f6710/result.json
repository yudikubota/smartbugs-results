{
  "contract": "0xd2069e8d66d5b03b7da8879a2a8c033c192f6710",
  "tool": "mythril",
  "start": 1563753919.5096877,
  "end": 1563753934.2224097,
  "duration": 14.712722063064575,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4165,
        "code": "turn ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\ncalldata_StandardToken_32 + 4: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/41/0xd2069e8d66d5b03b7da8879a2a8c033c192f6710.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 36,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4178,
        "code": "}\n\n\ncontract B",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\ncalldata_StandardToken_32 + 4: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/41/0xd2069e8d66d5b03b7da8879a2a8c033c192f6710.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 38,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}