{"error": null, "issues": [{"address": 4933, "code": "c >= a);\n    r", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_Token10xAmin_32 + 4: 0x1\ncalldata_Token10xAmin_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token10xAmin: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xa646f0866f00c31da966fd7c18035ad2156bfdc9.sol", "function": "transfer(address,uint256,bytes)", "lineno": 143, "title": "Exception state", "type": "Informational"}, {"address": 4954, "code": "f (rnd < 80) {", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\nblock_number: 0x0\ncalldata_Token10xAmin_32 + 4: 0x0\ncalldata_Token10xAmin_0: 0xbe45fd6200000000000000000000000000000000000000000000000000000000\ncalldatasize_Token10xAmin: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `transfer(address,uint256,bytes)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/24/0xa646f0866f00c31da966fd7c18035ad2156bfdc9.sol", "function": "transfer(address,uint256,bytes)", "lineno": 89, "title": "Integer Underflow", "type": "Warning"}, {"address": 5041, "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_Token10xAmin_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token10xAmin_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token10xAmin: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/24/0xa646f0866f00c31da966fd7c18035ad2156bfdc9.sol", "function": "mint(address,uint256)", "lineno": 146, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5054, "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x1\ncalldata_Token10xAmin_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_Token10xAmin_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token10xAmin: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/24/0xa646f0866f00c31da966fd7c18035ad2156bfdc9.sol", "function": "mint(address,uint256)", "lineno": 146, "title": "Exception state", "type": "Informational"}], "success": true}