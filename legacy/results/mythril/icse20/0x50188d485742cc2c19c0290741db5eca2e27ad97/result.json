{
  "contract": "0x50188d485742cc2c19c0290741db5eca2e27ad97",
  "tool": "mythril",
  "start": 1563569371.4857295,
  "end": 1563569405.3643913,
  "duration": 33.87866187095642,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1844,
        "code": "    return totalBalan",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x74a8f103",
        "lineno": 314,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2537,
        "code": "Transfer(owner, refun",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x74a8f103",
        "lineno": 171,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2537,
        "code": "Transfer(owner, refun",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1844\n",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x74a8f103",
        "lineno": 171,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2947,
        "code": " `duration`, also always allow r",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_VariableRateTokenVesting_4: 0x0\nstorage_8: 0x0\ncalldata_VariableRateTokenVesting_0: 0xc640011100000000000000000000000000000000000000000000000000000000\ncalldatasize_VariableRateTokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0xc6400111",
        "lineno": 283,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3354,
        "code": "enVesting is T",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VariableRateTokenVesting_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\ncalldata_VariableRateTokenVesting_0: 0x1916558700000000000000000000000000000000000000000000000000000000\ncalldatasize_VariableRateTokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x19165587",
        "lineno": 265,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3384,
        "code": "100] means rel",
        "debug": "The exception is triggered under the following conditions:\n\nretval_1844: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VariableRateTokenVesting_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_VariableRateTokenVesting_0: 0x384711cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_VariableRateTokenVesting: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x384711cc",
        "lineno": 271,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3560,
        "code": "}\n\n  function safeApprove",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x19165587",
        "lineno": 216,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3641,
        "code": " @dev",
        "debug": "The exception is triggered under the following conditions:\n\nretval_1844: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_VariableRateTokenVesting_4: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_VariableRateTokenVesting_0: 0x384711cc00000000000000000000000000000000000000000000000000000000\ncalldatasize_VariableRateTokenVesting: 0x4\nstorage_9: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0x50188d485742cc2c19c0290741db5eca2e27ad97.sol",
        "function": "_function_0x384711cc",
        "lineno": 256,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}