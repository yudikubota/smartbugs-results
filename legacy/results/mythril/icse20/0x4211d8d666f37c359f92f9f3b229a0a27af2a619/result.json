{
  "contract": "0x4211d8d666f37c359f92f9f3b229a0a27af2a619",
  "tool": "mythril",
  "start": 1563638311.1151586,
  "end": 1563638331.7372553,
  "duration": 20.62209677696228,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 217,
        "code": "  if (tmpAmount > fun",
        "debug": "storage_2: 0xcc8a5fcdbf7fe7e6426fc61f51fa8f2edc7e0267d5234bf1877fb273d3f8eebb\ncallvalue: 0x5fda502bfe980f86d67115805cfae800c4c25581b10e7005f77fa70baabefe9d\nstorage_1: 0xcc8a5fcdbf7fe7e6426fc61f51fa8f2edc7e0267d5234bf1877fb273d3f8eebb\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "fallback",
        "lineno": 53,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 309,
        "code": "aised += amount;\n              ",
        "debug": "storage_2: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffff880000000000\ncallvalue: 0x800000000000000000000000000ffffffffffffffffffffffffff7ffffffffff\nstorage_1: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffffffff\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "fallback",
        "lineno": 58,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 325,
        "code": "fer(msg.sender, amount",
        "debug": "storage_2: 0xf76550222082c8f6c0852916498f9311267a40a222384100803ee7ded3eae44b\ncallvalue: 0x6080d009f64428f7cf771514d0004849ab33403e2182591b183fcb6fda34d601\nstorage_1: 0xf79f73db8001db81c6600cd5160fb650e500c4008c3fda1b95856fefcf0ef02d\nstorage_7: 0x0\ncalldata_token_0: 0x0\ncalldatasize_token: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "fallback",
        "lineno": 59,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 407,
        "code": "der, amount, t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x400000000000000000000000000000000000000000000000000000001\ncallvalue: 0x8000000400000000000000000000000000000000000000000de0b6b3a7640000\nstorage_1: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x0\ncalldata_token_0: 0x100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 545,
        "code": "        emit FundTransfer(msg.sender, amount, tr",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "fallback",
        "lineno": 60,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1640,
        "code": "e);\n               crowdsaleC",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2100\n",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "safeWithdrawal()",
        "lineno": 99,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1640,
        "code": "e);\n               crowdsaleC",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "safeWithdrawal()",
        "lineno": 99,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1962,
        "code": "Goal) {\n      ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\nstorage_2: 0x0\nretval_1640: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\nstorage_0: 0x0\ncalldata_token_0: 0xfd6b7ef800000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "safeWithdrawal()",
        "lineno": 108,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2100,
        "code": "    // if (amountRaised <= fundingGoal) {\n       ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/27/0x4211d8d666f37c359f92f9f3b229a0a27af2a619.sol",
        "function": "safeWithdrawal()",
        "lineno": 108,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}