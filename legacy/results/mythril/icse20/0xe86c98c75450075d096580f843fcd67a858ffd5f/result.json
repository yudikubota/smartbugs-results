{
  "contract": "0xe86c98c75450075d096580f843fcd67a858ffd5f",
  "tool": "mythril",
  "start": 1563572493.0363102,
  "end": 1563572557.0582087,
  "duration": 64.0218985080719,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 380,
        "code": "inToken _addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfc00\ncalldatasize_TokenController: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "fallback",
        "lineno": 674,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1960,
        "code": "inToken _addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfc00\ncalldata_TokenController_0: 0x45fbfbca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "investment()",
        "lineno": 674,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2176,
        "code": "rrentBalance);\n            }\n  ",
        "debug": "storage_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffff90d903e00fe\ncallvalue: 0x2386f26fc17f00\ncalldata_TokenController_0: 0x45fbfbca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `investment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "investment()",
        "lineno": 742,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2192,
        "code": "lse {\n                st",
        "debug": "storage_4: 0x0\ncallvalue: 0x8ec9540220efd6dca03f48010000000096ef50db995d8322302387f26fc88c13\nstorage_6: 0xa3359a0b3b1029260000974bff6fffab6910af24268100a0b9cc780d90138040\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_TokenController_0: 0x45fbfbca00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\n",
        "description": "A possible integer overflow exists in the function `investment()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "investment()",
        "lineno": 744,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2410,
        "code": "alling getRefund()\n            }\n        }\n    }\n\n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "investment()",
        "lineno": 745,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2482,
        "code": "ayOut() public inState(Stat",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "fallback",
        "lineno": 750,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3803,
        "code": "inToken _addres",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xfc00\ncalldata_TokenController_0: 0xb2d5ae4400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "getRefund()",
        "lineno": 674,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3999,
        "code": "() public atEndOfFundraising onlyCo",
        "debug": "SOLVER OUTPUT:\nstorage_4: 0x100\ncalldata_TokenController_0: 0xb2d5ae4400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenController: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `getRefund()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 4. This storage slot can be written to by calling the function `checkIfFundingCompleteOrExpired()`.\nThere is a check on storage index 4. This storage slot can be written to by calling the function `checkIfFundingCompleteOrExpired()`.",
        "filename": "/unique_chucks/18/0xe86c98c75450075d096580f843fcd67a858ffd5f.sol",
        "function": "getRefund()",
        "lineno": 790,
        "title": "Ether send",
        "type": "Warning"
      }
    ],
    "success": true
  }
}