{
  "contract": "0x6970bbe0df628b1e2dce874daaa529c0ceff54ff",
  "tool": "mythril",
  "start": 1563647764.141051,
  "end": 1563647802.5842583,
  "duration": 38.44320726394653,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1215,
        "code": "th; i++) {\n            require(amounts[i] <= totalRemaining);\n            distr(addresses[i], amounts[i]);\n            \n            if (totalDistributed >= totalSupply) {\n                distributionFinished = true;\n            }\n        }\n    }\n}",
        "debug": "calldata_XVOToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_XVOToken_0: 0xa8c310d500000000000000000000000000000000000000000000000000000000\ncalldatasize_XVOToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `distributeAmounts(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "distributeAmounts(address[],uint256[])",
        "lineno": 250,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3079,
        "code": "\n        require(_to != address(0))",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_XVOToken: 0x60\ncalldata_XVOToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 171,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4246,
        "code": "ances[burner].sub(_value);\n ",
        "debug": "SOLVER OUTPUT:\nstorage_1: 0x0\ncaller: 0x0\ncalldata_XVOToken_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_XVOToken: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `withdraw()` a non-zero amount of Ether is sent to an address taken from storage slot 1.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `XVOTOKEN()`.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `XVOTOKEN()`.",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "withdraw()",
        "lineno": 219,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 4246,
        "code": "ances[burner].sub(_value);\n ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "withdraw()",
        "lineno": 219,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5427,
        "code": "\n        require(_to != address(0))",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_XVOToken: 0x4\ncalldata_XVOToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "transfer(address,uint256)",
        "lineno": 171,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6161,
        "code": "on burn(uint256 ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "getTokenBalance(address,address)",
        "lineno": 215,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 8170,
        "code": "  return a - b",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_XVOToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_XVOToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_XVOToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "burn(uint256)",
        "lineno": 20,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 8188,
        "code": "a);\n ",
        "debug": "calldatasize_XVOToken: 0x64\ncalldata_XVOToken_32 + 36: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XVOToken_32_+_4: 0xa8511371907d295662825497115ba082b6a492f6b7f433cff7fbddd4ebff6ff5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XVOToken_4: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\ncalldata_XVOToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XVOToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 25,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8201,
        "code": "rn c;\n  }\n}\n\nc",
        "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_XVOToken: 0x20000000000000000000000000000000070\ncalldata_XVOToken_32 + 36: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XVOToken_32_+_4: 0xeed94dba0409e2901e98bca0e8207863a06e1b0e522bc7310401ec8848abbd31\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_XVOToken_4: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\ncalldata_XVOToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_XVOToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/27/0x6970bbe0df628b1e2dce874daaa529c0ceff54ff.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 26,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}