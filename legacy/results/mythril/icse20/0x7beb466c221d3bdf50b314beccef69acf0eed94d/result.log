{"error": null, "issues": [{"address": 474, "code": "   tokenReward.transfer(msg.sender, rewa", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x0\nstorage_7: 0xff00\ncalldata_token_0: 0x1db3ba000000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "fallback", "lineno": 59, "title": "Exception state", "type": "Informational"}, {"address": 688, "code": "   RewardToken(msg.sender, rewardAmount2, rewar", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "fallback", "lineno": 60, "title": "Message call to external contract", "type": "Informational"}, {"address": 902, "code": "mount;\n            percentOf[ms", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xb56b84715a43dfffbcbbdfbbfdbc8e4b94acce91972e6c0a423a75ffbf687e66\ncallvalue: 0xb5e85b6cccc3d00021039033c0213129d6316ee5c67e4eb2466355b6c0040017\nstorage_7: 0x0\ncalldata_token_0: 0x1100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "fallback", "lineno": 64, "title": "Integer Overflow ", "type": "Warning"}, {"address": 918, "code": "cent;\n            // R", "debug": "storage_2: 0xb56b84715a43dfffbcbbdfbbfdbc8e4b94acce91972e6c0a423a75ffbf687e66\ncallvalue: 0xb5e85b6cccc3d00021039033c0213129d6316ee5c67e4eb2466355b6c0040017\nstorage_7: 0x0\ncalldata_token_0: 0x1100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "fallback", "lineno": 65, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1023, "code": "ransfer(msg.sender, rewardAmount)", "debug": "The exception is triggered under the following conditions:\n\nstorage_7: 0x0\ncalldata_token_0: 0x1cb3b2100000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "fallback", "lineno": 68, "title": "Exception state", "type": "Informational"}, {"address": 1237, "code": "nsfer(msg.sender, amount, true);\n            R", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "fallback", "lineno": 69, "title": "Message call to external contract", "type": "Informational"}, {"address": 2952, "code": " } else {\n             ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3350\nCall at address: 3350\n", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "safeWithdrawal()", "lineno": 106, "title": "Multiple Calls", "type": "Information"}, {"address": 3350, "code": "else {\n                //If we", "debug": "", "description": "In the function `safeWithdrawal()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "safeWithdrawal()", "lineno": 115, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 3350, "code": "else {\n                //If we", "debug": "", "description": "A possible transaction order independence vulnerability exists in function safeWithdrawal(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/30/0x7beb466c221d3bdf50b314beccef69acf0eed94d.sol", "function": "safeWithdrawal()", "lineno": 115, "title": "Transaction order dependence", "type": "Warning"}], "success": true}