{"error": null, "issues": [{"address": 1338, "debug": "calldata_TokenManager_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenManager_0: 0x9360b13800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `sendTokensTo(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "sendTokensTo(address[],uint256)", "lineno": 553, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2268, "code": "       if (isRegister", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "distributeTokens(address,uint256)", "lineno": 524, "title": "Message call to external contract", "type": "Informational"}, {"address": 2268, "code": "       if (isRegister", "debug": "", "description": "A possible transaction order independence vulnerability exists in function distributeTokens(address,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "distributeTokens(address,uint256)", "lineno": 524, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5243, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "substituteManagerContract(address)", "lineno": 553, "title": "Message call to external contract", "type": "Informational"}, {"address": 5243, "debug": "", "description": "A possible transaction order independence vulnerability exists in function substituteManagerContract(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "substituteManagerContract(address)", "lineno": 553, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6539, "code": "btrac", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenManager_4: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TokenManager_0: 0x158a498800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenManager: 0x4\ncalldata_TokenManager_32 + 4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "distributeTokens(address,uint256)", "lineno": 34, "title": "Exception state", "type": "Informational"}, {"address": 6562, "code": "}\n\n  /**\n  * @", "debug": "The exception is triggered under the following conditions:\n\nretval_2268: 0x1\nstorage_0: 0x0\ntimestamp: 0x0\nstorage_1: 0x2\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TokenManager_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenManager_4: 0x0\nstorage_2: 0x0\ncaller: 0x0\ncalldata_TokenManager_0: 0x158a498800000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenManager: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "distributeTokens(address,uint256)", "lineno": 39, "title": "Exception state", "type": "Informational"}, {"address": 6770, "code": "     }\n        uint decimals = ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "distributeRegistrationBonus(address)", "lineno": 505, "title": "Message call to external contract", "type": "Informational"}, {"address": 6770, "code": "     }\n        uint decimals = ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7055\n", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "register(address)", "lineno": 505, "title": "Multiple Calls", "type": "Information"}, {"address": 6854, "code": "     uint precision = 10**3;\n        uint balance = _address.balance;\n        uint", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "register(address)", "lineno": 507, "title": "State change after external call", "type": "Warning"}, {"address": 7055, "code": "nce.div(_totalEthBalance);\n        uint total", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "register(address)", "lineno": 509, "title": "Message call to external contract", "type": "Informational"}, {"address": 7055, "code": "nce.div(_totalEthBalance);\n        uint total", "debug": "", "description": "A possible transaction order independence vulnerability exists in function register(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "register(address)", "lineno": 509, "title": "Transaction order dependence", "type": "Warning"}, {"address": 7127, "code": "\n}\n\n/", "debug": "storage_1: 0xb2c81e3be60b809eebca250ae5f3958de8241f3c0942692d3cecd1fd00743211\nretval_6770: 0x93931c13e507cbbcbf74d9eee4fb920eeaef84aa5110428da2eddb017d5ebcdd\nstorage_0: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenManager_4: 0x0\ncaller: 0x0\ncalldata_TokenManager_0: 0x4420e48600000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenManager: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `register(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "register(address)", "lineno": 48, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7140, "code": " contracts/Bon", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\nretval_6770: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nstorage_0: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenManager_4: 0x0\ncaller: 0x0\ncalldata_TokenManager_0: 0x746abc7900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenManager: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/4/0xb12b490b6b33d2107cfa8f8eb106e6db641b187a.sol", "function": "distributeRegistrationBonus(address)", "lineno": 51, "title": "Exception state", "type": "Informational"}], "success": true}