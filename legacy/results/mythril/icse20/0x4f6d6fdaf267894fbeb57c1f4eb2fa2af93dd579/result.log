{"error": null, "issues": [{"address": 3253, "code": "lue);\n    return true", "debug": "calldata_StandardToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/38/0x4f6d6fdaf267894fbeb57c1f4eb2fa2af93dd579.sol", "function": "burn(uint256)", "lineno": 114, "title": "Integer Underflow", "type": "Warning"}, {"address": 3829, "code": "lances[_t", "debug": "", "description": "Function transferOrigin(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/38/0x4f6d6fdaf267894fbeb57c1f4eb2fa2af93dd579.sol", "function": "transferOrigin(address,uint256)", "lineno": 147, "title": "Use of tx.origin", "type": "Warning"}, {"address": 3911, "code": "ntract St", "debug": "", "description": "Function transferOrigin(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/38/0x4f6d6fdaf267894fbeb57c1f4eb2fa2af93dd579.sol", "function": "transferOrigin(address,uint256)", "lineno": 154, "title": "Use of tx.origin", "type": "Warning"}, {"address": 3989, "code": "n true;\n ", "debug": "", "description": "Function transferOrigin(address,uint256) retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin", "filename": "/unique_chucks/38/0x4f6d6fdaf267894fbeb57c1f4eb2fa2af93dd579.sol", "function": "transferOrigin(address,uint256)", "lineno": 149, "title": "Use of tx.origin", "type": "Warning"}, {"address": 5096, "code": "\n  }\n", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_StandardToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/38/0x4f6d6fdaf267894fbeb57c1f4eb2fa2af93dd579.sol", "function": "transferFrom(address,address,uint256)", "lineno": 43, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5109, "code": "tion toUINT112", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ncalldata_StandardToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/38/0x4f6d6fdaf267894fbeb57c1f4eb2fa2af93dd579.sol", "function": "transferFrom(address,address,uint256)", "lineno": 46, "title": "Exception state", "type": "Informational"}], "success": true}