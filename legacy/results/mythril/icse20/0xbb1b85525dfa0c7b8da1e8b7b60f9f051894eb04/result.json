{
  "contract": "0xbb1b85525dfa0c7b8da1e8b7b60f9f051894eb04",
  "tool": "mythril",
  "start": 1563658805.8136075,
  "end": 1563658983.9682536,
  "duration": 178.15464615821838,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 659,
        "code": "= _value.length);\n\n        for(uint i = 0; i < _to.length; i++) {\n            transfer(_to[i], _value[i]);\n        }\n\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool) {\n        require(_to ",
        "debug": "calldata_Token_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Token_0: 0x1e89d54500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `multiTransfer(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xbb1b85525dfa0c7b8da1e8b7b60f9f051894eb04.sol",
        "function": "multiTransfer(address[],uint256[])",
        "lineno": 109,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6858,
        "code": "     return a ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xbb1b85525dfa0c7b8da1e8b7b60f9f051894eb04.sol",
        "function": "burn(uint256)",
        "lineno": 21,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6875,
        "code": ">= a)",
        "debug": "calldata_Token_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/30/0xbb1b85525dfa0c7b8da1e8b7b60f9f051894eb04.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 26,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6888,
        "code": "eturn c;\n    }",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x1\ncalldata_Token_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Token_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/30/0xbb1b85525dfa0c7b8da1e8b7b60f9f051894eb04.sol",
        "function": "mint(address,uint256)",
        "lineno": 27,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}