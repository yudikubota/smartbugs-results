{
  "contract": "0xe4425a49cfe924cef4e189ce78b163abbc7c6acd",
  "tool": "mythril",
  "start": 1563592545.8164754,
  "end": 1563592925.6895034,
  "duration": 379.87302803993225,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 292,
        "code": "ceOf(address(this));\n        require",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 18,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 292,
        "code": "ceOf(address(this));\n        require",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1108\nCall at address: 944\n",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 18,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 733,
        "code": ".sender)] = now;\t\t\n        tokenRew",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 21,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 944,
        "code": "msg.sender, 1000000*(10**18));\n        if (address",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 22,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 944,
        "code": "msg.sender, 1000000*(10**18));\n        if (address",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1108\n",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 22,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1108,
        "code": "ess(this).balance)) {\n          }   \n    ",
        "debug": "",
        "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 24,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 1108,
        "code": "ess(this).balance)) {\n          }   \n    ",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/unique_chucks/23/0xe4425a49cfe924cef4e189ce78b163abbc7c6acd.sol",
        "function": "fallback",
        "lineno": 24,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      }
    ],
    "success": true
  }
}