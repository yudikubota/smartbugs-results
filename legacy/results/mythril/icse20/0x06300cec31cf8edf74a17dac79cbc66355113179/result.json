{
  "contract": "0x06300cec31cf8edf74a17dac79cbc66355113179",
  "tool": "mythril",
  "start": 1563610266.5683973,
  "end": 1563610368.176556,
  "duration": 101.608158826828,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 1077,
        "code": " new offer with settin",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherWild_32 + 4: 0x10\ncalldata_EtherWild_0: 0x1f1144dc00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWild: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x06300cec31cf8edf74a17dac79cbc66355113179.sol",
        "function": "ViewOffer(address,uint8)",
        "lineno": 115,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2352,
        "code": " OfferGameList;\n    \n\n    // events for both to keep track \n    even",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherWild_32 + 4: 0x10\ncalldata_EtherWild_0: 0x81d20caa00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWild: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x06300cec31cf8edf74a17dac79cbc66355113179.sol",
        "function": "_function_0x81d20caa",
        "lineno": 55,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2885,
        "code": " 0){\n            msg.send",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherWild_32 + 4: 0x10\ncalldata_EtherWild_0: 0xd9a569f500000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWild: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x06300cec31cf8edf74a17dac79cbc66355113179.sol",
        "function": "OfferPlay(address,uint8,uint8)",
        "lineno": 191,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3013,
        "code": "ing);\n        \n        bool",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function OfferPlay(address,uint8,uint8). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/18/0x06300cec31cf8edf74a17dac79cbc66355113179.sol",
        "function": "OfferPlay(address,uint8,uint8)",
        "lineno": 199,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4227,
        "code": "tting, sgame, _notn) = DataFr",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_EtherWild_4: 0x10\ncalldata_EtherWild_0: 0x9c71d16900000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherWild: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0x06300cec31cf8edf74a17dac79cbc66355113179.sol",
        "function": "OfferCancel(uint8)",
        "lineno": 162,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4553,
        "code": " id, possible setting. \n    func",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function OfferCancel(uint8). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/18/0x06300cec31cf8edf74a17dac79cbc66355113179.sol",
        "function": "OfferCancel(uint8)",
        "lineno": 184,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}