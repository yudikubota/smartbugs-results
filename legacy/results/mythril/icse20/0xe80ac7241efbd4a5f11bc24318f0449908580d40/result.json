{
  "contract": "0xe80ac7241efbd4a5f11bc24318f0449908580d40",
  "tool": "mythril",
  "start": 1563797920.0256474,
  "end": 1563798103.6064122,
  "duration": 183.5807647705078,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 313,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0xfe00\ncalldatasize_ValstoToken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "fallback",
        "lineno": 377,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1716,
        "code": "t) public {\n    ow",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0xfe00\ncalldata_ValstoToken_0: 0xc19d93fb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "_function_0xc19d93fb",
        "lineno": 292,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2408,
        "code": "om(_from, _to, _value",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_11: 0xfe00\nstorage_10: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "approve(address,uint256)",
        "lineno": 329,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2595,
        "code": "om(_from, _to, _value",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_11: 0xfe00\nstorage_10: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 329,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2766,
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0xfe00\nstorage_3: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0x43d726d600000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "close()",
        "lineno": 377,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2822,
        "debug": "timestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa00\nstorage_11: 0x0\nstorage_3: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0x43d726d600000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `close()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "close()",
        "lineno": 377,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 3013,
        "code": "om(_from, _to, _value",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_11: 0xfe00\nstorage_10: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0x6618846300000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "decreaseApproval(address,uint256)",
        "lineno": 329,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3789,
        "code": "om(_from, _to, _value",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_11: 0xfe00\nstorage_10: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "transfer(address,uint256)",
        "lineno": 329,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7775,
        "code": " }\n}\n",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValstoToken_32_+_4: 0xc050fffff320c00020003d81af848540000000000000040000110001bd062022\ncalldata_ValstoToken_32 + 36: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValstoToken_4: 0xfe51000008ce80008001c1d33616877ffffffffffffff7ffffe10000398d50ac\ncalldata_ValstoToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ValstoToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 46,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7788,
        "code": "* @title Ownab",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_11: 0x100\ncalldata_ValstoToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValstoToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_ValstoToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_ValstoToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_ValstoToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ValstoToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/32/0xe80ac7241efbd4a5f11bc24318f0449908580d40.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 51,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}