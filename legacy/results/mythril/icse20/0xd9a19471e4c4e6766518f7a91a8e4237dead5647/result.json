{
  "contract": "0xd9a19471e4c4e6766518f7a91a8e4237dead5647",
  "tool": "mythril",
  "start": 1563593095.8105323,
  "end": 1563594421.7341669,
  "duration": 1325.9236345291138,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 714,
        "code": "d, uint _message_price, uint _queueCount) {\n        require(msg.value>0);\n        if (bytes(_content).length<1 || bytes(_content).length>150) throw;\n        uint total=queueCount();\n        uint _last_Show_data=messageInfo[totalMessages].show_date;\n        if (_last_Show_data==0) _last_Show_data=now+showInterval*2; else {\n            if (_last_Show_data<(now-showInterval)) {\n                _last_Show_data=_last_Show_data+(((now-_last_Show_data)/showInterval)+1)*showInterval;\n            } else _last_Show_data=_last_Show_data+showInterval; \n        }\n        uint message_price=basePrice+basePrice*total*k;\n        require(msg.value>=message_price);\n\n        // add message\n        totalMessages++;\n        messageInfo[totalMessages].date=now;\n        messageInfo[totalMessages].sender=msg.sender;\n        messageInfo[totalMessages].content=_content;\n        messageInfo[totalMessages].price=message_price;\n        messageInfo[totalMessages].show_date=_last_Show_data;\n        \n        // refound\n        if (msg.value>message_price) {\n            uint cashback=msg.value-message_price;\n            sendMoney(msg.sender,cashback);\n        }\n        \n        return (totalMessages,message_price,(total+1));\n    }\n\n\tfunction sendMoney(address _address, uint _amount) internal {\n\t\trequire(this.balance >= _amount);\n    \t",
        "debug": "calldata_Owned_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_Owned_0: 0x708b34fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\n",
        "description": "A possible integer overflow exists in the function `submitMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "submitMessage(string)",
        "lineno": 79,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1816,
        "code": "ow_data)/showInt",
        "debug": "storage_3: 0x34bfcff7a6dfbdffde0010901ffff04e2bbdcf73100000000000000000000000\ntimestamp: 0x22fb9ff7a6dfbf7f100004780df9081e35fc7a1207ffffff9027e9db60836b42\ncalldata_Owned_4 + calldata_Owned_4: 0x7\nstorage_4 + keccac_storage_4: 0x6d1f960800000177320f18bffbf51fe00a3f2b1ef7ffffffb823eb76b76fbb10\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Owned_0: 0x708b34fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\nstorage_5 + keccac_storage_4: 0x0\n",
        "description": "A possible integer underflow exists in the function `submitMessage(string)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "submitMessage(string)",
        "lineno": 86,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1842,
        "code": "ta=_last_Show_data+showInterval; \n",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Owned_4 + calldata_Owned_4: 0x2\nstorage_4 + keccac_storage_4: 0x8000000000000000000000000000000000000000000000000000000000000000\ntimestamp: 0x8000000000000000000000000000000000000000000000000000000000000001\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Owned_0: 0x708b34fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\nstorage_3: 0x0\nstorage_5 + keccac_storage_4: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "submitMessage(string)",
        "lineno": 87,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1907,
        "code": "ges].sender=msg",
        "debug": "storage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Owned_4 + calldata_Owned_4: 0x2\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Owned_0: 0x708b34fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\nstorage_4 + keccac_storage_4: 0x0\nstorage_5 + keccac_storage_4: 0x0\n",
        "description": "A possible integer overflow exists in the function `submitMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "submitMessage(string)",
        "lineno": 95,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2371,
        "code": "i].rejected==0) {",
        "debug": "timestamp: 0x0\nstorage_3: 0x1\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Owned_0: 0x413d18cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\ncalldata_Owned_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `currentMessage(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "currentMessage(uint256)",
        "lineno": 68,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3115,
        "code": "count;\n         ",
        "debug": "timestamp: 0x0\nstorage_3: 0x1\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Owned_0: 0x9ef36bd100000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `queueCount()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "queueCount()",
        "lineno": 58,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 3504,
        "code": "reason=_reason;\n",
        "debug": "storage_0 + keccac_calldata_Owned_4: 0x80\ntimestamp: 0x0\nstorage_3: 0x1\ncalldata_Owned_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_Owned_0: 0xd020dc3b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\nstorage_5 + keccac_calldata_Owned_4: 0x0\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `rejectMessage(uint256,string)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "rejectMessage(uint256,string)",
        "lineno": 147,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 4817,
        "code": "ed {\n    uint public basePrice=0.005 ether;\n    uint public k=1;\n    uint public showInterval=15;\n    uint public totalMessages=0;\n\n    \n    struct Message\n    {\n        string content;\n        uint date;\n        address sender;\n        uint price;\n        uint show_date;\n        uint rejected;\n        string rejected_reason;\n    }    \n    \n    mapping (uint => Message) public messageInfo;\n    \n\n    /* events */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n\n    /* Initializes contract  */\n    function Feed() {\n       \n    }\n\n    function() public payable {\n        submitMessage(\"\");\n    }    \n    \n    function queueCount() public returns (uint _count) {\n        _count=0;\n        for (uint i=totalMessages; i>0; i--) {\n            if (messageInfo[i].show_date<(now-showInterval) && messageInfo[i].rejected==0) return _count;\n            if (messageInfo[i].rejected==0) _count++;\n        }\n        return _count;\n    }\n    \n    function currentMessage(uint _now) public returns ( uint _message_id, string _content, uint _show_date,uint _show_interval,uint _serverTime) {\n        require(totalMessages>0);\n        if (_now==0) _now=now;\n        for (uint i=totalMessages; i>0; i--) {\n            if (messageInfo[i].show_date>=(_now-showInterval) && messageInfo[i].show_date<_now && messageInfo[i].rejected==0) {\n                //good    \n                if (messageInfo[i+1].show_date>0) _show_interval=messageInfo[i+1].show_date-messageInfo[i].show_date; else _show_interval=showInterval;\n                return (i,messageInfo[i].content,messageInfo[i].show_date,_show_interval,_now);\n            }\n             if (messageInfo[i].show_date<(_now-showInterval)) throw;\n        }\n        throw;\n    }  \n\n  \n    function submitMessage(string _content) payable public returns(uint _message_id, uint _message_price, uint _queueCount) {\n        require(msg.value>0);\n        if (bytes(_content).length<1 || bytes(_content).length>150) throw;\n        uint total=queueCount();\n        uint _last_Show_data=messageInfo[totalMessages].show_date;\n        if (_last_Show_data==0) _last_Show_data=now+showInterval*2; else {\n            if (_last_Show_data<(now-showInterval)) {\n                _last_Show_data=_last_Show_data+(((now-_last_Show_data)/showInterval)+1)*showInterval;\n            } else _last_Show_data=_last_Show_data+showInterval; \n        }\n        uint message_price=basePrice+basePrice*total*k;\n        require(msg.value>=message_price);\n\n        // add message\n        totalMessages++;\n        messageInfo[totalMessages].date=now;\n        messageInfo[totalMessages].sender=msg.sender;\n        messageInfo[totalMessages].content=_content;\n        messageInfo[totalMessages].price=message_price;\n        messageInfo[totalMessages].show_date=_last_Show_data;\n        \n        // refound\n        if (msg.value>message_price) {\n            uint cashback=msg.value-message_price;\n            sendMoney(msg.sender,cashback);\n        }\n        \n        return (totalMessages,message_price,(total+1));\n    }\n\n\tfunction sendMoney(address _address, uint _amount) internal {\n\t\trequire(this.balance >= _amount);\n    \tif (_address.send(_amount)) {\n    \t\tTransfer(this,_address, _amount);\n    \t}\t    \n\t}\n\t\n\tfunction withdrawBenefit(address _address, uint _amount) onlyOwner public {\n\t\tsendMoney(_address,_amount);\n\n\t}\n\t\n    \n\tfunction setBasePrice(uint _newprice) onlyOwner public returns(uint _basePrice) {\n\t\trequire(_newprice>0);\n\t\tbasePrice=_newprice;\n\t\treturn basePrice;\n\t}    \n\t\n\tfunction setShowInterval(uint _newinterval) onlyOwner public returns(uint _showInterval) {\n\t\trequire(_newinterval>0);\n\t\tshowInterval=_showInterval;\n\t\treturn showInterval;\n\t}    \t\n\t\n\tfunction setPriceCoeff(uint _new_k) onlyOwner public returns(uint _k) {\n\t\trequire(_new_k>0);\n\t\tk=_new_k;\n\t\treturn k;\n\t}  \n\n\t\n\tfunction rejectMessage(uint _message_id, string _reason) onlyOwner public returns(uint _amount) {\n\t\trequire(_message_id>0);\n\t\trequire(bytes(messageInfo[_message_id].content).length > 0);\n\t\trequire(messageInfo[_message_id].rejected==0);\n    \tif (messageInfo[_message_id].show_date>=(now-showInterval) && messageInfo[_message_id].show_date<=now) throw;\n\t\tmessageInfo[_message_id].rejected=1;\n\t\tmessageInfo[_message_id].rejected_reason=_reason;\n\t\tif (messageInfo[_message_id].sender!= 0x0 && messageInfo[_message_id].price>0) {\n\t\t    sendMoney(messageInfo[_message_id].sender,messageInfo[_message_id].price);\n\t\t    return messageInfo[_message_id].price;\n\t\t} else throw;\n\t}  \t\t\n    \n}",
        "debug": "keccac_0_+_keccac_1_+_storage_4: 0xfefa8cc26400ce0c094142041500f1b4b0154ffbdf7e7d52e5db2dfffffffffe\nstorage_0 + keccac_1_+_storage_4: 0xc0acba5df8a3bbfd5c6edf1fe6000000000000000000000000000000000000c5\ncallvalue: 0x80000000000000000000000000000000000000000000000000000\ncalldata_Owned_4 + calldata_Owned_4: 0x7\nstorage_1: 0x80000000000000000000000000000000000000000000000000000\ncalldata_Owned_0: 0x708b34fe00000000000000000000000000000000000000000000000000000000\ncalldatasize_Owned: 0x4\nstorage_4 + keccac_storage_4: 0x0\nstorage_4: 0x0\n",
        "description": "A possible integer overflow exists in the function `submitMessage(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/21/0xd9a19471e4c4e6766518f7a91a8e4237dead5647.sol",
        "function": "submitMessage(string)",
        "lineno": 21,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}