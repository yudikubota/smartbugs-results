{"error": null, "issues": [{"address": 2010, "code": " _spender, _value);\n        return true;\n    }\n\n    function ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_WanToken: 0x48\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WanToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WanToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WanToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "approve(address,uint256)", "lineno": 144, "title": "Exception state", "type": "Informational"}, {"address": 2562, "code": "   Transfer(_from, _to,", "debug": "calldatasize_WanToken: 0x64\ncalldata_WanToken_32 + 36: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WanToken_32_+_4: 0xa8511371907d295662825497115ba082b6a492f6b7f433cff7fbddd4ebff6ff5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WanToken_4: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\ncalldata_WanToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "transferFrom(address,address,uint256)", "lineno": 127, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3160, "code": "      assert(totalSupply.add", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WanToken_0: 0x79c6506800000000000000000000000000000000000000000000000000000000\ncalldatasize_WanToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "mintToken(address,uint256)", "lineno": 195, "title": "Exception state", "type": "Informational"}, {"address": 3204, "code": "ribution Contract     \n     * @param _startTime ICO start", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x21f15c882187790d2f4ca397b600044006c53c2e00a40ce1cf2627e0410f9b01\ncalldata_WanToken_32 + 4: 0x7d41898f55b7784cfe9ea3f3decbab7f766d340fd9cd64b9edb325d349059bf4\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WanToken_0: 0x79c6506800000000000000000000000000000000000000000000000000000000\ncalldatasize_WanToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "mintToken(address,uint256)", "lineno": 203, "title": "Exception state", "type": "Informational"}, {"address": 3726, "code": " return false; }\n    }\n", "debug": "calldatasize_WanToken: 0x1000000000000000000000000000000000000000000000000000000000000044\ncalldata_WanToken_32 + 4: 0x6173538839847ecb1c051d3958c52c0d15261637901c038184c1b94b3d5bd9a5\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WanToken_4: 0xf1592bedbbff7fd743ed18b69e49c6a2d5afe5b9c6df6bd8868438480103db39\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6173538839847ecb1c051d3958c52c0d15261637901c038184c1b94b3d5bd9a5\ncalldata_WanToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "transfer(address,uint256)", "lineno": 117, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4078, "code": "      assert(totalSupply.add", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_WanToken_0: 0xdf8de3e700000000000000000000000000000000000000000000000000000000\ncalldatasize_WanToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "claimTokens(address)", "lineno": 195, "title": "Exception state", "type": "Informational"}, {"address": 4382, "code": "c;\n  }\n\n  func", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x1\ncalldata_WanToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncaller: 0x0\ncalldata_WanToken_0: 0x79c6506800000000000000000000000000000000000000000000000000000000\ncalldatasize_WanToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fc6de61258e63706543bb57619b99cc0e5a5a1f.sol", "function": "mintToken(address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}], "success": true}