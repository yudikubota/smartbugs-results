{
  "contract": "0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1",
  "tool": "mythril",
  "start": 1563324323.62347,
  "end": 1563324564.5480494,
  "duration": 240.92457938194275,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 728,
        "code": "internal balances;\n    map",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldatasize_ZeusToken: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "fallback",
        "lineno": 380,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 993,
        "code": "                                             \n   ",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "fallback",
        "lineno": 151,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1020,
        "code": "valueUSDWEI;\n        }\n        emi",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "fallback",
        "lineno": 153,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 5924,
        "code": "ays;\n        minimalSuccessUS",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncaller: 0x0\nstorage_0: 0x0\ncalldata_ZeusToken_0: 0x4d6db0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "startSale(address,uint256,uint256,uint256,uint256)",
        "lineno": 264,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6029,
        "code": "(now >= crowdsaleFinishTime && ",
        "debug": "storage_3: 0x300\ncalldata_ZeusToken_32 + 68: 0x200000000000000000000000000000000000000000000000000000000000000\ncaller: 0x0\nstorage_0: 0x0\ncalldata_ZeusToken_0: 0x4d6db0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `startSale(address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "startSale(address,uint256,uint256,uint256,uint256)",
        "lineno": 272,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6031,
        "code": "equire(now >= crowdsaleFinishTime && ",
        "debug": "storage_3: 0x300\ntimestamp: 0x29189e3775e07a568b57c32affec278f748807883841d3e9675e40904a48aa80\ncalldata_ZeusToken_32 + 68: 0x86333caec32ab3cd6168662afd0bebbd5187de81937a720a45887a4ba94a43\ncaller: 0x0\nstorage_0: 0x0\ncalldata_ZeusToken_0: 0x4d6db0500000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `startSale(address,uint256,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "startSale(address,uint256,uint256,uint256,uint256)",
        "lineno": 272,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 6216,
        "code": "ances[who];\n    }\n\n    function t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldata_ZeusToken_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "approve(address,uint256)",
        "lineno": 387,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6501,
        "code": "yable Crowdsale() {}\n\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldata_ZeusToken_0: 0xa69234700000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "withdrawBack()",
        "lineno": 384,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6574,
        "code": " = investors[addr];",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldata_ZeusToken_0: 0xafd21d200000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "failSale(uint256)",
        "lineno": 275,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6982,
        "code": "ectedUSDWEI >= minimalSuccess",
        "debug": "storage_3: 0x400\nstorage_16: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x0\ntimestamp: 0x0\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeusToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x1\nstorage_10: 0x0\ncalldata_ZeusToken_0: 0xafd21d200000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `failSale(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "failSale(uint256)",
        "lineno": 291,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7351,
        "code": "ctedUSDWEI < totalLimitUSD",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncaller: 0x0\nstorage_0: 0x0\ncalldata_ZeusToken_0: 0x155dd5ee00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "withdrawFunds(uint256)",
        "lineno": 358,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7589,
        "code": " {\n        require(state == State.SaleFailed)",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "withdrawFunds(uint256)",
        "lineno": 367,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7589,
        "code": " {\n        require(state == State.SaleFailed)",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function withdrawFunds(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "withdrawFunds(uint256)",
        "lineno": 367,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 8095,
        "code": "ances[who];\n    }\n\n    function t",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncalldata_ZeusToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 387,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9021,
        "code": "eSale);\n    }\n\n    fun",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x8000\ncaller: 0x0\nstorage_0: 0x0\ncalldata_ZeusToken_0: 0x2c29eedd00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "startPrivateSale(address,uint256,uint256)",
        "lineno": 222,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 17315,
        "code": "t = beneficiary.call.gas(3000000).va",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "withdrawBack()",
        "lineno": 353,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 17407,
        "code": "external onlyAllowedContracts",
        "debug": "storage_3: 0x400\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_storage_14_-_1,_256): 0x0\nstorage_8: 0x0\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_storage_14_-_1,_256) +\n0: 0x1\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeusToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x1\nstorage_10: 0x0\ncalldata_ZeusToken_0: 0xafd21d200000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `failSale(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "failSale(uint256)",
        "lineno": 521,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 17423,
        "code": "     var knownContract",
        "debug": "storage_3: 0x400\nstorage_17: 0x0\nstorage_8: 0x0\ntimestamp: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_keccac_storage_14_-_1,_256) +\n0: 0x1\nstorage_14: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ZeusToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_7: 0x1\nstorage_10: 0x0\ncalldata_ZeusToken_0: 0xafd21d200000000000000000000000000000000000000000000000000000000\ncalldatasize_ZeusToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `failSale(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1.sol",
        "function": "failSale(uint256)",
        "lineno": 522,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}