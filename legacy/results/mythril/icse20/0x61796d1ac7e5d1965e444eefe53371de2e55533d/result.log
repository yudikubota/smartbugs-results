{"error": null, "issues": [{"address": 1513, "code": "votedShy;\n    uint publ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\ncalldata_Promise_0: 0xc039f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "_function_0x0c039f19", "lineno": 16, "title": "Exception state", "type": "Informational"}, {"address": 1539, "code": "ByJudge[_number", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\ncalldata_Promise_0: 0x1309f01300000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "judgeSigns(uint256)", "lineno": 34, "title": "Exception state", "type": "Informational"}, {"address": 1741, "code": "   require(vote", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\nstorage_11: 0xff00\ncalldata_Promise_0: 0x3fb74d8100000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "voteShyOfCondition(uint256)", "lineno": 67, "title": "Exception state", "type": "Informational"}, {"address": 1903, "code": " 2) && !sent", "debug": "storage_19: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_calldata_Promise_4 + 12: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_calldata_Promise_4 + 16: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_calldata_Promise_4 + 5: 0x0\ncaller: 0x0\ncalldata_Promise_4: 0x2\nstorage_11: 0xff00\ncalldata_Promise_0: 0x3fb74d8100000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `voteShyOfCondition(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "voteShyOfCondition(uint256)", "lineno": 71, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2166, "code": "er] != 1);\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\nstorage_11: 0xff00\ncalldata_Promise_0: 0x5a84eff200000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "voteFoul(uint256)", "lineno": 51, "title": "Exception state", "type": "Informational"}, {"address": 2360, "code": " if((foulVote", "debug": "storage_15: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_calldata_Promise_4 + 20: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_calldata_Promise_4 + 16: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_calldata_Promise_4 + 12: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_calldata_Promise_4 + 5: 0x0\ncaller: 0x0\ncalldata_Promise_4: 0x2\nstorage_11: 0xff00\ncalldata_Promise_0: 0x5a84eff200000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `voteFoul(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "voteFoul(uint256)", "lineno": 57, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2735, "code": "blic signedByJudge;\n    bool", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\ncalldata_Promise_0: 0x7367c5eb00000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "_function_0x7367c5eb", "lineno": 11, "title": "Exception state", "type": "Informational"}, {"address": 2860, "code": "3] public judges;\n\n    u", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\ncalldata_Promise_0: 0xb06b036800000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "_function_0xb06b0368", "lineno": 9, "title": "Exception state", "type": "Informational"}, {"address": 2940, "code": "(votedFoul[_num", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\nstorage_11: 0xff00\ncalldata_Promise_0: 0xb31c9ae800000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "voteSuccess(uint256)", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 3369, "code": "c votedFoul;\n    uint pu", "debug": "The exception is triggered under the following conditions:\n\ncalldata_Promise_4: 0x3\ncalldata_Promise_0: 0xc41bcb1b00000000000000000000000000000000000000000000000000000000\ncalldatasize_Promise: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x61796d1ac7e5d1965e444eefe53371de2e55533d.sol", "function": "_function_0xc41bcb1b", "lineno": 14, "title": "Exception state", "type": "Informational"}], "success": true}