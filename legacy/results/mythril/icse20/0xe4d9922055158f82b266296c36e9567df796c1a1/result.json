{
  "contract": "0xe4d9922055158f82b266296c36e9567df796c1a1",
  "tool": "mythril",
  "start": 1563567023.111344,
  "end": 1563567325.4461174,
  "duration": 302.33477330207825,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 643,
        "code": "tice Burns `_amount` tokens from `_owner`\n    /// @param _user The ad",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0xe4d9922055158f82b266296c36e9567df796c1a1.sol",
        "function": "fallback",
        "lineno": 473,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 643,
        "code": "tice Burns `_amount` tokens from `_owner`\n    /// @param _user The ad",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0xe4d9922055158f82b266296c36e9567df796c1a1.sol",
        "function": "fallback",
        "lineno": 473,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1606,
        "code": "r].sub(amount);\n        address _toI;\n        uint256 _valueI;\n        for(uint256 i; i<len; i++){\n            _toI = _to[i];\n            _valueI = _value[i];\n            balanceOf[_toI] = balanceOf[_toI].add(_valueI);\n            emit Transfer(msg.sender, _toI, _valueI);\n        }\n        return (true, amount);\n    }\n    \n    function transferMultiSameVaule(address[] _to, uint256 _value) transable public returns (bool){\n        require(_to.length <= 1024);\n        //uint256 balanceOfSender = balanceOf[msg.sender];\n        uint256 len = _to.length;\n        uint256 amount = _value.mul(len);\n        //require(balanceOfSender - amount < balanceOfSender); //check enough and not overflow\n        //TODO test\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(amount); //this maybe will check enough automatically\n        address _toI;\n        for(uint256 i; i<len; i++){\n            _toI = ",
        "debug": "calldata_TokenI_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenI_0: 0x35bce6e400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transferMulti(address[],uint256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0xe4d9922055158f82b266296c36e9567df796c1a1.sol",
        "function": "transferMulti(address[],uint256[])",
        "lineno": 375,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9182,
        "code": ") onlyOwner public returns ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenI_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TokenI_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenI_0: 0x827f32c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `generateTokens(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0xe4d9922055158f82b266296c36e9567df796c1a1.sol",
        "function": "generateTokens(address,uint256)",
        "lineno": 486,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9293,
        "code": "      balanceOf[newOwner] =",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_7,_256): 0x0\ncalldata_TokenI_32 + 4: 0x1\nstorage_3: 0x0\ncaller: 0x0\ncalldata_TokenI_0: 0x827f32c000000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenI: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `generateTokens(address,uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/12/0xe4d9922055158f82b266296c36e9567df796c1a1.sol",
        "function": "generateTokens(address,uint256)",
        "lineno": 487,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 13587,
        "code": "      return a",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenI_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_16: 0xff00\ncalldata_TokenI_0: 0x3104b21a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenI: 0x4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenI_4: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/12/0xe4d9922055158f82b266296c36e9567df796c1a1.sol",
        "function": "unApprove(address,uint256)",
        "lineno": 20,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}