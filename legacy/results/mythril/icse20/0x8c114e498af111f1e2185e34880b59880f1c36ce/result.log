{"error": null, "issues": [{"address": 1191, "code": "eturns (bool success) {    \n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool succe", "debug": "calldata_tokenRecipient_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_tokenRecipient_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/36/0x8c114e498af111f1e2185e34880b59880f1c36ce.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 87, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3653, "code": "       }\n    }\n\n\n    function transferFrom(address _from, add", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/36/0x8c114e498af111f1e2185e34880b59880f1c36ce.sol", "function": "approveAndCall(address,uint256,bytes)", "lineno": 92, "title": "Message call to external contract", "type": "Warning"}], "success": true}