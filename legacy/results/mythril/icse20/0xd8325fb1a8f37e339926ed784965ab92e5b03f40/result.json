{
  "contract": "0xd8325fb1a8f37e339926ed784965ab92e5b03f40",
  "tool": "mythril",
  "start": 1563631164.5973244,
  "end": 1563631256.9302034,
  "duration": 92.33287906646729,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 4170,
        "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x5fefda700000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "setPrices(uint256,uint256)",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4431,
        "code": "y - icoMin) {\n\t\t\tminimalGoalRe",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_owned_0: 0x95ea7b300000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "approve(address,uint256)",
        "lineno": 259,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4748,
        "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0xa2d967b00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "stopThisIco(bool)",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5203,
        "code": "] >= _value);\n\t\trequire(allowed[",
        "debug": "The exception is triggered under the following conditions:\n\ncaller: 0x0\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 236,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5260,
        "code": "][msg.sender] >= _value);\n\t",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 237,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5317,
        "code": "ire(tokenBalanceOf[_from]",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_owned_32 + 4: 0x0\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffff\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_owned_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 238,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6734,
        "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x25b5160c00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "setICOPrice(uint256)",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 6955,
        "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "withdraw(uint256)",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 7470,
        "code": "tTokenPrice = mtdAmount * ethAmount;",
        "debug": "storage_110590919583585809989897755346798572687781678651433134664863788576725173977973: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_1: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_owned_0: 0x2fd463e100000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `STARTMETADOLLAR()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "STARTMETADOLLAR()",
        "lineno": 133,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 8021,
        "code": " supervisor);\n\t\t_;\n\t}\n\t\n\t/// @notice Transfer the owner",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e50400\ncaller: 0xd297f7436763414b9339228a5936f215af1c1afb\ncalldata_owned_0: 0x3dab45b600000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "setMtdPreAmount(uint256)",
        "lineno": 44,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 16419,
        "code": "lders += 1;\n\t\t}\n\t\ttokenBala",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd0100\ncallvalue: 0x1000000000000000000000000000000000000000000000000000017ffc\nstorage_7: 0x800000000000000000000000000000000000000000000000000000000002feff\nstorage_110590919583585809989897755346798572687781678651433134664863788576725173977973: 0x0\nstorage_14: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldatasize_owned: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "fallback",
        "lineno": 305,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 17996,
        "code": "!icoIsClosed);\n\t\trequire(!",
        "debug": "storage_1: 0x0\ncalldata_owned_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\nstorage_14: 0xff00\nstorage_7: 0x0\ncaller: 0x2d6808bc989cbeb46cc6dd75a6c90dea50e3e504\nstorage_0: 0xd297f7436763414b9339228a5936f215af1c1afb00\ncalldata_owned_0: 0x25b5160c00000000000000000000000000000000000000000000000000000000\ncalldatasize_owned: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `setICOPrice(uint256)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/26/0xd8325fb1a8f37e339926ed784965ab92e5b03f40.sol",
        "function": "setICOPrice(uint256)",
        "lineno": 277,
        "title": "Integer Underflow",
        "type": "Warning"
      }
    ],
    "success": true
  }
}