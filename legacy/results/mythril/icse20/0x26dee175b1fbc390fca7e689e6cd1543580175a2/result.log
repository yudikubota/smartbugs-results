{"error": null, "issues": [{"address": 894, "code": "    require(_value > 0 && balances[msg.sender] >= amount);\n  \n      balances[msg.sender] = balances[msg.sender].sub(amount);\n      for (uint i = 0; i < cnt; i++) {\n          balances[_receivers[i]] = balances[_receivers[i]].add(_value);\n          emit Transfer(msg.sender, _receivers[i], _value);\n      }\n      return true;\n    }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(", "debug": "calldata_StandardToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0x83f12fec00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `batchTransfer(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/38/0x26dee175b1fbc390fca7e689e6cd1543580175a2.sol", "function": "batchTransfer(address[],uint256)", "lineno": 214, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6084, "code": " Unpa", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StandardToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/38/0x26dee175b1fbc390fca7e689e6cd1543580175a2.sol", "function": "increaseApproval(address,uint256)", "lineno": 114, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6097, "code": "\n  bool public", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x1\ncalldata_StandardToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StandardToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/38/0x26dee175b1fbc390fca7e689e6cd1543580175a2.sol", "function": "increaseApproval(address,uint256)", "lineno": 115, "title": "Exception state", "type": "Informational"}], "success": true}