{
  "contract": "0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14",
  "tool": "mythril",
  "start": 1563632985.3032863,
  "end": 1563633031.439047,
  "duration": 46.13576078414917,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2683,
        "code": " for the previous one\n        for (uint i=0; ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "mintMonster(uint32,address,string)",
        "lineno": 165,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2683,
        "code": " for the previous one\n        for (uint i=0; ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2955\n",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "mintMonster(uint32,address,string)",
        "lineno": 165,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2683,
        "code": " for the previous one\n        for (uint i=0; ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function mintMonster(uint32,address,string). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "mintMonster(uint32,address,string)",
        "lineno": 165,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2955,
        "code": "value);\n        }\n        \n        EtheremonMonsterNFTInterface(monsterNFT).trigger",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "mintMonster(uint32,address,string)",
        "lineno": 168,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2955,
        "code": "value);\n        }\n        \n        EtheremonMonsterNFTInterface(monsterNFT).trigger",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function mintMonster(uint32,address,string). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "mintMonster(uint32,address,string)",
        "lineno": 168,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3863,
        "code": " += class.price*(class.total-1",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "catchMonsterNFT(uint32,string)",
        "lineno": 223,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3863,
        "code": " += class.price*(class.total-1",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4364\n",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "catchMonsterNFT(uint32,string)",
        "lineno": 223,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3863,
        "code": " += class.price*(class.total-1",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function catchMonsterNFT(uint32,string). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "catchMonsterNFT(uint32,string)",
        "lineno": 223,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4364,
        "code": "= 1) {\n            value = uint8((seed * (i + 1",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "catchMonsterNFT(uint32,string)",
        "lineno": 233,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7158,
        "code": "NFT).triggerTransferEvent(ob",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "burnMonster(uint64)",
        "lineno": 182,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 7158,
        "code": "NFT).triggerTransferEvent(ob",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function burnMonster(uint64). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "burnMonster(uint64)",
        "lineno": 182,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 8233,
        "code": "catchable, uint price) {\n     ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "getMonsterClassBasic(uint32)",
        "lineno": 197,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 8233,
        "code": "catchable, uint price) {\n     ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function getMonsterClassBasic(uint32). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/28/0x9ce8b0ebbf4f5b27dd184c80afbc44d77780ff14.sol",
        "function": "getMonsterClassBasic(uint32)",
        "lineno": 197,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}