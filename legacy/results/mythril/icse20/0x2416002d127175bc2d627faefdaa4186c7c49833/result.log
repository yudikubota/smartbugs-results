{"error": null, "issues": [{"address": 275, "code": "\n        \n        require(curves[specifier] == 0, \"Curve specifier already exists\");\n        \n        RegistryInterface registry = RegistryInterface(coord.getContract(\"REGISTRY\")); \n        require(registry.isProviderInitiated(address(this)), \"Provider not intiialized\");\n\n        registry.initiateProviderCurve(specifier, curve, address(this));\n        curves[specifier] = newToken(bytes32ToString(specifier), bytes32ToString(symbol));\n        \n        registry.setProviderParameter(specifier, toBytes(curves[specifier]));\n        \n        DotTokenCreated(curves[specifier]);\n        return curves[specifier];\n    }\n\n    //whether this contract holds tokens or coming from msg.sender,etc\n    function bond(bytes32 specifier, uint numDots) public  {\n\n        bondage ", "debug": "calldata_ZapCoordinatorInterface_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZapCoordinatorInterface_0: 0x6af065000000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `initializeCurve(bytes32,bytes32,int256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 138, "title": "Integer Overflow ", "type": "Warning"}, {"address": 441, "code": "e, symbol);\n        tokenAddress = address(token);\n        return tokenAddress;\n    }\n\n    function getTokenAddress(bytes32 specifier) public view returns(address) {\n        RegistryInterface registry = RegistryInterface(coord.getContract(\"REGISTRY\")); \n        return bytesToAddr(regis", "debug": "calldata_ZapCoordinatorInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZapCoordinatorInterface_0: 0x4629ffea00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `newToken(string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "newToken(string,string)", "lineno": 199, "title": "Integer Overflow ", "type": "Warning"}, {"address": 986, "code": ") * 2));\n            result += to_inc;\n        }\n        return address(result);\n    }\n\n\n}", "debug": "calldata_ZapCoordinatorInterface_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ZapCoordinatorInterface_0: 0x5ef6228c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x5ef6228c`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "_function_0x5ef6228c", "lineno": 230, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2333, "code": "initiateProviderCurve(specifi", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 145, "title": "Message call to external contract", "type": "Informational"}, {"address": 2333, "code": "initiateProviderCurve(specifi", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2968\nCall at address: 2968\nCall at address: 2968\nCall at address: 2968\nCall at address: 2968\nCall at address: 2549\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 145, "title": "Multiple Calls", "type": "Information"}, {"address": 2549, "code": "is));\n        curves[specifier] = newToken(", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 145, "title": "Message call to external contract", "type": "Warning"}, {"address": 2549, "code": "is));\n        curves[specifier] = newToken(", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2968\nCall at address: 2968\nCall at address: 2968\nCall at address: 2968\nCall at address: 2968\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 145, "title": "Multiple Calls", "type": "Information"}, {"address": 2893, "code": "g(symbol));\n        \n        registry.setProviderParameter(spec", "debug": "calldata_ZapCoordinatorInterface_4 + calldata_ZapCoordinatorInterface_32 + 36: 0x800000000000000000000000000000000000000000000000000000000000000\nmem_128 +\n32 +\n32*\ncalldata_ZapCoordinatorInterface_4 + calldata_ZapCoordinatorInterface_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nretval_2549: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_2333: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\n115792089237316195423570985008687907853269984665640564039457584007913129639935_-\n0_&\ncalldata_ZapCoordinatorInterface_4: 0x0\ncalldata_ZapCoordinatorInterface_0: 0x6af065000000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `initializeCurve(bytes32,bytes32,int256[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 146, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2968, "code": "g(symbol));\n        \n        registry.setProviderParameter(spec", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "initializeCurve(bytes32,bytes32,int256[])", "lineno": 146, "title": "Message call to external contract", "type": "Warning"}, {"address": 4048, "code": "egistryInterface registry = Regis", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "newToken(string,string)", "lineno": 205, "title": "Message call to external contract", "type": "Informational"}, {"address": 4321, "code": "T\"));\n        uint reserveCo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 180, "title": "Message call to external contract", "type": "Informational"}, {"address": 4321, "code": "T\"));\n        uint reserveCo", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5815\nCall at address: 5530\nCall at address: 5256\nCall at address: 4904\nCall at address: 4649\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 180, "title": "Multiple Calls", "type": "Information"}, {"address": 4440, "code": "rd.getContract(\"CURRENT_COST\"));\n        uint reserveCos", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 180, "title": "State change after external call", "type": "Warning"}, {"address": 4649, "code": "ots(address(this), specifier, issued + 1 - numD", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 181, "title": "Message call to external contract", "type": "Informational"}, {"address": 4649, "code": "ots(address(this), specifier, issued + 1 - numD", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5815\nCall at address: 5530\nCall at address: 5256\nCall at address: 4904\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 181, "title": "Multiple Calls", "type": "Information"}, {"address": 4904, "code": "  bondage.unbond(address(this), s", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 184, "title": "Message call to external contract", "type": "Informational"}, {"address": 4904, "code": "  bondage.unbond(address(this), s", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5815\nCall at address: 5530\nCall at address: 5256\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 184, "title": "Multiple Calls", "type": "Information"}, {"address": 5023, "code": "- 1);\n\n        //unbond dots\n        bondage.unbond(address(this), sp", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 181, "title": "State change after external call", "type": "Warning"}, {"address": 5256, "code": "urn dot backed token\n        FactoryTokenInterface curveToken = FactoryTokenInterface", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 185, "title": "Message call to external contract", "type": "Informational"}, {"address": 5256, "code": "urn dot backed token\n        FactoryTokenInterface curveToken = FactoryTokenInterface", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5815\nCall at address: 5530\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 185, "title": "Multiple Calls", "type": "Information"}, {"address": 5530, "code": "ken.burnFrom(msg.sender, numDots);\n\n        requi", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 187, "title": "Message call to external contract", "type": "Informational"}, {"address": 5530, "code": "ken.burnFrom(msg.sender, numDots);\n\n        requi", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5815\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 187, "title": "Multiple Calls", "type": "Information"}, {"address": 5815, "code": "       string symbol\n    ) \n        publ", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "unbond(bytes32,uint256)", "lineno": 194, "title": "Message call to external contract", "type": "Warning"}, {"address": 6417, "code": "erface(coord.getContract(\"CU", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 160, "title": "Message call to external contract", "type": "Informational"}, {"address": 6417, "code": "erface(coord.getContract(\"CU", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7564\nCall at address: 7254\nCall at address: 7000\nCall at address: 6745\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 160, "title": "Multiple Calls", "type": "Information"}, {"address": 6536, "code": "rface cost = CurrentCostInterface(coord.getContract(\"CUR", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 160, "title": "State change after external call", "type": "Warning"}, {"address": 6745, "code": "6 numReserve = cost._costOfNDots(address(this),", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 161, "title": "Message call to external contract", "type": "Informational"}, {"address": 6745, "code": "6 numReserve = cost._costOfNDots(address(this),", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7564\nCall at address: 7254\nCall at address: 7000\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 161, "title": "Multiple Calls", "type": "Information"}, {"address": 7000, "code": "      reserveToken.transferFrom(m", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 164, "title": "Message call to external contract", "type": "Informational"}, {"address": 7000, "code": "      reserveToken.transferFrom(m", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7564\nCall at address: 7254\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 164, "title": "Multiple Calls", "type": "Information"}, {"address": 7254, "code": "rve),\n            \"insufficient accepted token numDots approved for ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 164, "title": "Message call to external contract", "type": "Informational"}, {"address": 7254, "code": "rve),\n            \"insufficient accepted token numDots approved for ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7564\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 164, "title": "Multiple Calls", "type": "Information"}, {"address": 7564, "code": "veToken.approve(address(bondage), numReserve);\n        bondage.b", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "bond(bytes32,uint256)", "lineno": 168, "title": "Message call to external contract", "type": "Informational"}, {"address": 8874, "debug": "calldata_ZapCoordinatorInterface_4 + calldata_ZapCoordinatorInterface_4: 0x0\ncalldata_ZapCoordinatorInterface_0: 0x5ef6228c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `_function_0x5ef6228c`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "_function_0x5ef6228c", "lineno": 237, "title": "Integer Underflow", "type": "Warning"}, {"address": 8883, "debug": "calldata_ZapCoordinatorInterface_4 + calldata_ZapCoordinatorInterface_4: 0x0\ncalldata_ZapCoordinatorInterface_0: 0x5ef6228c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x5ef6228c`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "_function_0x5ef6228c", "lineno": 237, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9043, "debug": "calldata_ZapCoordinatorInterface_4 + calldata_ZapCoordinatorInterface_4: 0x1\ncalldata_ZapCoordinatorInterface_0: 0x5ef6228c00000000000000000000000000000000000000000000000000000000\ncalldatasize_ZapCoordinatorInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `_function_0x5ef6228c`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "_function_0x5ef6228c", "lineno": 237, "title": "Integer Underflow", "type": "Warning"}, {"address": 9498, "code": "ss-to-bytes-in-solidity\n    f", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "getTokenAddress(bytes32)", "lineno": 209, "title": "Message call to external contract", "type": "Informational"}, {"address": 9498, "code": "ss-to-bytes-in-solidity\n    f", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9733\n", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "getTokenAddress(bytes32)", "lineno": 209, "title": "Multiple Calls", "type": "Information"}, {"address": 9733, "code": "c pure returns (bytes b) {\n        b = new bytes(20);\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/21/0x2416002d127175bc2d627faefdaa4186c7c49833.sol", "function": "getTokenAddress(bytes32)", "lineno": 210, "title": "Message call to external contract", "type": "Informational"}], "success": true}