{
  "contract": "0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a",
  "tool": "mythril",
  "start": 1563803643.044693,
  "end": 1563803647.485076,
  "duration": 4.440382957458496,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.16;\r\n^---------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:5:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Escrow() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:28:23: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        bytes32 cab = sha3(currencyAndBank);\r\n                      ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:28:23: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        bytes32 cab = sha3(currencyAndBank);\r\n                      ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:28:23: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n        bytes32 cab = sha3(currencyAndBank);\r\n                      ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:38:27: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:38:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:38:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:40:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            TxExecuted(event_id);\r\n            ^------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:46:27: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:46:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:46:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:49:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            TxExecuted(event_id);\r\n            ^------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:55:27: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:55:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:55:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:62:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            TxExecuted(event_id);\r\n            ^------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:79:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        TxExecuted(event_id);\r\n        ^------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:85:27: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:85:27: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:85:27: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.\n            bytes32 cab = sha3(currencyAndBank);\r\n                          ^-------------------^\n/unique_chucks/16/0x6db7a62bc0ab77c5bafdd9bf7042b0d2106a886a.sol:89:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            TxExecuted(event_id);\r\n            ^------------------^\n",
    "issues": []
  }
}