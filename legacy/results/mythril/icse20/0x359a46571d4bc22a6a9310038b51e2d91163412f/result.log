{"error": null, "issues": [{"address": 3331, "code": "nction lockTransfers() pu", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "totalSupply()", "lineno": 777, "title": "Message call to external contract", "type": "Informational"}, {"address": 3655, "code": "ly {\n        size := extcodesize(_addr)", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "enableMasterTransfers()", "lineno": 816, "title": "Message call to external contract", "type": "Informational"}, {"address": 3960, "code": "require(!finalized);\n    _;\n  }\n\n}", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "lockMasterTransfers()", "lineno": 823, "title": "Message call to external contract", "type": "Informational"}, {"address": 4370, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "allocateServusTokens()", "lineno": 827, "title": "Message call to external contract", "type": "Informational"}, {"address": 4453, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "allocateServusTokens()", "lineno": 827, "title": "State change after external call", "type": "Warning"}, {"address": 4686, "code": ";\n    servusTokensAllocated = true;\n  }\n\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "changeController(address)", "lineno": 796, "title": "Message call to external contract", "type": "Informational"}, {"address": 7244, "code": " a);\n", "debug": "storage_2: 0x77ab0ffdfde6ba6ff7d841d4282a1ccec60b183d9a4850d5d0fe84a3e0f688fc\ntimestamp: 0x0\ncallvalue: 0xda846d80e106b38f04007505a66a324b4e48523e1c9f7da75efceeb004b88f01\nstorage_18: 0x77ab0ffdfde6ba6ff7d841d4282a1ccec60b183d9a4850d5d0fe84a3e0f688fd\nstorage_8: 0x0\nstorage_21: 0xff00\nstorage_7: 0x1\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\nstorage_0: 0x0\ncalldatasize_TokenSale: 0x3\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "fallback", "lineno": 24, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7257, "code": "urn c;\n  }\n}\n\n", "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0xa460344e05f20000c181cf1988482e470680703dd71219ac83120a2695210e1d\ntimestamp: 0x0\ncallvalue: 0xaca2e4095efa7ffe7e7dcfd9c70f0cee44d85bfdef18ce1eee238a0cf93bea45\nstorage_18: 0xa460344e05f20000c181cf1988482e470680703dd71219ac83120a2695210e1e\nstorage_8: 0x0\nstorage_21: 0xff00\nstorage_7: 0x1\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0x0\nstorage_0: 0x0\ncalldatasize_TokenSale: 0x3\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/25/0x359a46571d4bc22a6a9310038b51e2d91163412f.sol", "function": "fallback", "lineno": 25, "title": "Exception state", "type": "Informational"}], "success": true}