{
  "contract": "0x3214cef10e5c194ca547735863fe755fc4cbb78e",
  "tool": "mythril",
  "start": 1563502322.9225914,
  "end": 1563502360.1599345,
  "duration": 37.237343072891235,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 717,
        "code": "ddress(address addr) public onlyOwner returns(bool success) {\n        if (!transferableAddresses[addr]) {\n            transferableAddresses[addr] = true;\n            emit TransferableAddressAdded(addr);\n            success = true;\n        }\n    }\n\n    function removeTran",
        "debug": "calldata_TransferableToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TransferableToken_0: 0x3050226a00000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferableToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `addTransferableAddresses(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x3214cef10e5c194ca547735863fe755fc4cbb78e.sol",
        "function": "addTransferableAddresses(address[])",
        "lineno": 305,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 934,
        "code": "address addr) public onlyOwner returns(bool success) {\n        if (transferableAddresses[addr]) {\n            transferableAddresses[addr] = false;\n            emit TransferableAddressRemoved(addr);\n            success = true;\n        }\n    }\n\n    /**\n    */\n    function transf",
        "debug": "calldata_TransferableToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TransferableToken_0: 0x618c577200000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferableToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `removeTransferableAddresses(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x3214cef10e5c194ca547735863fe755fc4cbb78e.sol",
        "function": "removeTransferableAddresses(address[])",
        "lineno": 321,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7142,
        "code": "tle B",
        "debug": "calldata_TransferableToken_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferableToken_4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_TransferableToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferableToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `increaseApproval(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0x3214cef10e5c194ca547735863fe755fc4cbb78e.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 121,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 7155,
        "code": "\n * @dev Basic",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TransferableToken_4: 0x1\ncalldata_TransferableToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TransferableToken_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TransferableToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0x3214cef10e5c194ca547735863fe755fc4cbb78e.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 121,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}