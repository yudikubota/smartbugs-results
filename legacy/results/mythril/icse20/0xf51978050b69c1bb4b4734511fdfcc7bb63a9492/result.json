{
  "contract": "0xf51978050b69c1bb4b4734511fdfcc7bb63a9492",
  "tool": "mythril",
  "start": 1563531586.077537,
  "end": 1563531600.177808,
  "duration": 14.100270986557007,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 696,
        "code": "/*\n     Safety Methods\n  */\n\n ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "collectTokens()",
        "lineno": 780,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 696,
        "code": "/*\n     Safety Methods\n  */\n\n ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 914\n",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "collectTokens()",
        "lineno": 780,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 914,
        "code": "  sent tokens to this con",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "collectTokens()",
        "lineno": 786,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1942,
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function claimTokens(address). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "claimTokens(address)",
        "lineno": 805,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 2131,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "claimTokens(address)",
        "lineno": 805,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2131,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2388\n",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "claimTokens(address)",
        "lineno": 805,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2388,
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "claimTokens(address)",
        "lineno": 805,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2945,
        "code": " @title Ownabl",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xc63a21246c99b000ea0030728005ea6909080a424a47ca48059be3c0ff803205\nretval_696: 0xd2bd697b67b8b7eebcef8ebaf405ca6a0b728a06c347eda3d5dbebfeffbdb977\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncaller: 0x0\ncalldata_TeamTokenHolder_0: 0x8433acd100000000000000000000000000000000000000000000000000000000\ncalldatasize_TeamTokenHolder: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/10/0xf51978050b69c1bb4b4734511fdfcc7bb63a9492.sol",
        "function": "collectTokens()",
        "lineno": 50,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}