{"error": null, "issues": [{"address": 1470, "code": "t() {\n        require(", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "fallback", "lineno": 507, "title": "Message call to external contract", "type": "Informational"}, {"address": 2236, "code": " isOpen = opn;\n       ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "buyAlt(address,uint256,string)", "lineno": 546, "title": "Message call to external contract", "type": "Informational"}, {"address": 3075, "code": "le();\n    }\n\n    //", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 565, "title": "Message call to external contract", "type": "Informational"}, {"address": 3075, "code": "le();\n    }\n\n    //", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3881\nCall at address: 3560\nCall at address: 3881\nCall at address: 3560\nCall at address: 3560\nCall at address: 3383\nCall at address: 3383\n", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 565, "title": "Multiple Calls", "type": "Information"}, {"address": 3075, "code": "le();\n    }\n\n    //", "debug": "", "description": "A possible transaction order independence vulnerability exists in function finalize(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 565, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3383, "code": "okens = getTokensAmount(etherAmount);\n  ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3560\nCall at address: 3383\n", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 575, "title": "Multiple Calls", "type": "Information"}, {"address": 3560, "code": "        return toke", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 578, "title": "Message call to external contract", "type": "Informational"}, {"address": 3560, "code": "        return toke", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3881\n", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 578, "title": "Multiple Calls", "type": "Information"}, {"address": 3560, "code": "        return toke", "debug": "", "description": "A possible transaction order independence vulnerability exists in function finalize(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 578, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3881, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 581, "title": "Message call to external contract", "type": "Informational"}, {"address": 3881, "debug": "", "description": "A possible transaction order independence vulnerability exists in function finalize(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 581, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4264, "code": "okens);\n    }\n\n    functio", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_6: 0xff00\ncalldata_TokenSale_0: 0xf088d54700000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\nstorage_1: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "buy(address)", "lineno": 492, "title": "Exception state", "type": "Informational"}, {"address": 5382, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "buyAlt(address,uint256,string)", "lineno": 581, "title": "Message call to external contract", "type": "Informational"}, {"address": 5382, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2236\n", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "buyAlt(address,uint256,string)", "lineno": 581, "title": "Multiple Calls", "type": "Information"}, {"address": 5494, "code": "**************", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenSale_32 + 4: 0x8095500007e3ff7e9ee0ec077d39e55bb65901807dd8242c20bb8b0615a46417\nstorage_1: 0x4000000000000008140243680002003b4800000a0aba018090494014048\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_TokenSale_4 + calldata_TokenSale_32 + 36)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_5382: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\nstorage_6: 0x0\ncaller: 0x0\ncalldata_TokenSale_0: 0x37c3d50d00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "buyAlt(address,uint256,string)", "lineno": 81, "title": "Exception state", "type": "Informational"}, {"address": 5518, "code": "56 b) internal", "debug": "The exception is triggered under the following conditions:\n\nretval_3075: 0x400000\nretval_3560: 0xe4e1e0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_TokenSale_0: 0x4bb278f300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSale: 0x4\nstorage_2: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/38/0x521ed218348577fa2915b9454b72712024d350d2.sol", "function": "finalize()", "lineno": 75, "title": "Exception state", "type": "Informational"}], "success": true}