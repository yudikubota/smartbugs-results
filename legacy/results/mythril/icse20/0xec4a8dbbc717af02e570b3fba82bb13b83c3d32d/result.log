{"error": null, "issues": [{"address": 470, "code": "ns =  finalTokens *  (10 ** 2) ; \n    ", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldatasize_tokenRecipient: 0x3\nstorage_9: 0x0\nstorage_8: 0x1\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/40/0xec4a8dbbc717af02e570b3fba82bb13b83c3d32d.sol", "function": "fallback", "lineno": 63, "title": "Exception state", "type": "Informational"}, {"address": 5383, "code": "          require(bal", "debug": "calldata_tokenRecipient_4: 0xffffffffffffffffffffffffffffffffbfffffffffffffffffffffffffffffff\nstorage_3: 0xffffffffffffffffffffffffffffffffbffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffc0000000000000000000000000000000\ncalldata_tokenRecipient_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_tokenRecipient: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `burn(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/40/0xec4a8dbbc717af02e570b3fba82bb13b83c3d32d.sol", "function": "burn(uint256)", "lineno": 259, "title": "Integer Underflow", "type": "Warning"}], "success": true}