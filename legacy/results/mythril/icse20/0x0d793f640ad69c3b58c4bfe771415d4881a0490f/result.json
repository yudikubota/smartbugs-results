{
  "contract": "0x0d793f640ad69c3b58c4bfe771415d4881a0490f",
  "tool": "mythril",
  "start": 1563264381.291198,
  "end": 1563264502.7295446,
  "duration": 121.43834662437439,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2789,
        "code": "\n\n\t/// Total amount of",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 463,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2789,
        "code": "\n\n\t/// Total amount of",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3369\nCall at address: 3175\nCall at address: 2982\n",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 463,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2982,
        "code": "unt) public buyi",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 463,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2982,
        "code": "unt) public buyi",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3369\nCall at address: 3175\n",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 463,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3175,
        "code": " (address => A",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 463,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3175,
        "code": " (address => A",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3369\n",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 463,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3369,
        "code": " to the auction.\n\tmapping (address => Account) public buyins;\n\n\t/// Total amount of ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "fallback",
        "lineno": 462,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4753,
        "code": "ised == totalAccounted) {",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffff00\nstorage_4: 0x0\nstorage_6: 0x0\ncalldata_Token_0: 0x330c3fe500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_11: 0x0\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "finalise(address)",
        "lineno": 323,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4945,
        "code": "d.\n\tfunction flu",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x1000000000000000000000000000000000000000000000000bbbfffffe\nstorage_11: 0x7ffffffffffffffffffffffffffffffffffffffffffffffff800000802000000\ntimestamp: 0x0\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xffffffffffffffffffffffffffffffff00\nstorage_4: 0x0\nstorage_6: 0x0\ncalldata_Token_0: 0x330c3fe500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "finalise(address)",
        "lineno": 330,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4958,
        "code": "() private {\n\t\tuint cur",
        "debug": "storage_3: 0xffffffffffffffffffffffffffffffffaea3cd76a94a04520cff071e11664867\ntimestamp: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0 +\nkeccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_Token_4: 0xcb3b7151494ec39a2cf4d799ee3672f300\nstorage_4: 0x0\nstorage_6: 0x0\ncalldata_Token_0: 0x330c3fe500000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `finalise(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "finalise(address)",
        "lineno": 331,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 5385,
        "code": "OD;\n\t\tif (currentEra > eraIndex) {\n\t\t\tTicked(eraIn",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "finalise(address)",
        "lineno": 332,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 5782,
        "code": " when_active returns (uint weiPerIndivisibleToken",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_Token_0: 0x44af946f00000000000000000000000000000000000000000000000000000000\ncalldatasize_Token: 0x4\nstorage_11: 0x0\nstorage_2: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x0d793f640ad69c3b58c4bfe771415d4881a0490f.sol",
        "function": "calculateEndTime()",
        "lineno": 359,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}