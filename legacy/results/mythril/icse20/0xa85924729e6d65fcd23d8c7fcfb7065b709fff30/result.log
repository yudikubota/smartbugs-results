{"error": null, "issues": [{"address": 253, "code": "enesis_block, uint[] halving_array) {\n    return (g_block, halving);\n  }\n}\n\ncontract Etherpixels is usingOwnership, usingCa", "debug": "storage_4: 0x800000000000000000000000000000000000000000000000000000000000000\ncalldata_usingOwnership_0: 0x1594060a00000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `HalvingInfo()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "HalvingInfo()", "lineno": 50, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1026, "code": "xels is usingOwnership, u", "debug": "storage_4: 0x8421003f084001f4210815cf88407c00000000000000037c1d000e8d178001f\ncalldata_usingOwnership_0: 0x1594060a00000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `HalvingInfo()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "HalvingInfo()", "lineno": 55, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1028, "code": "xels is usingOwnership, u", "debug": "storage_4: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb\ncalldata_usingOwnership_0: 0x1594060a00000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `HalvingInfo()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "HalvingInfo()", "lineno": 55, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1352, "code": "ansfer(_amount);\n  }\n\n  function", "debug": "", "description": "A possible transaction order independence vulnerability exists in function Withdraw(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "Withdraw(uint256)", "lineno": 18, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1431, "code": "i]);\n   ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncalldata_usingOwnership_4: 0xff\nblock_number: 0x1\ncalldata_usingOwnership_0: 0x9cccb27200000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\nmem_160 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4 +\n32 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 36: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "_function_0x9cccb272", "lineno": 79, "title": "Exception state", "type": "Informational"}, {"address": 1469, "code": "emaining ", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncallvalue: 0x0\nmem_0 +\n224 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 36: 0x0\nmem_160 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4 +\n32 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_usingOwnership_4: 0xff\nblock_number: 0x1\ncalldata_usingOwnership_0: 0x9cccb27200000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "_function_0x9cccb272", "lineno": 80, "title": "Exception state", "type": "Informational"}, {"address": 1540, "code": "ingPrice(", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\nstorage_2: 0x0\ncallvalue: 0x0\ncalldata_usingOwnership_cpy: 0x0\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nmem_0 +\n224 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 36: 0x0\nmem_160 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4 +\n32 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_usingOwnership_4: 0xff\nblock_number: 0x1\ncalldata_usingOwnership_0: 0x9cccb27200000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\nmem_128 +\n32 +\n32*\ncalldata_usingOwnership_4 + calldata_usingOwnership_32 + 4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "_function_0x9cccb272", "lineno": 84, "title": "Exception state", "type": "Informational"}, {"address": 1936, "code": " }\n\n  func", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\nstorage_3: 0x0\nblock_number: 0x0\ncalldata_usingOwnership_0: 0xf0bf1aea00000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "Paint(uint256,bytes3)", "lineno": 48, "title": "Exception state", "type": "Informational"}, {"address": 2658, "code": " else {\n        if", "debug": "storage_5: 0x640701286051947c008000090c24008080857410000000000000000000000001\nstorage_0 + keccac_calldata_usingOwnership_4: 0x0\nstorage_3: 0x0\nstorage_2: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_usingOwnership_4: 0x0\nblock_number: 0x1\ncalldata_usingOwnership_0: 0xf0bf1aea00000000000000000000000000000000000000000000000000000000\ncalldatasize_usingOwnership: 0x4\n", "description": "A possible integer overflow exists in the function `Paint(uint256,bytes3)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/19/0xa85924729e6d65fcd23d8c7fcfb7065b709fff30.sol", "function": "Paint(uint256,bytes3)", "lineno": 102, "title": "Integer Overflow ", "type": "Warning"}], "success": true}