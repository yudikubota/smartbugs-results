{"error": null, "issues": [{"address": 152, "code": "ultiSendEth(uint256 amount, address[] list) public payable returns (bool) {\n        uint balanceBeforeTransfer = address(this).balance;\n        \n        for(uint i=0;i<list.length;i++){\n            list[i].transfer(amount);\n            emit Send(amount, list[i]);\n        }\n        assert(address(this).balance == balanceBeforeTransfer - amount*list.length);\n        return true;\n    }\n    \n    function ", "debug": "calldata_MultiEthSender_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiEthSender_0: 0x8e3d63e300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiEthSender: 0x4\n", "description": "A possible integer overflow exists in the function `multiSendEth(uint256,address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/42/0xb52323c98e75974d2139e65d3cba06c43a53cae4.sol", "function": "multiSendEth(uint256,address[])", "lineno": 11, "title": "Integer Overflow ", "type": "Warning"}, {"address": 391, "code": "er(amount);\n            ", "debug": "SOLVER OUTPUT:\ncalldata_MultiEthSender_4 + calldata_MultiEthSender_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiEthSender_0: 0x8e3d63e300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiEthSender: 0x4\n", "description": "In the function `multiSendEth(uint256,address[])` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions.", "filename": "/unique_chucks/42/0xb52323c98e75974d2139e65d3cba06c43a53cae4.sol", "function": "multiSendEth(uint256,address[])", "lineno": 15, "title": "Ether send", "type": "Warning"}, {"address": 566, "code": "is).balance == balanceBeforeTransfer - amount*list.length);\n        return ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_MultiEthSender_4 + calldata_MultiEthSender_32 + 4: 0x3\ncalldata_MultiEthSender_4: 0x55555555555555555b80000000000000000000005c0000000000000000000000\nretval_391: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_MultiEthSender_0: 0x8e3d63e300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiEthSender: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/42/0xb52323c98e75974d2139e65d3cba06c43a53cae4.sol", "function": "multiSendEth(uint256,address[])", "lineno": 18, "title": "Exception state", "type": "Informational"}], "success": true}