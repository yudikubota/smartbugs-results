{"error": null, "issues": [{"address": 890, "code": "_symbol) onlyOwner {\n        symbol = _symbol;\n    }\n    \n    function se", "debug": "calldata_x32323_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_x32323_0: 0x6690f30b00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `set_Name(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "set_Name(string)", "lineno": 79, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1415, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1427, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_4 + calldata_x32323_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1436, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_4 + calldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1442, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_4 + calldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1485, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1497, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1506, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1512, "code": "tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stoppe", "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0x746e42ddbe03c97fe6e530ac0258466c4a20dfffffffffffffffffffffffffc1\ncalldata_x32323_4 + calldata_x32323_32 + 4: 0xcf9f8ea5a709fb58f8ed502cd9b08a9b1306dfffffffffffffffffffffffff61\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 44, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2359, "code": "sg.sender, amount);    ", "debug": "storage_9: 0x1\ncallvalue: 0x800018000a21ac000000219d56a9053f808b00000087dca2884606ab11b80000\nstorage_10: 0xff00\ncalldata_x32323_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\n", "description": "A possible integer overflow exists in the function `buy()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "buy()", "lineno": 155, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4122, "code": "\n        msg.sender.transfer(am", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_x32323_4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_75506153327051474587906755573858019282972751592871715030499431892688993766217: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_0: 0x0\ncaller: 0x0\ncalldata_x32323_0: 0x7c6ac2af00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `withdrawal_Lem(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "withdrawal_Lem(uint256)", "lineno": 71, "title": "Integer Overflow ", "type": "Warning"}, {"address": 4472, "code": "\n\n    uint256 minBal", "debug": "calldata_x32323_4 + calldata_x32323_32 + 36: 0x7d1c220000131c81001c28498000000a310ffffffffffffffffffffffffffe1\ncalldata_x32323_4 + calldata_x32323_32 + 4: 0xf82e3ddffffece37effe3d7b67ffffff5ceeffffffffffffffffffffffffff01\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 53, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6254, "code": "\n\n        assert(balanceOf[_from]", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffdffffffffff00ff\ncalldata_x32323_32 + 36: 0x1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x7fffffc000000000000000000000000000000000000000000200000000003fff\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "transferFrom(address,address,uint256)", "lineno": 110, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6641, "code": "er, _to, _value);\n\t    }\n\n    fun", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_4: 0xecefff013bcbcd55488320e6ebbdf9c939244df0fa727f6e3c75d2d5efff003b\ncalldata_x32323_32 + 36: 0x1d520300a3b0180e9043942404afb216a2109201048c803c0502041000000000\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_x32323_32_+_4: 0x6d14010040588807b20117e0831eb2261e35011f9efc2fe2e1c10612c622c98b\ncalldata_x32323_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_10: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x1d520300a3b0180e9043942404afb216a2109201048c803c0502041000000000\ncalldata_x32323_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "transferFrom(address,address,uint256)", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6724, "code": "  \n//\u8a2d\u5b9a\u521d\u59cb\u503c//\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    mapping (address => bool) public frozenAccount;\n\n    event FrozenFunds(address target, bool frozen);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function freezeAccount(address target, bool freeze) onlyOwner {\n        frozenAccount[target] = freeze;\n        FrozenFunds(target, freeze);\n    }\n\n    string public name;\n    string public symbol;\n    uint8 public decimals = 2;\n    uint256 public totalSupply;\n    \n//\u521d\u59cb\u5316//\n\n    function TokenERC20(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stopped ;\n    bool selling;\n\n\n    function set_prices(uint256 price_wei) onlyOwner {\n        price = price_wei  ;\n    }\n\n    function withdrawal_Lem(uint256 amount)  onlyOwner {\n        require(balanceOf[this] >= amount) ;\n        balanceOf[this] -= amount ;\n        balanceOf[msg.sender] += amount ;\n    }\n    \n    function withdrawal_Eth(uint amount_wei) onlyOwner {\n        msg.sender.transfer(amount_wei) ;\n    }\n    \n    function set_Name(string _name) onlyOwner {\n        name = _name;\n    }\n    \n    function set_symbol(string _symbol) onlyOwner {\n        symbol = _symbol;\n    }\n    \n    function set_sell(bool _selling) onlyOwner {\n        selling = _selling;\n    }\n    \n    function stop() onlyOwner {\n        stopped = true;\n    }\n\n    function start() onlyOwner {\n        stopped = false;\n    }\n\n//\u4ea4\u6613//\n\n    function _transfer(address _from, address _to, uint _value) internal {\n\t    require(!frozenAccount[_from]);\n\t    require(!stopped);\n        require(_to != 0x0);\n        \n        require(_value >= 0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        \n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(_from, _to, _value);\n\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    function transfer(address _to, uint256 _value) public {\n        _transfer(msg.sender, _to, _value);\n\t    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]); \n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n//\u8ca9\u552e\n\n    function () payable {\n        buy();\n    }\n\n    function buy() payable returns (uint amount){\n        require(price != 0);\n\t    require(selling);\n        amount = msg.value / price * 100 ;\n        require(balanceOf[this] > amount);           \n        balanceOf[msg.sender] += amount;           \n        balanceOf[this] -= amount; \n        Transfer(this, msg.sender, amount);         \n        return amount;    \n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 36)): 0x8000000000000000000000000000000000000000000000000000000000000000\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 20, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6738, "code": "  \n//\u8a2d\u5b9a\u521d\u59cb\u503c//\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    mapping (address => bool) public frozenAccount;\n\n    event FrozenFunds(address target, bool frozen);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function freezeAccount(address target, bool freeze) onlyOwner {\n        frozenAccount[target] = freeze;\n        FrozenFunds(target, freeze);\n    }\n\n    string public name;\n    string public symbol;\n    uint8 public decimals = 2;\n    uint256 public totalSupply;\n    \n//\u521d\u59cb\u5316//\n\n    function TokenERC20(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n\ttotalSupply = 1000000000 * 100 ;\n    \tbalanceOf[msg.sender] = totalSupply ;\n        name = \"Leimen coin\";\n        symbol = \"Lem\";         \n    }\n    \n//\u7ba1\u7406\u6b0a\u9650//\n\n    uint256 minBalance ;\n    uint256 price ;\n    bool stopped ;\n    bool selling;\n\n\n    function set_prices(uint256 price_wei) onlyOwner {\n        price = price_wei  ;\n    }\n\n    function withdrawal_Lem(uint256 amount)  onlyOwner {\n        require(balanceOf[this] >= amount) ;\n        balanceOf[this] -= amount ;\n        balanceOf[msg.sender] += amount ;\n    }\n    \n    function withdrawal_Eth(uint amount_wei) onlyOwner {\n        msg.sender.transfer(amount_wei) ;\n    }\n    \n    function set_Name(string _name) onlyOwner {\n        name = _name;\n    }\n    \n    function set_symbol(string _symbol) onlyOwner {\n        symbol = _symbol;\n    }\n    \n    function set_sell(bool _selling) onlyOwner {\n        selling = _selling;\n    }\n    \n    function stop() onlyOwner {\n        stopped = true;\n    }\n\n    function start() onlyOwner {\n        stopped = false;\n    }\n\n//\u4ea4\u6613//\n\n    function _transfer(address _from, address _to, uint _value) internal {\n\t    require(!frozenAccount[_from]);\n\t    require(!stopped);\n        require(_to != 0x0);\n        \n        require(_value >= 0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        \n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(_from, _to, _value);\n\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    function transfer(address _to, uint256 _value) public {\n        _transfer(msg.sender, _to, _value);\n\t    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]); \n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n//\u8ca9\u552e\n\n    function () payable {\n        buy();\n    }\n\n    function buy() payable returns (uint amount){\n        require(price != 0);\n\t    require(selling);\n        amount = msg.value / price * 100 ;\n        require(balanceOf[this] > amount);           \n        balanceOf[msg.sender] += amount;           \n        balanceOf[this] -= amount; \n        Transfer(this, msg.sender, amount);         \n        return amount;    \n    }\n}", "debug": "mem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_x32323_4 + calldata_x32323_32 + 36)): 0xe2240c073350198c7e1fe6a188343fffffffbbc5606fffffffffffffffffffa0\ncalldata_x32323_4 + calldata_x32323_32 + 36: 0xe728cbd10097e51a790002e0afffffffffffffffffffffffffffffffffffffe1\ncalldata_x32323_4 + calldata_x32323_32 + 4: 0x469e07d63c0ba14e849f5e157670afbffffc443a9f8fffffffffffffffffff61\ncalldata_x32323_0: 0x9dbf008700000000000000000000000000000000000000000000000000000000\ncalldatasize_x32323: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `TokenERC20(uint256,string,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/14/0x6947c40ba3fa0e0b2689ea3983e57b746d4568a1.sol", "function": "TokenERC20(uint256,string,string)", "lineno": 20, "title": "Integer Overflow ", "type": "Warning"}], "success": true}