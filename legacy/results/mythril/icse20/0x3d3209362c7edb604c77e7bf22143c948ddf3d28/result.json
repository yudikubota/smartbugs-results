{
  "contract": "0x3d3209362c7edb604c77e7bf22143c948ddf3d28",
  "tool": "mythril",
  "start": 1563760050.7201755,
  "end": 1563761838.8629687,
  "duration": 1788.1427931785583,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 276,
        "code": "change...\n\t\t\twi",
        "debug": "storage_3: 0xffffffffffffffffffffffffffff5e0410400000000000291608c00000240001\nstorage_2: 0x1220400000000000000000000000000000000\ntimestamp: 0x1220400000000000000000000000000000000\ncalldata_ERC20Basic_0: 0xd100000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 295,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1245,
        "code": "ue >= price); // value sent is enough to buy a",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_ERC20Basic_0: 0xe8b5e51f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "invest()",
        "lineno": 193,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1256,
        "code": "r' nicely - inves",
        "debug": "storage_4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_8: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ntimestamp: 0x0\nstorage_2: 0x0\nstorage_3: 0x1\ncalldata_ERC20Basic_0: 0xe8b5e51f00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\n",
        "description": "A possible integer overflow exists in the function `invest()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "invest()",
        "lineno": 195,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1278,
        "code": " 'sender' nicely - investor\n\t\taddress investor = msg",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_6: 0x1\ntimestamp: 0x0\nstorage_2: 0x0\nstorage_4: 0x0\nstorage_8: 0x2\nstorage_3: 0x1\ncalldatasize_ERC20Basic: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 195,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1311,
        "code": "\t\tvalue = hardCap",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0x0\nstorage_2: 0x0\nstorage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x1\ncalldatasize_ERC20Basic: 0x3\nstorage_4: 0x0\nstorage_6: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 206,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1356,
        "code": "s(investor, tokens)",
        "debug": "storage_4: 0x4000000000000000000000000000000000000000000000000000000000000000\nstorage_8: 0xc000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x5bb6e74fffdffbffffaf8ebee7e6ff4fbefb3f3fbfffffffffffffffffffffff\ntimestamp: 0x0\nstorage_2: 0x0\nstorage_3: 0x1\ncalldatasize_ERC20Basic: 0x3\nstorage_6: 0x0\n",
        "description": "A possible integer underflow exists in the function `fallback`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 216,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1474,
        "code": "er(this.balance);\n\t\t}\n\n\t\t// log an e",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3130\nCall at address: 3130\n",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 224,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1693,
        "code": "ns = __redeemAmount(investor);",
        "debug": "The exception is triggered under the following conditions:\n\ntimestamp: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_3: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20Basic_0: 0x590e1ae300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "refund()",
        "lineno": 242,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1708,
        "code": "amount\n\t\tuint refundValue =",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\nstorage_5: 0x0\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20Basic_0: 0x590e1ae300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "refund()",
        "lineno": 244,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 1760,
        "code": " refundValue);\n\t}\n\n\t// ",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 262,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1776,
        "code": " all the value to the be",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 265,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1794,
        "code": "iary\n\tfun",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 265,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 2147,
        "code": "thdraw (entire balance obviously)\n\t\tuint value = this.bala",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_17: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_ERC20Basic_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "withdraw()",
        "lineno": 272,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2163,
        "code": "ue);\n\t}\n\n\t// performs an inv",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\nstorage_5: 0x1\nstorage_17: 0x0\ncaller: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_ERC20Basic_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "withdraw()",
        "lineno": 276,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2198,
        "code": "pending on the crowdsale",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\nstorage_5: 0x0\nstorage_17: 0x0\ncaller: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncalldata_ERC20Basic_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "withdraw()",
        "lineno": 280,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2987,
        "code": "wance(investor, this) / k;\n\n\t\t// for open crowdsa",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 329,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2987,
        "code": "wance(investor, this) / k;\n\n\t\t// for open crowdsa",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1474\n",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 329,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3130,
        "debug": "",
        "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n- block.timestamp\n",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 353,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 3408,
        "code": "nction __redeemTokens(address i",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "refund()",
        "lineno": 339,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3408,
        "code": "nction __redeemTokens(address i",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1855\nCall at address: 3933\nCall at address: 1855\nCall at address: 3933\n",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 339,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3472,
        "code": "nction __redeemTokens(address inves",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_8: 0x0\nreturndatasize: 0x20\nretval_3408: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0x1\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\nstorage_2: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20Basic_0: 0x590e1ae300000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20Basic: 0x4\nstorage_16: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "refund()",
        "lineno": 339,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3642,
        "code": "al section -----------------",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 352,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 3933,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 353,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 3933,
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1855\n",
        "filename": "/unique_chucks/46/0x3d3209362c7edb604c77e7bf22143c948ddf3d28.sol",
        "function": "fallback",
        "lineno": 353,
        "title": "Multiple Calls",
        "type": "Information"
      }
    ],
    "success": true
  }
}