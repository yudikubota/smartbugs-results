{
  "contract": "0xcc89405e3cfd38412093840a3ac2f851dd395dfb",
  "tool": "mythril",
  "start": 1563494064.190689,
  "end": 1563494538.3384588,
  "duration": 474.14776968955994,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 993,
        "code": "[msg.sender] > 30 ether) throw;\n ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xd86f7b66d40140028418b1331496800c3df2c8db164baebaa195fbf4e183aefd\ncallvalue: 0x32126d44f5ad552ada2877501685ffd07964fcfb150a30c35a1603c2caf648c2\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StatusContribution_0: 0x0\ncalldatasize_StatusContribution: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "fallback",
        "lineno": 134,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1243,
        "code": "act after the ICO.\n  ",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `buy()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "fallback",
        "lineno": 144,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1243,
        "code": "act after the ICO.\n  ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2161\nCall at address: 2161\nCall at address: 1696\nCall at address: 3308\nCall at address: 3101\nCall at address: 2896\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 144,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1243,
        "code": "act after the ICO.\n  ",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "fallback",
        "lineno": 144,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 1473,
        "code": " of contract (less the b",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "fallback",
        "lineno": 63,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 1502,
        "code": "ontract.\n    uint256 ",
        "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\nstorage_2: 0x1\nreturndatasize: 0x20\nretval_1243: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xff00\ncalldata_StatusContribution_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `default_helper()`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 65,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 1696,
        "code": "of ETH and SNT owned by the co",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 67,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1696,
        "code": "of ETH and SNT owned by the co",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2161\nCall at address: 2161\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 67,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1760,
        "code": "te amount of ETH to withdraw",
        "debug": "storage_2: 0x82c3a41060000000000000000000000000000000000000000000000000000000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x5ef34e15526484484360abd061d0be505b0eb57bc3a221ad2f1d9f0527fe04e7\nretval_1696: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x20\nretval_1243: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xff00\ncalldata_StatusContribution_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `default_helper()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 70,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1761,
        "code": "ate amount of ETH to withdraw.\n    uint256 eth_amount",
        "debug": "storage_2: 0x1ba4c1104d7fb168a5b407b0001a36ab4ca6201c5b7db820d412698ef200000\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x720d25949b939deeff00588af4e450022192529047cdfecdd03a3d8c40aaa1b\nretval_1696: 0xc00ee04e80301f38a3a90a347b03dd816efa5b718dbc72662890fc01f7877940\nreturndatasize: 0x20\nretval_1243: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xff00\ncalldata_StatusContribution_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `default_helper()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 70,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1779,
        "code": " Calculate amount of SNT to withdraw.\n    uint256 snt_amount =",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_2: 0x6211a8694ec83a429c5730a048137b9ba4f27e5aa6fb21133165b352323b979\nbalance_at_1461501637330902918203684832716283019655932542975 & 0: 0x35cafb7315eae50053d1365081e1d82f27c34ff7a1a7fbccb5e068f01c1000d\nretval_1696: 0x188c4520d45d26d30f181cc2df2ffbdda0303fbffffe0113906a9978206b0ac0\nreturndatasize: 0x20\nretval_1243: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0xff00\ncalldata_StatusContribution_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 72,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2161,
        "code": "loper, fee)) throw;\n    msg.sender.transfer(",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "default_helper()",
        "lineno": 82,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2161,
        "code": "loper, fee)) throw;\n    msg.sender.transfer(",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2577\nCall at address: 2462\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "withdraw()",
        "lineno": 82,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2462,
        "code": " \n  // Allow anyone to contrib",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "withdraw()",
        "lineno": 85,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2462,
        "code": " \n  // Allow anyone to contrib",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2577\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "withdraw()",
        "lineno": 85,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2682,
        "code": "he fee.  Callable b",
        "debug": "storage_2: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncalldata_StatusContribution_0: 0x62f5ed6100000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\n",
        "description": "A possible integer overflow exists in the function `add_to_bounty()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "add_to_bounty()",
        "lineno": 94,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2896,
        "code": " < sale.startBlock",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `buy()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 99,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 2896,
        "code": " < sale.startBlock",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3308\nCall at address: 3101\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 99,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2896,
        "code": " < sale.startBlock",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function simulate_ico(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 99,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3101,
        "code": "it and rate-limit",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `buy()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 101,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3101,
        "code": "it and rate-limit",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3308\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 101,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3101,
        "code": "it and rate-limit",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function simulate_ico(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 101,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 3308,
        "code": "f the current curve/cap.",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "simulate_ico()",
        "lineno": 101,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4390,
        "code": "e contract.\n    msg.sender.transfer(bounty);\n  }\n  \n  // A he",
        "debug": "SOLVER OUTPUT:\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_StatusContribution_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `buy()` a non-zero amount of Ether is sent to an address taken from storage slot 3.\nThere is a check on storage index 3. This storage slot can be written to by calling the function `buy()`.\n\nThere is a check on storage index 3. This storage slot can be written to by calling the function `buy()`.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "buy()",
        "lineno": 123,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 4390,
        "code": "e contract.\n    msg.sender.transfer(bounty);\n  }\n  \n  // A he",
        "debug": "",
        "description": "This contract executes a message call to an address found at storage slot 3. This storage slot can be written to by calling the function `buy()`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "buy()",
        "lineno": 123,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 4390,
        "code": "e contract.\n    msg.sender.transfer(bounty);\n  }\n  \n  // A he",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4498\n",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "buy()",
        "lineno": 123,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 4390,
        "code": "e contract.\n    msg.sender.transfer(bounty);\n  }\n  \n  // A he",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buy(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "buy()",
        "lineno": 123,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 4498,
        "code": "tion default_helper() payab",
        "debug": "SOLVER OUTPUT:\nreturndatasize: 0x20\nretval_4390: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_3: 0x0\ncalldata_StatusContribution_0: 0xa6f2ae3a00000000000000000000000000000000000000000000000000000000\ncalldatasize_StatusContribution: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `buy()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 3. This storage slot can be written to by calling the function `buy()`.",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "buy()",
        "lineno": 128,
        "title": "Ether send",
        "type": "Warning"
      },
      {
        "address": 4498,
        "code": "tion default_helper() payab",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function buy(). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/6/0xcc89405e3cfd38412093840a3ac2f851dd395dfb.sol",
        "function": "buy()",
        "lineno": 128,
        "title": "Transaction order dependence",
        "type": "Warning"
      }
    ],
    "success": true
  }
}