{
  "contract": "0x700fc72abc067e90111a391d0fae8ce8c799b38f",
  "tool": "mythril",
  "start": 1563588404.1863046,
  "end": 1563588438.7679923,
  "duration": 34.581687688827515,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 147,
        "code": "iTransfer(ERC20 token, address[] Airdrop2, uint256 amount) public {\n        for (uint256 i = 0; i < Airdrop2.length; i++) {\n            token.transfer( Airdrop2[i], amount * 10 ** 18);\n        }\n    }\n}",
        "debug": "calldata_MultiTransfer_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_MultiTransfer_0: 0xaa20e7300000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiTransfer: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0x0aa20e73`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/19/0x700fc72abc067e90111a391d0fae8ce8c799b38f.sol",
        "function": "_function_0x0aa20e73",
        "lineno": 14,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 548,
        "code": " Airdrop2[i], amount * 10 ** 18);\n        }\n   ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/19/0x700fc72abc067e90111a391d0fae8ce8c799b38f.sol",
        "function": "_function_0x0aa20e73",
        "lineno": 16,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 548,
        "code": " Airdrop2[i], amount * 10 ** 18);\n        }\n   ",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 548\nCall at address: 548\nCall at address: 548\n",
        "filename": "/unique_chucks/19/0x700fc72abc067e90111a391d0fae8ce8c799b38f.sol",
        "function": "_function_0x0aa20e73",
        "lineno": 16,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 602,
        "code": "public Airdrop2;\n        ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_MultiTransfer_4: 0x0\nstorage_0: 0x0\ncalldata_MultiTransfer_0: 0xe2868c5400000000000000000000000000000000000000000000000000000000\ncalldatasize_MultiTransfer: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/19/0x700fc72abc067e90111a391d0fae8ce8c799b38f.sol",
        "function": "_function_0xe2868c54",
        "lineno": 11,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}