{"error": null, "issues": [{"address": 7075, "code": " each tier (relative to tota", "debug": "The exception is triggered under the following conditions:\n\ncalldata_USDTieredSTO_4: 0x0\nstorage_18: 0x0\ncalldata_USDTieredSTO_0: 0x33258ea00000000000000000000000000000000000000000000000000000000\ncalldatasize_USDTieredSTO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "_function_0x033258ea", "lineno": 838, "title": "Exception state", "type": "Informational"}, {"address": 7276, "code": "/\nlibrary SafeMath {\n\n  /**\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyAddresses(address,address,address)", "lineno": 519, "title": "Message call to external contract", "type": "Informational"}, {"address": 8209, "code": "en).mint(reserve", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyAddresses(address,address,address)", "lineno": 1093, "title": "State change after external call", "type": "Warning"}, {"address": 8274, "code": "pReturned), \"Error in minting\"", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyAddresses(address,address,address)", "lineno": 1093, "title": "State change after external call", "type": "Warning"}, {"address": 8339, "code": "emit ReserveTokenMint(msg.se", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyAddresses(address,address,address)", "lineno": 1094, "title": "State change after external call", "type": "Warning"}, {"address": 8472, "code": "c minimumInvestmentUSD;\n\n    // Whether or", "debug": "The exception is triggered under the following conditions:\n\ncalldata_USDTieredSTO_4: 0x0\nstorage_24: 0x0\ncalldata_USDTieredSTO_0: 0x234c685e00000000000000000000000000000000000000000000000000000000\ncalldatasize_USDTieredSTO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "_function_0x234c685e", "lineno": 863, "title": "Exception state", "type": "Informational"}, {"address": 8655, "code": "/\nlibrary SafeMath {\n\n  /**\n  ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyLimits(uint256,uint256)", "lineno": 519, "title": "Message call to external contract", "type": "Informational"}, {"address": 9087, "code": "ngth; i++) {\n            require(_ratePerTie", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyLimits(uint256,uint256)", "lineno": 1028, "title": "State change after external call", "type": "Warning"}, {"address": 9094, "code": "Rate > 0\");\n            require(_tokensPerTier", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "modifyLimits(uint256,uint256)", "lineno": 1029, "title": "State change after external call", "type": "Warning"}, {"address": 9536, "code": "   _;\n    }\n\n    /**\n     * @n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "unpause()", "lineno": 504, "title": "Message call to external contract", "type": "Informational"}, {"address": 9901, "code": "   _;\n    }\n\n    /**\n     * @n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "changeAllowBeneficialInvestments(bool)", "lineno": 504, "title": "Message call to external contract", "type": "Informational"}, {"address": 10283, "code": "wallet\n        msg.sender.transfer(msg.value.sub(spentVa", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "changeAllowBeneficialInvestments(bool)", "lineno": 1160, "title": "State change after external call", "type": "Warning"}, {"address": 10611, "code": "   _;\n    }\n\n    /**\n     * @n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "finalize()", "lineno": 504, "title": "Message call to external contract", "type": "Informational"}, {"address": 11889, "code": "  return DecimalMath.div(_amount, rate);\n    }\n\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_20: 0x0\nstorage_33: 0x0\ncalldata_USDTieredSTO_0: 0x4f93594500000000000000000000000000000000000000000000000000000000\ncalldatasize_USDTieredSTO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "capReached()", "lineno": 1397, "title": "Exception state", "type": "Informational"}, {"address": 11923, "code": "       uint256 rate = getRate(_fundRaiseType);\n  ", "debug": "The exception is triggered under the following conditions:\n\nstorage_20: 0xc000000000000000000000000000000000000000000000000000000000000000\nstorage_22: 0x0\nstorage_33: 0x0\ncalldata_USDTieredSTO_0: 0x4f93594500000000000000000000000000000000000000000000000000000000\ncalldatasize_USDTieredSTO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "capReached()", "lineno": 1396, "title": "Exception state", "type": "Informational"}, {"address": 11956, "code": "torInvested;\n\n    // List of accredited in", "debug": "The exception is triggered under the following conditions:\n\ncalldata_USDTieredSTO_4: 0x0\nstorage_21: 0x0\ncalldata_USDTieredSTO_0: 0x521ced3000000000000000000000000000000000000000000000000000000000\ncalldatasize_USDTieredSTO: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "_function_0x521ced30", "lineno": 851, "title": "Exception state", "type": "Informational"}, {"address": 23804, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "buyWithETH(address)", "lineno": 1463, "title": "Message call to external contract", "type": "Informational"}, {"address": 23804, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 24154\nCall at address: 24154\nCall at address: 24154\n", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "buyWithETH(address)", "lineno": 1463, "title": "Multiple Calls", "type": "Information"}, {"address": 24154, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "buyWithETH(address)", "lineno": 1463, "title": "Message call to external contract", "type": "Informational"}, {"address": 24154, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 23804\n", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "fallback", "lineno": 1463, "title": "Multiple Calls", "type": "Information"}, {"address": 27777, "code": "next-line secu", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/26/0x6b363a10432f145c99f93be8c78d655ebee644c8.sol", "function": "unpause()", "lineno": 43, "title": "State change after external call", "type": "Warning"}], "success": true}