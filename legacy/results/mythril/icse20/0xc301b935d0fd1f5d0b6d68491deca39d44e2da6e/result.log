{"error": null, "issues": [{"address": 3622, "code": "leTokensOfNextYear =\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "numOfInflatableTokens()", "lineno": 644, "title": "Message call to external contract", "type": "Informational"}, {"address": 3622, "code": "leTokensOfNextYear =\n      ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3838\n", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "numOfInflatableTokens()", "lineno": 644, "title": "Multiple Calls", "type": "Information"}, {"address": 3838, "code": "d(inflatedSupply, SafeMath.", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "numOfInflatableTokens()", "lineno": 646, "title": "Message call to external contract", "type": "Informational"}, {"address": 4519, "code": "Only rightful fundraiser is permitted.\n        a", "debug": "The exception is triggered under the following conditions:\n\nstorage_3: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StarbaseToken_0: 0xef5a7e000000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToCrowdsalePurchaser(address,uint256)", "lineno": 253, "title": "Exception state", "type": "Informational"}, {"address": 4657, "code": "ddress of the crowdsale con", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToCrowdsalePurchaser(address,uint256)", "lineno": 275, "title": "Message call to external contract", "type": "Informational"}, {"address": 4886, "code": "ale() {\n        require(starbaseCrowdsale.startDate() ==", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_StarbaseToken_0: 0x202b876a00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToMarketingSupporter(address,uint256)", "lineno": 258, "title": "Exception state", "type": "Informational"}, {"address": 4959, "code": "e fundraiser address rights.\n     *", "debug": "The exception is triggered under the following conditions:\n\ncalldata_StarbaseToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StarbaseToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_StarbaseToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "transferFrom(address,address,uint256)", "lineno": 505, "title": "Exception state", "type": "Informational"}, {"address": 4998, "code": "    }\n\n    /*\n     *  Contract f", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StarbaseToken_0: 0x2d34ba7900000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "setup(address,address)", "lineno": 266, "title": "Exception state", "type": "Informational"}, {"address": 5138, "code": "ram starbaseCompanyAddr The a", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "setup(address,address)", "lineno": 274, "title": "Message call to external contract", "type": "Informational"}, {"address": 6098, "code": "    }\n\n    /*\n     *  Contract f", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StarbaseToken_0: 0x37918bcb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "declareMvpLaunched(uint256)", "lineno": 266, "title": "Exception state", "type": "Informational"}, {"address": 6236, "code": "ddress of the crowdsale con", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "declareMvpLaunched(uint256)", "lineno": 275, "title": "Message call to external contract", "type": "Informational"}, {"address": 6628, "code": "    }\n\n    /*\n     *  Contract f", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StarbaseToken_0: 0x3923afee00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToEarlyContributor(address,uint256)", "lineno": 266, "title": "Exception state", "type": "Informational"}, {"address": 6831, "code": "    }\n\n    /*\n     *  Contract f", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_StarbaseToken_0: 0x475a9fa900000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "issueTokens(address,uint256)", "lineno": 266, "title": "Exception state", "type": "Informational"}, {"address": 8858, "code": "asers cannot transfer their", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "transferFrom(address,address,uint256)", "lineno": 570, "title": "Message call to external contract", "type": "Informational"}, {"address": 8858, "code": "asers cannot transfer their", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 9064\n", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "transferFrom(address,address,uint256)", "lineno": 570, "title": "Multiple Calls", "type": "Information"}, {"address": 9064, "code": ".add(\n                    u", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "transferFrom(address,address,uint256)", "lineno": 571, "title": "Message call to external contract", "type": "Informational"}, {"address": 12097, "code": "eturn a - b;\n ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_StarbaseToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_5,_256): 0x26c62ad77dc602dadffffff\nstorage_5: 0x0\ncalldata_StarbaseToken_4: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StarbaseToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_StarbaseToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\nstorage_6: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "transferFrom(address,address,uint256)", "lineno": 23, "title": "Exception state", "type": "Informational"}, {"address": 12166, "code": "\n    ", "debug": "calldata_StarbaseToken_32 + 4: 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StarbaseToken_4: 0xa7e6e147bc0ca40011bf9bbaadf7593cb8cc90b17cb7d73775f0d8eb1435e9c1\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_4,_256): 0xb135d1e4a0020a903239033aa9b45a69384c906b52a71e0575829626809581fd\nstorage_4: 0x0\ncaller: 0x0\ncalldata_StarbaseToken_0: 0x202b876a00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `allocateToMarketingSupporter(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToMarketingSupporter(address,uint256)", "lineno": 28, "title": "Integer Overflow ", "type": "Warning"}, {"address": 12179, "code": "c;\n  }\n}\n\n\n/**", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StarbaseToken_4: 0x1\ncalldata_StarbaseToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xff00\ncalldata_StarbaseToken_0: 0x3923afee00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToEarlyContributor(address,uint256)", "lineno": 29, "title": "Exception state", "type": "Informational"}, {"address": 12277, "debug": "The exception is triggered under the following conditions:\n\ncalldata_StarbaseToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\nUDiv(storage_4,_256): 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x0\ncaller: 0x0\ncalldata_StarbaseToken_0: 0x202b876a00000000000000000000000000000000000000000000000000000000\ncalldatasize_StarbaseToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToMarketingSupporter(address,uint256)", "lineno": 670, "title": "Exception state", "type": "Informational"}, {"address": 12417, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToCrowdsalePurchaser(address,uint256)", "lineno": 670, "title": "State change after external call", "type": "Warning"}, {"address": 12557, "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/22/0xc301b935d0fd1f5d0b6d68491deca39d44e2da6e.sol", "function": "allocateToCrowdsalePurchaser(address,uint256)", "lineno": 670, "title": "State change after external call", "type": "Warning"}], "success": true}