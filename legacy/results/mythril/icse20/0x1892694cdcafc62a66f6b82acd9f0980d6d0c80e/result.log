{"error": null, "issues": [{"address": 377, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\n", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 390, "title": "Multiple Calls", "type": "Information"}, {"address": 2251, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 377\n", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 390, "title": "Multiple Calls", "type": "Information"}, {"address": 2479, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "createTokens()", "lineno": 390, "title": "Message call to external contract", "type": "Informational"}, {"address": 2479, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 3039\nCall at address: 2970\nCall at address: 2764\nCall at address: 2970\nCall at address: 2764\nCall at address: 2970\nCall at address: 2764\nCall at address: 377\n", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 390, "title": "Multiple Calls", "type": "Information"}, {"address": 2764, "code": "payable {\n        if (now >", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 384, "title": "Message call to external contract", "type": "Informational"}, {"address": 2764, "code": "payable {\n        if (now >", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\nCall at address: 2970\n", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 384, "title": "Multiple Calls", "type": "Information"}, {"address": 2970, "code": "now <= stop) {c", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 385, "title": "Message call to external contract", "type": "Informational"}, {"address": 2970, "code": "now <= stop) {c", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3039\n", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 385, "title": "Multiple Calls", "type": "Information"}, {"address": 3039, "code": "(); }\n        if (now < ", "debug": "", "description": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n- block.timestamp\n- block.timestamp\n- block.timestamp\n", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "fallback", "lineno": 385, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 6903, "code": "l;\n       if (breco", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "finish()", "lineno": 366, "title": "Message call to external contract", "type": "Informational"}, {"address": 8781, "code": "s two numbers,", "debug": "The exception is triggered under the following conditions:\n\ncalldata_bar_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_bar_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_bar: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "burn(uint256)", "lineno": 63, "title": "Exception state", "type": "Informational"}, {"address": 8799, "code": "ic to", "debug": "storage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_bar_32 + 4: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_3: 0x0\ncaller: 0x0\ncalldata_bar_0: 0x40c10f1900000000000000000000000000000000000000000000000000000000\ncalldatasize_bar: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `mint(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "mint(address,uint256)", "lineno": 73, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8812, "code": "@dev Basic ver", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_bar_4: 0x1\ncalldata_bar_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_bar_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_bar: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/29/0x1892694cdcafc62a66f6b82acd9f0980d6d0c80e.sol", "function": "increaseApproval(address,uint256)", "lineno": 74, "title": "Exception state", "type": "Informational"}], "success": true}