{
  "contract": "0x400c73395bbc01d9e757f02f267925e1de0779f8",
  "tool": "mythril",
  "start": 1563600218.4544435,
  "end": 1563600223.2197373,
  "duration": 4.765293836593628,
  "analysis": {
    "success": false,
    "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:30:5: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.\n    function TokenDrop() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:30:5: Error: No visibility specified. Did you intend to add \"public\"?\n    function TokenDrop() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:22:1: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.8;\"\ncontract ERC20 {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:30:5: Warning: This declaration shadows an existing declaration.\n    function TokenDrop() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:27:1: The shadowed declaration is here:\ncontract TokenDrop {\r\n^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:34:44: Error: Data location must be \"memory\" for parameter in function, but none was given.\n    function multiTransfer(uint256 _value, address[] _to) public returns(bool) {\r\n                                           ^-----------^\n/unique_chucks/21/0x400c73395bbc01d9e757f02f267925e1de0779f8.sol:42:59: Error: Data location must be \"calldata\" for parameter in external function, but none was given.\n    function tokenFallback(address _from, uint256 _value, bytes _data) external {  }\r\n                                                          ^---------^\n",
    "issues": []
  }
}