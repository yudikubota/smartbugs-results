{
  "contract": "0xfad71b6b03f0416ec1466d360b0fa84f87bd9cc1",
  "tool": "mythril",
  "start": 1563696241.6537387,
  "end": 1563696332.6871061,
  "duration": 91.033367395401,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 605,
        "code": "ns (bool success) {\n    approve(_spender,_value);\n    //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n    //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n    //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n    //require(_spender.call(bytes4(keccak256(\"receiveApproval(address,uint256,address,bytes)\")), abi.encode(msg.sender, _value, this, _extraData)));\n    require(_spender.call(abi.encodeWithSelector(bytes4(keccak256(\"receiveApproval(address,uint256,address,bytes)\")),msg.sender, _value, this, _extraData)));\n    return true;\n}\n\n  function allowance(address _owner, address _spender) public constant returns (uint remaining",
        "debug": "calldata_StandardToken_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_StandardToken_0: 0xcae9ca5100000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `approveAndCall(address,uint256,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xfad71b6b03f0416ec1466d360b0fa84f87bd9cc1.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 89,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2968,
        "code": ",bytes)\")),msg.sender, _value, this, _extraData)));\n    return true;\n}\n\n  function allowance(address _owner, address _spender) public constant ",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/39/0xfad71b6b03f0416ec1466d360b0fa84f87bd9cc1.sol",
        "function": "approveAndCall(address,uint256,bytes)",
        "lineno": 95,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 3134,
        "code": " >= a",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_StandardToken_4: 0x9c9efb7ae5acd378025256a3945f5859076e809243093d9ecae2636c9fd28979\ncalldata_StandardToken_32 + 4: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xc290137095b13347e55005a6dc184559e0489f1233480050d0fb4bba17d34179\ncalldata_StandardToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_StandardToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/39/0xfad71b6b03f0416ec1466d360b0fa84f87bd9cc1.sol",
        "function": "transfer(address,uint256)",
        "lineno": 22,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}