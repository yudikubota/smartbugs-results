{"error": null, "issues": [{"address": 2503, "code": ";\n\n        // calculate ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xf5451ea50ea116d1b47707cc35579e1d29b0291d.sol", "function": "claimRefund()", "lineno": 1005, "title": "Message call to external contract", "type": "Informational"}, {"address": 2816, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_contracts/0xf5451ea50ea116d1b47707cc35579e1d29b0291d.sol", "function": "init()", "lineno": 1187, "title": "Message call to external contract", "type": "Informational"}, {"address": 3726, "code": "\n * @dev Basic", "debug": "The exception is triggered under the following conditions:\n\nstorage_5: 0x1\ncallvalue: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_TemplateCrowdsale_4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_TemplateCrowdsale_0: 0xec8ac4d800000000000000000000000000000000000000000000000000000000\ncalldatasize_TemplateCrowdsale: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0xf5451ea50ea116d1b47707cc35579e1d29b0291d.sol", "function": "buyTokens(address)", "lineno": 73, "title": "Exception state", "type": "Informational"}], "success": true}