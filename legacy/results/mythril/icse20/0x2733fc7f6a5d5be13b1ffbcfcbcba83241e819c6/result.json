{
  "contract": "0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6",
  "tool": "mythril",
  "start": 1563303545.3139558,
  "end": 1563303562.239194,
  "duration": 16.925238132476807,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 699,
        "code": ");\n  uint256 constant ZERO = uint256(0);\n  by",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6.sol",
        "function": "get_contract(bytes32)",
        "lineno": 196,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 903,
        "code": "sender == _owner_of_contract_resolv",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6.sol",
        "function": "destroy()",
        "lineno": 163,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 903,
        "code": "sender == _owner_of_contract_resolv",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1383\nCall at address: 1110\n",
        "filename": "/unique_contracts/0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6.sol",
        "function": "destroy()",
        "lineno": 163,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1110,
        "code": "    require(_success);\n\n    selfde",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6.sol",
        "function": "destroy()",
        "lineno": 166,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 1110,
        "code": "    require(_success);\n\n    selfde",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1383\n",
        "filename": "/unique_contracts/0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6.sol",
        "function": "destroy()",
        "lineno": 166,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1383,
        "code": "ked\n  /// @return _locked if the resolver is curren",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_contracts/0x2733fc7f6a5d5be13b1ffbcfcbcba83241e819c6.sol",
        "function": "destroy()",
        "lineno": 171,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}