{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:31:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\n ... pragma solidity >=0.4.1 <=0.4.20; ... \n     ^-------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:940:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_nbytes == 0)||(_nbytes > 32)) throw;\r\n                                            ^---^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1056:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_proof[0] != \"L\")||(_proof[1] != \"P\")||(_proof[2] != 1)) throw;\r\n                                                                      ^---^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1059:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (proofVerified == false) throw;\r\n                                    ^---^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1077:39: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n\tif (prefix.length != n_random_bytes) throw;\r\n\t                                     ^---^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1135:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw; // Should be a better way?\r\n            ^---^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1242:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function GladiethersOraclize() public{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1284:48: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n       if (msg.sender != oraclize_cbAddress()) throw;\r\n                                               ^---^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:224:21: Warning: Result of exponentiation has type uint8 and thus might overflow. Silence this warning by converting the literal to the expected type.\n        return x * (2 ** y);\r\n                    ^----^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^--------------------------------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:980:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, sha3(delay_bytes8_left, args[1], sha256(args[0]), args[2]));\r\n                                                 ^--------------------------------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1012:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (address(sha3(pubkey)) == signer) return true;\r\n                    ^----------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1015:29: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            return (address(sha3(pubkey)) == signer);\r\n                            ^----------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1030:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n        tosign2[0] = 1; //role\r\n                     ^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:15: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n              ^-----------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                                    ^---------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1092:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1110:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1233:61: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xFCa7D75CF8cAd941A48ab9b5e1aF0AE571923378'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals\n    AbstractGladiethers m_Gladiethers = AbstractGladiethers(0xfca7d75cf8cad941a48ab9b5e1af0ae571923378);\r\n                                                            ^----------------------------------------^\n/unique_chucks/9/0x68e0348f1fb9d62046e93c4e61451e2a76fb6fcf.sol:1254:40: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        if (oraclize_getPrice(\"URL\") > this.balance) {\r\n                                       ^----------^\n", "issues": []}