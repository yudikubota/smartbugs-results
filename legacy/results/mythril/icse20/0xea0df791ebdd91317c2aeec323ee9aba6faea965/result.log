{"error": null, "issues": [{"address": 579, "code": ");\n    }\n    \n   ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `set(address)`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/35/0xea0df791ebdd91317c2aeec323ee9aba6faea965.sol", "function": "get()", "lineno": 17, "title": "Message call to external contract", "type": "Warning"}, {"address": 579, "code": ");\n    }\n    \n   ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function get(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/35/0xea0df791ebdd91317c2aeec323ee9aba6faea965.sol", "function": "get()", "lineno": 17, "title": "Transaction order dependence", "type": "Warning"}, {"address": 640, "code": "ead();\n    }\n    \n   ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/35/0xea0df791ebdd91317c2aeec323ee9aba6faea965.sol", "function": "get()", "lineno": 17, "title": "State change after external call", "type": "Warning"}], "success": true}