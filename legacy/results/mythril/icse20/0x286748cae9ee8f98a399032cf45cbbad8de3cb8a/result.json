{
  "contract": "0x286748cae9ee8f98a399032cf45cbbad8de3cb8a",
  "tool": "mythril",
  "start": 1563408465.0133088,
  "end": 1563408651.6936972,
  "duration": 186.68038845062256,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2801,
        "code": "g.sender, receiver, wad);\n        \n ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffe\ncalldata_WBCHToken_4: 0xffffffffffffffff\ncalldata_WBCHToken_0: 0xf232d7a800000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "burn(uint64,string)",
        "lineno": 184,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3739,
        "code": "\n        _approvals[src][msg.",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WBCHToken_4: 0x0\ncalldata_WBCHToken_32 + 36: 0x1\ncalldata_WBCHToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 94,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3875,
        "code": "ub(_approvals[src][msg.sender], wad);\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WBCHToken_32 + 36: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WBCHToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_WBCHToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "transferFrom(address,address,uint256)",
        "lineno": 95,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4536,
        "code": " >= x",
        "debug": "calldata_WBCHToken_32 + 4: 0xedda1c0400000000000000000000000000000000000000000000000000100001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xf24fccc3dbffbfa5fe3ffad9ffd3eee784bbdc76a37f35a1393f4ba9fde7b1e4\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WBCHToken_4: 0x91a1004702716f42535d784ab319051ba70050066eb074b741407020395fffff\ncalldata_WBCHToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `transfer(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 7,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 4548,
        "code": "((z = x + y) >= x);\n    ",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_WBCHToken_32 + 4: 0x5bffea3a141455925cac11301b84f1720957ffde6c109c6501f8000004000010\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x67ffe29f05ea86c6235e02d1bfd42491800000004005209a0004343c00000001\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_WBCHToken_4: 0xae2119e552f2a6e5f19255d1fa5582084157f4e5bec751e0b4040153a49ffff3\ncalldata_WBCHToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 7,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 4631,
        "code": "sub(_balances[msg.sender], wad);\n   ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x0\ncalldata_WBCHToken_32 + 4: 0x1\ncalldata_WBCHToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "transfer(address,uint256)",
        "lineno": 82,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 5029,
        "code": ");\n  ",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x7ffffffffffffbfffffffffffffffffffffffffffffffffffffffffffe80001e\nstorage_0: 0x7fffff\ncalldata_WBCHToken_4: 0x800000\ncalldata_WBCHToken_0: 0xf232d7a800000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `burn(uint64,string)`.\nThe subtraction may result in a value < 0.",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "burn(uint64,string)",
        "lineno": 12,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 5041,
        "code": " x - y) <= x);\n    }\n\n  ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x80000000000000000000000000000000000000000000000000008c2034002800\nstorage_0: 0x4d4d00042000\ncalldata_WBCHToken_4: 0xc10c984062034021\ncalldata_WBCHToken_0: 0xf232d7a800000000000000000000000000000000000000000000000000000000\ncalldatasize_WBCHToken: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x286748cae9ee8f98a399032cf45cbbad8de3cb8a.sol",
        "function": "burn(uint64,string)",
        "lineno": 12,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}