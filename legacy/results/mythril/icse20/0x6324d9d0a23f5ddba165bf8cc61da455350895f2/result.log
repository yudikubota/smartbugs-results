{"error": null, "issues": [{"address": 422, "code": "        s.compon", "debug": "block_number: 0x0\nstorage_0: 0x0\ncaller: 0x0\ncalldata_AddressLottery_0: 0x80ca7aec00000000000000000000000000000000000000000000000000000000\ncalldatasize_AddressLottery: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `forceReseed()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/28/0x6324d9d0a23f5ddba165bf8cc61da455350895f2.sol", "function": "forceReseed()", "lineno": 67, "title": "Integer Underflow", "type": "Warning"}, {"address": 440, "code": "     reseed(s);\n   ", "debug": "block_number: 0x94fc3e0d038602265a1f3b5f5c87421948231140c4d3e668ed65781bc1989409\nstorage_0: 0x0\ncaller: 0x0\ncalldata_AddressLottery_0: 0x80ca7aec00000000000000000000000000000000000000000000000000000000\ncalldatasize_AddressLottery: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `forceReseed()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x6324d9d0a23f5ddba165bf8cc61da455350895f2.sol", "function": "forceReseed()", "lineno": 68, "title": "Integer Overflow ", "type": "Warning"}, {"address": 452, "code": "yable {}\n}", "debug": "gasprice: 0xd0000000000000000000000000000000020bffffffffffffffffffff8340ad05\nstorage_0: 0x0\ncaller: 0x0\ncalldata_AddressLottery_0: 0x80ca7aec00000000000000000000000000000000000000000000000000000000\ncalldatasize_AddressLottery: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `forceReseed()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/28/0x6324d9d0a23f5ddba165bf8cc61da455350895f2.sol", "function": "forceReseed()", "lineno": 71, "title": "Integer Overflow ", "type": "Warning"}, {"address": 804, "code": ";\n        }\n    }\n    \n    function l", "debug": "", "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/28/0x6324d9d0a23f5ddba165bf8cc61da455350895f2.sol", "function": "participate()", "lineno": 39, "title": "Message call to external contract", "type": "Warning"}], "success": true}