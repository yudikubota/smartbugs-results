{"error": null, "issues": [{"address": 981, "code": "           blacklist[addresses[i]] = true;\n        }\n    }\n\n    function finishDistribution() onlyOwner canDistr public returns (bool) {\n        distributionFinished = true;\n        D", "debug": "calldata_UselessAirdroppedToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UselessAirdroppedToken_0: 0x502dadb000000000000000000000000000000000000000000000000000000000\ncalldatasize_UselessAirdroppedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `disableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "disableWhitelist(address[])", "lineno": 124, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1170, "code": "lRemaining);\n        \n        for (uint i = 0; i < addresses.length; i++) {\n            require(value <= totalRemaining);\n            distr(addresses[i], value);\n        }\n\t\n        if (totalDistributed >= totalSupply) {\n            distributionFinished = true;\n        }\n    }\n    \n    function distribution(address[] addresses, uint256 amount) onlyOwner canDistr public {\n        \n        require(addresses.length <= 255);\n        req", "debug": "calldata_UselessAirdroppedToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UselessAirdroppedToken_0: 0x729ad39e00000000000000000000000000000000000000000000000000000000\ncalldatasize_UselessAirdroppedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `airdrop(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "airdrop(address[])", "lineno": 150, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1561, "code": ") {\n            blacklist[addresses[i]] = false;\n        }\n    }\n\n    function disableWhitelist(address[] addresses) onlyOwner public {\n        for (uint i = 0; i < addresses.length; ", "debug": "calldata_UselessAirdroppedToken_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_UselessAirdroppedToken_0: 0x9c09c83500000000000000000000000000000000000000000000000000000000\ncalldatasize_UselessAirdroppedToken: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `enableWhitelist(address[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "enableWhitelist(address[])", "lineno": 117, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3467, "code": "ount <= balances[msg.sender]);\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UselessAirdroppedToken: 0x60\ncalldata_UselessAirdroppedToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "transferFrom(address,address,uint256)", "lineno": 231, "title": "Exception state", "type": "Informational"}, {"address": 6688, "code": "ount <= balances[msg.sender]);\n    ", "debug": "The exception is triggered under the following conditions:\n\ncalldatasize_UselessAirdroppedToken: 0x4\ncalldata_UselessAirdroppedToken_0: 0xa9059cbb00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "transfer(address,uint256)", "lineno": 231, "title": "Exception state", "type": "Informational"}, {"address": 8759, "code": "\n    return a ", "debug": "The exception is triggered under the following conditions:\n\ncalldata_UselessAirdroppedToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_5: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0x0\ncaller: 0x0\ncalldata_UselessAirdroppedToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_UselessAirdroppedToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "burn(uint256)", "lineno": 16, "title": "Exception state", "type": "Informational"}, {"address": 9200, "code": ">= a)", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UselessAirdroppedToken_32_+_4: 0xa8511371907d295662825497115ba082b6a492f6b7f433cff7fbddd4ebff6ff5\ncalldatasize_UselessAirdroppedToken: 0x64\ncalldata_UselessAirdroppedToken_32 + 36: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UselessAirdroppedToken_4: 0x9351db6e0b21734731ae9cfc13143e8338c6dcf4a783a60c06e0d1d708004801\ncalldata_UselessAirdroppedToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UselessAirdroppedToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `transferFrom(address,address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "transferFrom(address,address,uint256)", "lineno": 22, "title": "Integer Overflow ", "type": "Warning"}, {"address": 9213, "code": "eturn c;\n  }\n}", "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UselessAirdroppedToken_32_+_4: 0xeed94dba0409e2901e98bca0e8207863a06e1b0e522bc7310401ec8848abbd31\ncalldatasize_UselessAirdroppedToken: 0x20000000000000000000000000000000070\ncalldata_UselessAirdroppedToken_32 + 36: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UselessAirdroppedToken_4: 0x45d32d9b26ac7cd15b9c95c0768e7c43bf6f9b6f4a039d4dcc39eeb901390535\ncalldata_UselessAirdroppedToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_UselessAirdroppedToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/2/0x5fa1ea99eb3acc1f9e84cf28fde6431b8fdc9dc0.sol", "function": "transferFrom(address,address,uint256)", "lineno": 23, "title": "Exception state", "type": "Informational"}], "success": true}