{"success": false, "error": "Solc experienced a fatal error (code 1).\n\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.4.25+commit.59dbf8f1.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.19;\r\n^---------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:764:45: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_nbytes == 0)||(_nbytes > 32)) throw;\r\n                                            ^---^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:854:71: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if ((_proof[0] != \"L\")||(_proof[1] != \"P\")||(_proof[2] != 1)) throw;\r\n                                                                      ^---^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:857:37: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n        if (proofVerified == false) throw;\r\n                                    ^---^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:931:13: Warning: \"throw\" is deprecated in favour of \"revert()\", \"require()\" and \"assert()\".\n            throw; // Should be a better way?\r\n            ^---^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1039:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function Ownable() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1107:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Auction(address _token, address _beneficiary, uint _startTime, uint _maxBidInCentsPerAddress)\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:6:5: Warning: Functions in interfaces should be declared external.\n    function totalSupply() public view returns (uint);\r\n    ^------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:7:5: Warning: Functions in interfaces should be declared external.\n    function name() public view returns (string);\r\n    ^-------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:8:5: Warning: Functions in interfaces should be declared external.\n    function symbol() public view returns (string);\r\n    ^---------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:9:5: Warning: Functions in interfaces should be declared external.\n    function decimals() public view returns (uint8);\r\n    ^----------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:10:5: Warning: Functions in interfaces should be declared external.\n    function balanceOf(address _owner) public view returns (uint);\r\n    ^------------------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:11:5: Warning: Functions in interfaces should be declared external.\n    function transfer(address _to, uint _value) public returns (bool);\r\n    ^----------------------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:12:5: Warning: Functions in interfaces should be declared external.\n    function transfer(address _to, uint _value, bytes _data) public returns (bool);\r\n    ^-----------------------------------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:26:5: Warning: Functions in interfaces should be declared external.\n    function tokenFallback(address _from, uint _value, bytes _data) public;\r\n    ^---------------------------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:778:50: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));\r\n                                                 ^-----------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:778:50: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        oraclize_randomDS_setCommitment(queryId, sha3(bytes8(_delay), args[1], sha256(args[0]), args[2]));\r\n                                                 ^-----------------------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:810:21: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (address(sha3(pubkey)) == signer) return true;\r\n                    ^----------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:813:29: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n            return (address(sha3(pubkey)) == signer);\r\n                            ^----------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:828:22: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.\n        tosign2[0] = 1; //role\r\n                     ^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:888:15: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n              ^-----------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:888:37: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                                    ^---------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:888:32: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:888:32: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:888:32: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n        if (!(sha3(keyhash) == sha3(sha256(context_name, queryId)))) return false;\r\n                               ^---------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:906:48: Warning: \"sha3\" has been deprecated in favour of \"keccak256\"\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:906:48: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n        if (oraclize_randomDS_args[queryId] == sha3(commitmentSlice1, sessionPubkeyHash)){ //unonce, nbytes and sessionKeyHash match\r\n                                               ^---------------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1057:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    OwnershipTransferred(owner, newOwner);\r\n    ^-----------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1210:13: Warning: Invoking events without \"emit\" prefix is deprecated.\n            EthToCentsUpdated(ethToCents);\r\n            ^---------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1253:17: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        require(this.balance >= _value);\r\n                ^----------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1262:30: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n        withdraw(_recipient, this.balance);\r\n                             ^----------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1297:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Bid(_bidder, centsToAccept);\r\n        ^-------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1318:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        TokensWithdraw(_recipient, tokens);\r\n        ^--------------------------------^\n/unique_chucks/3/0x81f040ec6a1574197ae651025383170230f31c07.sol:1337:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        NewOraclizeQuery(\"Update of ETH to USD cents price requested\");\r\n        ^------------------------------------------------------------^\n", "issues": []}