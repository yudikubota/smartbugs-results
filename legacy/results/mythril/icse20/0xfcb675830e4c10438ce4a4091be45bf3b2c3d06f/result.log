{"error": null, "issues": [{"address": 1870, "code": "layerNumber,1)))) / (safeSub(_playerNumber,1))+_betSize))*houseEdge/houseEdg", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ncalldatasize_MyDice: 0x3\nstorage_10: 0x1\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xfcb675830e4c10438ce4a4091be45bf3b2c3d06f.sol", "function": "fallback", "lineno": 31, "title": "Exception state", "type": "Informational"}, {"address": 3586, "code": " setMaxProfit\n", "debug": "The exception is triggered under the following conditions:\n\nkeccac_bvurem_i(storage_8,_timestamp)_+\nblockhash_block_block_number_-_1_+\nblock_difficulty*block_number*timestamp_+\n1: 0x7fffffffffffbbfffffffff142f1fc800a0000008000008000000000b9\nstorage_9: 0x10000000000000000000000000000000000000000000\nstorage_11: 0x200000000000000000000000000000\nstorage_0: 0x0\nstorage_12: 0x1fffffffffffffffffffffffffffff\nstorage_10: 0xebd0e037ff5ffffff7fffff7fffffffff47\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_MyDice_0: 0x143bb3e600000000000000000000000000000000000000000000000000000000\ncalldatasize_MyDice: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xfcb675830e4c10438ce4a4091be45bf3b2c3d06f.sol", "function": "StartRollDice(uint32)", "lineno": 197, "title": "Exception state", "type": "Informational"}, {"address": 6548, "code": "Number = uint(sh", "debug": "storage_0: 0x0\nblock_number: 0x0\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_MyDice_0: 0x143bb3e600000000000000000000000000000000000000000000000000000000\ncalldatasize_MyDice: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `StartRollDice(uint32)`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/15/0xfcb675830e4c10438ce4a4091be45bf3b2c3d06f.sol", "function": "StartRollDice(uint32)", "lineno": 132, "title": "Integer Underflow", "type": "Warning"}, {"address": 6565, "code": "mp * block.difficulty * block.", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_MyDice_0: 0x143bb3e600000000000000000000000000000000000000000000000000000000\ncalldatasize_MyDice: 0x4\ntimestamp: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xfcb675830e4c10438ce4a4091be45bf3b2c3d06f.sol", "function": "StartRollDice(uint32)", "lineno": 130, "title": "Exception state", "type": "Informational"}, {"address": 6691, "code": "  if(numElements == 0)\n ", "debug": "The exception is triggered under the following conditions:\n\nstorage_0: 0x0\ntimestamp: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_11: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncaller: 0x0\ncalldata_MyDice_0: 0x143bb3e600000000000000000000000000000000000000000000000000000000\ncalldatasize_MyDice: 0x4\nstorage_9: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/15/0xfcb675830e4c10438ce4a4091be45bf3b2c3d06f.sol", "function": "StartRollDice(uint32)", "lineno": 142, "title": "Exception state", "type": "Informational"}], "success": true}