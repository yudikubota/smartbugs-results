{"error": null, "issues": [{"address": 839, "code": "d) {\n    // Only activate the kill switch if the sender is the developer or the password is correct.\n    if (msg.sender != developer && sha3(password) != password_hash) throw;\n    // Store the claimed bounty in a temporary variable.\n    uint256 claimed_bounty = bounty;\n    // Update bounty prior to sending to prevent recursive call.\n    bounty = 0;\n    // Irreversibly activate the kill switch.\n    kill_switch = true;\n    // Send the caller their bounty for activating the kill switch.\n    msg.sender.transfer(claimed_bounty);\n  }\n  \n  // Withdraws all ETH deposited or tokens purchase", "debug": "calldata_ERC20_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ERC20_0: 0xd4701c3500000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `activate_kill_switch(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "activate_kill_switch(string)", "lineno": 45, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1150, "code": "nt sale contract from refunding E", "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x81398f83005013a67c07ffb78e77ef8cb6fbbdd99fb44192074f8e7fd47bdad9\ncallvalue: 0xdbe46ba7b99fd20d0b65e42056e7804020c33d959f3785ddf45fef3f596b9c91\nstorage_2: 0x0\nstorage_5: 0x0\nstorage_9: 0x0\ncaller: 0xffffffffffffffffffffffffffffffffffffffff\ncalldata_ERC20_0: 0x4200000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "fallback", "lineno": 161, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1302, "code": "ws if the crowdsale hasn't st", "debug": "balance_at_1461501637330902918203684832716283019655932542975 & 0: 0x0\ntimestamp: 0x0\nstorage_1: 0x1\nstorage_5: 0x0\nstorage_7: 0x0\nstorage_2: 0x0\ncalldata_ERC20_0: 0x2f5801500000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `claim_bounty()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "claim_bounty()", "lineno": 134, "title": "Integer Underflow", "type": "Warning"}, {"address": 1384, "code": "ansfer(claimed_bounty);\n  }\n  \n  // A", "debug": "", "description": "In the function `claim_bounty()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "claim_bounty()", "lineno": 138, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1384, "code": "ansfer(claimed_bounty);\n  }\n  \n  // A", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "claim_bounty()", "lineno": 138, "title": "Message call to external contract", "type": "Informational"}, {"address": 1384, "code": "ansfer(claimed_bounty);\n  }\n  \n  // A", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1447\n", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "claim_bounty()", "lineno": 138, "title": "Multiple Calls", "type": "Information"}, {"address": 1447, "code": "efault_helper() payable {\n    // Tr", "debug": "", "description": "In the function `claim_bounty()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "claim_bounty()", "lineno": 142, "title": "Dependence on predictable environment variable", "type": "Warning"}, {"address": 1651, "code": "ction claim_bounty(", "debug": "callvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_2: 0x0\nstorage_5: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_ERC20_0: 0x62f5ed6100000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer overflow exists in the function `add_to_bounty()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "add_to_bounty()", "lineno": 116, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2387, "code": "kens if the contract has alrea", "debug": "SOLVER OUTPUT:\ncallvalue: 0x0\nstorage_2: 0x0\ncalldata_ERC20_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "In the function `default_helper()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 2. This storage slot can be written to by calling the function `claim_bounty()`.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "default_helper()", "lineno": 70, "title": "Ether send", "type": "Warning"}, {"address": 2607, "code": "here are no tokens to withdraw", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "fallback", "lineno": 74, "title": "Message call to external contract", "type": "Informational"}, {"address": 2607, "code": "here are no tokens to withdraw", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3434\n", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "default_helper()", "lineno": 74, "title": "Multiple Calls", "type": "Information"}, {"address": 2755, "code": "ate the value of tokens currently held by the contract.\n      ", "debug": "The exception is triggered under the following conditions:\n\ncallvalue: 0x0\nreturndatasize: 0x20\nretval_2607: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\ncalldata_ERC20_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\nstorage_4: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "default_helper()", "lineno": 78, "title": "Exception state", "type": "Informational"}, {"address": 2830, "code": " to sending to prevent recursive cal", "debug": "storage_4: 0x4000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x4000000000000000000000000000000000000000000000000000000000000001\nreturndatasize: 0x20\nretval_2607: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_2: 0xff00\ncalldata_ERC20_0: 0x5259347d00000000000000000000000000000000000000000000000000000000\ncalldatasize_ERC20: 0x4\n", "description": "A possible integer underflow exists in the function `default_helper()`.\nThe subtraction may result in a value < 0.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "default_helper()", "lineno": 80, "title": "Integer Underflow", "type": "Warning"}, {"address": 2836, "code": " to sending to prevent recursive cal", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "fallback", "lineno": 80, "title": "State change after external call", "type": "Warning"}, {"address": 2904, "code": "ly.\n      uint256 ", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "fallback", "lineno": 82, "title": "State change after external call", "type": "Warning"}, {"address": 3434, "code": "hdraws on users' behalves (less a 1% fee on to", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/8/0x0f82c7eab8f7efb577a2de9d2b7e1da1d0b6870e.sol", "function": "default_helper()", "lineno": 95, "title": "Message call to external contract", "type": "Informational"}], "success": true}