{"error": null, "issues": [{"address": 2271, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Message call to external contract", "type": "Informational"}, {"address": 2271, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3108\nCall at address: 2812\nCall at address: 2521\n", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Multiple Calls", "type": "Information"}, {"address": 2271, "debug": "", "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2521, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Message call to external contract", "type": "Informational"}, {"address": 2521, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3108\nCall at address: 2812\n", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Multiple Calls", "type": "Information"}, {"address": 2521, "debug": "", "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Transaction order dependence", "type": "Warning"}, {"address": 2812, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Message call to external contract", "type": "Informational"}, {"address": 2812, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3108\n", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Multiple Calls", "type": "Information"}, {"address": 2812, "debug": "", "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3108, "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Message call to external contract", "type": "Informational"}, {"address": 3108, "debug": "", "description": "A possible transaction order independence vulnerability exists in function kill(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "kill()", "lineno": 470, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3380, "code": "piration expiration timestamp\n    /// @param _v ECDCA si", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)", "lineno": 420, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 3730, "code": "_expiration,\n              ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)", "lineno": 425, "title": "Message call to external contract", "type": "Informational"}, {"address": 3730, "code": "_expiration,\n              ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyNDC(uint256,uint256,uint8,bytes32,bytes32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)", "lineno": 425, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4152, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "withdraw(address)", "lineno": 470, "title": "Message call to external contract", "type": "Warning"}, {"address": 4152, "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4409\n", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "withdraw(address)", "lineno": 470, "title": "Multiple Calls", "type": "Information"}, {"address": 4409, "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "withdraw(address)", "lineno": 470, "title": "Message call to external contract", "type": "Warning"}, {"address": 4848, "code": "(_PTaddress);\n        uint256 ptAmount;\n        uint8 decimals = ptoken.decimals();", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "swap(uint256,address,uint256,uint256,uint8,bytes32,bytes32)", "lineno": 359, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 5092, "code": "nt) && ptoken.tra", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "swapFor(address,uint256,address,uint256,uint256,uint8,bytes32,bytes32)", "lineno": 368, "title": "Message call to external contract", "type": "Warning"}, {"address": 6345, "code": "  of purchasable tokens equal", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\ncalldata_TokenSwap_32 + 36: 0x0\ncalldata_TokenSwap_0: 0x8f4ffcb100000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSwap: 0x4\nretval_6335: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "receiveApproval(address,uint256,address,bytes)", "lineno": 332, "title": "Exception state", "type": "Informational"}, {"address": 6502, "code": "       revert(); \n    }\n\n    /// @dev withdraw all ether", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "buyTPT(uint256,uint256,uint8,bytes32,bytes32)", "lineno": 446, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 7775, "code": " a);\n", "debug": "The exception is triggered under the following conditions:\n\ncalldata_TokenSwap_32 + 4: 0x0\nstorage_3: 0x0\ntimestamp: 0x0\ncalldata_TokenSwap_0: 0x4dd60ff900000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenSwap: 0x4\ncalldata_TokenSwap_4: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/6/0xce038523e278b6c1344d9e4f735f6064ad7a6032.sol", "function": "buyNDC(uint256,uint256,uint8,bytes32,bytes32)", "lineno": 201, "title": "Exception state", "type": "Informational"}], "success": true}