{"error": null, "issues": [{"address": 5059, "code": ") {\n        if (saleClosed() || msg.sender == saleTokensAd", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_contracts/0x931684139f756c24ec0731e9f74fe50e5548ddef.sol", "function": "releasableBalanceOf(address)", "lineno": 666, "title": "Message call to external contract", "type": "Warning"}, {"address": 12061, "code": "s two numbers,", "debug": "The exception is triggered under the following conditions:\n\ncalldata_UrbitToken_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_1: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_UrbitToken_0: 0x42966c6800000000000000000000000000000000000000000000000000000000\ncalldatasize_UrbitToken: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x931684139f756c24ec0731e9f74fe50e5548ddef.sol", "function": "burn(uint256)", "lineno": 63, "title": "Exception state", "type": "Informational"}, {"address": 13133, "code": "@dev Basic ver", "debug": "The exception is triggered under the following conditions:\n\ncalldata_UrbitToken_32 + 36: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UrbitToken_32_+_4: 0xd32ba62e013a1e544c40f8298f8c838ef0ca495e903244487f8ba1f8c2a013e7\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_UrbitToken_4: 0x53632f08ddbb360427befb69cb0d577a76825c1eb02b4cefbf971939ae256117\ncalldata_UrbitToken_32 + 4: 0xffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0x0\ncaller: 0x0\ncalldata_UrbitToken_0: 0x23b872dd00000000000000000000000000000000000000000000000000000000\ncalldatasize_UrbitToken: 0x4\nstorage_11: 0x0\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x931684139f756c24ec0731e9f74fe50e5548ddef.sol", "function": "transferFrom(address,address,uint256)", "lineno": 74, "title": "Exception state", "type": "Informational"}], "success": true}