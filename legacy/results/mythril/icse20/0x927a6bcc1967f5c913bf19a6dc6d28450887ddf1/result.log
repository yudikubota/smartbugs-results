{"error": null, "issues": [{"address": 7114, "code": "      bool isEntity;\n    }\n    struct AddressEntity {\n      address value;\n      bool isEntity;\n    }\n    struct BytesEntity {\n      bytes value;\n      bool isEntity;\n    }\n    struct Bytes32Entity {\n      bytes32 value;\n      bool isEntity;\n    }\n    struct BoolEntity {\n      bool value;\n      bool isEntity;\n    }\n    struct IntEntity {\n      int value;\n      bool isEntity;\n    }\n    mapping(bytes32 => UintEntity) private uIntStorage;\n    mapping(bytes32 => StringEntity) private stringStorage;\n    mapping(bytes32 => AddressEntity) private addressStorage;\n    mapping(bytes32 => BytesEntity) private bytesStorage;\n    mapping(bytes32 => Bytes32Entity) private bytes32Storage;\n    mapping(bytes32 => BoolEntity) private boolStorage;\n    mapping(bytes32 => IntEntity) private intStorage;\n\n    /********************/\n    /** PUBLIC - WRITE **/\n    /********************/\n    function createUint(bytes32 key, uint value) onlyPrimaryOrOwner external {\n        require(!uIntStorage[key].isEntity);\n\n        uIntStorage[key].value = value;\n        uIntStorage[key].isEntity = true;\n    }\n\n    function createString(bytes32 key, string calldata value) onlyPrimaryOrOwner external {\n        require(!stringStorage[key].isEntity);\n\n        stringStorage[key].value = value;\n        stringStorage[key].isEntity = true;\n    }\n\n    function createAddress(bytes32 key, address value) onlyPrimaryOrOwner external {\n        require(!addressStorage[key].isEntity);\n\n        addressStorage[key].value = value;\n        addressStorage[key].isEntity = true;\n    }\n\n    function createBytes(bytes32 key, bytes calldata value) onlyPrimaryOrOwner external {\n        require(!bytesStorage[key].isEntity);\n\n        bytesStorage[key].value = value;\n        bytesStorage[key].isEntity = true;\n    }\n\n    function createBytes32(bytes32 key, bytes32 value) onlyPrimaryOrOwner external {\n        require(!bytes32Storage[key].isEntity);\n\n        bytes32Storage[key].value = value;\n        bytes32Storage[key].isEntity = true;\n    }\n\n    function createBool(bytes32 key, bool value) onlyPrimaryOrOwner external {\n        require(!boolStorage[key].isEntity);\n\n        boolStorage[key].value = value;\n        boolStorage[key].isEntity = true;\n    }\n\n    function createInt(bytes32 key, int value) onlyPrimaryOrOwner external {\n        require(!intStorage[key].isEntity);\n\n        intStorage[key].value = value;\n        intStorage[key].isEntity = true;\n    }\n\n    /*******************/\n    /** PUBLIC - READ **/\n    /*******************/\n    function getUint(bytes32 key) external view returns(uint) {\n        return uIntStorage[key].value;\n    }\n\n    function uintExists(bytes32 key) external view returns(bool) {\n      return uIntStorage[key].isEntity;\n    }\n\n    function getString(bytes32 key) external view returns(string memory) {\n        return stringStorage[key].value;\n    }\n\n    function stringExists(bytes32 key) external view returns(bool) {\n      return stringStorage[key].isEntity;\n    }\n\n    function getAddress(bytes32 key) external view returns(address) {\n        return addressStorage[key].value;\n    }\n\n    function addressExists(bytes32 key) external view returns(bool) {\n      return addressStorage[key].isEntity;\n    }\n\n    function getBytes(bytes32 key) external view returns(bytes memory) {\n        return bytesStorage[key].value;\n    }\n\n    function bytesExists(bytes32 key) external view returns(bool) {\n      return bytesStorage[key].isEntity;\n    }\n\n    function getBytes32(bytes32 key) external view returns(bytes32) {\n        return bytes32Storage[key].value;\n    }\n\n    function bytes32Exists(bytes32 key) external view returns(bool) {\n      return bytes32Storage[key].isEntity;\n    }\n\n    function getBool(bytes32 key) external view returns(bool) {\n        return boolStorage[key].value;\n    }\n\n    function boolExists(bytes32 key) external view returns(bool) {\n      return boolStorage[key].isEntity;\n    }\n\n    function getInt(bytes32 key) external view returns(int) {\n        return intStorage[key].value;\n    }\n\n    function intExists(bytes32 key) external view returns(bool) {\n      return intStorage[key].isEntity;\n    }\n}", "debug": "calldatasize_OwnableSecondary: 0xdea78183f6bc0000000000000000000000000000000000000000000000000000\ncalldata_OwnableSecondary_4 + calldata_OwnableSecondary_32 + 4: 0xfc4ee19d\nstorage_0 + keccac_calldata_OwnableSecondary_4: 0xd938fee6b835ed6bd9ece2a41e8018878000c3ffffffffffffffffffffffffc5\ncalldata_OwnableSecondary_32 + 4: 0xd40bfddd\nkeccac_0_+_keccac_calldata_OwnableSecondary_4: 0xff76d1fda2fdd631307422e000043292c596008fea20482bf8300000a4948b88\nstorage_1 + keccac_calldata_OwnableSecondary_4: 0x0\nstorage_0: 0x0\nstorage_1: 0xffffffffffffffffffffffffffffffffffffffff00\ncaller: 0x0\ncalldata_OwnableSecondary_0: 0x75a3256300000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createBytes(bytes32,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/43/0x927a6bcc1967f5c913bf19a6dc6d28450887ddf1.sol", "function": "createBytes(bytes32,bytes)", "lineno": 194, "title": "Integer Overflow ", "type": "Warning"}, {"address": 7242, "code": "      bool isEntity;\n    }\n    struct AddressEntity {\n      address value;\n      bool isEntity;\n    }\n    struct BytesEntity {\n      bytes value;\n      bool isEntity;\n    }\n    struct Bytes32Entity {\n      bytes32 value;\n      bool isEntity;\n    }\n    struct BoolEntity {\n      bool value;\n      bool isEntity;\n    }\n    struct IntEntity {\n      int value;\n      bool isEntity;\n    }\n    mapping(bytes32 => UintEntity) private uIntStorage;\n    mapping(bytes32 => StringEntity) private stringStorage;\n    mapping(bytes32 => AddressEntity) private addressStorage;\n    mapping(bytes32 => BytesEntity) private bytesStorage;\n    mapping(bytes32 => Bytes32Entity) private bytes32Storage;\n    mapping(bytes32 => BoolEntity) private boolStorage;\n    mapping(bytes32 => IntEntity) private intStorage;\n\n    /********************/\n    /** PUBLIC - WRITE **/\n    /********************/\n    function createUint(bytes32 key, uint value) onlyPrimaryOrOwner external {\n        require(!uIntStorage[key].isEntity);\n\n        uIntStorage[key].value = value;\n        uIntStorage[key].isEntity = true;\n    }\n\n    function createString(bytes32 key, string calldata value) onlyPrimaryOrOwner external {\n        require(!stringStorage[key].isEntity);\n\n        stringStorage[key].value = value;\n        stringStorage[key].isEntity = true;\n    }\n\n    function createAddress(bytes32 key, address value) onlyPrimaryOrOwner external {\n        require(!addressStorage[key].isEntity);\n\n        addressStorage[key].value = value;\n        addressStorage[key].isEntity = true;\n    }\n\n    function createBytes(bytes32 key, bytes calldata value) onlyPrimaryOrOwner external {\n        require(!bytesStorage[key].isEntity);\n\n        bytesStorage[key].value = value;\n        bytesStorage[key].isEntity = true;\n    }\n\n    function createBytes32(bytes32 key, bytes32 value) onlyPrimaryOrOwner external {\n        require(!bytes32Storage[key].isEntity);\n\n        bytes32Storage[key].value = value;\n        bytes32Storage[key].isEntity = true;\n    }\n\n    function createBool(bytes32 key, bool value) onlyPrimaryOrOwner external {\n        require(!boolStorage[key].isEntity);\n\n        boolStorage[key].value = value;\n        boolStorage[key].isEntity = true;\n    }\n\n    function createInt(bytes32 key, int value) onlyPrimaryOrOwner external {\n        require(!intStorage[key].isEntity);\n\n        intStorage[key].value = value;\n        intStorage[key].isEntity = true;\n    }\n\n    /*******************/\n    /** PUBLIC - READ **/\n    /*******************/\n    function getUint(bytes32 key) external view returns(uint) {\n        return uIntStorage[key].value;\n    }\n\n    function uintExists(bytes32 key) external view returns(bool) {\n      return uIntStorage[key].isEntity;\n    }\n\n    function getString(bytes32 key) external view returns(string memory) {\n        return stringStorage[key].value;\n    }\n\n    function stringExists(bytes32 key) external view returns(bool) {\n      return stringStorage[key].isEntity;\n    }\n\n    function getAddress(bytes32 key) external view returns(address) {\n        return addressStorage[key].value;\n    }\n\n    function addressExists(bytes32 key) external view returns(bool) {\n      return addressStorage[key].isEntity;\n    }\n\n    function getBytes(bytes32 key) external view returns(bytes memory) {\n        return bytesStorage[key].value;\n    }\n\n    function bytesExists(bytes32 key) external view returns(bool) {\n      return bytesStorage[key].isEntity;\n    }\n\n    function getBytes32(bytes32 key) external view returns(bytes32) {\n        return bytes32Storage[key].value;\n    }\n\n    function bytes32Exists(bytes32 key) external view returns(bool) {\n      return bytes32Storage[key].isEntity;\n    }\n\n    function getBool(bytes32 key) external view returns(bool) {\n        return boolStorage[key].value;\n    }\n\n    function boolExists(bytes32 key) external view returns(bool) {\n      return boolStorage[key].isEntity;\n    }\n\n    function getInt(bytes32 key) external view returns(int) {\n        return intStorage[key].value;\n    }\n\n    function intExists(bytes32 key) external view returns(bool) {\n      return intStorage[key].isEntity;\n    }\n}", "debug": "calldatasize_OwnableSecondary: 0xdea78183f6bc0000000000000000000000000000000000000000000000000000\ncalldata_OwnableSecondary_4 + calldata_OwnableSecondary_32 + 4: 0xfc4ee19d\nstorage_0 + keccac_calldata_OwnableSecondary_4: 0xd938fee6b835ed6bd9ece2a41e8018878000c3ffffffffffffffffffffffffc5\ncalldata_OwnableSecondary_32 + 4: 0xd40bfddd\nkeccac_0_+_keccac_calldata_OwnableSecondary_4: 0xff76d1fda2fdd631307422e000043292c596008fea20482bf8300000a4948b88\nstorage_1 + keccac_calldata_OwnableSecondary_4: 0x0\nstorage_1: 0x0\ncaller: 0x0\ncalldata_OwnableSecondary_0: 0xe916f45700000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `createString(bytes32,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/43/0x927a6bcc1967f5c913bf19a6dc6d28450887ddf1.sol", "function": "createString(bytes32,string)", "lineno": 194, "title": "Integer Overflow ", "type": "Warning"}], "success": true}