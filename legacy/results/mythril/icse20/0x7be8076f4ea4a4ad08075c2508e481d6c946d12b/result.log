{"error": null, "issues": [{"address": 730, "code": "20), mload(combined), mload(0x40), 0)\n        }\n        return result;\n    }\n\n    /**\n     * Calculate size of an order struct when tightly packed\n     *\n     * @param order Order to calculate size of\n     * @return Size in bytes\n     */\n    function sizeOf(Order memory order)\n        internal\n        pure\n        returns (uint)\n    {\n        return ((0x14 * 7) + (0x20 * 9) + 4 + order.calldata.length + order.replacementPattern.length + order.staticExtradata.length);\n    }\n\n    /**\n     * @dev Hash an order, returning the canonical order hash, without the message prefix\n     * @param order Order to ", "debug": "calldata_WyvernExchange_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 528, "title": "Integer Overflow ", "type": "Warning"}, {"address": 742, "code": "20), mload(combined), mload(0x40), 0)\n        }\n        return result;\n    }\n\n    /**\n     * Calculate size of an order struct when tightly packed\n     *\n     * @param order Order to calculate size of\n     * @return Size in bytes\n     */\n    function sizeOf(Order memory order)\n        internal\n        pure\n        returns (uint)\n    {\n        return ((0x14 * 7) + (0x20 * 9) + 4 + order.calldata.length + order.replacementPattern.length + order.staticExtradata.length);\n    }\n\n    /**\n     * @dev Hash an order, returning the canonical order hash, without the message prefix\n     * @param order Order to ", "debug": "calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 528, "title": "Integer Overflow ", "type": "Warning"}, {"address": 751, "code": "20), mload(combined), mload(0x40), 0)\n        }\n        return result;\n    }\n\n    /**\n     * Calculate size of an order struct when tightly packed\n     *\n     * @param order Order to calculate size of\n     * @return Size in bytes\n     */\n    function sizeOf(Order memory order)\n        internal\n        pure\n        returns (uint)\n    {\n        return ((0x14 * 7) + (0x20 * 9) + 4 + order.calldata.length + order.replacementPattern.length + order.staticExtradata.length);\n    }\n\n    /**\n     * @dev Hash an order, returning the canonical order hash, without the message prefix\n     * @param order Order to ", "debug": "calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 528, "title": "Integer Overflow ", "type": "Warning"}, {"address": 757, "code": "20), mload(combined), mload(0x40), 0)\n        }\n        return result;\n    }\n\n    /**\n     * Calculate size of an order struct when tightly packed\n     *\n     * @param order Order to calculate size of\n     * @return Size in bytes\n     */\n    function sizeOf(Order memory order)\n        internal\n        pure\n        returns (uint)\n    {\n        return ((0x14 * 7) + (0x20 * 9) + 4 + order.calldata.length + order.replacementPattern.length + order.staticExtradata.length);\n    }\n\n    /**\n     * @dev Hash an order, returning the canonical order hash, without the message prefix\n     * @param order Order to ", "debug": "calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 528, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1019, "code": "  return arr;\n    }\n\n    /**\n     * @dev Call calculateFinalPrice - library function exposed for testing.\n     */\n    function calculateFinalPrice(SaleKindInterface.Side side, SaleKindInterface.SaleKind saleKind, uint baseP", "debug": "calldata_WyvernExchange_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x239e83df00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `guardedArrayReplace(bytes,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "guardedArrayReplace(bytes,bytes,bytes)", "lineno": 1108, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1760, "code": "SaleKindInterface.calculateFinalPrice(side, saleKind, basePrice, extra, listingTime, expirationTime);\n    }\n\n    /**\n     * @dev Call hashOrder - Solidity ABI encoding limitation workaround, hopefully temporary.\n     */\n    function hashOrder_(\n        address[7] addrs,\n        uint[9] uints,\n        FeeMethod feeMethod,\n   ", "debug": "calldata_WyvernExchange_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x3e1e292a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `testCopy(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "testCopy(bytes)", "lineno": 1119, "title": "Integer Overflow ", "type": "Warning"}, {"address": 2609, "code": "eMethodsSidesKindsHowToCalls[2]), addrs[4], AuthenticatedProxy.HowToCall(feeMethodsSidesKindsHowToCalls[3]), calldataBuy, replacementPatternBuy, addrs[5], staticExtradataBuy, ERC20(addrs[6]), uints[4], uints[5], uints[6], uints[7], uints[8]);\n        Order memory sell = Order(addrs[7], addrs[8], addrs[9], uints[9], uints[10], uints[11], uints[12], addrs[10], FeeMethod(feeMethodsSidesKindsHowToCalls[4]), SaleKindInterface.Side(feeMethodsSidesKindsHowToCalls[5]), SaleKindInterface.SaleKind(feeMethodsSidesKindsHowToCalls[6]), addrs[11], AuthenticatedProxy.HowToCal", "debug": "calldata_WyvernExchange_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_WyvernExchange_0: 0x562b2ebc00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `orderCalldataCanMatch(bytes,bytes,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "orderCalldataCanMatch(bytes,bytes,bytes,bytes)", "lineno": 1348, "title": "Integer Overflow ", "type": "Warning"}, {"address": 8283, "code": "ize of\n     * @return Size in byte", "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 536, "title": "Integer Overflow ", "type": "Warning"}, {"address": 19896, "code": "pIndex := add(tem", "debug": "calldata_WyvernExchange_4 + calldata_WyvernExchange_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\ncalldata_WyvernExchange_0: 0x3e1e292a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `testCopy(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "testCopy(bytes)", "lineno": 240, "title": "Integer Overflow ", "type": "Warning"}, {"address": 19898, "code": "         tempIndex := add(temp", "debug": "calldata_WyvernExchange_4 + calldata_WyvernExchange_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60\ncalldata_WyvernExchange_0: 0x3e1e292a00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `testCopy(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "testCopy(bytes)", "lineno": 240, "title": "Integer Overflow ", "type": "Warning"}, {"address": 19902, "code": "                 ", "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0x4300000000000000000002000000000000000000000000000000000000000380\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 242, "title": "Integer Overflow ", "type": "Warning"}, {"address": 19923, "code": "     return index;\n", "debug": "mem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0xe\ncalldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20\ncalldata_WyvernExchange_0: 0x10796a4700000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `staticCall(address,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "staticCall(address,bytes,bytes)", "lineno": 247, "title": "Integer Overflow ", "type": "Warning"}, {"address": 20781, "code": "             } ", "debug": "calldata_WyvernExchange_4 + calldata_WyvernExchange_4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60\ncalldata_WyvernExchange_0: 0x562b2ebc00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\nmem_160 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60\nmem_192 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_4)) +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 4)) +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_32 + 36)): 0x0\nmem_128 +\n32 +\n32*\nConcat(0,\n       Extract(255,\n               5,\n               31 +\n               calldata_WyvernExchange_4 + calldata_WyvernExchange_4)): 0x0\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `orderCalldataCanMatch(bytes,bytes,bytes,bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "orderCalldataCanMatch(bytes,bytes,bytes,bytes)", "lineno": 199, "title": "Integer Overflow ", "type": "Warning"}, {"address": 21320, "code": "oxy contracts. A delay period r", "debug": "The exception is triggered under the following conditions:\n\ncalldata_WyvernExchange_32 + 4: 0xfe\ncalldata_WyvernExchange_0: 0x63d36c0b00000000000000000000000000000000000000000000000000000000\ncalldatasize_WyvernExchange: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_contracts/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b.sol", "function": "_function_0x63d36c0b", "lineno": 1499, "title": "Exception state", "type": "Informational"}], "success": true}