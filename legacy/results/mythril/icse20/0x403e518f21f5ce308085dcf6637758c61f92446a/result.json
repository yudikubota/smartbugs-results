{
  "contract": "0x403e518f21f5ce308085dcf6637758c61f92446a",
  "tool": "mythril",
  "start": 1563559803.0190253,
  "end": 1563559826.1736875,
  "duration": 23.154662132263184,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2199,
        "code": "           advisorFee = _advisorF",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "withdrawTokens(address,uint256)",
        "lineno": 481,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2811,
        "code": " uint256 _remainingTokens) on",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "buyFromRC(address,uint256,uint256)",
        "lineno": 409,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 2811,
        "code": " uint256 _remainingTokens) on",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4543\n",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "buyFromRC(address,uint256,uint256)",
        "lineno": 409,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 3955,
        "code": "int256 va",
        "debug": "",
        "description": "Function addMeByRC() retrieves the transaction origin (tx.origin) using the ORIGIN opcode. Use msg.sender instead.\nSee also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "addMeByRC()",
        "lineno": 464,
        "title": "Use of tx.origin",
        "type": "Warning"
      },
      {
        "address": 4543,
        "code": "      require( remainingToke",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "tokenValueInEther(uint256)",
        "lineno": 398,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 4543,
        "code": "      require( remainingToke",
        "debug": "",
        "description": "A possible transaction order independence vulnerability exists in function tokenValueInEther(uint256). The value or direction of the call statement is determined from a tainted storage location",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "tokenValueInEther(uint256)",
        "lineno": 398,
        "title": "Transaction order dependence",
        "type": "Warning"
      },
      {
        "address": 5111,
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/12/0x403e518f21f5ce308085dcf6637758c61f92446a.sol",
        "function": "claim(address,uint256)",
        "lineno": 495,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}