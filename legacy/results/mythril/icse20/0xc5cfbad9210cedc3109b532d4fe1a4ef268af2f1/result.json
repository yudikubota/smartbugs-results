{
  "contract": "0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1",
  "tool": "mythril",
  "start": 1563558486.8139005,
  "end": 1563558545.8371055,
  "duration": 59.023205041885376,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 290,
        "code": " \n\t{\n\t\tERC20 token = ERC20(tokenAddress);\n        uint256 count = _holders.length;\n        assert(paySize.mul(count) <= token.balanceOf(this));\n        for (uint256 i = 0; i < count; i++) {\n\t\t\tprocessFunding(tokenAddress,_holders [i],paySize);\n        }\n    }\n\tfunction processFunding(address tokenAddress,address receiver,uint256 _value) internal\n\t{\n\t\tERC20 token =",
        "debug": "calldata_TokenBooksAirdrop_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenBooksAirdrop_0: 0xa1ac727f00000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenBooksAirdrop: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `_function_0xa1ac727f`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/12/0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1.sol",
        "function": "_function_0xa1ac727f",
        "lineno": 96,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 949,
        "code": "olders [i],paySize);\n",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1.sol",
        "function": "_function_0xa1ac727f",
        "lineno": 102,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 949,
        "code": "olders [i],paySize);\n",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1791\nCall at address: 1791\n",
        "filename": "/unique_chucks/12/0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1.sol",
        "function": "_function_0xa1ac727f",
        "lineno": 102,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 1791,
        "code": ") external\n\t\tonlyOwne",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1.sol",
        "function": "withdrawCoinToOwner(address,uint256)",
        "lineno": 115,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 1791,
        "code": ") external\n\t\tonlyOwne",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2027\n",
        "filename": "/unique_chucks/12/0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1.sol",
        "function": "withdrawCoinToOwner(address,uint256)",
        "lineno": 115,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 2027,
        "code": "(!msg.sender.send(this.balance)",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/unique_chucks/12/0xc5cfbad9210cedc3109b532d4fe1a4ef268af2f1.sol",
        "function": "withdrawCoinToOwner(address,uint256)",
        "lineno": 119,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}