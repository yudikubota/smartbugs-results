{"error": null, "issues": [{"address": 648, "code": "rence(_to, _value, _reference, _sender);\n    }\n\n    /// @notice Calls back without modifications if an asset is not stopped.\n    /// Checks whether _from/_sender are not in blacklist.\n    /// @dev function is virtual, and meant to be overridden.\n    /// @return success.\n    func", "debug": "calldata_ChronoBankPlatformInterface_32 + 36: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_ChronoBankPlatformInterface_0: 0x6a630ee700000000000000000000000000000000000000000000000000000000\ncalldatasize_ChronoBankPlatformInterface: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `__transferWithReference(address,uint256,string,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 225, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3474, "code": " given addresses\n    funct", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "eventsHistory()", "lineno": 175, "title": "Message call to external contract", "type": "Warning"}, {"address": 3474, "code": " given addresses\n    funct", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3658\n", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "eventsHistory()", "lineno": 175, "title": "Multiple Calls", "type": "Information"}, {"address": 3474, "code": " given addresses\n    funct", "debug": "", "description": "A possible transaction order independence vulnerability exists in function eventsHistory(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "eventsHistory()", "lineno": 175, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3658, "code": "s [] _restricted) onlyAu", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "eventsHistory()", "lineno": 176, "title": "Message call to external contract", "type": "Informational"}, {"address": 4090, "code": "    ChronoBankAsset(events", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "isAuthorized(address)", "lineno": 319, "title": "Message call to external contract", "type": "Warning"}, {"address": 4090, "code": "    ChronoBankAsset(events", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4313\n", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "_function_0xee47af00", "lineno": 319, "title": "Multiple Calls", "type": "Information"}, {"address": 4090, "code": "    ChronoBankAsset(events", "debug": "", "description": "A possible transaction order independence vulnerability exists in function isAuthorized(address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "isAuthorized(address)", "lineno": 319, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4313, "code": "cted);\n    }", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "_function_0xee47af00", "lineno": 319, "title": "Message call to external contract", "type": "Warning"}, {"address": 4313, "code": "cted);\n    }", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 4513\n", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "_function_0xbe57771a", "lineno": 319, "title": "Multiple Calls", "type": "Information"}, {"address": 4313, "code": "cted);\n    }", "debug": "", "description": "A possible transaction order independence vulnerability exists in function _function_0xee47af00. The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "_function_0xee47af00", "lineno": 319, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4513, "code": "stricted(proxy.smbl(), _unrestricted);\n    }\n", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "_function_0xbe57771a", "lineno": 319, "title": "Message call to external contract", "type": "Informational"}, {"address": 4513, "code": "stricted(proxy.smbl(), _unrestricted);\n    }\n", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3474\n", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "unpause()", "lineno": 319, "title": "Multiple Calls", "type": "Information"}, {"address": 5489, "code": "turn success.\n    function __transferFromWithReference(\n       ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 250, "title": "Message call to external contract", "type": "Warning"}, {"address": 5489, "code": "turn success.\n    function __transferFromWithReference(\n       ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function __transferWithReference(address,uint256,string,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "__transferWithReference(address,uint256,string,address)", "lineno": 250, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5982, "code": "tricted(address _restricted) private {\n   ", "debug": "", "description": "This contract executes a message call to an address found at storage slot 0. This storage slot can be written to by calling the function `_function_0x19ab453c`. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "__approve(address,uint256,address)", "lineno": 314, "title": "Message call to external contract", "type": "Warning"}, {"address": 5982, "code": "tricted(address _restricted) private {\n   ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function __approve(address,uint256,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/11/0x99370ef450f27bf0658dec87251e75e4ea7d006a.sol", "function": "__approve(address,uint256,address)", "lineno": 314, "title": "Transaction order dependence", "type": "Warning"}], "success": true}