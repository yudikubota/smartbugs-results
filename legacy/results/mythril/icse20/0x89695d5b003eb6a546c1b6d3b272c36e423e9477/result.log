{"error": null, "issues": [{"address": 2807, "code": "ProjectedPayout(uint16 propertyID) public view returns(uint256) {\n        var (", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "getPropertyData(uint16)", "lineno": 794, "title": "Message call to external contract", "type": "Informational"}, {"address": 2807, "code": "ProjectedPayout(uint16 propertyID) public view returns(uint256) {\n        var (", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getPropertyData(uint16). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "getPropertyData(uint16)", "lineno": 794, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3131, "code": "        require(price != 0);\n        req", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 690, "title": "Message call to external contract", "type": "Informational"}, {"address": 3131, "code": "        require(price != 0);\n        req", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 16804\nCall at address: 16804\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 690, "title": "Multiple Calls", "type": "Information"}, {"address": 3131, "code": "        require(price != 0);\n        req", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyPropertyInETH(uint16). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 690, "title": "Transaction order dependence", "type": "Warning"}, {"address": 3247, "code": "rty.setPropertySalePr", "debug": "storage_4: 0xafe0ed6020ea4d699fd72ef3bd6e195fdedc2f014c9a8e23391fe957def2f5bb\nretval_3131: 0x200000000000000000000000000000000000000000000000000000000\ncallvalue: 0x901e6b7003cc4625378aaf6e014a996f9a0f4c7a62c8a073b3c0144620c68139\nstorage_5: 0x901e6b7003cc4625378aaf6e014a996f9a0f4c7a62c8a073b3c0144620c68139\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VirtualRealEstate_4: 0x270f\ncalldata_VirtualRealEstate_0: 0xad50c0200000000000000000000000000000000000000000000000000000000\ncalldatasize_VirtualRealEstate: 0x4\n", "description": "A possible integer overflow exists in the function `buyPropertyInETH(uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 692, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3253, "code": "rty.setPropertySalePr", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 692, "title": "State change after external call", "type": "Warning"}, {"address": 3302, "code": "yID, price);\n        Prop", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 692, "title": "State change after external call", "type": "Warning"}, {"address": 3416, "code": "m being for sale\n    f", "debug": "retval_3131: 0x80000000000000000000000000000000000000000000000000000\nstorage_5: 0x900023e400e400f4701c80000060f0090588bcb99f080005ba19980200000060\nstorage_7: 0x38c00\ncallvalue: 0x900023e400e400f4701c80000060f0090588bcb99f080005ba19980200000060\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VirtualRealEstate_4: 0x270f\ncalldata_VirtualRealEstate_0: 0xad50c0200000000000000000000000000000000000000000000000000000000\ncalldatasize_VirtualRealEstate: 0x4\n", "description": "A possible integer overflow exists in the function `buyPropertyInETH(uint16)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 697, "title": "Integer Overflow ", "type": "Warning"}, {"address": 3424, "code": "m being for sale\n    function delist(uint16", "debug": "The exception is triggered under the following conditions:\n\nretval_3131: 0x4000000000000000000000000000000000000000000000000000000000000000\ncallvalue: 0x0\nstorage_7: 0xff9b00\nstorage_5: 0x0\nreturndatasize: 0x20\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VirtualRealEstate_4: 0x270f\ncalldata_VirtualRealEstate_0: 0xad50c0200000000000000000000000000000000000000000000000000000000\ncalldatasize_VirtualRealEstate: 0x4\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInETH(uint16)", "lineno": 697, "title": "Exception state", "type": "Informational"}, {"address": 4564, "code": "ENERATION_PAYOUT_INTERVAL) * PROPERTY_GENERATES_PER_MINUTE; //Gav", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setColors(uint16,uint256[5],uint256)", "lineno": 804, "title": "Message call to external contract", "type": "Informational"}, {"address": 4564, "code": "ENERATION_PAYOUT_INTERVAL) * PROPERTY_GENERATES_PER_MINUTE; //Gav", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 17129\nCall at address: 17129\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setRowColors(uint16,uint8,uint256,uint256)", "lineno": 804, "title": "Multiple Calls", "type": "Information"}, {"address": 4564, "code": "ENERATION_PAYOUT_INTERVAL) * PROPERTY_GENERATES_PER_MINUTE; //Gav", "debug": "", "description": "A possible transaction order independence vulnerability exists in function setColors(uint16,uint256[5],uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setColors(uint16,uint256[5],uint256)", "lineno": 804, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4863, "code": "ty.balanceOf(msg.sender) >= pxlValue);\n ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 615, "title": "Message call to external contract", "type": "Informational"}, {"address": 4863, "code": "ty.balanceOf(msg.sender) >= pxlValue);\n ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 16804\nCall at address: 5117\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 615, "title": "Multiple Calls", "type": "Information"}, {"address": 4863, "code": "ty.balanceOf(msg.sender) >= pxlValue);\n ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferProperty(uint16,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 615, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5117, "code": "flow\n        require(pxlValue <= system", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 618, "title": "Message call to external contract", "type": "Informational"}, {"address": 5117, "code": "flow\n        require(pxlValue <= system", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 16804\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 618, "title": "Multiple Calls", "type": "Information"}, {"address": 5117, "code": "flow\n        require(pxlValue <= system", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferProperty(uint16,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 618, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5364, "code": "tryTriggerPayout(propertyID, PXLToSpend)) {\n            px", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "tryForcePublic(uint16)", "lineno": 520, "title": "Message call to external contract", "type": "Informational"}, {"address": 5364, "code": "tryTriggerPayout(propertyID, PXLToSpend)) {\n            px", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 5620\nCall at address: 5620\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "tryForcePublic(uint16)", "lineno": 520, "title": "Multiple Calls", "type": "Information"}, {"address": 5364, "code": "tryTriggerPayout(propertyID, PXLToSpend)) {\n            px", "debug": "", "description": "A possible transaction order independence vulnerability exists in function tryForcePublic(uint16). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "tryForcePublic(uint16)", "lineno": 520, "title": "Transaction order dependence", "type": "Warning"}, {"address": 5620, "code": "lastUpdater, becomePublic) = pxlProperty.getPropertyL", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "tryForcePublic(uint16)", "lineno": 522, "title": "Message call to external contract", "type": "Informational"}, {"address": 5620, "code": "lastUpdater, becomePublic) = pxlProperty.getPropertyL", "debug": "", "description": "A possible transaction order independence vulnerability exists in function tryForcePublic(uint16). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "tryForcePublic(uint16)", "lineno": 522, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6051, "code": "             systemPXLStepTally -= 1000;\n        ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 663, "title": "Message call to external contract", "type": "Informational"}, {"address": 6051, "code": "             systemPXLStepTally -= 1000;\n        ", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7108\nCall at address: 7108\nCall at address: 6406\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 663, "title": "Multiple Calls", "type": "Information"}, {"address": 6051, "code": "             systemPXLStepTally -= 1000;\n        ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyPropertyInPXL(uint16,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 663, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6406, "code": "(msg.sender, propertySalePrice, propertyOwner, amountTransfered, owner, (pro", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 668, "title": "Message call to external contract", "type": "Informational"}, {"address": 6406, "code": "(msg.sender, propertySalePrice, propertyOwner, amountTransfered, owner, (pro", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 7108\n", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 668, "title": "Multiple Calls", "type": "Information"}, {"address": 6406, "code": "(msg.sender, propertySalePrice, propertyOwner, amountTransfered, owner, (pro", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyPropertyInPXL(uint16,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 668, "title": "Transaction order dependence", "type": "Warning"}, {"address": 6516, "code": " // Purchase a system-Pro", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 672, "title": "State change after external call", "type": "Warning"}, {"address": 6630, "code": "       require(pxlProp", "debug": "retval_6051: 0x40000000000000000000000000000000000000000000000000000000000000\nstorage_6: 0x999cd6ffe50aed232385d90f6300d638f24458726669101c0f28c7663336686f\nstorage_7: 0x82cc00\nretval_6406: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x40\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VirtualRealEstate_4: 0x270f\ncalldata_VirtualRealEstate_0: 0x32a4288200000000000000000000000000000000000000000000000000000000\ncalldatasize_VirtualRealEstate: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `buyPropertyInPXL(uint16,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 674, "title": "Integer Overflow ", "type": "Warning"}, {"address": 6638, "code": "       require(pxlProperty.getPropertyOwner", "debug": "The exception is triggered under the following conditions:\n\nretval_6051: 0x4000000000000000000000000000000000000000000000000000000000000000\nstorage_7: 0xff9b00\nretval_6406: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nreturndatasize: 0x40\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_VirtualRealEstate_4: 0x270f\ncalldata_VirtualRealEstate_0: 0x32a4288200000000000000000000000000000000000000000000000000000000\ncalldatasize_VirtualRealEstate: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 674, "title": "Exception state", "type": "Informational"}, {"address": 7108, "code": "\n            systemSalePriceETH += systemSalePriceETH * 9 / systemETHStepCount / 10;\n            systemETHStepTally -= 1000;\n        }\n      ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 680, "title": "Message call to external contract", "type": "Informational"}, {"address": 7108, "code": "\n            systemSalePriceETH += systemSalePriceETH * 9 / systemETHStepCount / 10;\n            systemETHStepTally -= 1000;\n        }\n      ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function buyPropertyInPXL(uint16,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "buyPropertyInPXL(uint16,uint256)", "lineno": 680, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9142, "code": "pertyBecomePublic <= now", "debug": "", "description": "A possible transaction order independence vulnerability exists in function withdrawAll(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "withdrawAll()", "lineno": 740, "title": "Transaction order dependence", "type": "Warning"}, {"address": 9777, "code": "           // Determines when the ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setPropertyMode(uint16,bool,uint32)", "lineno": 579, "title": "Message call to external contract", "type": "Informational"}, {"address": 9777, "code": "           // Determines when the ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function setPropertyMode(uint16,bool,uint32). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setPropertyMode(uint16,bool,uint32)", "lineno": 579, "title": "Transaction order dependence", "type": "Warning"}, {"address": 16804, "code": "stemSalePriceETH, systemSalePricePXL);\n    }\n    \n    // Gets the sale prices of any Prope", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setPXLPropertyContract(address)", "lineno": 781, "title": "Message call to external contract", "type": "Warning"}, {"address": 16804, "code": "stemSalePriceETH, systemSalePricePXL);\n    }\n    \n    // Gets the sale prices of any Prope", "debug": "", "description": "A possible transaction order independence vulnerability exists in function transferProperty(uint16,address). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "transferProperty(uint16,address)", "lineno": 781, "title": "Transaction order dependence", "type": "Warning"}, {"address": 17129, "code": "    if (isInGracePeriod() && pxlTo", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setRowColors(uint16,uint8,uint256,uint256)", "lineno": 751, "title": "Message call to external contract", "type": "Informational"}, {"address": 17129, "code": "    if (isInGracePeriod() && pxlTo", "debug": "", "description": "A possible transaction order independence vulnerability exists in function setRowColors(uint16,uint8,uint256,uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/5/0x89695d5b003eb6a546c1b6d3b272c36e423e9477.sol", "function": "setRowColors(uint16,uint8,uint256,uint256)", "lineno": 751, "title": "Transaction order dependence", "type": "Warning"}], "success": true}