{
  "contract": "0xc4838a37422ddd180f6bf34393873b1489db6faa",
  "tool": "mythril",
  "start": 1563517603.2987342,
  "end": 1563517670.003903,
  "duration": 66.70516872406006,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 405,
        "code": "lue, _fee, _nonce);\n        address from = hashedTx.recover(_signature);\n\n        require(from != address(0) && _value.add(_fee) <= balances[from]);\n\n        balances[from] = balances[from].sub(_value).sub(_fee);\n        balances[_to] = balances[_to].add(_value);\n        balances[msg.sender] = balances[msg.sender].add(_fee);\n\n        signatures[_signature] = true;\n\n        callTokenFallback(_to, from, _value);\n\n        emit Transfer(from, _to, _value);\n        emit Transfer(from, msg.sender, _fee);\n        emit DelegatedTransfer(from, _to, msg.sender, _value, _fee);\n        return true;\n    }\n\n    function hashDelegatedTransfer(address _to, uint _value, uint _fee, uint _nonce) public view returns (bytes32) {\n        /* \u201c45b56ba6\u201d: delegatedTransfer(bytes,address,uint,uint,uint) */ // orig: 48664c16\n        return keccak256(bytes4(0x45b56ba6), address(this), _to, _value",
        "debug": "calldata_TokenReceiver_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_TokenReceiver_0: 0xb94868400000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenReceiver: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `delegatedTransfer(bytes,address,uint256,uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xc4838a37422ddd180f6bf34393873b1489db6faa.sol",
        "function": "delegatedTransfer(bytes,address,uint256,uint256,uint256)",
        "lineno": 266,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9311,
        "code": "r add",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenReceiver_4: 0xb0d1417afc78111f000016000000000000000000000000000000000000000088\nstorage_6: 0x82c102aee562011000003cffffffffffffffffffffffffffffffffffffffffe8\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x82c102aee562011000003cffffffffffffffffffffffffffffffffffffffffe8\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldata_TokenReceiver_0: 0x4420e48600000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenReceiver: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `register(address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/5/0xc4838a37422ddd180f6bf34393873b1489db6faa.sol",
        "function": "register(address)",
        "lineno": 129,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 9324,
        "code": "rovides basic ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenReceiver_4: 0x1\ncalldata_TokenReceiver_32 + 4: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldata_TokenReceiver_0: 0xd73dd62300000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenReceiver: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xc4838a37422ddd180f6bf34393873b1489db6faa.sol",
        "function": "increaseApproval(address,uint256)",
        "lineno": 129,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 9347,
        "code": " function add(",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncalldata_TokenReceiver_4: 0x0\nstorage_6: 0x1\ncaller: 0x0\nextcodesize: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_0: 0x0\ncalldata_TokenReceiver_0: 0x2ec2c24600000000000000000000000000000000000000000000000000000000\ncalldatasize_TokenReceiver: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/5/0xc4838a37422ddd180f6bf34393873b1489db6faa.sol",
        "function": "unregister(address)",
        "lineno": 120,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}