{"error": null, "issues": [{"address": 377, "code": "   require(friend != 0, \"Invalid friend address provided\");\n            require(!isFriend[friend], \"Duplicate friend address provided\");\n            isFriend[friend] = true;\n        }\n        friends = _friends;\n        threshold = _threshold;\n    }\n\n    /// @dev Allows a friend to confirm a Safe transaction.\n    /// @param dataHash Safe transaction hash.\n    function confirmTransaction(bytes32 dataHash)\n        public\n        onlyFriend\n    {\n        require(!isExecuted[dataHash], \"Recovery already executed\");\n        isConfirmed[dataHash][msg.sender] = true;\n    }\n\n    /// @dev Returns if Safe transaction is a valid owner replacement transaction", "debug": "calldata_SocialRecoveryModule_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SocialRecoveryModule_0: 0x4ab8842700000000000000000000000000000000000000000000000000000000\ncalldatasize_SocialRecoveryModule: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `setup(address[],uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xd1e23ab26378bd484801a4c068aaae4f7ea76c0e.sol", "function": "setup(address[],uint256)", "lineno": 401, "title": "Integer Overflow ", "type": "Warning"}, {"address": 1044, "debug": "calldata_SocialRecoveryModule_4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_SocialRecoveryModule_0: 0xae68b05600000000000000000000000000000000000000000000000000000000\ncalldatasize_SocialRecoveryModule: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `getDataHash(bytes)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/41/0xd1e23ab26378bd484801a4c068aaae4f7ea76c0e.sol", "function": "getDataHash(bytes)", "lineno": 464, "title": "Integer Overflow ", "type": "Warning"}, {"address": 5403, "code": "s => bool)) public isCon", "debug": "The exception is triggered under the following conditions:\n\ncalldata_SocialRecoveryModule_4: 0x0\nstorage_3: 0x0\ncalldata_SocialRecoveryModule_0: 0xce14682800000000000000000000000000000000000000000000000000000000\ncalldatasize_SocialRecoveryModule: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/unique_chucks/41/0xd1e23ab26378bd484801a4c068aaae4f7ea76c0e.sol", "function": "_function_0xce146828", "lineno": 382, "title": "Exception state", "type": "Informational"}], "success": true}