{"error": null, "issues": [{"address": 3178, "code": ";\n    }\n\n    function getAppBylawUint256(bytes32", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x5f03b7561e62efdab8b2fb740d83630d4d2710d7.sol", "function": "getApplicationState()", "lineno": 208, "title": "Message call to external contract", "type": "Informational"}, {"address": 3178, "code": ";\n    }\n\n    function getAppBylawUint256(bytes32", "debug": "", "description": "A possible transaction order independence vulnerability exists in function getApplicationState(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/37/0x5f03b7561e62efdab8b2fb740d83630d4d2710d7.sol", "function": "getApplicationState()", "lineno": 208, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4073, "code": "     if(\n                Chil", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/unique_chucks/37/0x5f03b7561e62efdab8b2fb740d83630d4d2710d7.sol", "function": "getNewsContractAddress(uint256)", "lineno": 346, "title": "Message call to external contract", "type": "Warning"}, {"address": 4307, "code": "ApplicationState() public view returns (uint8) {\n       ", "debug": "", "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "filename": "/unique_chucks/37/0x5f03b7561e62efdab8b2fb740d83630d4d2710d7.sol", "function": "delistChild(uint256)", "lineno": 203, "title": "Message call to external contract", "type": "Informational"}, {"address": 4307, "code": "ApplicationState() public view returns (uint8) {\n       ", "debug": "", "description": "A possible transaction order independence vulnerability exists in function delistChild(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/unique_chucks/37/0x5f03b7561e62efdab8b2fb740d83630d4d2710d7.sol", "function": "delistChild(uint256)", "lineno": 203, "title": "Transaction order dependence", "type": "Warning"}, {"address": 4667, "code": "ion getNe", "debug": "storage_8: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_4: 0xff00\nstorage_6: 0xffffffffffffffffffffffffffffffffffffff0000\ncaller: 0xffffffffffffffffffffffffffffffffffffff00\ncalldata_ListingContract_0: 0x8892716600000000000000000000000000000000000000000000000000000000\ncalldatasize_ListingContract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `addItem(bytes32,address)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/unique_chucks/37/0x5f03b7561e62efdab8b2fb740d83630d4d2710d7.sol", "function": "addItem(bytes32,address)", "lineno": 331, "title": "Integer Overflow ", "type": "Warning"}], "success": true}