{
  "contract": "0xdc20655a6de13496dd385f7ab903e4e6150e55a5",
  "tool": "mythril",
  "start": 1563566891.4335742,
  "end": 1563566947.5942357,
  "duration": 56.160661458969116,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2386,
        "code": ">= a)",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8723c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f03cc000000000000000000000000000000000000000000000000000000000\nstorage_5: 0x0\nstorage_11: 0x57f03cbfffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ntimestamp: 0x1\nstorage_14: 0x0\ncalldatasize_token: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0xdc20655a6de13496dd385f7ab903e4e6150e55a5.sol",
        "function": "fallback",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2399,
        "code": "eturn c;\n\t    ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xd6542a11e3c0945715c15f500c8000030b00901dfe51fa1f3d851f8759f1c169\ncallvalue: 0x463cfa29f0042f68e9015f09c47ffffccb7ef99cdcf3b9b8a32ca8e640bddd6d\nstorage_5: 0x0\nstorage_11: 0x463cfa29f0042f68e9015f09c47ffffccb7ef99cdcf3b9b8a32ca8e640bddd6c\ntimestamp: 0x1\nstorage_14: 0x0\ncalldatasize_token: 0x3\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0xdc20655a6de13496dd385f7ab903e4e6150e55a5.sol",
        "function": "fallback",
        "lineno": 28,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 2919,
        "code": "\t    ",
        "debug": "storage_4: 0x477c254f44803583608a21601b99fa2a27043c7cb7c360f1e1df810386583c94\nstorage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x49a66d2b0542f151501f5b679eda63088a01c99e7254647e780048126821f097\ncallvalue: 0x40f743abf3e115d86191f967c2ccf34db507a76eb5ee58e97dff8d2bd7d995e7\nstorage_9: 0xa0bbabe1400388a88e2294c7c7cd3d3bcd213dee0f96546c6c2044f2c4149582\nstorage_5: 0x0\nstorage_11: 0x40f743abf3e115d86191f967c2ccf34db507a76eb5ee58e97dff8d2bd7d995e6\ntimestamp: 0x1\nstorage_14: 0x0\ncalldatasize_token: 0x3\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_chucks/18/0xdc20655a6de13496dd385f7ab903e4e6150e55a5.sol",
        "function": "fallback",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 2942,
        "code": " / a == b);\n\t     ",
        "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x2000000000000000000000000000000000000000000000000000000000000004\nstorage_14: 0x0\ncalldata_token_0: 0x98d5fdca00000000000000000000000000000000000000000000000000000000\ncalldatasize_token: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_chucks/18/0xdc20655a6de13496dd385f7ab903e4e6150e55a5.sol",
        "function": "getPrice()",
        "lineno": 9,
        "title": "Exception state",
        "type": "Informational"
      },
      {
        "address": 3563,
        "code": "nlyOwner {\n\t        require(newBenefic",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/unique_chucks/18/0xdc20655a6de13496dd385f7ab903e4e6150e55a5.sol",
        "function": "tokensWithdrawal(address,uint256)",
        "lineno": 220,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}