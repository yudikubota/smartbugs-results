{
  "contract": "0x162ac26e2f0fe036c3a3d370c118de0b6c883083",
  "tool": "mythril",
  "start": 1563217210.1968238,
  "end": 1563217232.3494194,
  "duration": 22.15259552001953,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 178,
        "debug": "storage_4: 0xfffc00000000000000000000000000000000000000004d000942082f0400c00\ncallvalue: 0xf0004000000000000000000000000000000000000000aac20330200234800502\ncalldata_InchainICO_0: 0x600000000000000000000000000000000000000000000000000000000\ncalldatasize_InchainICO: 0x4\n",
        "description": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/unique_contracts/0x162ac26e2f0fe036c3a3d370c118de0b6c883083.sol",
        "function": "fallback",
        "lineno": 99,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 779,
        "code": "ic owners;\n\n    event C",
        "debug": "The exception is triggered under the following conditions:\n\ncalldata_InchainICO_4: 0x0\nstorage_3: 0x0\ncalldata_InchainICO_0: 0x25e7c2700000000000000000000000000000000000000000000000000000000\ncalldatasize_InchainICO: 0x4\ncallvalue: 0x0\n",
        "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ",
        "filename": "/unique_contracts/0x162ac26e2f0fe036c3a3d370c118de0b6c883083.sol",
        "function": "_function_0x025e7c27",
        "lineno": 14,
        "title": "Exception state",
        "type": "Informational"
      }
    ],
    "success": true
  }
}